Composition and Rhetoric Training in composing correct and effective expository and argumentative essays, including writing documented essays.
Calculus of One Variable I Topics include analytic geometry, introduction to derivatives, computation and application of derivatives, integrals, exponential and logarithm functions
Introduction to Computing Introduction to Computing
Natural Science Natural Science
Calculus of One Variable II Topics include transcendental functions, applications of integration, integration techniques, indeterminate forms, improper integrals, parametric equations, polar coordinates, and infinite series.
Introduction to Computing Introduction to Computing
Discrete Structures for Computing Introduces ideas and techniques from discrete structures that are widely used in the computing sciences. Topics emphasize techniques of rigorous argumentation and application to the computing disciplines
Algorithms and Data Structures Study of data structures and algorithms fundamental to computer science; abstract data-type concepts; measures of program running time and time complexity; algorithm analysis and design techniques
Software Development Foundations Intensive study of software development foundations. Advanced coverage of programming language primitives, function-level design principles, and standard development and debugging tools. Introductory coverage of module-level design principles, program specification and reasoning principles, and validation and verification techniques.
Introduction to Computer Organization Study of the machine architectures on which algorithms are implemented and requirements of architectures that support high-level languages, programming environments, and applications
Seminar in Professional Issues I Considers the impact of computer use on society. Discusses ethical use of software and protection of intellectual property rights. Profession is viewed historically; organizations important to the profession are discussed; the development process for standards is presented; and students are introduced to the professional literature.
Introductory Business Statistics Introductory probability and statistics for business students, particularly those who will take MGT 3100. Topics include descriptive statistics, probability, expectations, binomial, normal, sampling distributions, one and two sample estimation and testing.
Computer Systems Organization Introduction to the structure of computer systems. Various hardware/software configurations are explored and presented as integrated systems. Topics include digital logic, basic computer organization, computer arithmetic, memory organization, input/output organizations, interrupt processing, multiprocessors, and cluster computers.
Networks and Network Programming Introduction to basic concepts of computer network technologies and network programming. Topics include network programming, layered protocol architectures, local and wide area networks, internetwork and intranetwork concepts, security. Socket level programming is introduced and used throughout the course.
Introduction to Software Engineering Intensive introduction to software engineering. Focuses on each major phase of the software lifecycle. Introductory coverage of requirements analysis, requirements modeling, design modeling, and project management. Intermediate coverage of module-level design principles, program specification and reasoning principles, and program validation and verification techniques
Linear Algebra Introduction to the algebra of matrices, vector spaces, polynomials, and linear transformations.
Introduction to Operating Systems Detailed study of management techniques for the control of computer hardware resources. Topics include interrupt systems, primitive level characteristics of hardware and the management of memory, processor, devices, and data
Theory Requirement Theory Requirement
Programming Systems An advanced course in programming languages and systems for computer engineering and computer science majors. The course objective is to enable a more complete understanding of programming topics and related supporting tools, including philosophy, methodology, formal syntax and semantics, and examples of programming paradigms, languages and development approaches
Seminar in Professional Issues II Considers the impact of computing system development on society. Discusses ethical issues in the design and development of computer software. Students discuss standards for professional behavior, the professionals responsibility to the profession, and techniques for maintaining currency in a dynamic field
Introduction to Design and Analysis of Algorithms Introduction to algorithm design and analysis. Topics include advanced data structures, amortized analysis, dynamic programming, graph algorithms, intractability and applications.
Advanced Composition Advanced Composition
Numerical Methods Application of undergraduate mathematics and basic engineering principles with emphasis on numerical methods, computer programming and the use of mathematical software packages in the solution of engineering problems
Statistics for Science Calculus based statistics course in methodology for collecting, organizing, and interpreting data. Topics include understanding variability, graphical and numerical summarization of data, introductory probability, normal and related distributions, statistical inference, basic experimental design, and simple linear regression.

Principles of Chemistry Covers principles of stoichiometry, chemical bonding and structure, thermochemistry, chemical equilibrium, and kinetics.
Introduction to Computer Science  Hands-on introduction to computer science and engineering.
First Year Seminar  Topic-based seminar developed by individual faculty members. Engages students in classroom activities that promote the acquisition of critical reading, writing, and thinking skills appropriate to college-level discourse.
Calculus I Covers parametric and polar equations; limits and continuity; differentiation and integration of algebraic, trigonometric, logarithmic, and exponential functions; and applications of differentiation.
Fundamentals of Programming I  Emphasizes problem-solving techniques used in the analysis and design of software solutions, including structured top-down design, abstraction, good programming style, debugging, and testing. Programming constructs covered include control structures, functions, and basic, and aggregate data types.
Calculus II  Covers integration techniques and applications of integration. Introduces vectors and matrices, functions of several variables and their derivatives, differential equations, and multiple integrals.
Calculus Physics I  Calculus-based treatment of mechanics, waves, and thermodynamics.
Fundamentals of Programming II Project and problem-solving course emphasizes the use of classes for encapsulation of abstract data types and abstract data structures. Topics include classes, templates, dynamic allocation, searching and sorting, recursion, and exception handling. Introduction to algorithm analysis
Calculus III  Covers infinite series, vector-valued functions, multiple integration, line and surface integrals, and analysis of vector fields.
Calculus Physics II  Calculus-based treatment of electricity, magnetism, and light.
Logic Design and Machine Organization  Introduction to logic design and computer hardware concepts. Topics include Boolean algebra, number representations, sequential logic, counters and registers, microcomputer architecture, and assembly language programming.
Object Oriented Design  In-depth study of abstract data types and objects, including inheritance and polymorphism, frameworks and design patterns, and the use of these principles in problem solving and program design.
Applied Engineering Mathematics  Develops understanding of practical mathematical analysis with applications in various engineering disciplines. Probability and statistical analysis. Practical numerical analysis. Linear algebra and matrices. Applications in civil, mechanical, and electrical engineering.
Discrete and Combinatorial Math  Covers such topics as enumeration, principles of logic, set theory, mathematical induction, generating functions, recurrence relations, and graph theory.
Programming Languages  Comparative analysis of selected high-level languages. Covers virtual computers represented by various programming languages, representation of data types, sequence control constructs, data access, scoping, typing systems, runtime storage management, languages semantics, alternative, programming paradigms, and parallel language constructs.
Formal Languages Models of computation including finite automata, regular grammars, regular expressions, pushdown automata, context-free grammars, Turing machines, computability, and undecidability.
Software Engineering Study of the software design and development process in the context of a large group-programming project. Topics covered include: project management, software management, requirements and specifications methods, software design and implementation, verification and validation, aspects of software testing and documentation standards, technical documents, contracts, risks, and liabilities.
Algorithms and Data Structures Design and implementation of algorithms and advanced data structures with attention to complexity and space analysis. Problem-solving strategies including greedy and divide-and-conquer algorithms as well as dynamic programming techniques.
Computer Architecture Studies the architecture of computer systems from four-bit machines to supercomputers. Memory systems, I/O processors, and multi-computer systems are studied in detail. RISC, CISC and Neural Nets are introduced. Establishes the relationship of hardware and software. Includes handson projects dealing with graphical user interfaces and their implementation.
Operating Systems  Components of operating systems. Tasking and processing, process coordination and scheduling, memory organization and management, device management, security, networks, distributed and real-time systems.
Senior Project Seminar Programming Provides guidance for the selection of a topic for the senior design project. Projects (some industry-sponsored) are presented for student selection.
Senior Project Phase I Plan the computer science project and formulate the preliminary design under the guidance of faculty and industrial advisors. Discussion of the relationship of computer science as a discipline to the humanities and social sciences. Preparation of a written formal proposal and an oral presentation of the proposal. Seminar session addresses ethical, environmental, economic, safety, and ergonomic aspects of computer science.
Senior Project Phase II  A practice oral report, a written final report, a final oral report, and a demonstration of the completed project are required.
Mathematical Ideas Explores a variety of topics, including numeration systems, logic, geometry, probability, and statistics. Includes historical and cultural perspective and contemporary applications.
College Algebra  Treats properties of linear, quadratic, polynomial, exponential and logarithmic functions, inequalities, and systems of equations.
Precalculus Trigonometry  Provides trigonometric tools necessary for success in Math 221. Develops trigonometric functions using both right triangles and the unit circle approach. Covers graphing, verification of identities, and inverse trigonometric functions. Requires no prior knowledge of trigonometry.
Conceptual Physics Presents basic principles of physics through descriptive and demonstrative techniques. For non-science majors.
Intro to Physics at UE An introduction to physics and faculty research areas in physics for first-year physics majors. Topics may include special relativity, biophysics, particle physics, optics, and/or solid state physics, but are subject to change.
Physics Today Presents the nature of the work of a physicist and opportunities in the field of physics. An individualized course where topics of interest to each student are pursued through projects or selected readings.
Computer/Human Interaction Study of user interface design, including ergonomic factors. Includes hands-on projects dealing with graphical user interfaces and their implementation.
Computer Graphics Fundamental course in computer graphics. Topics include rendering two and three-dimensional images, two and three-dimensional transformations, line clipping, hidden lines, shading, and perspective projections.
UNIX System Programming Coverage of UNIX software development and UNIX administration. Includes discussion of common shells and scripting languages, X Windows, and interprocess communication.
Principles of Macroeconomics  Macroeconomics is the branch of economics that studies the domestic economic system as a whole and its interaction with foreign economies. This course focuses on the behavior of the aggregate economy as it pertains to the determination of national income, production, level of employment, general price level, and trace flows.
The American Corporation Examines the constitution and functions of American corporations and how they interact in a global society. Studies the corporation as an instrument in the creative process of innovation throughout the world. Social and ethical responsibilities of business entities and responsibility of society toward corporations explored in relation to the role of the corporation as a source of national prosperity and wealth.
Imaginative Expressions of Human Condition  Imaginative Expressions of Human Condition
Human History and Historical Context of Knowledge Human History and Historical Context of Knowledge
Critical Reading and Composition Instruction in strategies for critically reading and analyzing literature and non-literary texts; structured, sustained practice in composing expository and analytical essays.
Rhetoric and Composition Instruction and intensive practice in researching, analyzing, and composing written arguments about academic and public issues.
Calculus I Functions, limits, derivatives, introduction to integrals, the Fundamental Theorem of Calculus, applications of derivatives and integrals
Calculus II Methods of integration, sequences and series, approximations.
General Chemistry I General Chemistry I
Essentials of Physics I Classical mechanics and wave motion. Calculus-level course for students of science and engineering.
Beginning Latin 1 Beginning Latin 1
Film and Media History Film and Media History
Race and Ethnic Relations Race and Ethnic Relations
Introduction to Art Introduction to Art
Vector Calculus Vector algebra, geometry of three-dimensional space; lines, planes, and curves in space; polar, cylindrical, and spherical coordinate systems; partial differentiation, max-min theory; multiple and iterated integration, line integrals, and Greens theorem in the plane.
Applied Linear Algebra General solutions of systems of linear equations, vector spaces and subspaces, linear transformations, singular value decompositions, and generalized inverse.
Applied Linear Algebra Lab Computer based applications of linear algebra for science and engineering students. Topics include numerical analysis of matrices, direct and indirect methods for solving linear systems, and least squares method (regression). Typical applications include practical issues related to discrete Markov porcesses, image compression, and linear programming.
Discrete Structures Propositional and predicate logic; proof techniques; recursion and recurrence relations; sets, combinatorics, and probability; functions, relations, and matrices; algebraic structures.
Statistics for Engineers Basic probability and statistics with applications and examples in engineering. Elementary probability, random variables and their distribution, random processes, statistical inference, linear regression, correlation and basic design of experiments with application to quality assurance, reliability, and life testing.
Technical Writing Preparation for and practice in types of writing important to scientists, engineers, and computer scientists, from brief technical letters to formal articles and reports.
Introduction to the Earth Origin and nature of the earth with emphasis on internal processes and phenomena such as earthquakes, volcanoes, and mountain building; surface processes, including landform evolution
The Living Ocean Origin, evolution, and diversity of marine life, biological production, trophic dynamics, nutrient cycles, marine resources, and environmental concerns. Three lecture and three laboratory hours per week. Scheduled field trips required.
Algorithmic Design I Problem-solving, algorithmic design, and programming.
Algorithmic Design II Rigorous development of algorithms and computer programs; elementary data structures.
Computing in the Modern World An introduction to the field of computing: trends in computing technology, the profession, and careers; subdisciplines in computing; the nature of research and development.
Digital Logic Design Number systems, Boolean algebra, logic design, sequential machines.
Introduction to Computer Architecture Computer architecture, components. and organization; memory addressing; Input/Output; instruction sets; interrupts; assembly-language programming.
UNIX/Linux Fundamentals UNIX operating system, user-level system commands, and programming tools. UNIX scripting languages.
Advanced Programming Techniques Pointers; memory management; advanced programming language structures: operator overloading, iterators, multiple inheritance, polymorphism, templates, virtual functions; Unix programming environment.
Software Engineering Fundamentals of software design and development; software implementation strategies; object-oriented design techniques; functional design techniques; design patterns; design process; source control; testing.
Operating Systems Operating system structure and function; process implementation, scheduling, and synchronization; memory management; security; naming protection; resource allocation; network file systems.
Programming Language Structures Formal specification of syntax and semantics; structure of algorithms; list processing and string manipulation languages; statement types, control structures, and interfacing procedures.
Data Structures and Algorithms Techniques for representing and processing information, including the use of lists, trees, and graphs; analysis of algorithms; sorting, searching, and hashing techniques.
Foundations of Computation Basic theoretical principles of computing as modeled by formal languages, grammars, automata, and Turing machines; fundamental limits of computation.
Introduction to Computer Networks Concepts and components of computer networks and the Internet; network applications; network protocol stack.
Capstone Computing Project I Capstone Computing Project I
Capstone Computing Project II Capstone Computing Project II
Computer Systems Engineering System-level modeling and evaluation of computer systems: requirements elicitation and specification, architectural design, reliability and performance evaluation, Markov modeling, life-cycle cost analysis, project management.
Artificial Intelligence Heuristic problem solving, theorem proving, and knowledge representation, including the use of appropriate programming languages and tools.
Text Processing Text and natural language processing; formal models and data structures appropriate for text processing; selected topics in computational linguistics, stylistics, and content analysis.
Parallel Computing Architecture and interconnection of parallel computers; parallel programming models and applications; issues in high-performance computing; programming of parallel computers.
Bayesian Networks and Decision Graphs Normative approaches to uncertainty in artificial intelligence. Probabilistic and causal modeling with Bayesian networks and influence diagrams. Applications in decision analysis and support. Algorithms for probability update in graphical models.
Calculus I Functions and graphs, rational, trigonometric, exponential functions, composite and inverse functions, limits and continuity, differentiation and its applications, integration and its applications.
Problem Solving and Programming I  Problem solving, algorithms, and program design. Use of structured programming, lists, control structures, recursion, objects and files in Python. Introduction to graphical interface programming. Coding, testing and debugging using a modern development environment.
First Semester Experience  The First Semester Experience will introduce students to the people, systems, and resources that foster success at UMKC. Students will participate in weekly Impact Seminars to learn about the research and teaching that takes place across campus and how to engage with faculty in your time at UMKC.
English I: Introduction To Academic Prose  This course introduces students to college-level reading, writing, and discourse analysis: it engages students in the analysis and creation of texts that reveal multiple perspectives about specific rhetorical situations and cultural issues.
Calculus II  Techniques of integration, applications of the definite integral, improper integrals, sequences and series, power series. Taylor series and convergence, analytic geometry in calculus.
Discrete Structures I  Mathematical logic, sets, relations, functions, mathematical induction, algebraic structures with emphasis on computing applications.
Problem Solving and Programming II  Problem solving and programming using classes and objects. Algorithm efficiency, abstract data types, searching and sorting, templates, pointers, linked lists, stacks and queues implemented in C++.
Problem Solving and Programming II - Lab Problem Solving and Programming II - Lab
Why Though?  What is human behavior? How do humans influence and are influenced by the world around them? How can we study the "why" behind human behavior in a meaningful way given just how complex humans and societies are? In this course, students apply perspectives and critical thinking processes from the social sciences to identify and explore relevant questions.
Problem Solving & Programming I Lab Problem Solving & Programming I Lab
Discrete Structures II Recurrence relations and their use in the analysis of algorithms. Graphs, trees, and network flow models. Introduction to Finite state machines, grammars, and automata.
Data Structures  Linear and hierarchical data structures, including stacks, queues, lists, trees, priority queues, advanced tree structures, hashing tables, dictionaries and disjoint-set. Abstractions and strategies for efficient implementations will be discussed. Linear and hierarchical algorithms will be studied as well as recursion and various searching and sorting algorithms. Programming concepts include Object Orientation, concurrency and parallel programming. Several in-depth projects in C++ will be required.
Physics For Scientists and Engineers I Introduction to mechanics, wave motion and sound and heat and thermodynamics.
Elementary Statistics Credit An introduction to descriptive and inferential statistics. Organization and presentation of data, averages and variations, elementary probability, random variables, special discrete distributions, normal distributions, sampling distributions, point estimation, confidence intervals, and hypothesis testing.
English II: Intermediate Academic Prose English II: Intermediate Academic Prose
Introduction to Computer Architecture and Organization  Digital Logic and Data Representation, process architecture and instruction sequencing, memory hierarchy and bus-interfaces and functional organization.
Linear Algebra I  Linear equations, matrix algebra, real vector spaces, linear transformations, determinants, eigenvalues and eigenvectors, orthogonality, and applications.
Physics For Scientists and Engineers II  Introduction to electricity and magnetism, light and optics and modern physics. Four hours lecture and two hours laboratory per week.
Fundamentals Of Effective Speaking And Listening  An introduction to the dimensions of effective platform speaking with special emphasis on developing critical listening skills. Lecture, performance, and discussion.
Making Meaning in A Changing World Students appreciate the Arts and Humanities and the importance of the creative and human experience by learning how to analyze artifacts (e.g., texts) to make meaning out of their world.
Ethics and Professionalism  Societal and ethical obligations of computer science, information technology, and electrical/computer engineering practice. Topics include obligations of professional practice, electronic privacy, intellectual property, ethical issues in networking, computer security, computer reliability, and whistle-blowing.
Applied Probability  Basic concepts of probability theory. Counting and measuring. Probability, conditional probability and independence. Discrete, continuous, joint random variables. Functions of random variables. Sums of independent random variables and transform methods. Random number generation and random event generation. Law of large numbers, central limit theorem, inequalities.
Introduction to Operating Systems This course covers concurrency and control of asynchronous processes, deadlocks, memory management, processor and disk scheduling, x86 assembly language, parallel processing, security, protection, and file system organization in operating systems.
U.S. History to 1877 This course offers a broad survey of American history up to 1877.
Database Design, Implementation and Validation This course discusses in detail all aspects of database management systems. It covers in detail database design, implementation, and validation. In addition to these, it briefly covers implementation, tuning, database security, and implementation.
Introduction to Algorithms and Complexity  A rigorous review of asymptotic analysis techniques and algorithms: from design strategy (such as greedy, divide-and-conquer, and dynamic programming) to problem areas (such as searching, sorting, shortest path, spanning trees, transitive closures, and other graph algorithms, string algorithms) arriving at classical algorithms with supporting data structures for efficient implementation.
Culture and Diversity  Students engage in investigation and reflection of their own backgrounds and cultures, examining their own worldview and implicit bias.
Introductory Networking and Applications  This introductory course examines the systems aspects of the different LAN/MAN/WAN models, including topics such as protocols, network operating systems, applications, management and wireless communication systems.
Programming Languages: Design and Implementation  This course covers programming language paradigms (object-oriented programming, functional programming, declarative programming, and scripting) and design tradeoffs in terms of binding, visibility, scope, lifetime, type-checking, concurrency/parallelism, and abstraction.
Foundations of Software Engineering  The course introduces concepts of software engineering (e.g. definitions, context) and the software development process (i.e. life cycle).
Software Engineering Capstone  The course will focus on the requirements and project planning and managing of medium sized projects with deliverables of each phase of the software life cycle. Additional studies of system integration and architecture, software modeling, requirements specifications, configuration management, verification, validation, software evolution and quality and finally measurement, estimation and economics of the software process.
Introduction to Artificial Intelligence  This course provides an overview of the field of artificial intelligence. Topics include guided and unguided search, adversarial search, generation and use of heuristics, logic programming, probabilistic reasoning, and neural networks.
Applied Probability  Basic concepts of probability theory. Counting and measuring. Probability, conditional probability and independence. Discrete, continuous, joint random variables. Functions of random variables. Sums of independent random variables and transform methods. Random number generation and random event generation. Law of large numbers, central limit theorem, inequalities. Their applications to computer science and electrical and computer engineering areas are stressed.
Introductory Networking and Applications  This introductory course examines the systems aspects of the different LAN/MAN/WAN models, including topics such as protocols, network operating systems, applications, management and wireless communication systems. It also examines how the different models are interconnected using bridges and routers.
Introduction to Operating Systems  This course covers concurrency and control of asynchronous processes, deadlocks, memory management, processor and disk scheduling, x86 assembly language, parallel processing, security, protection, and file system organization in operating systems.
Introduction to Artificial Intelligence  This course provides an overview of the field of artificial intelligence. Topics include guided and unguided search, adversarial search, generation and use of heuristics, logic programming, probabilistic reasoning, and neural networks. Application areas studied include game playing, automated proofs, expert systems, and data mining.
﻿AUTONOMOUS ROBOT DESIGN AND PROGRAMMING. An introduction to robotics and the design and programming of autonomous robot systems. Topics include basic kinematics, dynamics, and control, as well as sensors, knowledge representation, and programming techniques. Course work includes individual and group projects involving the building and programming of simulated and real robots. Prerequisite: Admitted into an Engineering Professional Program.
PRACTICAL COMPUTER HARDWARE/SOFTWARE SYSTEMS. A practical approach to hands-on computer hardware and software systems in a laboratory environment. Students will be exposed to basic design concepts using off-the-shelf hardware components and to tools that enable the design of complex software systems.
PROGRAMMING LANGUAGES. Introduction, analysis, and evaluation of the important concepts found in a variety of programming languages. Formalisms useful in specifying language syntax and semantics; programming language paradigms such as algorithmic, functional, logic, and object-oriented.
ENTRANCE TO ENGINEERING FOR TRANSFER STUDENTS.  Entrance to Engineering for Transfer Students welcomes transfer students to the College of Engineering.  Topics include engineering student life, fields of study, ethics, design, and preparing for a successful career.
GENERAL TECHNICAL PHYSICS I. The first half of a one-year technical course. Required for many science and engineering majors, exceeds premedical requirement. The study of physical phenomena in the fields of mechanics, heat, and waves.  Concurrent enrollment in MATH 1426 (per prerequisite) is not recommended if no prior background in calculus.
COMPUTER SYSTEM DESIGN PROJECT I. Analysis and design of an industry-type project that involves hardware and software components to meet desired needs within realistic constraints and standards. The project is to be completed in CSE 4317 the following semester. Multidisciplinary teams of CSE 4316 students are required to develop, review, and present problem definition, project planning, requirements formulation, and design specification. Prerequisites: Admitted into a CSE Professional Program.
RHETORIC AND COMPOSITION I. Introduction to college reading and writing. Emphasizes recursive writing processes, rhetorical analysis, synthesis of sources, and argument.
DATABASE SYSTEMS AND FILE STRUCTURES. Database system architecture; file structures for databases, including indexing hashing, and B+-trees; the relational model and algebra; the SQL database language; Entity-Relationship data modeling; functional dependencies and basic normalization.
ALGORITHMS & DATA STRUCTURES. Design and analysis of algorithms with an emphasis on data structures. Approaches to analyzing lower bounds on problems and upper bounds on algorithms. Classical algorithm design techniques including algorithms for sorting, searching, and other operations on data structures such as hash tables, trees, graphs, strings, and advanced data structures, dynamic programming and greedy approaches.
GENERAL TECHNICAL PHYSICS II. The second half of a one-year technical course. The study of physical phenomena including electricity, magnetism, circuit theory, light, and optics.
HISTORY OF THE UNITED STATES TO 1865. An introduction to the political, social, economic, and cultural history of the United States prior to 1865. This course is designed to help students understand and evaluate their society, comprehend the historical experience, and further develop reading and writing competencies and critical skills.
INTERMEDIATE PROGRAMMING Programming concepts beyond basic control and data structures. Emphasis is given to data structures including linked-lists and trees as well as modular design consistent with software engineering principles..
PROFESSIONAL PRACTICES. Ethics. Contemporary social aspects and responsibilities of computing in a global, societal context. Lifelong learning goals and resources. Entrepreneurship and intellectual property. Project involving written and oral communication.
COMPUTER GRAPHICS. Theory and practice for the visual representation of data by computers including display devices, output primitives, planes and curved surfaces, two- and three-dimensional transformations, parallel and perspective viewing, removal of hidden lines and surfaces, illumination models, ray tracing, radiosity, color models, and computer animation.
THEORETICAL CONCEPTS IN COMPUTER SCIENCE AND ENGINEERING. Selected theoretical concepts including regular and context free languages, finite state and pushdown automata, Turing machines, computability, and NP-completeness.
STATE AND LOCAL GOVERNMENT.  The principles and organization of American state, county, and municipal government, together with current problems and the constitution and government of Texas.
DISCRETE STRUCTURES. Propositional and predicate logic, mathematical proof techniques, sets, combinatorics, functions and relations, graphs, and graph algorithms.
COMPUTER ORGANIZATION & ASSEMBLY LANGUAGE PROGRAMMING. Computer organization from the viewpoint of software, including: the memory hierarchy, instruction set architectures, memory addressing, input-output, integer and floating-point representation and arithmetic. The relationship of higher-level programming languages to the operating system and to instruction set architecture are explored. Some programming in an assembly language.
INTRODUCTION TO COMPUTER SCIENCE AND ENGINEERING. Introduction to engineering concepts, the computer science and engineering disciplines, skills for written communication, and departmental orientation.
COMPUTER NETWORK ORGANIZATION.  Design and analysis of computer networks. Emphasis on the OSI architecture but discusses other schemes (e.g., ARPAnet). Data link control, local networks, protocols/architectures, network access protocols, transport protocols, internetworking, and ISDN.
HISTORY OF THE UNITED STATES, 1865 TO PRESENT.  An introduction to the political, social, economic, and cultural history of the United States since 1865. This course is designed to help students understand and evaluate their society, comprehend the historical experience, and further develop reading and writing competencies and critical skills.
OBJECT-ORIENTED PROGRAMMING.  Object-oriented concepts, class diagrams, collection classes, generics, polymorphism, and reusability.  Projects involve extensive programming and include graphical user interfaces and multithreading.
COMPILERS FOR ALGORITHMIC LANGUAGES.  Review of programming language structures, translation, and storage allocation. Theory and practice of compilers and issues in compiler construction including parsing, intermediate code generation, local optimization problems such as register allocation, data-flow analysis, and global optimization.
ENGINEERING PROBABILITY.  Topics in engineering that involve random processes. Applications and backgrounds for topics in reliability, inventory systems, and queuing problems, including absolute and conditional probabilities, discrete and continuous random variables, parameter estimation, hypothesis testing, and an introduction to linear regression, experimental design, and analysis of variance.
CALCULUS II.  Applications of integration, techniques of integration, parametric equations, polar coordinates, sequences, and series.
CALCULUS I. Concepts of limit, continuity, differentiation and integration; applications of these concepts.
GOVERNMENT OF THE UNITED STATES. The constitution and government of the United States. The organization, procedures, and duties of the branches of the government, together with their accomplishments and defects.
PROFESSIONAL AND TECHNICAL COMMUNICATION FOR SCIENCE AND ENGINEERING. Theory and practice in written and oral presentations with an emphasis on professional and technical communication for science and engineering.
INTRODUCTION TO MATRICES AND LINEAR ALGEBRA. Solving systems of linear equations, matrix operations, determinants, vector spaces, linear transformation, orthogonality, Gram-Schmidt process, projections, and eigenvalues and eigenvectors.
COMPUTER SYSTEM DESIGN PROJECT II. Implementation, integration, quality assurance through peer review and testing, and deployment of the project designed in CSE 4316; oral presentation, documentation and project demonstration.
FUNDAMENTALS OF SOFTWARE ENGINEERING.  Software engineering principles, processes, and techniques; software development approaches focusing on functional analysis and functional design methods. Configuration management, implementation strategies, and testing. Team project.
OPERATING SYSTEMS.  Functions and components of an operating system, including process synchronization, job scheduling, memory management, file systems protection, and deadlocks. Related system software, such as loaders, linkers, assemblers, and windowing systems.
ARTIFICIAL INTELLIGENCE.   An introduction to the field of artificial intelligence studying basic techniques such as heuristic search, deduction, learning, problem solving, knowledge representation, uncertainty reasoning and symbolic programming languages such as LISP. Application areas may include intelligent agents, data mining, natural language, machine vision, planning and expert systems.
LINEAR ALGEBRA FOR CSE. Solving systems of equations, matrix algebra, determinants, vector spaces, orthogonality and least squares, with applications to computer science.
PROBLEM SOLVING IN ENGINEERING. Broad introduction to engineering through the process of applying the principles of mathematics to solve real-life engineering problems. Math topics are presented within the context of engineering applications and reinforced through examples from engineering courses. Also introduces algorithm development through the use of the engineering analysis software MATLAB.
Introduction to Computer Science This is an introduction to the science problem-solving, programming, program development, algorithm analysis, and data structures. Students learn to develop correct software in a current programming language environment.
Introduction to Writing: Academic Prose Students learn skills and strategies for becoming successful academic readers, writers, and speakers: how to read and write critically, generate and develop ideas, work through multiple drafts, collaborate with peers, present ideas orally, and use computers as writing tools.
Calculus I Analytic geometry, differential and integral calculus, transcendental functions, and applications. Graphing calculator required.
Integrated Life Science Interdisciplinary course focusing on basic concepts of life science. Demonstrates role of modeling, prediction, and observation in the process of scientific discovery, which occurs within an historical and social context.
Introduction to Computer Science Introduction to science of problem solving, programming, program development, algorithm analysis, and data structures. Students will learn to develop correct software in a current programming language environment.
Methods in Computer Science This class is not focused on learning a features or constructs of a programming language; rather, it teaches principles and practices that help manage complexity, improve software quality, and leverage existing or new technologies.
Calculus II Integration, infinite series, introduction to vectors, and applications. Graphing calculator required.
American Civilization Fundamentals of American civilization. Covers history, political system, and economic institutions of the United States. Fulfills American Institutions requirement.
Cultural Anthropology Role of cultural concepts within discipline of anthropology. Relationship of cultural concepts to survival and adaptation, society and social life, ideology and symbolism, and cultural change and diversity. Applications to contemporary world problems.
Algorithms and Data Structures Students learn various data structures and algorithms, and refine their programming skills. Course topics include strategies for the design and evaluation of algorithms, algorithm analysis, sorting, trees, graphs, hash tables, priority queues, disjoint sets, dynamic programming, and greedy algorithms.
Introduction to Event Driven Programming and GUIs Students learn the fundamentals of event-driven software, common graphical user interface (GUI) components, GUI development environments and a new programming language.  They also strengthen their understanding of essential object-oriented concepts, including classes, inheritance, and polymorphism.
Discrete Mathematics Students learn logic and axiomatics, sets, functions, counting methods, recurrence relations, graph theory, Boolean algebras, combinatorial circuits, automata, grammars, and languages.
Physics for Scientists and Engineers I This course covers the study of motion and thermal physics including vectors, kinematics, forces, Newtons three laws of motion, circular motion and rotations, harmonic motion, momentum, energy and work, gravity, fluids, and thermodynamics. It includes lecture and required recitation.
Linear Algebra This course teaches solutions of linear systems, matrix operations, matrix factorization, vector spaces, subspaces, linear independence, bases, linear transformations, eigensystems, orthogonality, Gram-Schmidt orthogonalization, and projections.
Developing Dynamic, Database-Driven, Web Applications Develop secure, dynamic, database-driven web applications. Learn the fundamentals of building web pages. Add interactive capabilities with client-side and server-side technologies. Learn about information representation, storage, retrieval and transmission in Internet-based environments.
Computer Systems Organization and Architecture This course examines the organization and architecture of computer systems. It covers terminology, data representation, Boolean Algebra, and combinational and sequential logic circuits as they apply to computer hardware and software.
Physics for Scientists and Engineers II This course covers the study of waves, electricity and magnetism, optics, and quantum phenomena. Topics include electric and magnetic forces and fields, electric potential, Maxwells equations, DC and AC circuits, geometrical optics, wave nature of light, special relativity, and atomic, molecular, nuclear phenomena. The course includes lecture and required recitation.
Intermediate Writing: Research Writing in a Persuasive Mode Writing of reasoned academic argument supported with appropriately documented sources. Focuses on library and Internet research, evaluating and citing sources, oral presentations based on research, and collaboration
Operating Systems and Concurrency Design and implementation of operating systems. UNIX will be used as one example, but all categories of operating systems will be discussed. Presentation of the concept of concurrency as it applies to operating system design and application.
Introduction to Software Engineering Students learn the fundamentals of software engineering principles and practices, including project management, configuration management, requirements definition, system analysis, design, testing, and deployment. This course provides students with hands-on experience in a group software development project.
Theory of Computability Theory of computation, including presentation of computability, decidability, and complexity. Includes formal grammars, finite and pushdown automata, and turing machines.
Technical Communication for Engineers The goal of this course is to prepare engineering students with the foundational research, individual and collaborative technical writing, teamwork, and presentation skills necessary to be effective technical and professional communicators in academic and professional settings.
Programming Languages Theories of programming design and implementation. Introduction to variety of programming languages, showing how they represent trade-offs with respect to these theories.
Statistics for Scientists Introduction to statistical concepts, graphical techniques, discrete and continuous distributions, parameter estimation, hypothesis testing, and chi-square tests.
Culture of East Asia Students explore the cultures of three East Asian countries: China, Japan and Korea. Students gain an understanding of these cultures through readings, activities, video materials, writing, and discussions. Topics include: customs, traditions, beliefs, food, contemporary issues, and more.
Mobile Application Development Programming and application development for mobile computing devices such as mobile phones, music players, and tablet computers through the model-view-controller model of computing. Makes use of current technology and software development environments.
Data Mining Covers recent advances in machine learning and intelligent information retrieval. Focuses on how these topics relate to and are applied in data mining.
Neural Networks Advanced course in theories and techniques of machine intelligence, using neural networks. Emphasizes various neural network paradigms and the types of problems they are best suited to solve.
AI: Advanced Intelligent Systems Introduction to artificial intelligence topics, including software agent design, informed search, heuristics, inference (logical and probabilistic), knowledge representation, game playing, planning, machine learning, philosophy, and ethics. Graduate students must complete an independent project.
Parallel Computing Systems Design of large-scale parallel systems. Explores machine organizations SIMD and/or MIMD modes of parallelism, emphasizing interconnection patterns among processors. Discussion of low-level parallel processing algorithms. Presents case studies of existing and proposed systems.
Computer Graphics II Study of computer rendering of three-dimensional objects. Object representation, hidden surface removal, and shading. Ray tracing of synthetic scenes using mathematically defined surfaces.
Bioinformatics I Introduction to tools and techniques used in the study of bioinformatics, genomics, and computational biology. Explores usage of these tools and techniques for storage, retrieval (mining), processing, visualization, and analysis of biological information.
Mobile Application Development Programming and application development for mobile computing devices such as mobile phones, music players, and tablet computers through the model-view-controller model of computing. Makes use of current technology and software development environments.
Scientific Computing with Python In this introduction to scientific computing with Python, students become familiar with matrix algebra, decision trees, random forests, probability distributions, basic image analysis, and machine learning. The class uses both Python 2 and 3. Linux and open source are emphasized.
Utah Archaeology Popular introduction to the archaeology and prehistory of Utah and surrounding regions. Employs approachable texts with some supplementary readings. Features liberal use of photographs and maps to illustrate lectures. Class website provides context, discussion forums, and study aids.
Introduction to Fiction Readings in fiction, including novels, novellas, and stories. The course will examine elements of the genre such as character, plot, theme, and style. Various critical approaches and contexts will be discussed, as well as the historical development of the form.
First-Year Composition I An introduction to expository writing, rhetoric, and reading. The acquisition of the basic skills in standard English is stressed.
First-Year Composition II A continuation of training in expository writing and reading, stressing the acquisition of higher-level skills in standard English and the introduction to the basic tools and processes of academic research.
Survey of World Civilization to 1500 A survey of major world civilizations from the earliest times to 1500.
Survey of World Civilization since 1500 A survey of major world civilizations from 1500 to present.
Pre-calculus Trigonometry It includes the study of trigonometric and inverse trigonometric functions and includes extensive work with trigonometric identities and trigonometric equations. The course also covers vectors, complex numbers, DeMoivre’s Theorem, and polar coordinates. Additional topics may include conic sections, sequences, and using matrices to solve linear systems.
Calculus I Topics include limits, derivatives, applications of the derivative, definite and indefinite integrals, exponential and logarithmic functions, and inverse functions
Principles of Biology The chemical basis of life, cell structure and function, metabolism, and genetics.
Principles of Biology Evolution, diversity, and ecology of organisms. Designed for biology and other science majors or minors.
Computer Skills for Problem-Solving Using personal computers as effective problemsolving tools, this course will enhance analytical thinking and abstraction skills. Topics include problem specification, problem- solving techniques, and the interpretation of results to problems from scientific, business, and social domains.
Computer Science I An introduction to the theoretical foundations of computer science, the components of algorithms and the representation of these components using a high-level programming language. Special emphasis on software development and an introduction to object oriented programming.
Fundamentals of Speech Communication theory and practice for public speaking with emphasis on content, research, organization, delivery, adaptation to the audience, as well as listening and speaker evaluation.
Human Growth and Developmen Characteristics of and interrelationships among the physical, mental, social, and emotional aspects of human growth and development.
Computer Science II Introduction to elementary data structures such as queues, stacks, lists, strings, and trees. Discussion of professional ethics. Programming methodology with emphasis on object-oriented programming.
Graphical User Interface Programming Introduction to programming for modern graphical user interfaces using a visual programming tool. Topics include integrated development environments, object-oriented design, use of components and rapid application development.
Calculus II Topics include techniques of integration, applications of the integral, sequences, series, conic sections, parametric equations, and polar coordinates.
Calculus III Topics include vectors, vector-valued functions, functions of several variables, partial derivatives, multiple integrals, vector-fields, line integrals and surface integrals. P
Introduction to Discrete Structures Sets, functions and relations, basic logic, proof techniques, basics of counting, graphs and trees, discrete probability and number systems with applications to various areas of computer science.
Computer Organization and Assembly Language Programming Overview of computer hardware organization, machine representation of numbers and characters, memory system organization and architecture. Overview of system software. Programming experience in assembly language.
Computer Architecture Review of Boolean algebra and the elements of logic design including a laboratory experience. Study of the theory and design of register transfer, bus structure, arithmetic unit, control unit and memory. Consideration of design options including array processors, stackbased processors, pipelining, multiprocessing and distributed systems.
Linear Algebra This course introduces the basic theory of linear equations and matrices, real vector spaces, bases and dimensions, linear transformations and matrices, determinants, eigenvalues and eigenvectors, inner product spaces, and the diagonalization of symmetric matrices. Additional topics may include quadratic forms and the use of matrix methods to solve systems of linear differential equations.
Data Structures and Algorithms Introduction to the analysis of algorithms with regard to time and space. Methods of sorting and searching. Basic design techniques like divide and conquer, dynamic programming and backtracking. Algorithms for manipulating trees and graphs with platform independent implementation.
Theory and Applications of Database Systems Introduction to database systems, including the history of the development and basic concepts of the major types of database systems, inquiry systems and experience with a database model.
Applied Statistics I A course in statistical methods with applications. Descriptive statistics, probability, statistical inference including one- and two-sample problems, Chi-Square applications, one-way analysis of variance, linear correlation and regression analysis, and nonparametric statistics.
Automata Theory and Compiler Construction Definition of formal grammars, mathematical machines and their relationships. Description of compiler writing techniques and their application on a simple language.
Principles of Macroeconomics An introduction to basic macroeconomic principles. Analysis of the determination of national income, employment, output, and prices.
Art Appreciation A broad study of the contemporary visual arts by means of illustrated lectures, gallery visits, and studio demonstrations.
Programming Languages Formal study of programming language concepts: syntax; characteristics of grammars such as context-free and ambiguous; Backus-Naur Form; organization of programming languages such as block structure, list processing, etc.
Software Engineering A study of all the phases in a software system’s life cycle including analysis, specification, design, implementation, testing, and maintenance. A continued emphasis on problem solving concepts integrated within the treatment of the software life cycle, requirements specifications, and verification and validation issues.
Operating Systems History, overview, and principles of operating systems with emphasis on process, memory and device management, concurrency, system performance, file systems, and security. Contemporary operating systems will be investigated. Multi-processors, real-time and embedded systems, and distributed processing will also be presented.
Artificial Intelligence A survey of topics including knowledge representation and reasoning, expert systems, informed and uninformed search algorithms, search and constraint satisfaction, and the use of artificial intelligence languages.
Programming Languages Formal study of programming language concepts: syntax; characteristics of grammars such as context-free and ambiguous; Backus-Naur Form; organization of programming languages such as block structure, list processing, etc.
Freshman Orientation Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.
Ethical & Professional Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy.
Engineering Orientation Orientation required of new freshmen in the College of Engineering.
Calculus I. First course in calculus and analytic geometry for students with some calculus background; basic techniques of differentiation and integration with applications including curve sketching; antidifferentation, the Riemann integral, fundamental theorem, exponential and trigonometric functions.This course satisfies the General Education Criteria for:Quantitative Reasoning I
Calculus II Second course in calculus and analytic geometry: techniques of integration, conic sections, polar coordinates, and infinite series. This course satisfies the General Education Criteria for:Quantitative Reasoning I
Calculus III Third course in calculus and analytic geometry including vector analysis: Euclidean space, partial differentiation, multiple integrals, line integrals and surface integrals, the integral theorems of vector calculus. This course satisfies the General Education Criteria for:Quantitative Reasoning II
Applied Linear Algebra Introductory course emphasizing techniques of linear algebra with applications to engineering; topics include matrix operations, determinants, linear equations, vector spaces, linear transformations, eigenvalues, and eigenvectors, inner products and norms, orthogonality, equilibrium, and linear dynamical systems. 3 or 4 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both MATH 415 and any of MATH 125, MATH 225, ASRM 406, or MATH 416. 4 hours of credit requires approval of the instructor and department with completion of additional work of substance. Prerequisite: MATH 241 or consent of instructor.
University Physics: Mechanics Newton's Laws, work and energy, static properties and fluids, oscillations, transverse waves, systems of particles, and rotations. A calculus-based approach for majors in engineering, mathematics, physics and chemistry. Credit is not given for both PHYS 211 and PHYS 101. Prerequisite: Credit or concurrent registration in MATH 231. This course satisfies the General Education Criteria for:Nat Sci  Tech - Phys SciencesQuantitative Reasoning II
University Physics: Elec & Mag Coulomb's Law, electric fields, Gauss' Law, electric potential, capacitance, circuits, magnetic forces and fields, Ampere's law, induction, electromagnetic waves, polarization, and geometrical optics. A calculus-based approach for majors in engineering, mathematics, physics, and chemistry. Credit is not given for both PHYS 212 and PHYS 102. Prerequisite: PHYS 211; credit or concurrent registration in MATH 241. This course satisfies the General Education Criteria for:Nat Sci  Tech - Phys SciencesQuantitative Reasoning II
Aerospace Flight Mechanics Fundamental principles of aerospace flight mechanics applied to spacecraft and aircraft. Orbital mechanics, rocket propulsion, and dynamics and control applied to spacecraft design. Aerodynamics, maneuvering, stability and flight performance applied to aircraft design. MATLAB examples and assignments. Prerequisite: Credit or concurrent registration in TAM 212.
Evolution and Human Disease Principles of modern evolutionary theory are applied to medical problems. Topics include: transmission, pathogen strategies, symptoms and spectrum of disease, evolution of virulence, concept of cause, antimicrobial resistance, emerging diseases, stress and adaptation, nutrition, diachronic overview of changing patterns of human disease, and ecological factors.This course satisfies the General Education Criteria for:Nat Sci  Tech - Life Sciences
Introduction to Astrophysics Survey of modern astronomy for students with background in physics. Topics include: the solar system; nature and evolution of stars; white dwarfs, neutron stars, and black holes; galaxies, quasars and dark matter; large scale structure of the universe; the Big Bang; and Inflation. Emphasis will be on the physical principles underlying the astronomical phenomena. Prerequisite: PHYS 211.This course satisfies the General Education Criteria for:Nat Sci  Tech - Phys Sciences
The Big Bang, Black Holes, and the End of the Universe Studies the origin, evolution, and eventual fate of the universe, and the scientific tools used to study these issues. Topics include aspects of special and general relativity; curved spacetime; the Big Bang; inflation; primordial element synthesis; the cosmic microwave background; dark matter and the formation of galaxies; observational evidence for dark matter, dark energy, and black holes. Credit is not given for ASTR 350 if credit in ASTR 406 has been earned. Prerequisite: ASTR 100, or ASTR 121, or ASTR 122, or ASTR 210, or consent of instructor.
Introduction to Meteorology  Introduces the student to the basic concepts and principles of meteorology via the interpretation of weather maps and charts; uses current weather information to illustrate key concepts, emphasizes the physical atmospheric processes responsible for weather. By the end of the class students will be able to interpret and make basic weather forecasts as well as be able to explain basic atmospheric phenomena. Same as GEOG 100. This course satisfies the General Education Criteria for:Nat Sci  Tech - Phys Sciences
Severe and Hazardous Weather Most extreme manifestations of weather and climate are analyzed in terms of their physical basis and their historical, economic and human consequences. Emphasis is placed on the interplay between technological advances, the evolution of meteorology as a science, and the impacts of extreme weather (winter storms, floods, severe thunderstorms, hurricanes, El Nino). Technological advances include satellites, weather radars and profilers, and computer models used for weather prediction. Same as ESE 120.This course satisfies the General Education Criteria for:Nat Sci  Tech - Phys SciencesQuantitative Reasoning II
Climate and Global Change Introduces climate change and its interactions with the global environment; surveys the physical, chemical, biological and social factors contributing to global change; includes topics such as greenhouse warming, acid rain, ozone depletion, distinguishes anthropogenic influences and natural variability of the earth system; addresses societal impacts, mitigation strategies, policy options and other human responses to global change. Same as ESE 140.This course satisfies the General Education Criteria for:Nat Sci  Tech - Phys Sciences
General Physical Meteorology Introduction to physical processes in the atmosphere, focusing on those relevant to weather and storms. Emphasizes quantitative problem solving. Topics include atmospheric structure, atmospheric thermodynamics, clouds, synoptic meteorology, weather forecasting, and storms. For students in atmospheric sciences, physics, mathematics, engineering, and other physical and natural sciences. Prerequisite: MATH 220 or MATH 221; credit or concurrent registration in MATH 231 and PHYS 211.
Signals & Systems in Bioengrg Introduction to signals and linear systems with examples from biology and medicine. Linear systems and mathematical models of systems, including differential equations, convolution, Laplace transforms, Fourier series and transforms, and discrete representations. Class examples and coursework apply general techniques to problems in biological signal analysis, including circuits, enzyme kinematics, and physiological system analysis. Use of Matlab and Simulink software to understand more complex systems. Prerequisite: CS 101, PHYS 212, and credit or concurrent registration in MATH 285.
Cellular Bioengineering Molecular and cellular biology focusing on instrumentation and measurement techniques: gene expression, translation, and regulation; cellular energetics and enzyme kinetics; membrane transport and cell signaling; cytoskeleton and the cell cycle; cell biology fundamentals emphasizing modern imaging and measurement systems to quantify cellular function. Credit is not given for both BIOE 206 and MCB 252. Prerequisite: MCB 150.
Systems Engrg & Economics Introduction to the formulation and solution of civil engineering problems. Major topics: engineering economy, mathematical modeling, and optimization. Application of techniques, including classical optimization, linear and nonlinear programming, network theory, critical path methods, simulation, decision theory, and dynamic programming to a variety of civil engineering problems. Credit is not given for both CEE 201 and IE 310. Prerequisite: MATH 231; credit or concurrent registration in MATH 225.
Engineering Risk & Uncertainty Identification and modeling of non-deterministic problems in civil engineering design and decision making. Development of stochastic concepts and simulation models, and their relevance to real design and decision problems in various areas of civil engineering. Credit is not given for both CEE 202 and IE 300. Prerequisite: Credit or concurrent registration in MATH 241.
General Chemistry I For students who have some prior knowledge of chemistry. Principles governing atomic structure, bonding, states of matter, stoichiometry, and chemical equilibrium. Credit is not given for both CHEM 102 and CHEM 202. CHEM 102 and CHEM 103 are approved for General Education credit only as a sequence. Both courses must be completed to receive Natural Science and Technology credit. Prerequisite: Credit in or exemption from MATH 112; one year of high school chemistry or equivalent. All students enrolled in CHEM 102 should also enroll in CHEM 103. This course satisfies the General Education Criteria for:Nat Sci  Tech - Phys Sciences
General Chemistry Lab I Laboratory studies to accompany CHEM 102. Additional fees may apply. See Class Schedule. Credit is not given for both CHEM 103 and CHEM 203. CHEM 102 and CHEM 103 are approved for General Education credit only as a sequence. Both courses must be completed to receive Natural Science and Technology credit. Prerequisite: Credit or concurrent registration in CHEM 102 is required. This course satisfies the General Education Criteria for:Nat Sci  Tech - Phys Sciences
Introduction to Crop Sciences Introductory course covering the principles and practices of crop production and sustainable agroecosystem management. Topics include plant growth and development, environmental factors influencing plant productivity, soil management, fertility, and nutrient cycling, pest control principles, and sustainability challenges facing modern crop production. Concepts are discussed in lecture and reinforced in hands-on laboratory sections.This course satisfies the General Education Criteria for:Nat Sci  Tech - Life Sciences
Genetic Engineering Lab Laboratory/discussion course that provides a hands-on introduction to the techniques and principles of genetic engineering, recombinant DNA and the impact of molecular genetics on society. Students will isolate DNA from plants and clone specific genes into bacterial plasmids, perform polymerase chain reactions, DNA restriction analysis and DNA blotting, and discuss the relevance of these techniques to both medicine and agriculture. Prerequisite: A general biology course.
Applied Entomology Lectures, laboratory, and field trips cover the biology of insects and the recognition and management of insect pests of agricultural and urban ecosystems. Covers insect structure and physiology, classification, identification, life histories, behavior, and pest management. Same as IB 220 and NRES 270.This course satisfies the General Education Criteria for:Nat Sci  Tech - Life Sciences
Dance Anatomy and Kinesiology The study of human and anatomy and kinesiology, specifically as applied to dance. The human musculoskeletal system, movement analysis, and conditioning principles are covered both theoretically and practically.
Intro Food Science & Nutrition Discusses the evolution of the food system to meet the needs and desires of a complex, heterogeneous society. Provides an overview of food in relation to nutrition and health, composition and chemistry, microbiology, safety, processing, preservation, laws and regulations, quality, and the consumer.
Contemporary Nutrition Fundamental principles of human nutrition and their application to the selection of an adequate diet for health and wellness; current nutrition topics of importance.
Physical Geology Introduces Earth phenomena and processes. Includes minerals and rocks, continental drift, plate tectonics, rock deformation, igneous and sedimentary processes, geologic time, landscape evolution, internal structure and composition of the earth, groundwater, seismology and earthquakes, and formation of natural resources. Emphasizes the chemical and physical aspects of the Earth, and the basis for geological inference.
Emergence of Life Examines important theoretical and practical questions regarding the origin and evolution of life, as well as the search for life elsewhere in the universe. Uses the pioneering work of Carl Woese, whose "Tree of Life" revolutionized our understanding of the fundamental structure and evolutionary relatedness of all living entities on Earth.
The Oceans Integrated introduction to oceanography and marine geology and geophysics. Topics include ocean-basin formation and evolution (in the context of plate tectonics), ocean ecology, the hydrologic cycle, water chemistry, currents and waves, the interaction of oceans with climate, coastal hazards, resources, pollution, and the Law of the Sea.Course is oriented toward students not majoring in science.
Natural Disasters Introduces the nature, causes, risks, effects, and prediction of natural disasters including earthquakes, volcanoes, landslides, subsidence, global climate change, severe weather, coastal erosion, floods, mass extinctions, and meteorite  impacts; covers scientific principles and case histories of natural disasters as well as human responses (societal impact, mitigation strategies, and public policy).
History of Life Evolution of life from its beginning, illustrating changing faunas and floras through time; the invasion of land and of the skies; the effects of a changing atmosphere, changing climates, and continental drift. Emphasis on dinosaur evolution, ecology, and extinction; also other vertebrates, including mammal-like reptiles, mammals, and the emergence of humans, as well as plants and invertebrates.
History of the Earth System  Presents systematic analysis of formation and evolution of the Earth and its dynamic systems (lithosphere, hydrosphere, atmosphere, and biosphere). Also introduces methods of reconstructing Earth's history through use of geochronology, paleontology, and the stratigraphic records. Introduces the geological history of life evolution, mountain belts and continents, geochemical systems, climate, sea level, and the Earth's interior.
Introduction to Plant Biology  Basic principles of growth and form, physiology, genetics, evolution, and ecology in plant biology. Lecture and laboratory.This course satisfies the General Education Criteria for:Nat Sci  Tech - Life Sciences
Animal Biology Introductory zoological concepts with emphasis on the diversity and comparative anatomy of animals and the fundamentals of physiology, genetics, evolution, and behavior. Lecture and laboratory. The laboratory includes vertebrate dissection.
Organismal & Evolutionary Biol Introduction to physiology, genetics, and evolution of organisms, and their ecology and diversity.
Bioscience of Human Movement Integrates anatomical and physiological aspects of human movement; emphasizes how the body moves, physiological responses to exercise stress, physical conditioning and physical fitness.
Molec & Cellular Basis of Life Introductory course focusing on the basic structure, metabolic, and molecular processes (including membranes, energy metabolism, genes) common to all cells. Emphasis on unique properties that differentiate the major sub-groups of organisms (Archaea, Bacteria, plants, and animals), and will discuss how cells are integrated into tissues and organs in multicellular organisms.
Human Anatomy & Physiology I Organ system biology with an emphasis on normal human anatomy and physiology, physiological processes and associated disease processes of the following systems; skeletal, muscle, nervous, sensory, and endocrine.
Modeling Nuclear Energy System  Applications of elementary nuclear physics in nuclear engineering. Nuclear reactor materials and components. Steady-state and transient operation of nuclear reactors. Nuclear energy removal and conversion. Radiation shielding.
Fundamentals of Env Sci Introduction to environmental sciences and current environment issues. Topics include population growth, world food supplies, agriculture and the environment, biodiversity, fossil fuels and "green" energy issues, endangered and threatened species, water use, conservation and pollution, global warming, acid rain, ozone depletion, waste management and reduction, recycling, toxins and health, mineral resources, and environmental policies and regulations. Course addresses the complex relationships between the human race and the natural systems that contain our air, water, energy, and biotic and food resources.
Introduction to NRES Introduction to natural resources (forests, fisheries, soils, aquatic systems) and environmental science. Emphasizes renewable natural resources, ecological concepts, energy use, biodiversity of species, biogeochemical cycles, and air, water, and soil pollution. Provides natural science basis for understanding contemporary environmental issues and natural resource management.
Introductory Plant Pathology Concepts relating to causal agents of representative plant diseases, symptoms and diagnosis, modes of infection and spread, effects of environment on disease development, and methods of control.
Intro to Brain and Cognition Introduction to the interdisciplinary field of cognitive neuroscience, which is concerned with how the cognitive systems supporting a broad range of capacities including memory, attention, and social and emotional processing, arise from the functioning of specific brain modules and brain mechanisms. Emphasizes how functional brain imaging and other cognitive neuroscience methods can be brought to bear on answering these questions.
Cognitive Psych Introduction to the psychological study of human information processing and memory; acquisition, retrieval, and forgetting; and general knowledge, concepts, reasoning, and related issues in cognition.
Learning and Memory Survey of basic phenomena in learning and memory emphasizing experimental data from animal and human research.
Intro Sound & Hearing Science Acoustics, anatomy, and physiology of the auditory system; psychophysical methods; and a consideration of auditory theories and mechanics.
Communication Neuroscience This course provides and overview of neuroscience with emphasis on human communication, moving from general concepts in neuroanatomy and neurophysiology to the specifics of the neuroscience of hearing, speech and language.
Intro to Computer Science Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing.
Software Design Studio Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review.
Discrete Structures Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs.
Data Structures Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms.
Computer Architecture Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security.
System Programming Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools.
Probability & Statistics for Computer Science Introduction to probability theory and statistics with applications to computer science. Topics include: visualizing datasets, summarizing data, basic descriptive statistics, conditional probability, independence, Bayes theorem, random variables, joint and conditional distributions, expectation, variance and covariance, central limit theorem. Markov inequality, Chebyshev inequality, law of large numbers, Markov chains, simulation, the PageRank algorithm, populations and sampling, sample mean, standard error, maximum likelihood estimation, Bayes estimation, hypothesis testing, confidence intervals, linear regression, principal component analysis, classification, and decision trees.
Numerical Methods I Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines.
Introduction to Algorithms & Models of Computation Analysis of algorithms, major paradigms of algorithm design including recursive algorithms, divide-and-conquer algorithms, dynamic programming, greedy algorithms, and graph algorithms. Formal models of computation including finite automata and Turing machines. Limitations of computation arising from fundamental notions of algorithm and from complexity-theoretic constraints. Reductions, undecidability and NP-completeness.
Programming Languages & Compilers Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation.
Software Engineering I Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises.
Software Engineering II Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering.
Software Engineering II, ACP Desarrollo de software, gestión y mantenimiento. Gestión de proyectos y configuraciones, modelos de desarrollo colaborativo, garantía de calidad de software, ingeniería de dominio de interoperabilidad y reutilización de software, y reingeniería de software.
Computational Photography Computer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction.
User Interface Design A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation.
Social Visualization Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.
Senior Project II, ACP Senior Project II, ACP
Senior Project II Senior Project II
CS Team Project Student teams work with CS faculty to complete a significant project requiring advanced knowledge of CS principles. Project topics vary. 1 to 3 undergraduate hours. No graduate credit. May be repeated in the same term up to 6 hours, if topics vary; may be repeated in separate term.
Programming Language Design Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models.
Compiler Construction Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques.
Program Verification Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus.
Formal Software Devel Methods Mathematical models, languages, and methods for software specification, development, and verification.
Senior Project I  First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations.
Programming Language Semantics Theory of programming languages including functional programming, meta-circular interpreters, typed, untyped and polymorphic lambda-calculi, and denotational semantics.
Concurrent Progrmg Languages Theory of concurrency and concurrent programming languages. Formal models of concurrent computation such as process algebras, nets, and actors; high level concurrent programming languages and their operational semantics; methods for reasoning about correctness and complexity of concurrent programs.
Compiler Construction Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques.
Topics in Software Engineering Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering.
Obj-Oriented Progrmg & Design Principles of object-oriented design; design patterns; use and design of frameworks; reflection, refractoring, use of unit tests as specifications.
Topics in Automated Deduction Advanced topics in computer-aided methods for formal deduction, selected from areas of current research, such as: resolution theorem proving strategies, special relations, equational reasoning, unification theory, rewrite systems, mathematical induction, program derivation, hybrid inference systems, and programming with logic.
Intro to Combinatorics Permutations and combinations, generating functions, recurrence relations, inclusion and exclusion, Polya's theory of counting, and block designs.
Algorithms Design and analysis techniques, approximation algorithms, randomized algorithms and amortized analysis, and advanced topics such as network flow, linear programming, and dynamic data structures, among others.
Formal Models of Computation Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; linear-bounded automata and context-sensitive languages; computability and the halting problem; undecidable problems; recursive functions; Chomsky hierarchy; computational complexity.
Program Verification Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus.
Formal Software Devel Methods Mathematical models, languages, and methods for software specification, development, and verification.
Advanced Topics in Stochastic Processes & Applications Modeling and analysis of stochastic processes. Transient and steady-state behavior of continuous-time Markov chains; renewal processes; models of queuing systems (birth-and-death models, embedded-Markov-chain models, queuing networks); reliability models; inventory models. Familiarity with discrete-time Markov chains, Poisson processes, and birth-and-death processes is assumed.
Combinatorial Mathematics Fundamental results on core topics of combinatorial mathematics: classical enumeration, basic graph theory, extremal problems on finite sets, probabilistic methods, design theory, discrete optimization.
Extremal Graph Theory Extremal problems and parameters for graphs. Distance and connectivity, matching and factors, vertex and edge colorings, perfect and imperfect graphs, intersection classes and intersection parameters, Turan's theorem, graph Ramsey theory, graph decomposition and other extremal problems.
Algorithms NP-completeness, design and analysis techniques, approximation algorithms, randomized algorithms, combinatorial optimization, linear programming.
Randomized Algorithms Basic and advanced concepts in the design and analysis of randomized algorithms. Sampling; concentration inequalities such as Chernoff-Hoeffding bounds; probabilistic method; random walks, dimension reduction; entropy; martingales and Azuma's inequality; derandomization. Randomized algorithms for sorting and searching; graphs; geometric problems. Basics of pseudorandomness and randomized complexity classes.
Methods of Combinatorics Combinatorial methods and other mathematical methods for combinatorial problems. Enumeration by bijections and generating functions, probabilistic methods for existence proofs and asymptotic analysis, randomized algorithms, Ramsey's theorem and related topics, combinatorial designs and their applications, geometric problems and methods.
Topics in Automated Deduction Advanced topics in computer-aided methods for formal deduction, selected from areas of current research, such as: resolution theorem proving strategies, special relations, equational reasoning, unification theory, rewrite systems, mathematical induction, program derivation, hybrid inference systems, and programming with logic.
Computational Complexity Turing machines; determinism and non-determinism; time and space hierarchy theorems; speed-up and tape compression; Blum axioms; structure of complexity classes NP, P, NL, L, and PSPACE; complete problems; randomness and complexity classes RP, RL, and BPP; alternation, polynomial-time hierarchy; circuit complexity, parallel complexity, NC, and RNC; relativized computational complexity; time-space trade-offs.
Approximation Algorithms Approximation algorithms for NP-hard problems. Basic and advanced techniques in approximation algorithm design: combinatorial algorithms; mathematical programming methods including linear and semi-definite programming, local search methods, and others. Algorithms for graphs and networks, constraint satisfaction, packing and scheduling.
Embedded System Verification Examines formal analysis an synthesis approaches for discrete, continuous, and hybrid models of computing systems and their physical environment. Introduces timed and hybrid automata models. Analysis techniques including model checking, Hoare-style deduction, and abstractions for safety and stability, and controller synthesis strategies with applications in distributed robotics, automobile system, traffic control, and real-time systems.
Text Information Systems Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management.
Database Systems Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems.
Introduction to Data Mining Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications.
Multimedia Systems Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices.
Artificial Intelligence Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts.
Computational Photography Computer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction.
Introduction to Robotics Fundamentals of robotics including rigid motions; homogeneous transformations; forward and inverse kinematics; velocity kinematics; motion planning; trajectory generation; sensing, vision; control.
Machine Learning Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction.
Natural Language Processing Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences).
Introduction to Bioinformatics Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use.
Social Visualization Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data.
Advanced Information Retrieval Advanced concepts, models, and algorithms in information retrieval and major recent developments in the field, including historical milestones in information retrieval research, evaluation methodology, vector space retrieval model, probabilistic retrieval models, learning to rank algorithms, probabilistic topic models, information retrieval systems, text analytics, and topics of research frontiers in information retrieval.
Advanced Data Management Advanced concepts in data management and information system design and implementation, and recent developments in the field. 1) Relational roots, objects and extensibility, query languages, data indexing, query processing, transaction processing, benchmarks, and 2) semi-structured data and unstructured data, information extraction, information integration, web search and mining, and other emerging directions in the field.
Data Mining Principles An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers.
Computer Vision Information processing approaches to computer vision, algorithms, and architectures for artificial intelligence and robotics systems capable of vision: inference of three-dimensional properties of a scene from its images, such as distance, orientation, motion, size and shape, acquisition, and representation of spatial information for navigation and manipulation in robotics.
Optimiz in Computer Vision Applications of continuous and discrete optimization to problems in computer vision and machine learning, with particular emphasis on large-scale algorithms and effective approximations: gradient-based learning; Newton's method and variants, applied to structure from motion problems; the augmented Lagrangian method and variants; interior-point methods; SMO and other specialized algorithms for support vector machines; flows and cuts as examples of primal-dual methods; dynamics programming, hidden Markov models, and parsing: 0-1 quadratic forms, max-cut, and Markov random-fields solutions.
Machine Learning in NLP Central learning frameworks and techniques that have emerged in the field of natural language processing and found applications in several areas in text and speech processing: from information retrieval and extraction, through speech recognition to syntax, semantics and language understanding related tasks. Examination of the theoretical paradigms -- learning theoretic, probabilistic, and information theoretic -- and the relations among them, as well as the main algorithmic techniques developed within each paradigm and in key natural language applications.
Models of Cognitive Processes Formal models and concepts in automated cognition; integrating machine learning and prior knowledge; current approaches and detailed analyses of the role of reasoning in the learning process; computational complexity and fundamental tradeoffs between expressiveness and tractability; implications for state-of-the-art artificial intelligence areas such as automated planning, the semantic web, relational learning, structured prediction, latent models, structure learning, theory formation, etc.; philosophical and psychological aspects of integrating analytic and empirical evidence.
Topics in Automated Deduction Advanced topics in computer-aided methods for formal deduction, selected from areas of current research, such as: resolution theorem proving strategies, special relations, equational reasoning, unification theory, rewrite systems, mathematical induction, program derivation, hybrid inference systems, and programming with logic.
Security Laboratory Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements CS 461 via hands-on project.
Computer Security I Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution.
Computer Security II Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography.
User Interface Design A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation.
Social Visualization Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data.
Tech and Advertising Campaigns With the maturation of the internet as an advertising and media channel, advertising, journalism, and communications students need to know more about technology and how that impacts their messages and designs. Likewise, computer scientists could benefit from knowledge of what the end user is looking for when designing web content, applications and other web-based media. Students in this course will gain design knowledge as well as a hands-on experience in completing a technology-driven advertising campaign. Students will participate in engineering, advertising and project management activities with individual as well as team responsibilities.
Advanced Computer Security Current research trends in computer and network security. Privacy, tamper-resistance, unwanted traffic, monitoring and surveillance, and critical infrastructure protection. Subtopics will vary depending upon current research trends. Students work in teams in close coordination with the course instructor to develop one of the topics in depth by carrying out background research and an exploratory project.
Human-Computer Interaction In-depth coverage of advanced topics in human-computer interaction (HCI). Applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures, and bimanual input, and usability evaluation techniques. Students complete a research-oriented term project of their choosing.
Multimedia Systems Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices.
Interactive Computer Graphics Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes.
Production Computer Graphics Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods.
Computational Photography Computer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction.
User Interface Design A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation.
Social Visualization Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data.
Scientific Visualization Visualization techniques useful in analysis of engineering and scientific data. Physical models; methods of computational science; two- and three-dimensional data types; visual representation schemes for scalar, vector, and tensor data; isosurface and volume visualization methods; visual monitoring; interactive steering.
Human-Computer Interaction In-depth coverage of advanced topics in human-computer interaction (HCI). Applied models of human performance and attention, design tools for creative design tasks, interruptions and peripheral displays, gestures, and bimanual input, and usability evaluation techniques. Students complete a research-oriented term project of their choosing.
Special Topics Special Topics
Production Computer Graphics Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods.
Numerical Analysis Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations.
Numerical Methods II Orthogonalization methods for least squares, Krylov subspace methods, non-linear equations and optimization in multiple dimensions, initial and boundary value problems for ordinary and partial differential equations.
Introduction to Bioinformatics: Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use.
Simulation Use of discrete-event simulation in modeling and analysis of complex systems. Data structures and event-list management; verification and validation of simulation models; input modeling, including selection of probability distributions and random variate generation; statistical analysis of output data.
Parallel Programming Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms.
Special Topics  Special Topics
Scientific Visualization Visualization techniques useful in analysis of engineering and scientific data. Physical models; methods of computational science; two- and three-dimensional data types; visual representation schemes for scalar, vector, and tensor data; isosurface and volume visualization methods; visual monitoring; interactive steering.
Parallel Numerical Algorithms Numerical algorithms for parallel computers: parallel algorithms in numerical linear algebra (dense and sparse solvers for linear systems and the algebraic eigenvalue problem), numerical handling of ordinary and partial differential equations, and numerical optimization techniques.
Numerical Methods for PDEs Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages.
Iterative & Multigrid Methods Comprehensive treatment of algebraic and multigrid iterative methods to solve systems of equations, primarily linear equations arising from discretization of partial differential equations.
Topics in Numerical Analysis Advanced topics in numerical analysis selected from areas of current research.
Operating Systems Design Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection.
Real-Time Systems Supervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot.
Distributed Systems Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems.
Embedded Systems A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects.
Computer Networking Laboratory Design, application, analysis, and evalution of communication network protocols under both Linux and Windows NT operating systems. Emphasis on identifying problems, proposing alternative solutions, implementing prototypes using available network protocols and evaluating results. Multiple programming team projects.
Communication Networks Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software.
Wireless Networks Overview of wireless network architectures including cellular networks, local area networks, multi-hop wireless networks such as ad hoc networks, mesh networks, and sensor networks; capacity of wireless networks; medium access control, routing protocols, and transport protocols for wireless networks; mechanisms to improve performance and security in wireless networks; energy-efficient protocols for sensor networks.
Security Laboratory Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises.
Computer Security I Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution.
Computer Security II Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography.
Applied Parallel Programming Parallel programming with emphasis on developing applications for processors with many computation cores. Computational thinking, forms of parallelism, programming models, mapping computations to parallel hardware, efficient data structures, paradigms for efficient parallel algorithms, and application case studies.
Advanced Operating Systems Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects.
Concurrent Progrmg Languages Theory of concurrency and concurrent programming languages. Formal models of concurrent computation such as process algebras, nets, and actors; high level concurrent programming languages and their operational semantics; methods for reasoning about correctness and complexity of concurrent programs.
Advanced Distributed Systems Peer-to-peer systems, sensor networks, and fundamental theoretical distributed computing. Review of classical work in each area, and application of design methodologies to explore overlaps across them. Emphasis on protocol design, systems issues, and theory. Reading selections are roughly two-third classical to one-third contemporary. Students write critiques, make presentations, and create a conference paper in a systematic manner.
Advanced Computer Networks Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions.
Advanced Computer Security Current research trends in computer and network security. Privacy, tamper-resistance, unwanted traffic, monitoring and surveillance, and critical infrastructure protection. Subtopics will vary depending upon current research trends. Students work in teams in close coordination with the course instructor to develop one of the topics in depth by carrying out background research and an exploratory project.
Operating Systems Design Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection.
Real-Time Systems Supervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot.
Compiler Construction Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques.
Embedded Systems A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects.
Computer System Organization Computer hardware design and analysis and interface with software. Advanced processor design, including superscalar, out-of-order issue, branch prediction, and speculation. Memory hierarchy design, including advanced cache optimizations, main memory, and virtual memory. Principles of multiprocessor design, including shared-memory, cache coherence, synchronization, and consistency. Other advanced topics depending on time; e.g., GPUs and accelerators, warehouse computers and data centers, security.
Advanced Compiler Construction Incremental and interactive compiling, error correction, code optimization, models of code generators.
Parallel Computer Architecture Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas.
Fault-Tolerant Dig Syst Design Advanced concepts in hardware and software fault tolerance: fault models, coding in computer systems, module and system level fault detection mechanism, reconfiguration techniques in multiprocessor systems and VLSI processor arrays, and software fault tolerance techniques such as recovery blocks, N-version programming, checkpointing, and recovery; survey of practical fault-tolerant systems.
Computer Systems Analysis Development of analytical models of computer systems and application of such models to performance evaluation: scheduling policies, paging algorithms, multiprogrammed resource management, and queuing theory.
Embedded System Verification  Examines formal analysis an synthesis approaches for discrete, continuous, and hybrid models of computing systems and their physical environment. Introduces timed and hybrid automata models. Analysis techniques including model checking, Hoare-style deduction, and abstractions for safety and stability, and controller synthesis strategies with applications in distributed robotics, automobile system, traffic control, and real-time systems.
Writing and Research Introduction in research-based writing and the construction of academic, argumentative essays that use primary and secondary sources as evidence. This course fulfills the Campus Composition I general education requirement.
Freshman Orientation Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.
Intro to Computer Science Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing.
Engineering Orientation Orientation required of new freshmen in the College of Engineering.
Calculus I  First course in calculus and analytic geometry for students with some calculus background; basic techniques of differentiation and integration with applications including curve sketching; antidifferentation, the Riemann integral, fundamental theorem, exponential and trigonometric functions.
Writing and Research Introduction in research-based writing and the construction of academic, argumentative essays that use primary and secondary sources as evidence.
Software Design Studio Fundamental principles and techniques of software development. Design, documentation, testing, and debugging software, with a significant emphasis on code review.
Discrete Structures Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs.
Calculus II Second course in calculus and analytic geometry: techniques of integration, conic sections, polar coordinates, and infinite series.
University Physics: Mechanics Newton's Laws, work and energy, static properties and fluids, oscillations, transverse waves, systems of particles, and rotations. A calculus-based approach for majors in engineering, mathematics, physics and chemistry.
Writing and Research Introduction in research-based writing and the construction of academic, argumentative essays that use primary and secondary sources as evidence. \
Fundamentals of Computer Science I This course introduces the fundamental techniques of algorithm design and program construction using procedural constructs. Topics will include problem analysis; algorithm design; and implementation and debugging strategies using good programming practices. The course will cover basic data structures including variables, arrays, strings, records, and pointers; and control structures including decisions, iterations, functions, and file I/O. The course will focus on applications from computer science and engineering using C/C++/C#
First-Year Seminar This course helps prepare new students for the creative, interdisciplinary, and rigorous modes of inquiry that characterize a York College education.  The First-Year Seminar is intended to create a sense of intellectual community for students and faculty, to emphasize attainment of key learning outcomes, to introduce students to college-level rigor and expectations, to encourage the academic growth of students, and to purposefully expose students to a variety of co-curricular experiences and resources available at York College
Calculus I Both a theoretical and an applied approach to physics and engineering are emphasized in this in-depth study of introductory calculus topics. The topics of the course include a review of algebra and trigonometry, limits, differentiation, and applications of the derivative
Physical Science Physical Sciences
Technical and Scientific Communication This course offers students expertise in applying rhetorical techniques and problem-solving skills to the types of communication associated with technical and scientific (including medical) settings.  Using cases and scenarios in some instances, students will create written documents (such as proposals, research reports, usability analysis, and process descriptions) in both print and online environments and will learn about effective document design, use of visuals, and oral presentation in technical and scientific contexts
Design and Analysis of Digital Circuits This course focuses on fundamentals in the analysis and design of digital circuits. Boolean algebra, gate-logic, combinational and sequential gates, and related logic networks, such as encoders, multiplexers, registers, counters, timers, and comparators, are introduced. Synchronous and asynchronous circuits are studied. Open-collector, tri-state, and programmable logic devices are introduced. Popular logic families and interfacing issues between digital and analog systems are studied
Discrete Mathematics A course in discrete mathematics emphasizing the finite and combinatorial aspect of many mathematical structures and problems. It includes applications to computer science and probability.
Lab Science Lab Science
Rhetorical Communication This course provides students with the knowledge and skills necessary for successful, goal-driven written, oral, and visual communication in academic and professional contexts.  All subjects and professional fields require effective (i.e., rhetorical) communication directed at well-defined audiences to explain information and to offer a compelling rationale, and this course illustrates the process-oriented approach needed to achieve rhetorical objectives.  Rhetorical Communication also introduces students to the knowledge-producing and critical thinking potential of language, the impact of technology on language and information, and the nature of communication as ethical action.
Fundamentals of Computer Science II This course introduces advanced object-oriented constructs such as abstraction, virtual methods, and generic classes. Advanced data structures including arrays, linked lists, queues, stacks, trees, heaps, and hash tables will be discussed both natively as well as through standard template libraries. Fundamental sorting and searching algorithms will be introduced. Basic analytical and proof techniques will be used to characterize the data structures and algorithms discussed. The course will focus on implementing applications from computer science and engineering using languages such as C++/C#/Java
Calculus II Topics in this second course in calculus include the definition and theory of the definite integral; numerical integration; integral applications; the calculus of logarithms, exponential, inverse, and hyperbolic functions; techniques of integration; and applications of the integral to physics and engineering.
Computer Science Career Training Preparation This one-credit-hour seminar prepares students for their internship experience.  In this course students will learn to search for employment opportunities using web resources and presentations by potential internship employers, and prepare effective cover letters and resumes.  Interview skills will be developed through various activities which may include mock interviews, discussions with current CS students that have completed internships and York College alumni, and human resource manager guest speakers.  Students will also be exposed to ethical issues related to the computing profession through discussion of case studies, role playing, and presentations by professionals in the industry.
Software Engineering and Design This course describes the software development process in detail, including the software life cycle and models of software development; requirements analysis and software design techniques, including structured analysis and object-oriented approaches; techniques for software quality assurance, including design reviews, testing, metrics, and an introduction to program verification; and software project planning, organization, and management.
Fundamentals of Computer Engineering design, integrated circuits, register transfer description, basic computer organization and machine-level programming. The relationship between software and hardware is stressed. Topics include fundamentals of computer architecture, computer arithmetic and digital logic, memory system organization and architecture, interfacing and communication, device subsystems, machine level representation of data, assembly level machine organization, functional organization, multiprocessing, and alternative architectures.
Technical and Scientific Communication This course offers students expertise in applying rhetorical techniques and problem-solving skills to the types of communication associated with technical and scientific (including medical) settings.  Using cases and scenarios in some instances, students will create written documents (such as proposals, research reports, usability analysis, and process descriptions) in both print and online environments and will learn about effective document design, use of visuals, and oral presentation in technical and scientific contexts.
Linear Algebra I An introductory course in linear equations, determinants, vectors in the plane and in space, vector spaces, linear transformations, and eigenvalues. Designed as a serious mathematics course for students in the physical sciences, mathematics education, business, or the mathematically curious
Calculus III In this third course in calculus, students study infinite series, conic sections, vectors, and the calculus of three-dimensional space, polar coordinates, partial derivatives, and multiple integrals with applications to physics and engineering.
Differential Equations The course in differential equations covers the standard methods of solving ordinary differential equations and their applications to physics and electrical and mechanical engineering. Topics include methods for first solving order differential equations; second and higher-order equations; numerical methods for non-linear differential equations; and series solutions.
Network Applications and Protocols The course covers computer networks from the application layer down to the physical layer, with emphasis on the application, transport, and network layers.  Topics will include network applications and protocols, layered services, reliable transport, routing, link layer protocols, and network security.  Lab exercises and programming assignments will provide hands-on experience developing network applications and protocols.
Programming Language Design This course examines the semantics of programming languages. Topics include formal specifications of syntax, declarations, binding, allocation, data structures, data types, control structures, control and data flow; the implementation and execution of programs; and functional programming versus imperative programming. This course will include substantial treatment of formal languages, automata, and theory of computation.  Other possible topics include nonprocedural and logic programming; object-oriented programming; and program verification
Data Structures This course is an in-depth examination of important data structures, their algorithms, and implementation techniques. Both abstract and concrete data structures are discussed including sequences, stacks, queues, maps, sets, graphs, array lists, linked lists, skip lists, search trees, heaps, and hash tables. Students will implement and apply the data structures through a series of programming assignments
Numerical Analysis This is an advanced mathematics course covering selected topics in the field of applied mathematics. These topics will include Taylor series expansions and approximations, numerical integration and differentiation, solution of systems of equations, and numerical solution of ordinary and partial differential equations representing dynamics of physical systems. Solutions to the differential equations may be applied to mathematical modeling of vibrations, fluid flow, heat transfer, or other dynamical phenomena.
Analysis of Algorithms This course studies fundamental algorithms, strategies for designing algorithms and mathematical tools for analyzing algorithms. Fundamental algorithms studied in this course include graph algorithms; algorithms for sorting and searching; hashing; integer arithmetic; and selected combinatorial tasks. Mathematical tools include asymptotic notations and methods for solving recurrences. Algorithm design strategies include the greedy method, divide-and-conquer, dynamic programming, and randomization
Probability and Statistics A calculus-based course in probability and statistics that will involve probability and a study of the distributions and expected values of continuous and discrete random variables.  Suitable for business, computer science, engineering, math, and mathematics education majors that have such a course as one of their electives or requirements.
Operating Systems This course provides an introduction to the fundamentals of operating systems. Topics include inter-process communication, process scheduling, deadlock, memory management, virtual memory, file systems, and distributed systems. Formal principles are illustrated with examples and case studies of one or more contemporary operating systems. Also, students will study a widely used operating system such as Windows or UNIX with an emphasis on system programming for the operating system. Topics include kernel design, the I/O system, scheduling algorithms, process control, inter-process communication, system calls, and memory management.
Senior Software Project I Student teams will complete a substantial project provided by sponsors drawn from both industry and research organizations. These projects will be developed under the direction of the course instructor and members of the sponsoring organization
Computer Science Internship I In the internship the student carries out a planned and supervised work experience in the field of computer science at a selected cooperating firm. The student may undergo supplementary training provided by the firm. The student will be required to submit a final report of the internship experience and will be subject to a final performance appraisal by his/her employer.
Social and Professional Issues in Computing This course studies the social impact, implications and effects of computers, and the responsibilities of computer professionals in directing the emerging technology. Specific topics include an overview of the history of computing, computer applications and their impact, the computing profession, the legal and ethical responsibilities of professionals, and careers in computing
Computer Graphics Programming I This course introduces the fundamental concepts in computer graphics programming. Topics include color models, basic coordinate transformations and clipping, raster and vector models, basic rendering techniques., lighting, and texture mapping. Additionally programmable shaders will be introduced through current graphics API shader languages. Students will demonstrate these topics through projects using a standard graphics API as the programming platform.
Parallel and Distributed Computing This course explores the theory and practice of designing and implementing programs to run on multiple processors in parallel. A number of programming projects using C/C++ with the pthreads and MPI libraries will provide an opportunity to implement and benchmark parallel programs. Additional topics may include OpenMP, fork/join frameworks, Java threads, lock-free and optimistic concurrency, distributed object frameworks, and general network communication using sockets
Introduction to Film This course is an introduction to film as a communicative and artistic medium, with attention to its technological, industrial, social, and aesthetic dimensions. Students will view a wide range of films, including early as well as recent American and foreign films, and learn about the various techniques used to express meaning in cinema, as well as the major critical approaches that can be used to make sense of films.
Computer Science I Introduction to computer science and engineering, problem-solving techniques, algorithmic processes, software design and development.
Computer Science II Software design, structured programming, object-oriented design and programming.
Foundations of Computing Conceptual and formal models, efficiency and levels of abstraction as used in the field of computing, big-Oh notation, combinatorics and conditional probability, basic operations of sets, functions, relations, trees and graphs, regular expressions, deterministic finite automata and non-deterministic finite automata to describe patterns in strings.
Foundations of Data Structures Data structures and formalisms used in computing, such as asymptotic behavior of algorithms, graph, table, relational and set data structures, context-free grammars to describe patterns, assertions in propositional logic form, amortized analysis to evaluate efficiency of data structures such as splay trees and O(1) expansion of tables.
Assembly Language and Computer Organization Principles of computer systems organization, instruction sets, assembly language programming, computer arithmetic, data and control paths, and introduction to memory hierarchy.
Data Structures and Algorithms Time complexity of algorithms; merge sort and heap sort; data structures for trees and graphs; elementary graph algorithms, breadth-first search, depth-first search, topological sorting, Prims algorithm and Kruskals algorithm
Software Engineering Modular design and implementation of software systems. Topics include requirements and specifications development, documentation of the design using current design tools such as UML, testing of software implementation, and system and user documentation.
Principles of Systems Programming Introduction to the design and operation of systems software. Analysis is made of current system software technology, including operating systems, language translation systems and file systems.
Social Issues in Computing The effect of computer science and engineering on the home and workplace, with emphasis on the role of computer professional in modern society.
Algorithms Time complexity of algorithms; algorithm design methodologies including divide and conquer, greedy, and dynamic programming; exposure to approximation algorithms for NP-hard problems; performance evaluation of algorithms.
Software Development Capstone I Software Development Capstone I
Software Development Capstone II Software Development Capstone II
Senior Thesis Intended to be a serious exercise in the organization and presentation of written material. Students select their own topics, in consultation with their faculty advisor. The thesis is a research paper and students are responsible, with the advice of their faculty, for the investigation of sources, the accumulation of data, the selection of pertinent material and the preparation of the thesis in acceptable form.
Introduction to Computer Networks Introduction to data communications; asynchronous, synchronous, networks and current technology.
Formal Languages, Automata and Computability Introduces students to the formal language theory that underlies modern computer science. Topics include different representational forms for regular languages, context-free grammars, pushdown automata, pumping lemmas for regular and context-free languages, and Chomskys hierarchy.
Programming Languages Syntax, semantics and computation models of programming languages. Formal foundations of major programming paradigms and in-depth study of key features of high-level programming languages from each paradigm.
Introduction to Operating Systems Concepts in operating system analysis and design. General topics of process, resource and file management are presented and analyzed in the context of different system architectures and performance constraints.
Introduction to Compilation Techniques Topics include parsing, syntax-directed translation, run-time storage management, error recovery, code generation and optimization. A significant project is required.
Introduction to Artificial Intelligence Introduction to concepts and ideas in artificial intelligence, including topics such as search techniques, knowledge representation, problem-solving, logic, probabilistic reasoning, learning, perception and natural language processing.
Introduction to Natural Language Processing Introduction to natural language processing, modern theories of syntax, context free parsing, transformational syntax and parsing, computational semantics, and survey of natural language processing systems.
Calculus I Limits and continuity, derivatives and integrals; differentiation and integration of polynomial, rational, trigonometric, and algebraic functions; applications, including slope, velocity, extrema, area, volume and work.
Calculus II Differentiation and integration of exponential, logarithmic and transcendental functions; integration techniques; indeterminate forms; improper integrals; area and arc length in polar coordinates; infinite series; power series; Taylors theorem.
Probability Models Probability theory, discrete and continuous random variables, Markov chains, limit theorems, stochastic processes, models for phenomena with statistical regularity.
Probability theory, discrete and continuous random variables, Markov chains, limit theorems, stochastic processes, models for phenomena with statistical regularity. Vector spaces over the real number field; applications to systems of linear equations and analytic geometry in En, linear transformations, matrices, determinants and eigenvalues.
Digital Logic Design History and overview; switching theory; combinational logic circuits; modular design of combinational circuits; memory elements; sequential logic circuits; digital system design; fault models and testing.
Technical Writing Expository writing, especially for science, pre-engineering and business students.
Mechanics Laws of motion; inertia, acceleration, force, energy, momentum and angular momentum. Rotational and oscillatory motion. Gravitation.
Electricity and Magnetism Electric fields, dc and ac circuits, magnetic fields and magnetic induction. Electric and magnetic properties of matter.
Biology for Science Majors I An integrated approach to cell and molecular biology with an emphasis on biological chemistry, cell structure and function, Mendelian and molecular genetics, evolutionary biology.
General Chemistry for Science Majors Fundamental concepts, states of matter, periodic table, structure and bonding, stoichiometry, oxidation and reduction, solutions, and compounds of representative elements.
Critical Thinking in the Digital Information Age  Help students develop critical thinking skills using technical software. Main topics include: identifying engineering issues for investigation, developing planning and problem solving strategies, locating pertinent information and examples, critically analyzing these sources, forming and testing hypotheses, synthesizing and organizing results for effective communication, and developing transferable problem solving skills.
Introduction to Computer Engineering and Computer Science  Introduction to the fields of computer engineering and computer science. Current and future trends and challenges in various fields of computing. Social, ethical and economical issues related to computing technology. Exploration of career and professional development opportunities.
Introduction to Programming and Problem Solving  Introduction to basic concepts of computer science and fundamental techniques for solving problems using the Python programming language. Variables, data types, conditional statements, loops and arrays. Programming style. Applications to numerical and non-numerical problems.
Digital Logic and Assembly Programming  An introductory course in Digital Logic and Assembly Programming covering number representation, digital codes, Boolean Algebra, combinatorial logic design, sequential logic design, programmable logic devices, internal organization of microprocessor and microcontroller systems and programming in assembly language.
Discrete Structures with Computing Applications An introduction to discrete mathematics with applications towards computing. Topics include sets, functions, logic, relations, graphs, trees, recursion, combinatorics, and mathematical reasoning.
Discrete Structures with Computing Applications II  Topics include applications of computer arithmetic and matrices in computer systems. Programming assignments in Python will be provided.
Object Oriented Programming and Data Structures  Disciplined methods of design, coding and testing using the Java programming language. Data abstraction, object-oriented design. Introduction to data structures (linked lists, stacks, queues and trees.) Recursion. Sorting and searching.
Object Oriented Application Development  Disciplined methods of design, coding and testing using the Java programming language. Topics include the structure and semantics of Java classes, data abstraction, encapsulation, cohesion, coupling, information hiding, object-oriented design, inheritance, interfaces, composition, delegation, polymorphism and design patterns.
C++ for Java Programmers  Structured and Object Oriented Programming in C++. Common features and differences between Java and C++. Pointers, references, and memory management, stream I/O, classes, operator overloading, exception handling, STL.
Introduction to the Engineering Profession  Freshman orientation seminar on careers in engineering. Speakers from various fields illustrate opportunities and challenges in the engineering profession.
Academic Success Skills  Development of skills and identification of strengths and weaknesses for success in a COE major.
Calculus I  Derivatives and applications including graphing, related rates, and optimization. Transcendental functions. L’Hospital’s Rule. Antiderivatives. Definite integrals. Area under a curve.
Calculus II  Applications of the integral. Techniques of integration. Infinite series including convergence tests and Taylor series. Parametric equations. Polar coordinates. Introduces differential equations.
Mechanics and Heat  Kinematics, Newton’s Laws, rotational motion, fluid statics, laws of thermodynamics.
Electricity and Magnetism  Mechanical waves, Coulomb’s law, electrostatics, electric circuits, introductory electronics, magnetic fields, induction and Maxwell’s equations.
Introduction to Marine Biology Scientific approach to the study of marine organisms and their relationships to the environment. Emphasis on human interaction with marine ecosystems.
General Biology  Brief survey of major areas of biology including cell biology, genetics, evolution, phylogeny, plant and animal anatomy and physiology, ecology, and behavior
Human Biology  Brief survey of human biology focusing on anatomy, physiology, and development of cells, tissues, organs, and organ systems; including molecular biology, genetics, ecology, evolution, and diversity.
Human Physiology General introduction to the functional integration of human body systems. Designed for majors in biomedical engineering, physical education, and the allied health fields.
Database Fundamentals  Fundamental topics on database management. Topics include entity-relationship models, database design, data definition language, the relational model, data manipulation language, database application programming and normalization.
Operating Systems  The structure and functions of operating systems. Interrupt handling, processes and interprocess communication, memory management, resource scheduling, information sharing and protection. Project implementation in C/C++.
Introduction to Networks and Distributed Computing  Introduction to Distributed Computing and Interprocess Communication. Networking Protocols. Client Server Paradigm. Peer to Peer Networking. Sockets and the Socket API. Distributed Objects. Coordination, Agreements and Distributed Transactions.
Data Structures and Algorithms  A broad view of data structures and the structure-preserving operations on them. Abstract data types, algorithms, complexity. Programming projects to exemplify these concepts.
Computer Architecture and Organization  Review of logic design. Instruction set architecture. Arithmetic logic units. Data path and control. Pipelining and performance. Memory system organization and design. Virtual memory and paging. I/O interfacing. Vector and array processing. Distributed computing and supercomputing. Contemporary computer designs.
Introduction to Software Engineering  Principles of software engineering, UML, modeling large software systems, requirements elicitation, object oriented analysis and design using UML, introduction to design patterns, implementation of large systems, software testing, project management, the software lifecycle.
Introduction to Computer Security Principles  An introduction to the fundamentals of cryptography and information and computer security. Basic concepts, theories and protocols in computer security. Basic cryptography, software security, operating system security, database security, network security, human factors, social engineering, digital forensics, privacy and anonymity.
Probability and Statistics with Applications to Computing  Applications of probability and statistics to computing. Topics include random variables and their statistics, probability distributions, Markov chains, Bayesian networks, sampling techniques, hypothesis testing, regression and analytic methods. Programming assignments using Python.
Computers, Ethics and Society  Examination of the social impact of information technologies. Topics include a survey of the technology (software, hardware and key applications), ethical obligations of specialists, the computer in the workplace, shifts of power, privacy, and legal issues related to computing.
Organization of Programming Languages  Understanding the variety of programming languages and the design trade-offs between current programming language paradigms. Comparison of programming languages in their design, implementation, and run-time supports. Includes programming projects.
Computer Science Senior Project I First course in a two-course capstone design sequence that fulfills integrative learning. Design of a commercial grade software application including requirements analysis, functional, architectural and detailed design, emphasizing written communication, teamwork and the Object-Oriented Methodology.
Computer Science Senior Project II  Implementation, testing, packaging and deployment of the system
Scientific Research Communication Introduction to technical writing for students pursuing research careers. Accessing and using research literature. Writing technical and research reports for various purposes and audiences. Oral presentation of research and scientific information. Includes intensive writing.
Theory of Computation Finite Automata and regular expressions. Pushdown automata and context-free languages. Turing machines and computability. Computational complexity.
Search Engine Technology Models, algorithms, and evaluation of the retrieval of information from a collection of documents. Document preprocessing. Indexing and searching. Retrieval evaluation. Search engines.
Analysis of Algorithms  Applications of standard combinatorial techniques to applied programming problems. Rigorous analysis of correctness/complexity of algorithms. Advanced graph algorithms are emphasized. Topics include shortest paths on graphs, sorting, string matching, union find problem, divide-and-conquer technique, and weighted-edge problem.
Composition and Rhetoric The first of two courses in college-level writing skills. Focuses on writing essays using various rhetorical modes: persuasion, description, comparison and analysis. Presents basic methods of library research, as well as the MLA documentation system. Students write one research paper and several essays.
Fundamentals of Software Development 1 Introduces software development as it applies to small programs. Students learn to program in a higher-level language and to read, understand, write and evolve typical small higher-level programs.
Computing Disciplines and Careers 1 Overviews computing-related disciplines and professional careers. Includes an overview of software engineering and computer science. Introduces the ethical, moral and legal implications of crafting software.
Applied Discrete Mathematics Topics include positional and modular number systems, relations and their graphs, discrete functions, set theory, propositional and predicate logic, sequences, summations, mathematical induction and proofs by contradiction.
University Experience Assists new incoming students during their initial academic and social transitions to the university. Aims to promote student success by providing information about campus and academic resources, and encouraging participation in the classroom and in the campus community.
Calculus 1 Functions and graphs, limits and continuity, derivatives of algebraic and trigonometric functions, chain rule; applications to maxima and minima, and to related rates. Exponential logarithmic, circular and hyperbolic functions: their inverses, derivatives and integrals.
Writing About Literature The second of two courses in college-level writing skills. Focuses on reading and analyzing poems, plays and short works of fiction. Students write several essays and one research paper on literary topics.
Fundamentals of Software Development 2 Introduces the basic data structures and algorithms used in software design and implementation. Includes sorting and searching techniques.
Computer Organization and Machine Programming Introduces digital logic, computer arithmetic, instruction sets and the basic components of computer architecture. Covers arithmetic/logic, control, memory and input/output units. Explores the relationship between computer architecture and machine language programming. Requires students to write programs in Intel assembly language.
Calculus 2 Integration and applications of integration, further techniques of integration, improper integrals, limits, lHospitals rule, sequences and series, numerical methods, polar coordinates and introductory differential equations.
Scientific and Technical Communication Practice in the technical and scientific writing style and format, including gathering and using data to prepare reports. Includes abstracts, reports, letters, technical descriptions, proposals and at least two oral presentations.
Algorithms and Data Structures To include algorithms and data structures fundamental to software systems development. Includes abstraction, recursion, algorithm design and complexity analysis, linked lists, stacks, queues, trees, and sorting and searching methods.
Introduction to Asian Civilization Introduces the cultures and civilizations of Asia. Focuses on East Asia (China, Korea, Japan). Addresses evolution and development (geography, governance, economy, philosophy, social structure, art and culture, kinship, etc.) from antiquity to the 17th century. Engages student in cross-cultural study.
Introduction to Asian Civilization 2 Covers Asian civilization changes after encounters between the East and West, from the 17th century to the last decades of the 18th century. Focuses on the transformation of traditional society in politics, culture, society, thought and the state of individual relations.
Programming in a Second Language Introduces a second programming language for computer science majors. Students learn to read and write programs in a second language. The language chosen is one with wide popularity and use. The current language is C++.
Applied Statistics Includes probability and sample space concepts, discrete and continuous random variables, moments of random variables, covariance, correlation, generating functions, conditional probability, independence, introduction to statistics, confidence intervals, hypothesis tests, chi-square tests, linear regression and non-linear regression.
Introduction to Software Engineering Presents a basis for the integration of engineering rigor and software development. Students are shown a practical yet rigorous method of going from a problem concept to a software solution. Includes requirements specification, functional specification and coding techniques using information hiding and stepwise refinement.
Introduction to Linear Algebra Includes vectors and matrices, linear equations, vector spaces and subspaces, orthogonality, determinants, eigenvalues and eigenvectors, and linear transformations. Introduces students to solution and manipulation of matrix equations using a standard package of mathematical software.
Operating Systems Concepts Examines the design and implementation of operating systems. Includes process, storage and recovery management. Explores issues involved in moving from single-user systems to multitasking, multiprocessing and multiprocessor systems.
Database Systems Introduces the fundamentals of computer database systems. Includes a review of file structures, concepts of database design, functional units of a typical database system and application of database concepts to real-world problems.
Programming Language Concepts Surveys programming language concepts and design principles of programming paradigms (procedural, functional and logic). Includes a history of programming languages, data types supported, control structures and run-time management of dynamic structures.
Junior Project Introduces the concepts and methodology of software project development. Forms teams and develops team proposals for capstone design projects that will be implemented during the senior year. Allows juniors to interact with seniors completing capstone design projects.
Computer Architecture and Assembly Programming Introduces advanced computer architecture concepts. Includes microcode, execution pipelines, cache management, vector processors, parallel architectures and RISC processors. Explores the interfacing of assembly language programs with the operating system and high-level languages. Requires students to interface assembly with C and the Win32 API.
Computer Networks Provides an overview of computer networks, applications and protocols. Includes network architectures, routing, addressing, medium access control, connection-oriented and connectionless services, network performance analysis, network programming and common transport-layer, network-layer and link-layer protocols.
Formal Languages and Automata Theory Presents abstract models of computers (finite automata, pushdown automata and Turing machines) and the language classes they recognize or generate (regular, context-free and recursively enumerable). Also presents applications of these models to compiler design, algorithms and complexity theory.
Introduction to Analysis of Algorithms Covers time and space complexity of algorithms. Analyzes algorithms for sorting, searching, string processing and graph problems. Presents strategies such as divide-and-conquer, and greedy and dynamic programming as problem-solution techniques.
Computer Science Projects 1 A two-semester, senior-year project sequence that serves as the capstone for the project-intensive courses in computer science. Students team to implement a software project from conception to completion.
Introduction to Artificial Intelligence Surveys artificial intelligence, focusing on state-space and problem-reduction approaches to problem solving. Attention is given to the use of heuristics and their use in game-playing programs. Also discusses knowledge representation, automated reasoning and expert systems.
Computer Science Projects 2 A two-semester, senior-year project sequence that serves as the capstone for the project-intensive courses in computer science. Students team to implement a software project from conception to completion.
Computer Network Programming Covers design and implementation of programs that communication with other programs across a computer network. Includes common protocols, network management and debugging tools, server- and client-side networking, presentation layer (ASN1, XML), secure socket layer, multithreading, exceptions and remote procedure call.
Compiler Theory Introduces formal languages, the construction of scanners and recursive descent, LL (1) and LR (1) parsers, intermediate forms, symbol tables, code generation and optimization of resultant code.
Introduction to Academic Writing Teaches rhetorical knowledge and skills, focusing on critical reading, writing, and thinking. Introduces writing for specific academic audiences and situations. Emphasizes writing as a process through multiple drafts and revisions. May be delivered hybrid and/or online
Intermediate Writing/Academic Writing and Research Emphasizes academic inquiry and research. Explores issues from multiple perspectives. Teaches careful reasoning, argumentation, and rhetorical awareness of purpose, audience, and genre. Focuses on critically evaluating, effectively integrating, and properly documenting sources
Calculus I Covers limits, continuity, differentiation, applications of differentiation, integration, and applications of integration, including derivatives and integrals of polynomial functions, rational functions, exponential functions, logarithmic functions, trigonometric functions, inverse trigonometric functions, and hyperbolic functions.
US History to 1877 Surveys the origins of the United States from the Pre-Columbian era and early colonization through Reconstruction. Focuses on encounters among indigenous, African and European peoples; gender, race, and Atlantic slavery; the causes and consequences of the American Revolution; the westward expansion of the United States; and the sectional crisis that lead to the American Civil War.
Ethics and Values Challenges students to explore and clarify their values; critically read works of philosophy, literature, religion, and history toward understanding the basis of their ethical views; and read, study, research, discuss, and write about difficult ethical issues. Focuses on issues of good vs. evil, justice vs. injustice, equality vs. inequality, and the necessity of defining and examining happiness and values.
Public Speaking Provides an introduction to basic concepts, theories, principles of oral communication as applied to a variety of speaking situations. Develops competence in oral communication through performance, the development of critical thinking skills, arrangement of ideas, and use of evidence and reasoning to support claims. Explains how culture influences what is considered effective public speaking.
Physics A calculus-based treatment of introductory physics for scientists and engineers. Topics include mechanics, fluid physics, thermodynamics, vibrations, and waves.
Fundamentals of Programming For Majors in Computer Science, Computer Engineering, Software Engineering, and other majors requiring computer programming skills. Introduces the fundamental concepts of computer programming. Presents the ideas, tools, structure, syntax, and design techniques for developing well-formed programs. Studies problem solving, program structure, data types, decision logic, loops, functions, input and output, and arrays. Introduces the basic ideas of classes and objects. Requires students to program a number of assignments that demonstrate their understanding of these concepts
Object Oriented Programming Introduces the key concepts of object-oriented programming. Includes pointers and dynamic memory allocation, linked lists, inheritance and polymorphism, the development of graphical user interfaces, operator overloading, memory managment, exceptions, templates and the standard template library, and an overview of object-oriented analysis and design.
Discrete Mathematical Structures I For Computer Science Majors. Covers algebraic structures applied to computer programming. Includes logic, sets, elementary number theory, mathematical induction, recursion, algorithm complexity, combinatorics, and relations. First of a two-semester sequence
Introduction to Algorithms and Data Structures Introduces data structures using an object-oriented programming language, and paradigm. Studies data abstraction as a design tool. Includes advanced arrays, records, dynamic data structures, searching and sorting, vectors, trees, linked lists, and graphs
Web Programming I Covers design and development of browser-based programs with an emphasis on single-page applications. Teaches generation and modification of HTML via JavaScript, debugging techniques, communicating with web servers, and use of XML and JSON
Computer Networks I A rigorous introduction to computer networking theory and technologies for Computer Science and Information Technology majors. Includes theory of data communications protocols; theory and design of transmission systems; transmission media; and communication software.
Computer Networks II Focuses on the upper layers of the OSI and Internet models. Covers Internet (TCP/IP) protocols, routing theory, transport protocols, network application interfaces, presentation formatting, information theory and compression, cryptography, and other emerging technologies as time permits. Requires lab exercises and programming assignments to be completed outside of lecture.
Computer Organization and Architecture Uses assembly language to introduce basic concepts of computer organization. Includes number systems, CPU organization, instruction sets, programming in assembly, memory organization, debugging, program design, and documentation. Covers interrupts, vector tables, and disk I/O.
Global Social and Ethical Issues in Computing Examines how computers have affected global society and how they could further affect it in the future. Challenges students to (1) examine several types of ethical reasoning to establish an ethical framework to assist in making normative judgments, (2) examine various ethical issues surrounding computer usage, particularly in differing societal contexts, (3) understand the responsibilities they bear, to know how their actions can affect both society and individual people in their own and other cultural setings, and to appreciate both the good and the harm they can do and (4) consider many of the moral and professional issues that those who work with computers might expect to face.
Operating Systems Theory Introduces the Unix operating system. Presents the underlying theory and concepts of an operating system, and covers the following topics in depth: device management, processes, threads, synchronization, scheduling, deadlocks, memory management, virtual memory, and file systems. Provides practical experience in writing programs that use standard Unix system calls to interface directly with the operating system.
Discrete Mathematical Structures II Presents concepts from discrete mathematics including formal languages, and automata, including Turing machines, regular expressions, grammars, and computability.
Numerical Software Development Teaches the tools necessary for modern scientific computation. Covers computer representation of floating-point numbers, error analysis and numerical stability, IEEE floating-point standards, testing of numerical algorithms, calculation of elementary functions, roots of equations, solutions of linear systems, numerical integration and differentiation, interpolation and approximation, Monte Carlo methods.
Database Theory Introduces theory, concepts, architecture, and use of database management systems (DBMS). Presents the relational and object-oriented database models used in both local and client/server databases. Discusses the Structured Query Language (SQL), database design, normalization theory, and relational calculus relating to database management systems.
Software Engineering Presents concepts, methodology and best-practices necessary to develop large scale software projects. Includes step-wise software requirements analysis, design, implementation, testing and release. Discusses software generation, reuse, scheduling, verification, and maintenance. Emphasizes current "real world" industry best-practices and tools
Python Software Development Covers the features of the Python programming language. Includes scripting, dynamic typing, data types (sequences, sets, mappings, files, etc.), loops, iterators, generators, functions, coroutines, classes and objects, modules, packages and scope, runtime services, data wrangling, concurrent programming
Analysis of Algorithms Introduces development and mathematical analysis of fundamental computer algorithms. Teaches divide and conquer and greedy algorithms, dynamic programming, backtracking, branch and bound and NP-completeness
C plus plus Software Development Teaches C++ programming in a production environment, emphasizing mastery of the standard C++ library. Covers the following topics in-depth: const correctness, operator overloading, exception handling, exception-safe design, programming with assertions, automated unit testing, advanced memory management, generic programming with templates, containers, iterators, algorithms, concurrency, and functional programming
Principles and Patterns of Software Design Gives students familiarity with modern principles and practices of software design. Emphasizes design patterns, including their motivation and the design principles on which they are based.
Advanced High Performance Computer Architecture Presents theory and concepts of high-performance computer architectures. Includes digital logic, buses, registers, ALU's, control units, pipelining, parallelism, DASD's, SASD's, RAID, caching, instruction-sets, memory hierarchy, multiprocessing, interconnection via networks.
Introduction to Computer Science Overview of computing that explores relationships between computer organization, various programming approaches, limits to computing, and computing in society. Students solve computational problems using Python.
Calculus I An introduction to the calculus of algebraic, trigonometric and transcendental functions. Interpretation, significance and calculations of a derivative. Applications to geometry, biology, physics, economics, and other subjects. Introduction to the integral, including the Fundamental Theorem of Calculus and substitution.
Foundation Seminar Foundation Seminar
Programming Language Design Study of modern programming language paradigms (procedural, functional, logic, object-oriented). Introduction to the design and implementation of programming languages including syntax, semantics, data types and structures, control structures, run-time environments
Calculus II Methods of integration including integration by parts, numerical approximations, and improper integrals. Sequences, series, including Taylor series. Complex numbers, polar coordinates, parametric functions, differential equations, and applications.
Lab Science Lab Science
Software Engineering and Design. Fundamentals of software design and software engineering. Students will participate in large-scale, team-based software development project.
Statistics and Engineering Probability theory, discrete and continuous random variables, sampling distributions and methods of statistical inference including regression and ANOVA. Software is used.
Computer Organization. Concepts of software and hardware. Software: instruction set design, assembly language and assemblers. Hardware: processor organization, memory hierarchy, interfacing processors and I/O devices
Discrete Structures Logic, sets; mathematical induction; relations, functions; combinatorics and graph theory
Operating Systems Design Introduction to operating system design including processor management, scheduling, memory management, resource allocation, file systems, and concurrency.
Computers and Society The place of computers in society. In-depth study of societal, ethical, and legal issues related to computing. Historical and futurists' views of computing and technology. Public perceptions of computing and the role of computer scientists as professionals. Course work includes oral and written presentations. Prerequisite: junior or senior standing.
Design & Analysis of Algorithms Introduction to the algorithms and data structures used in implementing abstract data types including priority queues, dictionaries, and graphs. Includes complexity analysis of various implementations.
Programming Language Design. Study of modern programming language paradigms (procedural, functional, logic, object-oriented). Introduction to the design and implementation of programming languages including syntax, semantics, data types and structures, control structures, run-time environments
Computer Science Design Project Students in teams use software engineering methodology to design and implement a semester-long project. Written reports and oral presentations are required
Applied Electronics Circuit fundamentals, linear and digital integrated circuits, transducers, analog to digital conversion, filtering, Fourier methods, microcomputers, and computer interfacing. Designed for science and computer science majors.
Classical and Modern Physics I The first course in a two-course sequence that surveys major areas of physics. Topics include Newtonian mechanics, relativity, thermodynamics and statistical mechanics, and gravity
Discrete Structures Logic, sets; mathematical induction; relations, functions; combinatorics and graph theory.
Operating Systems Design Introduction to operating system design including processor management, scheduling, memory management, resource allocation, file systems, and concurrency
Computer Science Design Project  Computer Science Design Project
English Composition I Intensive study of and practice in effective expository and argumentative writing.
World History or Technology World History or Technology
Calculus I Mathematics Core. Limits, the derivative of algebraic, trigonometric, exponential, logarithmic functions. Applications of the derivative, antiderivatives, the definite integral and applications to area problems, the fundamental theorem of calculus
INTRODUCTION TO COMPUTER SCIENCE I Introduces the fundamental concepts of object-oriented programming.
Introduction to Engineering Introduction to engineering design, engineering teams, graphical presentation, technical writing, oral presentation.
INTRODUCTION TO COMPUTER SCIENCE II Admission into Bachelor of Computer Science Program. Continues the development of programming from an object-oriented perspective.
Fundamentals of Computing I Introduction to the fundamental concepts of programming from an object-oriented perspective. Emphasis on good software engineering principles and development of the fundamental programming skills in the context of a language that supports the object-oriented paradigm.
Public Speaking communication theory and practice in a public speaking setting, with emphasis on content, organization, delivery, and adaptation to the audience.
Fundamentals of Computing II Software development in the context of collections (e.g., lists, trees, graphs, hashtables). Communication, teamwork, and a design experience are integral course experience.
Core Literature Core Literature
Science  Science
Digital Logic Circuits Electronic devices and digital circuits; binary numbers; Boolean algebra and switching functions; gates and flip-flops; combinational and sequential logic circuits; hierarchical design of digital systems; computer-aided design tools for digital design, simulation, and testing.
Topics in Linear Algebra Matrices, row-reduction, systems of linear equations, (finite-dimensional) vector spaces, subspaces, bases, dimension, change of basis, linear transformations, kernels, orthogonality, Gram-Schmidt.
Software Construction Intensive experience in software construction, to include topics such as testing, debugging, and associated tools; configuration management; low-level file and device I/O; systems and event-driven programming.
Discrete Structures Characterization of computer science data structures and algorithms in terms of sets and relations, functions, recurrence relations. Use of propositional and predicate calculus to describe algorithms. Proving correctness and running time bounds for algorithms by induction and structural induction.
Probability and Statistics I Calculus-based introduction to probability and statistics with an emphasis on practical problem-solving.
Principles of Programming Languages Study of programming language principles supporting procedural abstraction, data abstraction, storage allocation, and parallel execution; language types and examples; language translations.
Introduction to Algorithms Algorithms for standard computational problems and techniques for analyzing their efficiency; designing efficient algorithms and experimentally evaluating their performance.
Computer Organization and Assembly Language Programming Stored Program Computers, hardware and software components; data representation, instruction sets, addressing modes; assembly language programming; linkers, loader, and operating systems.
Introduction to Ethics Major ethical theories from the history of philosophy, their foundations in epistemology and metaphysics, and their extension into social thought
Introduction to Operating Systems Structure and functions of operating systems; processes and process scheduling; synchronization and mutual exclusion; memory management; auxiliary storage management; resource allocation and deadlock; security, privacy, and ethical concerns; design tradeoffs.
Software Modeling and Design Current processes, methods, and tools related to modeling and designing software systems. Communication, teamwork, and a design experience are integral course experiences.
Formal Languages Fundamentals of formal languages including mathematical models of regular sets, context-free languages and Turing machines; deterministic and non-deterministic models.
Introduction to Computer Networks Fundamentals of computer networks, OSI model, LAN, WAN, packet transmission, interworking, Internet Protocol, WWW and Java technology.
Computer Ethics Application of ethical principles to computing-related topics, including privacy, property rights, autonomy, access, and diversity. Communication and teamwork are integral course experiences.
PARALLEL SYSTEMS Overview of hardware and software issues in parallel systems: fundamental parallel architectures, programming languages, tools and algorithms, and parallel applications.
WIRELESS AND MOBILE NETWORKS Mobile IP, wireless routing, location management, ad-hoc wireless networks, wireless, wireless TCP personal communication systems, and current mobile phone OTA protocols.
FORMAL LANGUAGES Fundamentals of formal languages including mathematical models of regular sets, context-free languages and Turing machines; deterministic and non-deterministic models. Basics of interpretation and complilation.
COMPUTER ETHICS Application of ethical principles to computing-related topics, including privacy, property rights, autonomy, access, and diversity.
DATABASE I Admission into Bachelor of Computer Science Program. The design and implementation of database applications, with a focus on relational database management systems.
MOBILE APPLICATIONS I Software development for wireless applications: specification, process, testing, and performance evaluation. Design and development of wireless application layer software, including current protocols.
ALGORITHMS II Advanced complexity analysis techniques, notions of computational complexity, polynomial time hierarchy, computability, algorithms that solve advanced computational problems, advanced algorithm design techniques, computational problem solving.
ALGORITHMS I Introduction to algorithms as tools for computational l problem solving, language of algorithms, understanding algorithms, approximately analyzing correctness and efficiency of algorithms, algorithms that solve fundamental computational problems, basic algorithm design techinques, steps of computational problem solving.
Introduction to Engineering and Computer Science Discussion of disciplines within the college, technical communication, presentation of technical results, professional behavior, ethics, problem solving, modeling, and data analysis.
Introduction to Computing Principles of programming. Applications of computing concepts to problem solving in engineering and computer science.
Calculus I Analytic geometry, limits, derivatives, maxima-minima, related rates, graphs, differentials, exponential and logarithmic functions, mean-value theorem, L’Hospital’s rule, integration.
Studio 1: Practices of Academic Writing Study and practice of writing processes, including critical reading, collaboration, revision, editing, and the use of technologies. Focuses on the aims, strategies, and conventions of academic prose, especially analysis and argumentation.
Introduction to Computer Science Programming emphasizing recursion, data structures, and data abstraction. Elementary analysis of and reasoning about programs. Public policy issues. Extensive programming.
Calculus II The definite integral and applications; trigonometric functions, methods of integration, improper integrals, infinite series, elementary differential equations, parametric equations, polar coordinates.
Logic Logic as a formal language, as a component of natural language, and as a basis of a programming language. Varieties of logical systems and techniques. Syntax, semantics and pragmatics.
General Physics I Uses calculus.
General Physics Laboratory I Techniques of laboratory work: treatment of random errors, graphical representation of data. Experimental demonstration of principles of mechanics, thermodynamics, and waves (of vector forces, conservation of momentum and energy, thermal properties of gases).
Introduction to Discrete Mathematics Basic set theory and symbolic logic. Methods of proof, including mathematical induction. Relations, partitions, partial orders, functions, and graphs.
Data Structures Abstract data structures, algorithm analysis, arrays, lists, trees, binary search trees, priority queues, hashing, graphs.
Calculus III Analytic geometry and vectors; functions of more than one variable, multiple integrals, partial differentiation, physical applications.
Introduction to Probability and Statistics Programming-oriented introduction to fundamentals in statistics and probability; elementary statistics, graphical and numerical representation; probability distributions; tests and confidence intervals; regression, and correlation.
Computer Organization & Programming Systems Essentials of computer organization: digital logic, microprogramming, processors, memories, input-output devices. Instruction sets, assembly language, data types, relation to high level languages. Program construction, traps and interrupts, input-output programming.
Programming Language: Theory & Practice Environments, stores, scoping, functional and imperative languages, modules, classes, data encapsulation, types, and polymorphism. Implementation of these constructs in a definitional interpreter.
Systems and Network Programming Programming and shell scripting in Unix for systems and network software. Makefiles, compilers, linkers, and debuggers, and software with multiple source files. Dynamic memory allocation techniques, system calls,  pointers, concurrent/parallel programming, and network and programming.
Studio 2: Critical Research and Writing Study and practice of critical, research-based writing, including research methods, presentation genres, source evaluation, audience analysis, and library/online research.
Software Specification and Design Software engineering process models. Software requirements analysis, including object-oriented methodology. Behavioral and nonbehavioral requirements. Development of specification documents. Unified Modeling Language. High-level design and software architecture.
Introduction to Analysis of Algorithms Mathematical modeling of computational problems; searching and sorting algorithms; search trees, heaps, and hash tables; divide-and-conquer, dynamic programming, and greedy choice design techniques; graph algorithms; NP-completeness; and selected topics.
Design of Operating Systems Design and implementation of modern operating systems. Resource management and protection of CPU, memory, and storage. File systems. Input/output. Concurrent process implementation. Process synchronization. Networking.
Automata and Computability Countable and uncountable sets; diagonalization proofs; finite state automata; regular, context-free, context-sensitive, recursive, and r. e. languages; Turing machines; relationships between classes of languages and machines; the halting problem; proof methods for decidability and undecidabilty.
Software Implementation Detailed design of software. Implementation and software testing.  Developing software implementations from UML specifications and design documents. Software development methodologies, including agile development.
Ethical Aspects of Engineering and Computer Science Ethical issues related to engineering and computer science studied, including professionalism, collective and individual moral responsibility, codes of ethics, whistle blowing, conflict of interest, pluralism in the workplace, product liability, and employer-employee expectations.
Modal Logic Systems of modal logic (logic of the terms “necessary” and “possible”). Formalization and evaluation of modal arguments and basic concepts of metatheory and semantics.
Mathematical Logic Predicate calculus with identity, its relationship to mathematics and to computer theory. Important results concerning independence, consistency, completeness, decidability and computability.
Minds and Machines Philosophical issues concerning artificial intelligence. Can machines understand, learn, think rationally, and be self-conscious? Critique of the computational theory of mind.
Software Implementation Detailed design of software. Implementation and software testing.  Developing software implementations from UML specifications and design documents. Software development methodologies, including agile development.  Ethics and social responsibility.
Mobile Application Programming Development of applications for different mobile devices. Creating effective user interfaces, efficient use of persisitent storage, network services, GPS, maps and sensors. Additional work required of graduate students.
Introduction to Cryptography Classical cryptosystems and their cryptanalysis, RSA and other public-key cryptosystems, pseudo-random sequences, zero-knowledge protocols, related ethical and social concerns.
Introduction to Programming A first course in programming, software development, and computer science. Introduces computing fundamentals and an appreciation for computational thinking
Software Development Methods A second course in computing with an emphasis on modern software development and principles central to computer science. Topics include software requirements, testing, object-oriented design, abstraction, encapsulation, recursion, and time-complexity.
Discrete Mathematics Introduces discrete mathematics and proof techniques involving first order predicate logic and induction. Application areas include finite and infinite sets, elementary combinatorial problems, and graph theory. Development of tools and mechanisms for reasoning about discrete problems
Program and Data Representation Introduces programs and data representation at the machine level. Data structuring techniques and the representation of data structures during program execution. Operations and control structures and their representation during program execution. Representations of numbers, arithmetic operations, arrays, records, recursion, hashing, stacks, queues, trees, graphs, and related concepts
Digital Logic Design Includes number systems and conversion; Boolean algebra and logic gates; minimization of switching functions; combinational network design; flip-flops; sequential network design; arithmetic networks. Introduces computer organization and assembly language
Computer Science Seminar Provides cultural capstone to the undergraduate experience. Students make presentations based on topics not covered in the traditional curriculum. Emphasizes learning the mechanisms by which researchers and practicing computer scientists can access information relevant to their discipline, and on the professional computer scientists responsibility in society
Theory of Computation Introduces computation theory including grammars, finite state machines, pushdown automata, and Turing machines
Computer Architecture Includes the organization and architecture of computer systems hardware; instruction set architectures; addressing modes; register transfer notation; processor design and computer arithmetic; memory systems; hardware implementations of virtual memory, and input/output control and devices
Advanced Software Development Techniques Analyzes modern software engineering practice for multi-person projects; methods for requirements specification, design, implementation, verification, and maintenance of large software systems; advanced software development techniques and large project management approaches; project planning, scheduling, resource management, accounting, configuration control, and documentation
Algorithms Introduces the analysis of algorithms and the effects of data structures on them. Algorithms selected from areas such as sorting, searching, shortest paths, greedy algorithms, backtracking, divide-and-conquer, and dynamic programming. Data structures include heaps and search, splay, and spanning trees. Analysis techniques include asymtotic worst case, expected time, amortized analysis, and reductions between problems
Operating Systems Analyzes process communication and synchronization; resource management; virtual memory management algorithms; file systems; and networking and distributed systems.
Probability A calculus-based introduction to probability theory and its applications in engineering and applied science. Includes counting techniques, conditional probability, independence, discrete and continuous random variables, probability distribution functions, expected value and variance, joint distributions, covariance, correlation, the Central Limit theorem, the Poisson process, an introduction to statistical inference
Ordinary Differential Equations First order differential equations, second order and higher order linear differential equations, reduction of order, undetermined coefficients, variation of parameters, series solutions, Laplace transforms, linear systems of first order differential equations and the associated matrix theory, numerical methods.
Single Variable Calculus II Includes the concepts of differential and integral calculus and applications to problems in geometry and elementary physics, including inverse functions, indeterminate forms, techniques of integration, parametric equations, polar coordinates, infinite series, including Taylor and Maclaurin series. Applications.
Multivariable Calculus Topics include vectors in three-space and vector valued functions. The multivariate calculus, including partial differentiation, multiple integrals, line and surface integrals, and the vector calculus, including Greens theorem, the divergence theorem, and Stokess theorem.
Introductory Chemistry I for Engineers Introduces the principles and applications of chemistry. Topics include stoichiometry, chemical equations and reactions, chemical bonding, states of matter, thermochemistry, chemical kinetics, equilibrium, acids and bases, electrochemistry, nuclear chemistry, and descriptive chemistry of the elements
Introductory Chemistry I for Engineers Laboratory Introduction to experimental chemistry, developing laboratory skills & safety. Students plan & implement chemistry experiments in cooperative 4-person teams using a guided inquiry approach. Process skills include developing procedures, data analysis, oral & written communication. Mathematica as a computational tool. Topics: glassware characterization & accuracy, unknown identification of, & applications of solubility
Introduction to Engineering ENGR 1620 is a cornerstone course for first year engineering students. They are introduced to the philosophy and practice of engineering through hands-on experience in developing solutions for various open-ended, realistic challenges while considering the various contexts in which these challenges occur.
Introduction to Engineering Lab ENGR 1620 is a prerequisite for this course. If you have not taken ENGR 1620, take ENGR 1624 instead of this course. If you have already completed ENGR 1620, take this course. Introductory course in the use of quantitative engineering tools to model, characterize and predict system behavior.
General Physics I: Mechanics, Thermodynamics First semester of introductory physics for engineers and scientists. Classical mechanics, including vector algebra, particle kinematics and dynamics, energy and momentum, conservation laws, rotational dynamics, oscillatory motion, gravitation, thermodynamics, and kinetic theory of gases
General Physics I Workshop General Physics I Workshop
General Physics II: Electricity & Magnetism, Optics Second semester of introductory physics for engineers and scientists. Electrostatics, including conductors and insulators; DC circuits; magnetic forces and fields; magnetic effects of moving charges and currents; electromagnetic induction; Maxwells equations; electromagnetic oscillations and waves. Introduces geometrical and physical optics
General Physics II Workshop General Physics II Workshop
Science, Technology, and Contemporary Issues This course introduces students to contemporary issues involving science, technology, and engineering as well as the core ideas of STS. Emphasis is on three ideas: a) engineering is a social endeavor; b) technology shapes and is shaped by society; and c) technologies are sociotechnical systems.
STS and Engineering Practice This course engages students with the idea that success in posing and solving engineering problems requires attention to the social dimensions of professional endeavors and practice. STS theories and methods are applied to student thesis projects. Students produce a prospectus for the senior thesis projec
HCI in Software Development Human-computer interaction and user-centered design in the context of software engineering. Examines the fundamental principles of human-computer interaction. Includes evaluating a systems usability based on well-defined criteria; user and task analysis, as well as conceptual models and metaphors; the use of prototyping for evaluating design alternatives; and physical design of software user-interfaces, including windows, menus, and commands
Principles of Software Design Focuses on techniques for software design in the development of large and complex software systems. Topics will include software architecture, modeling (including UML), object-oriented design patterns, and processes for carrying out analysis and design
Advanced Computer Architecture Provides an overview of modern microprocessor design. The topics covered in the course will include the design of super-scalar processors and their memory systems, and the fundamentals of multi-core processor design
Introduction to Parallel Computing Introduces the student to the basics of high-performance parallel computing and the national cyber-infrastructure. The course is targeted for both computer science students and students from other disciplines who want to learn how to significantly increase the performance of applications
Computer Networks A first course in communication networks for upper-level undergraduate students. Topics include the design of modern communication networks; point-to-point and broadcast network solutions; advanced issues such as Gigabit networks; ATM networks; and real-time communications
Internet Engineering An advanced course on computer networks on the technologies and protocols of the Internet. Topics include the design principles of the Internet protocols, including TCP/IP, the Domain Name System, routing protocols, and network management protocols.
Programming Languages Presents the fundamental concepts of programming language design and implementation. Emphasizes language paradigms and implementation issues. Develops working programs in languages representing different language paradigms. Many programs oriented toward language implementation issues
Compilers Provides an introduction to the field of compilers, which translate programs written in high-level languages to a form that can be executed. The course covers the theories and mechanisms of compilation tools. Students will learn the core ideas behind compilation and how to use software tools such as lex/flex, yacc/bison to build a compiler for a non-trivial programming language
Defense Against the Dark Arts Viruses, worms, and other malicious software are an ever-increasing threat to computer systems. There is an escalating battle between computer security specialists and the designers of malicious software.
Artificial Intelligence Introduces artificial intelligence. Covers fundamental concepts and techniques and surveys selected application areas. Core material includes state space search, logic, and resolution theorem proving. Application areas may include expert systems, natural language understanding, planning, machine learning, or machine perception. Provides exposure to AI implementation methods, emphasizing programming in Common LISP.
Mobile Application Development Mobile computing devices have become ubiquitous in our communities. In this course, we focus on the creation of mobile solutions for various modern platforms, including major mobile operating systems. Topics include mobile device architecture, programming languages, software engineering, user interface design, and app distribution
Computer Game Design This course will introduce students to the concepts and tools used in the development of modern 2-D and 3-D real-time interactive computer video games. Topics covered in this include graphics, parallel processing, human-computer interaction, networking, artificial intelligence, and software engineering
Database Systems Introduces the fundamental concepts for design and development of database systems. Emphasizes relational data model and conceptual schema design using ER model, practical issues in commercial database systems, database design using functional dependencies, and other data models. Develops a working relational database for a realistic application.
Electronic Commerce Technologies History of Internet and electronic commerce on the web; case studies of success and failure; cryptographic techniques for privacy, security, and authentication; digital money; transaction processing; wired and wireless access technologies; Java; streaming multimedia; XML; Bluetooth. Defining, protecting, growing, and raising capital for an e-business
Introduction to Computer Graphics Introduces the fundamentals of three-dimensional computer graphics: rendering, modeling, and animation. Students learn how to represent three-dimensional objects (modeling) and the movement of those objects over time (animation). Students learn and implement the standard rendering pipeline, defined as the stages of turning a three-dimensional model into a shaded, lit, texture-mapped two-dimensional image
Network Security This course covers the principles of secure network communications and the application of network security. Topics include: attack types, attack surfaces, attack phases, network security devices.(a)symmetric key encryption, cryptographic hash function, authentication/identification techniques, key distribution, and data integrity assurance. Also, currently used security mechanisms and protocols will be discussed.
﻿APPLIED COMBINATORICS  Basic counting methods, generating functions, recurrence relations, principle of inclusion-exclusion. Polya's formula. Elements of graph theory, trees and searching network algorithms.
HUMAN COMPUTER INTERACTION  Human computer interaction is concerned with the joint performance of tasks by humans and machines; human capabilities to use machines (including learnability of interfaces); algorithms and programming of the interface; engineering concerns that arise in designing and building interfaces; the process of specification, design, and implementation of interfaces; and design trade-offs.
INFORMATION TECHNOLOGY ETHICS  The course will cover the development and need for issues regarding privacy and the application of computer ethics to information technology.
INTRODUCTION TO WEB DEVELOPMENT  This course will provide students with a practical introduction to web development. By learning the basic skills needed to develop an interactive website, students will develop an understanding of the web development task and an appreciation of the importance of the Internet in both business and academic environments. Specific technical topics to be covered include XHTML, CSS, the Unix/Linux operating system, web server software, and a programming language. As part of the class, each student will develop a working website.
INTRODUCTION TO COMPUTER SCIENCE II  Advanced topics in programming; topics in data representation and manipulation, data structures, problem solving and algorithm design.
COMPUTER GRAPHICS An introduction to the acquisition, manipulation and display of graphical information using digital techniques. Topics include discussion of the various hardware devices used for input and output, the classical algorithms and data structures used in manipulation of graphical objects, the user interface to the graphics system, and applicable standards.
SECURITY ADMINISTRATION - WINDOWS This course covers topics a system administrator would encounter in their profession.  The student will learn how a system administrator fulfills various organizational information resource management requirements using the Windows Operating System. Topics will include; installation; creating and maintaining file systems; user and group administration; backup and restore processes; network configuration; various system services; simple security administration; and updating and maintaining the system.
CERTIFICATION AND ACCREDITATION OF SECURE SYSTEMS (CAPSTONE) This is the BSIA capstone course where students extend and apply their knowledge in defining, implementing, and assessing secure information systems. Students will demonstrate their ability to specify, apply, and assess different types of countermeasures at different points in the enterprise with a special focus on system boundaries.
INTRODUCTION TO THE THEORY OF RECURSIVE FUNCTIONS  This is a proof-oriented course presenting the foundations of Recursion Theory. We present the definition and properties of the class of primitive recursive functions, study the formal models of computation, and investigate partially computable functions, universal programs. We prove Rice's Theorem, the Recursion Theorem, develop the arithmetic hierarchy, demonstrate Post's theorem. Introduction to the formal theories of computability and complexity is also given.
INTRODUCTION TO GAME PROGRAMMING  The course will cover programming and development techniques used in a game programming environment. The course is designed for students who have an interest in game programming to be eased into the concepts in a familiar environment.
INTRODUCTION TO COMPUTER SCIENCE I  An introduction to programming within the context of a high level modern programming language. Coverage of fundamental programming concepts and program design; including arrays, user defined types, and objects.
CALCULUS I  This is a course in plane analytic geometry emphasizing the study of functions, limits, derivatives and applications, and an introduction to integration.
CRYPTOGRAPHY  The course will provide a broad overview of the concepts, fundamental ideas, vocabulary, and literature base central to the study and development of cryptography and cryptanalysis. This course will explore historical development of cryptography, as well as methods used to defeat it. In addition, the course will cover the mathematical foundations of cryptography today, as well as some current uses of such cryptography, such as public key infrastructures, the Internet Key Exchange protocol, and more.
HOST-BASED VULNERABILITY DISCOVERY  The class will cover security issues at an implementation and hardware level. The students will learn assembly language and the use of a reverse assembler and debugger. This will allow the student to analyze various packing algorithms for computer viruses, the viruses themselves, operating system hooking, fuzzing, and other machine code, host-based exploits. The class will be using both Windows and Linux as operating systems.
COMPUTER SCIENCE PRINCIPLES LABORATORY  It consists of programming exercises designed to help students practice computational thinking and apply computational solutions to practical problems. The exercises make use of mobile devices and other emerging platforms.
INTERNSHIP IN COMPUTER SCIENCE  The purpose of this course is to provide students with opportunities to apply their academic studies in non-academic environments such as those found in business, industry and other non-academic organizations. The student interns will sharpen their academic focus and develop better understanding of non-academic application areas.
MULTIMEDIA SYSTEMS  The purpose of this course is to introduce students to the fundamentals of multimedia design. The course provides students with the fundamental skills and knowledge to define a problem and design a multimedia application to solve it, to understand and recognize the characteristics of good multimedia design, to begin to use and apply popular multimedia development tools, and to work as part of a team to produce a workable multimedia solution.
COMMUNICATION NETWORKS  This course is designed to bring students up to the state of the art in networking technologies with a focus on Internet. It will cover the principles of networking with an emphasis on protocols, implementations and design issues.
INTRODUCTION TO DIGITAL DESIGN AND COMPUTER ORGANIZATION  The course is intended to introduce the students to the topics found in introductory digital design and computer organization classes.
INTRODUCTION TO ALGORITHMS  The course provides students a basic understanding of algorithm analyses. Main topics include: growth of functions, asymptotic notation, recurrences, divide and conquer, sorting and its lower bounds, dynamic programming, greedy algorithms, and graph traversal.
NATURAL LANGUAGE PROCESSING  The course will provide overview of the topics in natural language processing such as word and sentence tokenization, syntactic parsing, semantic role labeling, text classification. We will discuss fundamental algorithms and mathematical models for processing natural language, and how these can be used to solve practical problems. We will touch on such applications of natural language processing technology as information extraction and sentiment analysis.
FOUNDATIONS OF CYBERSECURITY  Contemporary issues in computer security, including sources for computer security threats and appropriate reactions; basic encryption and decryption; secure encryption systems; program security, trusted operating systems; database security, network and distributed systems security, administering security; legal and ethical issues.
CAPSTONE PROJECT  The Capstone Project completes a Computer Science student's undergraduate experience. Students will work on a team-based real-world project, practicing software engineering skills and applying fundamental computer science principles acquired throughout their undergraduate study.
NUMBER THEORY & CRYPTOGRAPHY  An overview of one of the many beautiful areas of mathematics and its modern application to secure communication. The course is ideal for any student who wants a taste of mathematics outside of, or in addition to, the calculus sequence. Topics to be covered include: prime numbers, congruences, perfect numbers, primitive roots, quadratic reciprocity, sums of squares, and Diophantine equations. Applications include error-correcting codes, symmetric and public key cryptography, secret sharing, and zero knowledge proofs.
AUTOMATA, COMPUTABILITY, AND FORMAL LANGUAGES  This course presents a sampling of several important areas of theoretical computer science. Definition of formal models of computation, and important properties of such models, including finite automata and Turing machines. Definition and important properties of formal grammars and their languages. Introduction to the formal theories of computability and complexity.
INTRODUCTION SOFTWARE ENGINEERING  Basic concepts and major issues of software engineering, current tools and techniques providing a basis for analyzing, designing, developing, maintaining and evaluating the system. Technical, administrative and operating issues. Privacy, security and legal issues.
ADVANCED GAME PROGRAMMING  This course is intended for those with an interest in video game programming. This course introduces the advanced concepts of game programming including 3D programming, game networking, and development of a multiplayer, networked game by learning and using the XNA environment.
COMPUTER SCIENCE PRINCIPLES  This course introduces students to the foundational principles of computer science. It aims to help students learn the essential thought processes used by computer scientists to solve problems, expressing those solutions as computer programs. The exercises and projects make use of mobile devices and other emerging platforms.
PATTERN RECOGNITION Structures and problems of pattern recognition. Mathematics model of statistical pattern recognition, multivariate probability, Bay's decision theory, maximum likelihood estimation, whitening transformations. Parametric and non-parametric techniques, linear discriminant function, gradient-descent procedure, clustering and unsupervised learning, and feature selection algorithms.
INTRODUCTION TO PARALLEL COMPUTING  Need for higher-performance computers. Topics discussed include: classification of parallel computers; shared-memory versus message passing matchings; for ms of parallelism, measure of performance; designing parallel algorithms; parallel programming and parallel languages; synchorization constructs; and operating systems for parallel computers.
PROBABILISTIC OPERATIONS RESEARCH MODELS  This is a survey course of probabilistic operations, research models and algorithms. Topics include Markov chains, queueing theory, inventory models, forecasting, and simulation.
FOUNDATIONS OF WEB SEARCH TECHNOLOGIES  This course provides students a basic understanding of how search and information flow works on the web. Main topics include: document representation, inverted indexing, ranking of web search results, vector-space model, web graph, PageRank, search-based advertising, information cascades, and web crawling.
INTRODUCTION TO APPLIED STATISTICS FOR IS&T  The course emphasizes the function of statistics in information science and technology including topics such as descriptive statistical measures, probability discrete probability, sampling, estimation analysis, hypothesis testing, regression, and analysis of variance.  A well-known computer package will be used to support the problem-solving process.
TOPICS IN COMPUTER SCIENCE  A variable topic course in computer science at the senior level. Topics not normally covered in the computer science degree program, but suitable for senior-level students.
ALGORITHMS FOR ROBOTICS  This course provides an introduction to software techniques and algorithms for autonomously  controlling robots using software programs called controllers. Students will be taught how to program and use software controllers on simulated as well as physical robots.
DATABASE MANAGEMENT SYSTEMS  Basic concepts of data base management systems (DBMSs). The relational, hierarchical and network models and DBMSs which use them. Introduction to data base design.
ADVANCED OPERATING SYSTEMS  State-of-the art techniques for operating system structuring and implementation. Special purpose operating systems. Pragmatic aspects of operating system design, implementation and use.
MATHEMATICAL FOUNDATIONS OF COMPUTER SCIENCE  This course introduces discrete mathematics concepts that are foundational for the study of computer science such as functions, relations, and sets, basic logic, methods of proof, mathematical induction, computational complexity, recursion, counting, recurrences, and relations.
USER EXPERIENCE DESIGN  User experience (UX) design is concerned with the application of user-centered design principles to the creation of computer interfaces ranging from traditional desktop and web-based applications, mobile and embedded interfaces, and ubiquitous computing.  This course provides in-depth, hands-on experience with real world application of the iterative user-centered process including contextual inquiry, task analysis, design ideation, rapid prototyping, interface evaluation, and reporting usability findings.
INFORMATION SECURITY, POLICY AND AWARENESS  This course will cover the planning and development for information governance, security policies and procedures, and security awareness.
ORGANIZATIONS, APPLICATIONS AND TECHNOLOGY  This survey course provides an introduction to organizations and the role information and information systems play in supporting operations, decision-making, processes, quality management, and strategic activities of an organization. In addition, the course covers management of the IS function, strategic and regulatory issues of telecommunications, and ethical and legal issues.
THEORY OF COMPUTATION  The course is intended to introduce the students to the theory of computation in a fashion that emphasizes breadth and away from detailed analysis found in a normal undergraduate automata course. The topics covered in the course include methods of proofs, finite automata, non-determinism, regular expressions, context-free grammars, pushdown automata, no-context free languages, Church-Turing Thesis, decidability, reducibility, and space and time complexity.
APPLIED LINEAR ALGEBRA  This course presents Matrix algebra, simultaneous equations, vector spaces, with applications of linear algebra and computational considerations. Mathematical software is utilized, with required assignments.
COMPUTER ARCHITECTURE  The course deals with: processor design different instruction set architectures; memory hierarchy; input output organization and communication; and an introduction to parallel architecture. Analytic study of design alternatives for each of the above topics will be covered.
TOPICS IN MODELING  Selection of such topics as formulation and analysis of various models involving Markov chains, Markov processes (including birth and death processes), queues, cellular automata, difference and differential equations, chaotic systems and fractal geometries.
DATA WAREHOUSING AND DATA MINING This course provides students with a theoretical foundation and practical methods for designing and constructing data warehouse and implementing data mining.  After covering the essential concepts, issues, techniques to build an effective data warehouse, this course emphasizes the various techniques of data mining, such as association, classification, clustering and prediction for on-line analyses within the framework of data warehouse architectures. This course gives students an opportunity to undertake a real-life data analysis project.
DATA STRUCTURES  This is a core that will cover a number of data structures such as tree, hashing, priority queues and graphs as well as different algorithm design methods by examining  common problem-solving techniques.
INTRODUCTION TO C PROGRAMMING  Programming in 'C' in a UNIX operating system environment; algorithm and program development and file manipulation using 'C'; UNIX-like utility development.
OPERATING SYSTEMS  Operating system principles. The operating system as a resource manager; I/O programming, interrupt programming and machine architecture as it relates to resource management; memory management techniques for uni-multiprogrammed systems; process description and implementation; processor management (scheduling); I/O device, controller, and channel management; file systems. Operating system implementation for large and small machines.
INDEPENDENT STUDIES  A variable credit course for the junior or senior who will benefit from independent reading assignments and research type problems. Independent study makes available courses of study not available in scheduled course offerings.
TOPICS IN COMPUTER SCIENCE  TOPICS IN COMPUTER SCIENCE
ASSESSMENT  ASSESSMENT
NETWORK-BASED VULNERABILITY DISCOVERY  The course is an advanced class in which the students learn various techniques for testing for and identifying security flaws in network software and web applications. Internet technologies such as HTTP, DNS, DHCP, and others are examined in the context of cyber security.
C++ & OBJECT-ORIENTED PROGRAMMING  C++ and Object Oriented Programming (OOP) is taught in the UNIX environment. Topics include C++ as a 'Better C,' OOP with C++, classes and data abstraction, operator overloading, inheritance, virtual functions and polymorphism, C++ stream I/O.
VIDEO GAME DESIGN  The course will cover game design and theory techniques used by the gaming industry.  This course is designed for students who have gone through the introductory programming course and have an interest in what it takes to design current games.
SECURITY ADMINISTRATION - LINUX  This course covers topics a system administrator would encounter in their profession.  The student will learn how a system administrator fulfills various organizational information resource management requirements using the a Linux-based Operating System.  Topics will include; installation; creating and maintaining file systems; user and group administration; backup and restore processes; network configuration; various system services; simple security administration; and updating and maintaining the system.
PROGRAMMING ON THE INTERNET  This course is an introduction to and overview of Internet-based application development focusing on the use of Java, Perl and other server-based programming languages. Software development in the context of the World Wide Web and other Internet services will be emphasized. Internet application development will also be discussed. Other techniques will be covered.
PRINCIPLES OF PROGRAMMING LANGUAGES  This course covers the foundational concepts and principles underlying the design and implementation of programming languages. Language constructs including assignment, equality, references, aggregations, scope, encapsulation, and parameter passing are discussed. A central theme is how a particular language construct relates to the concept of equational reasoning (referential transparency).  Formal notations for describing syntax and semantics are presented.
ADVANCED JAVA PROGRAMMING This course teaches students Web-based programming techniques in the Java programming language. It begins with programming using traditional models such as the client-server model and then transitions to advanced programming paradigms including middleware programming using RMI and CORBA, the distributed JINI/JavaSpaces model, the peer-to-peer networking model and the agent-based programming model.
CALCULUS II  This course introduces applications of integration, techniques of integration, infinite sequences and series, vectors in the plane, and polar functions. A mathematical software package is introduced, with required assignments.
NUMERICAL METHODS  This course involves solving nonlinear algebraic equations and systems of equations, interpolation and polynomial approximation, numerical differentiation and integration, numerical solutions to ordinary differential equations, analysis of algorithms and errors, and computational efficiency.
INTERNET SYSTEMS DEVELOPMENT  This course focuses on contemporary techniques and technologies in the design, development, and integration of web-enabled information systems.  This is a rapidly moving, hands-on course that mirrors real-world development of internet-based applications.
GRAPH THEORY & APPLICATIONS Introduction to graph theory. Representations of graphs and graph isomorphism. Trees as a special case of graphs. Connectivity, covering, matching and coloring in graphs. Directed graphs and planar graphs. Applications of graph theory in several fields such as networks, social sciences, VLSI, chemistry and parallel processing.
COMPUTER AND NETWORK FORENSICS Computer forensics involves the preservation, identification, extraction and documentation of computer evidence stored on a computer. This course takes a technical, legal, and practical approach to the study and practice of incident response, computer forensics, and network forensics. Topics include legal and ethical implications, duplication and data recovery, steganography, network forensics, and tools and techniques for investigating computer intrusions. This course is intended as a second course in information assurance for undergraduate students as well as other qualified students.  It is also intended as a foundation course for graduate digital forensics studies.
COMPUTER SECURITY MANAGEMENT  The purpose of this course is to integrate concepts and techniques from security assessment, risk mitigation, disaster planning, and auditing to identify, understand, and propose solutions to problems of computer security and security administration.
DETERMINISTIC OPERATIONS RESEARCH MODELS This is a survey course of deterministic operations research models and algorithms. Topics include linear programming, network programming, and integer programming.
INTRODUCTION TO ARTIFICIAL INTELLIGENCE  An introduction to artificial intelligence. The course will cover topics such as machine problem solving, uninformed and informed searching, propositional logic, first order logic, approximate reasoning using Bayesian networks, temporal reasoning, planning under uncertainty and machine learning.
Introduction to Academic Writing The first of the required GE writing courses introduces students to academic composition. Students will engage in writing as a process, pre-drafting strategies, multiple drafts, peer review, and large and small-scale revisions.
Intermediate Writing The second of the GE writing courses emphasizes the development of an effective academic style in argumentative essays that makes use of traditional rhetorical patterns, culminating in a major research paper.
Contemporary Mathematics An exploration of contemporary mathematical applications with a focus on developing quantitative reasoning skills. Students will represent and analyze multiple concrete real-world problems using quantitative tools. Topics include voting theory, graph theory, financial mathematics, statistics, and probability
Statistical Reasoning An exploration of basic statistical concepts with a focus on developing critical reasoning skills. Students will represent data, calculate probabilities, draw conclusions using statistical tools, and critique statistical studies and data collection methods. Topics include descriptive statistics, basic probability, statistical graphs, experimental design, and an introduction to statistical inference. Appropriate for many non-quantitative majors, the course is designed to develop statistical literacy and involves limited algebraic manipulation.
Statistical Inference An introduction to the basic concepts and methods of statistical data analysis. Students will summarize and interpret data, evaluate important assumptions, and draw appropriate conclusions based on sample data sets from a variety of disciplines
College Algebra An exploration of the properties and applications of functions and their graphs. Students will construct and analyze mathematical models from a wide variety of fields using appropriate technology. Topics include polynomial, rational, inverse, logarithmic, and exponential functions as well as matrix methods for solving systems of equations
Trigonometry An exploration of the properties and applications of trigonometric functions. Students will represent physical situations and solve applied problems using trigonometric tools and appropriate technology. Topics include angle measure, solving triangles, and trigonometric functions, graphs, equations, and identities. Vectors, polar coordinates, and complex numbers will also be introduced.
Applied Calculus An introduction to basic computational techniques and applications of calculus. Topics include functions, limits, differentiation, and integration. Emphasizes the use of calculus in solving problems from areas including business, economics, social sciences, and life sciences.
Calculus I Functions, limits and continuity; the derivative, differentiation techniques, and applications; graphing applications including extrema and concavity; elementary antiderivative/integration skills; the definite integral and its applications. Coverage includes applying the ideas and techniques of calculus to algebraic, trigonometric, exponential, and logarithmic functions.
Algebraic Reasoning An exploration of fundamental concepts underlying algebra and algebraic thinking. Students will investigate, discuss, and apply foundational ideas such as variable, equation, solution, function, and graph in multiple algebraic settings. Topics include the integers modulo n, inverses and inverse functions, growth in dynamical systems, polynomial and exponential models. Recommended for prospective elementary school teachers but open to all majors. Graphing calculator required; this course does not serve as a prerequisite for Calculus I
US Economic History Satisfies American government requirement of General Education. History from colonial times to present. Coverage of U.S. Constitution; national economy; pluralism; ethnicity, race, gender; distribution of wealth and power; social conflict and reform; entrepreneurs, workers, workplace; cultural encounters; popular culture; and U.S. and global affairs
American Civilization The fundamentals of American history including political, economic, and social development of American institutions and ideas. Successful completion of this course meets the American Institutions requirement established by the state legislature
American National Government Source of democratic ideas and principles of the constitutional system. Cultural, group, party, and governmental influences on the process of public policymaking. The administration and impact of public policy.
Fundamentals of Programming An introduction to computer programming. Topics to be covered include program design, program implementation techniques, programming constructs, console output, class design, and basic familiarity with the API. Emphasis is placed on modifying and developing simple applications.
Object Oriented Programming featuring the use of APIs and problem-solving strategies to create, test, and debug interactive object oriented programs. Topics to be covered include recursion, exception handling, reusability, and program design
Database Design and Management Introduction to database management systems, database processing, data modeling, database, and database design, development, and implementation. Contrasts alternative modeling approaches. Includes implementation of current DBMS tools and SQL.
Introduction to Computer Applications and the Internet Designed to explore concepts of microcomputer systems. Concepts include Windows and general information, word processing, spreadsheets, database, presentations, and the Internet. Students will gain proficiency with the basic command structures of each application in an integrated office suite. Recommend typing speed of at least 25 wpm.
Web Development Designed to develop web pages using HTML and other web page authoring software programs. Students will create several web pages and publish them to a web server. Some advanced features will be introduced.
Data Communications and Networking Designed as a telecommunications and networking foundation in network connectivity, data communication concepts, and communication protocols. Students learn to analyze cost-benefits and to evaluate, select, and implement different communication options.
Defensive Security This course provides a fundamental understanding of defensive security principles, technologies, and countermeasures, such as firewalls, intrusion detection systems, physical security and more. A variety of projects are assigned to reinforce concepts.
Discrete Structures This course covers algebraic structures applied to computer programming. Topics include propositional and predicate logic, proofs, sets, relations, functions, counting, graphs, and trees. This course lays the foundation for problems solving in computer science and information systems.
Introduction to Algorithms and Data Structures Concepts and theory of data structures and algorithm analysis. Understanding basic data structures such as lists, stacks, queues, trees, graphs, and hash tables. Further exploration of objected oriented programming and the software development process
Software Engineering An examination of systematic, disciplined, and quantifiable approaches to the development, operation, and maintenance of software. This course features a major programming project that is developed in accordance with sound software engineering principles.
Computer Organization and Architecture This course builds on students understanding of interface between computer software and hardware. Topics for this course include processor architecture, computer arithmetic, instruction set architecture, assembly language and its relation to higher level languages, computer performance analysis, basic concepts on pipeline, introduction to memory management, Computer IO, and disk storage systems
Advanced Algorithms and Data Structures This course is a survey of the most effective algorithms currently in use for a wide variety of problems and their usage in program design. Characteristics and performance of algorithms are studied. Advanced object oriented programming techniques are emphasized.
C and C++ Programming An introduction to C and C++ for students with previous programming experience in Java. Topics include C and C++ syntax and constructs, the Standard Template Library, and advanced problem-solving techniques in both languages
Foundations of Computation Theory An introduction to the theory of computation and its relationship to the design and implementation of compilers. Topics include finite-state and pushdown automata, formal languages and grammars, Turing machines, and syntax and semantics of programming languages.
Operating Systems An introduction to fundamental concepts in the design, implementation, and usage of operating systems. Topics include process management, main memory management, virtual memory, I/O and device drivers, file handling, and concurrency
Programming Languages An introduction to the core principles of programming languages: syntactic and semantic descriptions, and compilation and implementation issues. An introduction to the main programming paradigms, exemplified using contemporary programming languages: imperative, object-oriented, functional, and logic
CS Capstone Project CS Capstone Project
Programming with Python This course presents the student with foundational concepts and techniques of the Python programming language. The student will develop an understanding of the format and structure of coded programs and applications. The essential elements of the programming language will be presented and explored in class. The course will use hands-on labs and exercises to illustrate the practical application of Python
Digital Electronics I This is the first of a two-semester sequence in digital electronics. Topics include number systems, Boolean algebra, binary arithmetic, logic gates, combinational circuits, and basic memory circuits. Electronic test equipment and simulation software will be used in the lab. Students will analyze, build, and test logic circuits.
Calculus II Inverse trigonometric functions; techniques of integration; further applications of the definite integral; improper integrals and indeterminate forms; infinite series; conic sections and topics in analytic geometry; polar coordinates and parametric equations. A graphing calculator is required
Linear Algebra Systems of linear equations, matrices and matrix inverses, linear transformations, vector spaces, bases and linear independence, eigenvalues and eigenvectors. Basic proofs and selected applications
Probability and Statistics A formal, calculus-based introduction to the concepts of probability theory and mathematical statistics. Set theory based probability and probability distributions are studied with the goal of presenting and understanding the underpinnings of statistical methodology
Computer Interfacing A course designed to provide experience in interfacing microcomputers to outside peripheral devices. Areas of study will include peripheral sensors, digital to analog converters, analog to digital converters, voltage to frequency converters, and serial and parallel I/O busses
Applications of Microprocessors A course designed to prepare the student with the key concepts of microprocessor architecture, interfacing, and assembly language programming.
Advanced Digital Forensics This course covers advanced topics in digital forensics including incident response, malware analysis, and Internet forensics. Topics such as digital evidence collection/evaluation and legal issues in digital forensics will also be further expanded on.
Big Data Analytics This course will introduce basic concepts in the business analytics field, along with some popular techniques and tools. Students will have opportunities to explore and analyze large quantities of observational data in order to discover meaningful patterns and useful information to support decision making in business contexts.
Introduction to Digital Forensics This course covers the process of obtaining and analyzing digital information stored on digital devices including investigation, data acquisition, file system analysis, and file analysis. This course introduces various tools used in the digital forensics industry. This course will also explore ethical issues faced by digital forensic examiners.
Artificial Intelligence This course explores the ideas and topics surrounding computer programs that make decisions that mimic intelligent behaviors. These programs are sometimes referred to as Intelligent systems, or Artificial Intelligence. Students will program intelligent systems of their own using informed search methods, planning, logical reasoning, and/or probabilistic reasoning during this course.
Undergraduate Research Undergraduate Research
Special Topics Special Topics
Internship Internship
Programming and Algorithms I Coverage includes the software life cycle, as well as algorithms and their role in software design. Students are expected to design, implement, and test a number of programs.
Programming and Algorithms II This course continues the study of software specification, design, implementation, and debugging techniques while introducing abstract data types, fundamental data structures and associated algorithms. Coverage includes dynamic memory, file I/O, linked lists, stacks, queues, trees, recursion, and an introduction to the complexity of algorithms. Students are expected to design, implement, test, and analyze a number of programs.
Analytic Geometry and Calculus Limits and continuity. The derivative and applications to related rates, maxma and minima, and curve sketching. Transcendental functions. An introduction to the definite integral and area.
Assembly Language Programming Topics include number systems and their rules for arithmetic; basic central processing unit (CPU) organization concepts such as registers, data paths, the arithmetic and logic unit (ALU) and the interface to random access memory (RAM); instruction formats, addressing modes and their uses with a variety of data structures; and parameter passing techniques including the use of a stack frame. The use of good programming methodologies to develop and document algorithms at the assembly language level is emphasized.
Embedded Systems Development This course presents the concepts and techniques associated with developing low level Embedded Systems Applications, using both Assembly Language and C. Topics include microprocessor architecture concepts, instruction set architectures, Assembly Language programming, data representations, interrupt handling and execution modes, low level C programming, and the use of on-chip and external peripherals.
Discrete Mathematics Topics include sets, relations, propositional and predicate logic, basic proof methods including mathematical induction, digital logic circuits, complexity of algorithms, elementary combinatorics, and solving linear recurrence relations.
General Chemistry for Applied Sciences A survey of the principles of chemistry, primarily for students in agriculture, industry and technology, and pre-nursing.
Organic Chemistry for Applied Sciences A survey of organic chemistry emphasizing the structure, properties, and reactions of all major functional groups of organic molecules. Not applicable towards a degree in chemistry or biochemistry.
Introduction to Databases Topics may include a survey/lecture component as well as a project component. The survey component covers entity- relationship modeling, relational algebra and calculus theories, data definition and data manipulation languages such as SQL, file structures, transactions, concurrency control, recovery, tuning and optimization, and object-oriented databases. The project entails requirements definition, design, and implementation of a database application.
Computer Security This course provides a broad overview of some of the more technical aspects of Information Systems Security. The content is designed to prepare students for the Certified Information Systems Security Professional/Associate (CISSP/A) examination from the International Information Systems Security Certification Consortium (ISP2), including a discussion of each of the following topics: security management practices; access control systems; telecommunications and network security; cryptography; security architecture and models; operations security; applications and systems development; business continuity planning and disaster recovery planning; law, investigation, and ethics; and physical security.
Algorithms and Data Structures This course focuses on object-oriented methodologies in designing and implementing a variety of data structures and algorithms. Coverage includes recursion, trees, search structures, hashing, heaps, sorting algorithms, and graph algorithms. Data structure and algorithm combinations will be studied and analyzed along with their relative merits using both mathematical and empirical measurements. The course includes a number of large programming assignments focusing on object-oriented software engineering and algorithm development. Students will be required to design, implement, test, and analyze their programs in at least one object-oriented language.
Operating Systems Operating system fundamentals, including history, process and thread management, concurrency with semaphores and monitors, deadlocks, storage management, file systems, I/O, and distributed systems.
Survey of Calculus This course covers the fundamental concepts and techniques of differential and integral calculus with an introduction to differential equations. Emphasis on applications from the Life Sciences. This course is not intended for majors in mathematics, physics, chemistry, or engineering.
Advanced Computer Networks Examination of computer network protocol design issues and a selection of advanced computer networking topics, such as multimedia networking, wireless networks, optical networks and network security, using current and proposed standards as examples.
High Performance Computing The course covers high performance computer architecture including: branch prediction, out-of-order execution, cache coherence and consistency, many-core processors, vector processing, dynamic scheduling, instruction level parallelism, thread level parallelism, and memory hierarchy design.
Introduction to Computer Science Number systems and data representation are introduced. An overview of hardware, including the control unit, memory, the ALU, and I/O is provided. Software is introduced with an overview of operating systems, programming languages, applications, and software tools. Students are exposed to common operating systems and applications. Student also design and implement several programs.
Living With Technology This course explores the impact of technology on our lives. Aspects of our complex technological society are investigated through study of the various forms technology takes, and readings in contemporary literature regarding the impact these technologies have on individuals. Students are encouraged to reflect on technology in their own lives through journaling, and to discourse with their peers on the benefits and harm to individuals, society, and humanity that modern technology presents.
PCs and Peripherals This course focuses on the hardware and software of the modern PC , currently available peripherals and upgrades, and the basics of networking. Included will be a survey of the pros and cons of different hardware choices for various PCs, peripherals, and networking options.
Electric Energy Processing: Fundamentals and Applications This course provides an introduction to the fundamentals of electric energy conversion, and its use in several real-life electric energy systems. The course starts with a brief review of electromagnetic and electromechanical conversion underlying electric power generation. The first part of the course introduces basic components found in today's electric energy systems, such as: Electric machines (generators and motors); Power electronics for converting between AC and DC portion of an electric energy system, and; Control of these components for their efficient use. The principles underlying design, operations and control of these components are introduced using conversion fundamentals and basic electric circuit knowledge. The second part of this course introduces several key electric energy systems used in today's industry. Examples of such systems are: Home distribution electric power systems; Electric power systems for vehicles; Electric power systems for ships, and; Airspace electric power systems (such as airplanes and space shuttles).
Junior Projects The Department of Electrical and Computer Engineering at Carnegie Mellon  considers experiential learning opportunities important educational  options for its undergraduate students. One such option is conducting  undergraduate research with a faculty member. Students do not need to  officially register for undergraduate research unless they want it  listed on their official transcripts. An ECE student who is involved in  a research project and is interested in registering this undergraduate  research for course credit on the official transcript may request to be  enrolled in this course. To do this, the student should first complete  the on-line undergraduate research form available on the ECE  undergraduate student page.
Nano-Bio-Photonics Light can penetrate biological tissues non-invasively. Most of the available bio-optic tools are bulky. With the advent of novel nanotechnologies, building on-chip integrated photonic devices for applications such as sensing, imaging, neural stimulation, and monitoring is now a possibility. These devices can be embedded in portable electronic devices such as cell phones for point of care diagnostics. This course is designed to convey the concepts of nano-bio-photonics in a practical way to prepare students to engage in emerging photonic technologies. The course starts with a review of electrodynamics of lightwaves. The appropriate choice of wavelength and material platform is the next topic. Then optical waveguides and resonators are discussed. Resonance-based sensing is introduced followed by a discussion of the Figure of Merits (FOMs) used to design on-chip sensors. Silicon photonics is introduced as an example of a CMOS-compatible platform. On-chip spectroscopy is the next topic. The second part covers nano-plasmonics for bio-detection and therapy. The design methods are discussed, followed by an overview of nanofabrication and chemical synthesis, and then a discussion of applications. The last part of this course will be dedicated to a review of recent applications such as Optogenetic neural stimulation, Calcium imaging, Cancer Imaging and Therapy. Senior or graduate standing required.
Database Applications Database Applications
Computer Vision Computer Vision
Web Applications Development Web Applications Development
Fundamental of Electrical Power Systems This course introduces the fundamentals in electric energy systems which will enable you to understand current issues and challenges in electric power systems ("smart grid") and what it takes for you to have a reliable electric power supply at your house. First, the general structure of an electric power system (current and future trends) will be introduced. This includes electric power plants (renewable and non-renewable); transmission and distribution; and consumers. Then, electric power is addressed from a mathematical point of view. The mathematical formulae for AC power and models for the above mentioned elements are derived which will enable you to calculate how much power is flowing over which lines on its way from the power plant to the consumer. Maintaining the balance between generation and consumption is important to avoid catastrophic blackout events. Hence, the notion of stability and available control concepts will be introduced.
Hardware Arithmetic for Machine Learning In this course, students explore the techniques for designing high-performance digital circuits for computation along with methods for evaluating their characteristics. We begin by reviewing number systems and digital arithmetic along with basic arithmetic circuits such as ripple-carry adders. From there, we move to more complex adders (carry-look-ahead, carry-skip, carry-bypass, etc.), multipliers, dividers, and floating-point units. For each circuit introduced, we will develop techniques and present theory for evaluating their functionality and speed. Other methods will be described for analyzing a circuit’s power consumption, testability, silicon area requirements, correctness, and cost. In addition, we will utilize various CAD tools to evaluate the circuits described. Finally, advanced timing and clocking concepts will be investigated. For example, the notion of clock skew will be introduced and its impact on clock period for sequential circuits will be analyzed. We will also learn how to analyze and design asynchronous circuits, a class of sequential circuits that do not utilize a clock signal. Course projects have been completely re-designed. Now projects focus on key arithmetic aspects of various machine learning algorithms including: K-nearest neighbors, neural networks, decision trees, and support vector machines.
Advanced Digital Signal Processing This course will examine a number of advanced topics and applications in one-dimensional digital signal processing, with emphasis on optimal signal processing techniques. Topics will include modern spectral estimation, linear prediction, short-time Fourier analysis, adaptive filtering, plus selected topics in array processing and homomorphic signal processing, with applications in speech and music processing.
Database Systems Database Systems
Parallel Computer Architecture and Programming Parallel Computer Architecture and Programming
Parallel and Sequential Data Structures and Algorithms Parallel and Sequential Data Structures and Algorithms
Microfabrication Methods and Technology This course is a laboratory-based introduction to the theory and practice of microfabrication. Lectures and laboratory sessions cover fundamental processing techniques such as photo-mask creation, lithographic patterning, thin film vacuum deposition processes, wet-chemical and dry-etching processes. This is primarily a hands-on laboratory course which brings students into the microfabrication facility and device testing laboratories. Students will fabricate electronic and opto-electronic devices such the metal-oxide-semiconductor (MOS) capacitor, the Schottky diode, the MOS transistor, the solar cell, and the light-emitting diode. An understanding of the operation of these building block devices will be gained by performing measurements of their electrical and opto-electronic characteristics. Emphasis is placed on understanding the interrelationships between the materials properties, processing, device structure, and the electrical and optical behavior of the devices. The course is intended to provide a background for a deeper appreciation of solid state electronic devices and integrated circuits.
Introduction to Computer Systems This course provides a programmer's view of how computer systems execute programs, store information, and communicate. It enables students to become more effective programmers, especially in dealing with issues of performance, portability and robustness. It also serves as a foundation for courses on compilers, networks, operating systems, and computer architecture, where a deeper understanding of systems-level issues is required. Topics covered include: machine-level code and its generation by optimizing compilers, performance evaluation and optimization, computer arithmetic, memory organization and management, networking technology and protocols, and supporting concurrent computation.
Integration and Approximation Integration by trigonometric substitution and partial fractions; arclength; improper integrals; Simpson's and Trapezoidal Rules for numerical integration; separable differential equations, Newton's method, Euler's method, Taylor's Theorem including a discussion of the remainder, sequences, series, power series. Parametric curves, polar coordinates, vectors, dot product.
Introduction to Probability Theory This course is the first half of a year long course which provides an introduction to probability and mathematical statistics for students in economics, mathematics and statistics. The use of probability theory is illustrated with examples drawn from engineering, the sciences, and management. Topics include elementary probability theory, conditional probability and independence, random variables, distribution functions, joint and conditional distributions, law of large numbers, and the central limit theorem.
Computer Networks The Internet has transformed our everyday lives, bringing people closer together and powering multi-billion dollar industries. The mobile revolution has brought Internet connectivity to the last-mile, connecting billions of users worldwide. But how does the Internet work? What do oft repeated acronyms like “LTE”, “TCP”, “WWW” or a “HTTP” actually mean and how do they work? This course introduces fundamental concepts of computer networks that form the building blocks of the Internet. We trace the journey of messages sent over the Internet from bits in a computer or phone to packets and eventually signals over the air or wires. We describe concepts that are common to and differentiate traditional wired computer networks from wireless and mobile networks. Finally, we build up to exciting new trends in computer networks such as the Internet of Things, 5-G and software defined networking. Topics include: physical layer and coding (CDMA, OFDM, etc.); data link protocol; flow control, congestion control, routing; local area networks (Ethernet, Wi-Fi, etc.); transport layer; and introduction to cellular (LTE) and 5-G networks. A final project asks you to a build a HTTP video server of your own.
Formal Languages, Automata, and Computability Formal Languages, Automata, and Computability
Operating Systems Design and Implementation Operating Systems Design and Implementation
Operating System Practicum Operating System Practicum
Robot Kinematics and Dynamics Robot Kinematics and Dynamics
Introduction to Computer Architecture Computer architecture is the science and art of selecting and interconnecting hardware components to create a computer that meets functional, performance and cost goals. This course introduces the basic hardware structure of a modern programmable computer, including the basic laws underlying performance evaluation. We will learn, for example, how to design the control and data path hardware for a MIPS-like processor, how to make machine instructions execute simultaneously through pipelining and simple superscalar execution, and how to design fast memory and storage systems. The principles presented in the lecture are reinforced in the laboratory through the design and simulation of a register transfer (RT) implementation of a MIPS-like pipelined superscalar in Verilog.
ECE Sophomore Seminar 1. Introduce to students to the faculty member's research field and the most current world advancements in engineering and technology in that area; 2. Provide students a good understanding of our curriculum structure and the courses in various areas; 3. Present correlations between the present technological developments and our courses for each course area; 4. Introduce new undergraduate courses; 5. Advertise on-campus/off-campus research opportunities for undergraduate students and explain the corresponding research projects; 6. Motivate students with positive presentations on the importance of obtaining education and gaining self-learning ability; 7. Provide basic education on learning and working ethics.
Artificial Intelligence: Representation and Problem Solving Artificial Intelligence: Representation and Problem Solving
Principles of Software Systems Construction Principles of Software Systems Construction
Differential and Integral Calculus Functions, limits, derivatives, logarithmic, exponential, and trigonometric functions, inverse functions; L'Hospital's Rule, curve sketching, Mean Value Theorem, related rates, linear and quadratic approximations, maximum-minimum problems, inverse functions, definite and indefinite integrals, and hyperbolic functions; applications of integration, integration by substitution and by parts
Digital Integrated Circuit Design This course covers the design and implementation of digital circuits in a modern VLSI process technology. Topics will include logic gate design, functional unit design, latch/flip-flop design, system clocking, memory design, clock distribution, power supply distribution, design for test, and design for manufacturing. The lab component of the course will focus on using modern computer aided design (CAD) software to design, simulate, and lay out digital circuits. The final project for the course involves the design and implementation to the layout level of a small microprocessor.
Image and Video Processing This course covers signal processing techniques specialized for handling 2D (images) and 3D (videos) signals. It builds upon 1D signal processing techniques developed in 18-290 and 18-491 and specializes them for the case of images and videos. In this class, you will learn fundamental tools and techniques for processing images and videos, and will learn to apply them to a range of practical applications. This course provides the fundamentals for studying images and videos. We will develop signal models specific to images and videos, develop associated optimization techniques for solving restoration problems like denoising, inpainting, study specialized compression algorithms. Specific focus will be on transform-domain, PDE and sparsity-based models and associated optimization techniques. These formal techniques will be enriched via applications in mobile devices, medical image processing, and compressive sensing.
Physics II for Engineering and Physics Students This is the second half of a two-semester calculus-based introductory physics sequence for engineering and physics students. Two fifths of the course covers electricity, including electrostatics and electric fields, Gauss' law, electric potential, and simple circuits. Two fifths cover magnetism, including magnetic forces, magnetic fields, induction and electromagnetic radiation. One fifth of the course covers mechanical waves (including standing and traveling waves, superposition, and beats) and electromagnetic waves (including mode of propagation, speed, and other properties).
Computer Graphics Computer Graphics
Fundamentals of Electromagnetics This course introduces electromagnetic principles and describes ways in which those principles are applied in engineering devices and systems. Topics include vector calculus as a mathematical foundation for field descriptions, Maxwell's equations in integral and differential forms with associated boundary conditions as descriptions of all electromagnetic principles, quasistatic electric fields in free space and in materials, superposition for known charge sources, conduction and polarization, resistance and capacitance, charge relaxation, analytic and numerical methods for electric field boundary value problems, quasistatic magnetic fields in free space and in materials, superposition for known current sources, magnetization, inductance, magnetic diffusion, and analytic and numerical methods for magnetic field boundary value problems.
Math/Science Elective 1 Math/Science Elective 1
Fundamentals of Control An introduction to the fundamental principles and methodologies of classical feedback control and its applications. Emphasis is on problem formulation and the analysis and synthesis of servomechanisms using frequency and time domain techniques. Topics include analytical, graphical and computer-aided (MATLAB) techniques for analyzing and designing automatic control systems; analysis of performance, stability criteria, realizability, and speed of response; compensation methods in the frequency domain, root-focus and frequency response design, and pole-zero synthesis techniques; robust controller design; systems with delay and computer control systems; transfer function and state space modeling of linear dynamic physical systems; nonlinearities in control systems; and control engineering software (MATLAB).
Physics I for Engineering Students This is a first semester, calculus-based introductory physics course. Basic principles of mechanics and thermodynamics are developed. Topics include vectors, displacement, velocity, acceleration, force, equilibrium, mass, Newton's laws, gravitation, work, energy, momentum, impulse, torque and angular momentum, temperature, heat, equations of state, thermodynamic processes, heat engines, refrigerators, first and second laws of thermodynamics, and the kinetic theory of gases.
Math/Science Elective 2 Math/Science Elective 2
Analog Integrated Circuit Design Some form of analog circuit design is a critical step in the creation of every modern IC. First and foremost, analog circuits act as the interface between digital systems and the real world. They act to amplify and filter analog signals, and to convert signals from analog to digital and back again. In addition, high performance digital cell design (either high speed or low power) also invokes significant analog circuit design issues. The goal of this course is to teach students some of the methods used in the design and analysis of analog integrated circuits, to illustrate how one approaches design problems in general, and to expose students to a broad cross-section of important analog circuit topologies. The course will focus on learning design through carrying out design projects. Design and implementation details of wide-band amplifiers, operational amplifiers, filters and basic data converters will be covered. Example topics to be covered include transistor large- and small-signal device models, small-signal characteristics of transistor-based amplifiers, large-signal amplifier characteristics and nonidealities, operational amplifier design, basic feedback amplifier stability analysis and compensation, and comparator design. The course will focus primarily on analog CMOS, but some aspects of BJT design will be discussed.
Fundamentals of Programming Fundamentals of Programming
Microelectronic Circuits introduces students to the fundamentals of microelectronic circuits. The course will emphasize the analysis and design of basic analog and digital integrated circuits in preparation for further study in analog, digital, mixed-signal, and radio-frequency integrated circuit design. Additionally, students will learn to design and analyze microelectronic circuits using industry standard computer aided design (CAD) software. Topics to be covered include: • MOSFET fabrication and layout • MOSFET models for analog and digital design • Analysis and design of digital CMOS logic gates • Analysis and design of clocked storage elements (e.g., flip-flops, latches, memory cells) • Delay optimization of digital circuits • Circuit topologies for arithmetic and logical functional units • Analysis and design of single-stage MOS amplifiers • Frequency response characteristics of single-stage amplifiers • Differential amplifiers and simple operational amplifiers • Analog filters using operational amplifiers The course includes a lab component which will give students hands-on experience in the design and implementation of analog and digital circuits. Labs will employ both design using discrete, SSI, and MSI parts, as well as using CAD design tools.
Wireless Networking and Applications This course introduces fundamental concepts of wireless networks. The design of wireless networks is influenced heavily by how signals travel through space, so the course starts with an introduction to the wireless physical layer, presented in a way that is accessible to a broad range of students. The focus of the course is on wireless MAC concepts including CSMA, TDMA/FDMA, and CDMA. It also covers a broad range of wireless networking standards, and reviews important wireless network application areas (e.g., sensor networks, vehicular) and other applications of wireless technologies (e.g., GPS, RFID, sensing, etc.). Finally, we will touch on public policy issues, e.g., as related to spectrum use.
Introduction to Electrical and Computer Engineering To introduce basic concepts in electrical and computer engineering in an integrated manner; * To motivate basic concepts in the context of real applications;  * To illustrate a logical way of thinking about problems and their solutions, and; * To convey the excitement of the profession. These goals are attained through analysis, construction and testing of an electromechanical system (e.g., a robot) that incorporates concepts from a broad range of areas within Electrical and Computer Engineering. Some of the specific topics that will be covered include system decomposition, ideal and real sources, Kirchhoff's Current and Voltage Laws, Ohm's Law, piecewise linear modeling of nonlinear circuit elements, Ideal Op-Amp characteristics, combinational logic circuits, Karnaugh Maps, Flip-Flops, sequential logic circuits, and finite state machines.
Signals and Systems This course develops the mathematical foundation and computational tools for processing continuous-time and discrete-time signals in both time and frequency domain. Key concepts and tools introduced and discussed in this class include linear time-invariant systems, impulse response, frequency response, convolution, filtering, sampling, and Fourier transform. Efficient algorithms like the fast Fourier transform (FFT) will be covered. The course provides background to a wide range of applications including speech, image, and multimedia processing, bio and medical imaging, sensor networks, communication systems, and control systems.
Senior Projects The Department of Electrical and Computer Engineering at Carnegie Mellon  considers experiential learning opportunities important educational  options for its undergraduate students. One such option is conducting  undergraduate research with a faculty member. Students do not need to  officially register for undergraduate research unless they want it  listed on their official transcripts. An ECE student who is involved in  a research project and is interested in registering this undergraduate  research for course credit on the official transcript may request to be  enrolled in this course. To do this, the student should first complete  the on-line undergraduate research form available on the ECE  undergraduate student page.
Fundamentals of Signal Processing This course addresses the mathematics, implementation, design and application of the digital signal processing algorithms widely used in areas such as multimedia telecommunications and speech and image processing. Topics include discrete-time signals and systems, discrete-time Fourier transforms and Z-transforms, discrete Fourier transforms and fast Fourier transforms, digital filter design and implementation, and multi-rate signal processing. The course will include introductory discussions of 2-dimensional signal processing, linear prediction, adaptive filtering, and selected application areas. Classroom lectures are supplemented with implementation exercises using MATLAB.
Foundations of Programming Languages Foundations of Programming Languages
Computational Photography Computational Photography
Mathematical Foundations of Electrical Engineering 1.MATLAB as a robust computational tool, used to reinforce, enrich and integrate ideas throughout the course, including software exercises and projects in combination with homework assignments; 2.Complex Analysis, including rectangular and polar representations in the complex plane with associated forms of complex arithmetic, powers, roots and complex logarithms, complex differentiation, analytic functions and Cauchy-Riemann equations, complex Taylor series, complex exponential, sinusoidal and hyperbolic functions, and Euler's formula; 3.Fourier Analysis, including orthogonality of sinusoids, trigonometric and exponential forms of Fourier series, Fourier integrals and Fourier transforms; 4.Linear, Constant-Coefficient Differential Equations, including complex exponential solutions to homogeneous equations and particular solutions with polynomial and sinusoidal driving functions described by phasors; 5.Difference Equations, with emphasis upon their relationship to differential equations, and; 6.Linear Algebra and Matrices, including matrix arithmetic, linear systems of equations and Gaussian elimination, vector spaces and rank of matrices, matrix inverses and determinants, eigenvalue problems and their relationship to systems of homogeneous differential equations.
Principles of Imperative Computation Principles of Imperative Computation
Fundamentals of Semiconductor Devices n this course you will receive an introduction to the operation and fabrication of the most important semiconductor devices used in integrated circuit technology together with device design and layout. At the end of the course you will have a basic understanding of pn diodes, bipolar transistors, and MOSFETs as well as some light emitting and light detecting devices such as photodiodes, LEDs and solar cells. You will also receive an introduction to the fundamental concepts of semiconductor physics such as doping, electron and hole transport, and band diagrams. In the laboratory you will learn how to lay out both bipolar and MOS devices and you will design small (2-3 transistor) circuits. The laboratory portion of the course emphasizes the relation between device design and layout and circuit performance. You will also experimentally evaluate the operation of amplifier and gate circuits fabricated with discrete devices. This course will give you an excellent understanding of the operation and fabrication of the devices which is necessary for high-performance analog and digital circuit design.
Foundations of Software Engineering Foundations of Software Engineering
Probability Theory and Random Processes This course provides an introduction to probability theory. It is designed for students in electrical and computer engineering. Topics include elementary probability theory, conditional probability and independence, random variables, distribution functions, joint and conditional distributions, limit theorems, and an introduction to random processes. Some elementary ideas in spectral analysis and information theory will be given.
Concepts of Mathematics This course introduces the basic concepts, ideas and tools involved in doing mathematics. As such, its main focus is on presenting informal logic, and the methods of mathematical proof. These subjects are closely related to the application of mathematics in many areas, particularly computer science. Topics discussed include a basic introduction to elementary number theory, induction, the algebra of sets, relations, equivalence relations, congruences, partitions, and functions, including injections, surjections, and bijections. A basic introduction to the real numbers, rational and irrational numbers. Supremum and infimum of a set.
Intermediate Rapid Prototyping Intermediate Rapid Prototyping
Introduction to Computer Security Security is becoming one of the core requirements in the design of critical systems. This course will introduce students to the intro-level fundamental knowledge of computer security and applied cryptography. Students will learn the basic concepts in computer security including software vulnerability analysis and defense, networking and wireless security, and applied cryptography. Students will also learn the fundamental methodology for how to design and analyze security critical systems.
Compiler Design Compiler Design
Algorithm Design and Analysis Algorithm Design and Analysis
Pattern Recognition Theory Decision theory, parameter estimation, density estimation, non-parametric techniques, supervised learning, linear discriminant functions, clustering, unsupervised learning, artificial neural networks, feature extraction, support vector machines, and pattern recognition applications (e.g., face recognition, fingerprint recognition, automatic target recognition, etc.).
Sophomore Projects The Department of Electrical and Computer Engineering at Carnegie Mellon  considers experiential learning opportunities important educational  options for its undergraduate students. One such option is conducting  undergraduate research with a faculty member. Students do not need to  officially register for undergraduate research unless they want it  listed on their official transcripts. An ECE student who is involved in  a research project and is interested in registering this undergraduate  research for course credit on the official transcript may request to be  enrolled in this course. To do this, the student should first complete  the on-line undergraduate research form available on the ECE  undergraduate student page.
Electronic Devices and Analog Circuits This course covers fundamental topics that are common to a wide variety of electrical engineering devices and systems. The topics include an introduction to semiconductor devices and technology, DC circuit analysis techniques, operational amplifiers, energy storage elements, sinusoidal steady-state response, frequency domain analysis, filters, and transient response of first- and second-order systems. The laboratories allow students to use modern electronic instrumentation and to build and operate circuits that address specific concepts covered in the lectures, including semiconductor devices and sensors, layout, operational amplifiers, filters, signal detection and processing, power converters and circuit transients.
Introduction to Embedded Systems This practical, hands-on course introduces the various building blocks and underlying scientific and engineering principles behind embedded real-time systems. The course covers the integrated hardware and software aspects of embedded processor architectures, along with advanced topics such as real-time, resource/device and memory management. Students can expect to learn how to program with the embedded architecture that is ubiquitous in smartphones, portable gaming devices, robots, etc. Students will then go on to learn and apply real-time principles that are used to drive critical embedded systems like automobiles, avionics, medical equipment, etc. Topics covered include embedded architectures (building up to modern 16/32/64-bit embedded processors); interaction with devices (buses, memory architectures, memory management, device drivers); concurrency (software and hardware interrupts, timers); real-time principles (multi-tasking, scheduling, synchronization); implementation trade-offs, profiling and code optimization (for performance and memory); embedded software (exception handling, loading, mode-switching, programming embedded systems). Through a series of laboratory exercises with state-of-the-art embedded processors, sensors, actuators and industry-strength development tools, students will acquire skills in the design/implementation/debugging of core embedded real-time functionality.
Logic Design and Verification This course is a second level logic design course, studying the techniques of designing at the register-transfer and logic levels of complex digital systems using modern modeling, simulation, synthesis, and verification tools. Topics include register-transfer level systems (i.e., finite state machines and data paths), bus and communication system interfacing (such as a simplified USB interface), discrete-event simulation, testbench organization, assertion-based verification and functional coverage. Design examples will be drawn from bus and communication interfaces, and computation systems, emphasizing how these systems are designed and how their functionality can be verified. A modern hardware description language, such as SystemVerilog, will serve as the basis for uniting these topics. Quizzes, homeworks and design projects will serve to exercise these topics.
Structure and Design of Digital Systems This course introduces basic issues in design and verification of modern digital systems. Topics include Boolean algebra, digital number systems and computer arithmetic, combinational logic design and simplification, sequential logic design and optimization, register-transfer design of digital systems, basic processor organization and instruction set issues, assembly language programming and debugging, and a hardware description language. Emphasis is on the fundamentals: the levels of abstraction and hardware description language methods that allow designers to cope with hugely complex systems, and connections to practical hardware implementation problems. Students will use computer-aided digital design software and actual hardware implementation laboratories to learn about real digital systems.
Computer Game Programming Computer Game Programming
Computer Networks Computer Networks
Distributed Systems Distributed Systems
Rhetoric This course presents an integrated approach to writing, reading, and critical thinking by developing the grammatical, logical, and rhetorical skills necessary for university writing.
Professional and Technical Communication Expands students' professional and team communication skills and strategies in technical contexts. Integrates writing, speaking and group communication by developing and presenting technical information to different audiences. Written assignments focus on creating professional technical documents, such as proposals, memos, abstracts, reports and letters. Presentation assignments emphasize planning, preparing and delivering dynamic, informative and persuasive presentations. Attendance at first class mandatory.
Differential Calculus Course covers topics in differential calculus of functions of one variable; topics include limits, continuity, derivative, chain rule, implicit differentiation, mean value theorem, maxima and minima, curve sketching, derivatives of inverse trigonometric functions, antiderivative, substitution method, and applications.
Mechanics Calculus based. Basic physics including a study of space and time, kinematics, forces, energy and momentum, conservation laws, rotational motion, torques, and harmonic oscillation
Electromagnetism and Waves Topics include electrostatics and electromagnetics, electric field and potential, electric currents, magnetic fields, laws of Coulomb, Ampere, and Faraday, Maxwell's theory of wave propagation. Two lectures per week
American National Government Survey of American national government, politics, and constitutional development
Social Issues and Ethics in Science and Technology This course exposes students to major theoretical approaches and professional codes of ethics and how they may be applied to explore a range of important social issues in the information age. Issues of professional ethics, computer crime and privacy, intellectual property, the balance between the acceptability of risk and constraints such as cost, scheduling, safety and quality, the role of globalization and various important constitutional issues are explored by drawing upon case studies.
Physics Laboratory I Laboratory course to accompany any Physics I or Mechanics course. Experiments investigate basic measurements and statistics including error, mean, standard deviation and error propagation; one dimensional and two dimensional motion; Newton's laws; conservation laws of energy and momentum; rotational motion; and oscillations.
Introduction to Computer Engineering Introduction to discipline and practice of Electrical and Computer Engineering; overview of the Electrical Engineering (EE) and Computer Engineering (CE) curricula. Basic study, problem solving and other skills needed to succeed as an EE or CE major. Introduction to professional ethics, EE and CE engineering design and quantitative methods; team projects designed to replicate decision process in real-world applications of the EE and CE engineering process
Linear Algebra Matrices, vectors, linear systems of equations, Gauss-Jordan elimination, LU factorization and rank. Vector spaces, linear dependence/independence, basis, and change of basis. Linear transformations and matrix representation; similarity, scalar products, orthogonality, Gram-Schmidt procedures, and QR factorization. Determinants: eigenvalues, eigenvectors, and diagonalization. Introduction to problem solving using MATLAB. This course includes a required laboratory.
Electromagnetism and Waves Topics include electrostatics and electromagnetics, electric field and potential, electric currents, magnetic fields, laws of Coulomb, Ampere, and Faraday, Maxwell's theory of wave propagation.
Introduction to Digital Systems Introduction to digital circuits, hardware structures, and assembly-language concepts that underlie the design of modern computer systems. Topics include: Internal data representation and arithmetic operations in a computer, basic logic circuits, MIPS assembly language and an overview of computer architecture.
Digital Circuits Design and analysis of combinational logic circuits using basic logic gates and other building blocks like multiplexers and ROMs. Design and analysis of latches and flip-flops. Design and analysis of synchronous state machines. State minimization and introduction to state assignment. Design of datapath components: adders, multipliers, registers, shifters, and counters. Electrical properties of logic gates
Senior Design Project I Senior Design Project I
Electrical and Computer Engineering Laboratory in Circuits Electrical and Computer Engineering Laboratory in Circuits
Advanced Engineering Mathematics Survey of advanced mathematics topics needed in the study of engineering. Topics include use of complex numbers, properties of complex-valued functions, scalar and vector fields, introduction to partial differential equations, and Fourier series
Digital Circuits Design and analysis of combinational logic circuits using basic logic gates and other building blocks like multiplexers and ROMs. Design and analysis of latches and flip-flops. Design and analysis of synchronous state machines. State minimization and introduction to state assignment. Design of datapath components: adders, multipliers, registers, shifters, and counters. Electrical properties of logic gates.
Computer Networks The design and analysis of computer networks. Topics include the ISO reference model, transmission media, medium-access protocols, LANs, data link protocols, routing, congestion control, internetworking, and connection management.
Operating Systems Concepts An introduction to fundamental concepts in operating systems and how they are realized in a practical operating system such as UNIX. Topics include process management, main memory management, virtual memory, I/O and device drivers, file systems, secondary storage management, and an introduction to critical sections and deadlocks.

Critical Thinking and Communication Application of critical reading and thinking abilities to topics of civic and cultural importance. Introduction of basic oral, visual, and electronic communication principles to support writing development. Initiation of communication portfolio.
Written, Oral, Visual, and Electronic Composition  Analyzing, composing, and reflecting on written, oral, visual, and electronic (WOVE) discourse within academic, civic, and cultural contexts. Emphasis on supporting a claim and using primary and secondary sources. Continued development of communication portfolio.
Information Literacy Provides a solid understanding of information literacy and the research process with emphases on finding, evaluating, and using scholarly information; the ethical and legal framework related to information use; and utilization of library discovery tools.
Technical Communication Rhetorical concepts and processes to successfully communicate technical information individually and collaboratively via written, oral, visual, and electronic modes. Emphasizes the major strategies for analyzing expert and lay audiences and adapting information to those audiences. Covers developing and designing usable technical documentation, visualizing data, and presenting technical information orally.
Proposal and Report Writing Rhetorical concepts and processes to individually and collaboratively develop proposals for business, governmental, nonprofit, or other organizations and to report on the work completed both orally and in writing. Emphasizes the structure and classification of proposal and report types, qualitative and quantitative research methods, audience analysis, document design, and data visualization.
General Chemistry for Engineering Students Principles of chemistry and properties of matter explained in terms of modern chemical theory with emphasis on topics of general interest to the engineer.
General Chemistry I The first semester of a two semester sequence which explores chemistry at a greater depth and with more emphasis on concepts, problems, and calculations than 163. Recommended for physical and biological science majors, chemical engineering majors, and all others intending to take 300-level chemistry courses. Principles and quantitative relationships, stoichiometry, chemical equilibrium, acid-base chemistry, thermochemistry, rates and mechanism of reactions, changes of state, solution behavior, atomic structure, periodic relationships, chemical bonding
Engineering Orientation Introduction to the College of Engineering and the engineering profession. Information concerning university and college policies, procedures, and resources. Undeclared sections: Considerations in choosing an engineering curriculum. Opportunities to interact with departments
Introduction to Computer Engineering and Problem Solving Introduction to Computer Engineering. Project based examples from computer engineering. Individual interactive skills for small and large groups. Computer-based projects. Solving engineering problems and presenting solutions through technical reports. Solution of engineering problems using a programming language.
Information Literacy Eight-week course required for undergraduate degree. Provides a solid understanding of information literacy and the research process with emphases on finding, evaluating, and using scholarly information; the ethical and legal framework related to information use; and utilization of library discovery tools.
Calculus I Differential calculus, applications of the derivative, introduction to integral calculus.
Calculus II Integral calculus, applications of the integral, infinite series, parametric curves and polar coordinates.
Introduction to Classical Physics I For engineering and science majors. 3 hours of lecture each week plus 3 recitations and 1 laboratory every 2 weeks. Elementary mechanics including kinematics and dynamics of particles, work and energy, linear and angular momentum, conservation laws, rotational motion, oscillations, gravitation.
Object-oriented Programming Computer programming using objects as the mechanism for modularity, abstraction, and code reuse. Instance variables, methods, and encapsulation. Review of control structures for conditionals and iteration. Developing algorithms on strings, arrays, and lists. Recursion, searching, and sorting. Text parsing and file I/O. Interfaces, inheritance, polymorphism, and abstract classes. Exception handling. Tools for unit testing and debugging. Emphasis on a disciplined approach to specification, code development, and testing.
Introduction to Data Structures An object-oriented approach to data structures and algorithms. Object-oriented analysis, design, and programming, with emphasis on data abstraction, inheritance and subtype polymorphism, and generics. Abstract data type specification and correctness. Collections including lists, stacks, queues, trees, heaps, maps, hash tables, and graphs. Big-O notation and algorithm analysis. Searching and sorting. Graph search and shortest path algorithms. Emphasis on object-oriented design, writing and documenting medium-sized programs.
Calculus III Analytic geometry and vectors, differential calculus of functions of several variables, multiple integrals, vector calculus.
Elementary Differential Equations and Laplace Transforms Same as MATH 266 but also including Laplace transforms and power series solutions to ordinary differential equations.
Introduction to Classical Physics II Fluid dynamics. Electric forces and fields. Electrical currents; DC circuits. Magnetic forces and fields: LR, LC, LCR circuits; Maxwell's equations; wave optics.
Digital Logic Number systems and representation. Boolean algebra and logic minimization. Combinational and sequential logic design. Arithmetic circuits and finite state machines. Use of programmable logic devices. Introduction to computer-aided schematic capture systems, simulation tools, and hardware description languages. Design of simple digital systems.
Embedded Systems I: Introduction Embedded C programming. Interrupt handling. Memory mapped I/O in the context of an application. Elementary embedded design flow/methodology. Timers, scheduling, resource allocation, optimization, state machine based controllers, real time constraints within the context of an application.
Operating Systems: Principles and Practice Operating system concepts, processes, threads, synchronization between threads, process and thread scheduling, deadlocks, memory management, file systems, I/O systems,security, Linux-based lab experiments.
Theoretical Foundations of Computer Engineering Propositional logic and methods of proof; set theory and its applications; mathematical induction and recurrence relations; functions and relations; and counting; trees and graphs; applications in computer engineering.
Computer Organization and Assembly Level Programming Introduction to computer organization, evaluating performance of computer systems, instruction set design. Assembly level programming: arithmetic operations, control flow instructions, procedure calls, stack management. Processor design. Datapath and control, scalar pipelines, introduction to memory and I/O systems.
Software Development Practices A practical introduction to methods for managing software development. Process models, requirements analysis, structured and object-oriented design, coding, testing, maintenance, cost and schedule estimation, metrics. Programming projects.
Applications of Algorithms in Computer Engineering Solving computer engineering problems using algorithms. Emphasis on problems related to the core focus areas in computer engineering. Real world examples of algorithms used in the computer engineering domain. Algorithm engineering. Prototyping of algorithms.
Introduction to the Design and Analysis of Algorithms Basic techniques for design and analysis of algorithms. Sorting, searching, graph algorithms, string matching, and NP-completeness. Design techniques such as dynamic programming, divide and conquer, greedy method, and approximation. Asymptotic, worst-case, average-case and amortized analyses. Topics from advanced data structures such as balanced trees and hashing.
Electric Circuits Network theorems. DC, sinusoidal steady-state, and transient analysis. AC power. Frequency response. Two port models. Diodes, PSPICE. Laboratory instrumentation and experimentation. Credit for only E E 201 or 442 may be used towards graduation.
Electronic Circuits and Systems Frequency domain characterization of electronic circuits and systems, transfer functions, sinusoidal steady state response. Time domain models of linear and nonlinear electronic circuits, linearization, small signal analysis. Stability and feedback circuits. Operational amplifiers, device models, linear and nonlinear applications, transfer function realizations. A/D and D/A converters, sources of distortions, converter linearity and spectral characterization, applications. Design and laboratory instrumentation and measurements.
Senior Design Project I and Professionalism Preparing for entry to the workplace. Selected professional topics. Use of technical writing skills in developing project plan and design report; design review presentation. First of two-semester team-oriented, project design and implementation experience.
Senior Design Project II Second semester of a team design project experience. Emphasis on the successful implementation and demonstration of the design completed in E E 491 or Cpr E 491 and the evaluation of project results. Technical writing of final project report; oral presentation of project achievements; project poster.
Probability and Statistics for Computer Science Topics from probability and statistics applicable to computer science. Basic probability; Random variables and their distributions; Stochastic processes including Markov chains; Queuing models; Basic statistical inference; Introduction to regression.
Technical Communication  Rhetorical concepts and processes to successfully communicate technical information individually and collaboratively via written, oral, visual, and electronic modes. Emphasizes the major strategies for analyzing expert and lay audiences and adapting information to those audiences. Covers developing and designing usable technical documentation, visualizing data, and presenting technical information orally.
Proposal and Report Writing Rhetorical concepts and processes to individually and collaboratively develop proposals for business, governmental, nonprofit, or other organizations and to report on the work completed both orally and in writing. Emphasizes the structure and classification of proposal and report types, qualitative and quantitative research methods, audience analysis, document design, and data visualization.
Professional Programs Orientation Overview of the nature and scope of electrical engineering and computer engineering professions. Overview of portfolios. Departmental rules, student services operations, degree requirements, program of study planning, career options, and student organizations.
Program Discovery The roles of professionals in computer and electrical engineering. Relationship of coursework to industry and academic careers. Issues relevant to today's world. Offered on a satisfactory-fail basis only.
Program Exploration Exploration of academic and career fields for electrical and computer engineers. Examination of professionalism in the context of engineering and technology with competencies based skills. Introduction to professional portfolio development and construction. Offered on a satisfactory-fail basis only.
Portfolio Assessment Portfolio update and evaluation. Portfolios as a tool to enhance career opportunities.
Software Project Management Process-based software development. Capability Maturity Model (CMM). Project planning, cost estimation, and scheduling. Project management tools. Factors influencing productivity and success. Productivity metrics. Analysis of options and risks. Version control and configuration management. Inspections and reviews. Managing the testing process. Software quality metrics. Modern software engineering techniques and practices.
Integrated Electronics  Semiconductor technology for integrated circuits. Modeling of integrated devices including diodes, BJTs, and MOSFETs. Physical layout. Circuit simulation. Digital building blocks and digital circuit synthesis. Analysis and design of analog building blocks. Laboratory exercises and design projects with CAD tools and standard cells.
Software Architecture & Design Modeling and design of software at the architectural level. Architectural styles. Basics of model-driven architecture. Object-oriented design and analysis. Iterative development and unified process. Design patterns. Design by contract. Component based design. Product families. Measurement theory and appropriate use of metrics in design. Designing for qualities such as performance, safety, security, reliability, reusability, etc. Analysis and evaluation of software architectures. Introduction to architecture definition languages. Basics of software evolution, reengineering, and reverse engineering. Case studies. Introduction to distributed system software.
Embedded Systems II: Mobile Platforms Contemporary programming techniques for event driven systems. Mobile platforms and operating systems. Location and motion sensors based user interfaces. Threading and scheduling. Resource management - measurement and control techniques - for memory and energy. Client-server application design. Distributed applications. Laboratory includes exercises based on a mobile platform.
Formal Methods in Software Engineering A study of formal techniques for model-based specification and verification of software systems. Topics include logics, formalisms, graph theory, numerical computations, algorithms and tools for automatic analysis of systems. Graduate credit requires in-depth study of concepts.
Software Evolution and Maintenance Practical importance of software evolution and maintenance, systematic defect analysis and debugging techniques, tracing and understanding large software, impact analysis, program migration and transformation, refactoring, tools for software evolution and maintenance, experimental studies and quantitative measurements of software evolution. Written reports and oral presentation.
High Speed Sys. Engr. Meas. & Test Measurement of high speed systems and mixed signal systems. Measurement accuracy and error. Network analysis and spectrum analysis used in high speed measurement and testing. Test specification process and parametric measurement. Sampling and digital signal processing concepts. Design for testability. Testing equipment. Applications.
Software Tools for Large Scale Data Analysis Software tools for managing and manipulating large volumes of data, external memory processing, large scale parallelism, and stream processing, data interchange formats. Weekly programming labs that involve the use of a parallel computing cluster
Software Analysis and Verification for Safety and Security Significance of software safety and security; various facets of security in cyber-physical and computer systems; threat modeling for software safety and security; and categorization of software vulnerabilities. Software analysis and verification: mathematical foundations, data structures and algorithms, program comprehension, analysis, and verification tools; automated vs. human-on-the-loop approach to analysis and verification; and practical considerations of efficiency, accuracy, robustness, and scalability of analysis and verification. Cases studies with application and systems software; evolving landscape of software security threats and mitigation techniques. Understanding large software, implementing software analysis and verification algorithms.
Introduction to High Performance Computing  Unix, serial programming of scientific applications, OpenMP for shared-memory parallelization. No Unix, Fortran or C experience required.
High Performance Computing for Scientific and Engineering Apps Introduction to high performance computing platforms including parallel computers and workstation clusters. Discussion of parallel architectures, performance, programming models, and software development issues. Sample applications from science and engineering. Practical issues in high performance computing will be emphasized via a number of programming projects using a variety of programming models and case studies. Oral and written reports.
Intro to Parallel Algorithms and Program Models of parallel computation, performance measures, basic parallel constructs and communication primitives, parallel programming using MPI, parallel algorithms for selected problems including sorting, matrix, tree and graph problems, fast Fourier transforms
Network Protocols and Security Detailed examination of networking standards, protocols, and their implementation. TCP/IP protocol suite, network application protocols. Network security issues, attack and mitigation techniques. Emphasis on laboratory experiments.
Basics of Information Systems Security Introduction to and application of basic mechanisms for protecting information systems from accidental and intentional threats. Basic cryptography use and practice. Computer security issues including authentication, access control, and malicious code. Network security mechanisms such as intrusion detection, firewalls, IPSEC, and related protocols. Ethics and legal issues in information security. Wireless security. Programming and system configuration assignments.
Analog VLSI Circuit Design Basic analog integrated circuit and system design including design space exploration, performance enhancement strategies, operational amplifiers, references, integrated filters, and data converters.
Introduction to Bioinformatics Broad overview of bioinformatics with a significant problem-solving component, including hands-on practice using computational tools to solve a variety of biological problems. Topics include: bioinformatic data processing, Python programming, genome assembly, database search, sequence alignment, gene prediction, next-generation sequencing, comparative and functional genomics, and systems biology.
Distributed Systems & Middleware  Fundamentals of distributed computing, software agents, naming services, distributed transactions, security management, distributed object-based systems, web-based systems, middleware-based application design and development, case studies of middleware and internet applications.
Distributed & Network Operating Systems Theoretical and practical issues of design and implementation of distributed systems. The client server paradigm, inter-process communications, synchronization and concurrency control, naming, consistency and replication, fault tolerance, and distributed file systems. Graduate credit requires additional in-depth study of concepts. Programming projects and written reports.
Real-Time Systems  Fundamental concepts in real-time systems. Real time task scheduling paradigms. Resource management in uniprocessor, multiprocessor, and distributed real-time systems. Fault-tolerance, resource reclaiming, and overload handling. Real-time channel, packet scheduling, and real-time LAN protocols. Case study of real-time operating systems. Laboratory experiments.
Digital VLSI Design Digital design of integrated circuits employing very large scale integration (VLSI) methodologies. Technology considerations in design. High level hardware design languages, CMOS logic design styles, area-energy-delay design space characterization, datapath blocks: arithmetic and memory, architectures and systems on a chip (SOC) considerations. VLSI chip hardware design project.
Multidisciplinary Engineering Design  Application of team design concepts to projects of a multidisciplinary nature. Concurrent treatment of design, manufacturing, and life cycle considerations. Application of design tools such as CAD, CAM, and FEM. Design methodologies, project scheduling, cost estimating, quality control, manufacturing processes. Development of a prototype and appropriate documentation in the form of written reports, oral presentations and computer models and engineering drawings.
Graphics Processing and Architecture Introduction to hardware architectures for computer graphics and their programming models. System-level view, including framebuffers, video output devices, displays, 2D and 3D graphics acceleration, and device interfacing. Architectural design of GPUs, from 2D and 3D sprite engines to 3D rendering pipelines to unified shader architectures. Computing models for graphics processors. GPGPU and GPU computing.
Hardware Software Integration Embedded system design using hardware description language (HDL) and field programmable gate array (FPGA). HDL modeling concepts and styles are introduced; focus on synthesizability, optimality, reusability and portability in hardware design description. Introduction to complex hardware cores for data buffering, data input/output interfacing, data processing. System design with HDL cores and implementation in FPGA. Laboratory-oriented design projects.
Embedded Systems Design Embedded microprocessors, embedded memory and I/O devices, component interfaces, embedded software, program development, basic compiler techniques, platform-based FPGA technology, hardware synthesis, design methodology, real-time operating system concepts, performance analysis and optimizations.
Computer Networking & Data Comm Modern computer networking and data communications concepts. TCP/IP, OSI protocols, client server programming, data link protocols, local area networks, and routing protocols.
Independent Study  Independent Study
Theory of Computing Models of computation: finite state automata, pushdown automata and Turing machines. Study of grammars and their relation to automata. Limits of digital computation, unsolvability and Church-Turing thesis. Relations between classes of languages.
Principles of Programming Languages  Study of concepts in programming languages, especially functional programming concepts. Overview of major programming paradigms, their relationship, and tradeoffs among paradigms enabling sound choices of programming language for application-specific development. Programming projects.
Number Theory Divisibility, integer representations, primes and divisors, linear diophantine equations, congruences, and multiplicative functions. Applications to cryptography. Additional topics, chosen at the discretion of the instructor.
Formal Methods in Software Engineering A study of formal techniques for model-based specification and verification of software systems. Topics include logics, formalisms, graph theory, numerical computations, algorithms and tools for automatic analysis of systems. Graduate credit requires in-depth study of concepts.
Software System Safety  An introduction to the hazard analysis, safety requirements, design, and testing of software for safety-critical and high-dependability systems. Safety analysis techniques, fault identification and recovery, and certification issues. Emphasizes a case-based and systematic approach to software's role in safe systems.
Intro to Computational Geometry Introduction to data structures, algorithms, and analysis techniques for computational problems that involve geometry. Convex hulls, line segment intersection, polygon triangulation, 2D linear programming, range queries, point location, arrangements and duality, Voronoi diagrams, Delaunay triangulations, geometric data structures, robot motion planning, visibility graphs.
Logic for Math & Computer Science  Propositional and predicate logic. Topics selected from Horn logic, equational logic, resolution and unification, foundations of logic programming, reasoning about programs, program specification and verification, model checking and binary decision diagrams, temporal logic and modal logic.
Algorithms for Large Data Sets: Theory and Practice  Algorithmic challenges involved in solving computational problems on massive data sets. Probabilistic data structures, Curse of Dimensionality and dimensionality reduction, locality sensitive hashing, similarity measures, matrix decompositions. Optimization problems in massive data analysis. Computational problems that arise in the context of web search, social network analysis, online advertising etc. Practical aspects include implementation and performance evaluation of the algorithms on real world data sets
Principles & Practices of Compiling Theory of compiling and implementation issues of programming languages. Programming projects leading to the construction of a compiler. Projects with different difficulty levels will be given for 440 and 540. Topics include: lexical, syntactic and semantic analyses, syntax-directed translation, code generation, runtime environment and library support.
Programming Languages Survey of the goals and problems of language design. Formal and informal studies of a wide variety of programming language features including type systems. Creative use of functional and declarative programming paradigms.
Simulation: Algorithms & Implementation Introduction to discrete-event simulation with a focus on computer science applications, including performance evaluation of networks and distributed systems. Overview of algorithms and data structures necessary to implement simulation software. Discrete and continuous stochastic models, random number generation, elementary statistics, simulation of queuing and inventory systems, Monte Carlo simulation, point and interval parameter estimation.
Principles of Artificial Intelligence  Specification, design, implementation, and selected applications of intelligent software agents and multi-agent systems. Computational models of intelligent behavior, including problem solving, knowledge representation, reasoning, planning, decision making, learning, perception, action, communication and interaction. Reactive, deliberative, rational, adaptive, learning and communicative agents and multiagent systems. Artificial intelligence programming
Introduction to Machine Learning Introduction to tools and techniques of machine learning for applications. Selected machine learning techniques in practical data mining for classification, regression, and clustering, e.g., association rules, decision trees, linear models, Bayesian learning, support vector machines, artificial neural networks, instance-based learning, probabilistic graphical models, ensemble learning, and clustering algorithms. Selected applications in data mining and pattern recognition.
Abstract Algebra I Basic properties of integers, divisibility and unique factorization. Polynomial rings over a field. Congruence. Introduction to abstract rings, homomorphisms, ideals. Roots and irreducibility of polynomials. Emphasis on proofs.
Abstract Algebra II Topics chosen from: Advanced group theory, theory of rings and fields, factorization theory in integral domains, Galois theory. Emphasis on writing proofs.
Combinatorics  Enumeration strategies involving permutations, combinations, partitions, binomial coefficients, inclusion-exclusion principle, recurrence relations, generating functions. Additional topics selected from probability, algebraic combinatorics, and applications.
Graph Theory Structure and extremal properties of graphs. Topics are selected from: trees, networks, colorings, paths and cycles, connectivity, planarity, directed graphs, matchings, Ramsey theory, forbidden structures, enumeration, applications.
Theory of Linear Algebra Systems of linear equations, determinants, vector spaces, inner product spaces, linear transformations, eigenvalues and eigenvectors. Emphasis on writing proofs and results
Topology  Set theory, metric spaces, topological spaces, continuity, connectedness, homeomorphisms, compactness, and topological invariants. Examples from surfaces, knots, and various abstract objects. Emphasis on writing proofs.
Introduction to the Theory of Probability and Statistics II Sampling distributions; confidence intervals and hypothesis testing; theory of estimation and hypothesis tests; linear model theory; resampling methods; introduction to Bayesian inference; use of the R statistical package for simulation and data analysis.
Number Theory Divisibility, integer representations, primes and divisors, linear diophantine equations, congruences, and multiplicative functions. Applications to cryptography. Additional topics, chosen at the discretion of the instructor.
Complex Variables with Applications Functions of a complex variable, including differentiation, integration and series expansions, residues, evaluation of integrals, conformal mapping.
Introduction to Scientific Computing Vector and matrix programming and graphing in MATLAB for scientific applications. Polynomial interpolation and approximation. Systems of linear equations and numerical linear algebra. Numerical differentiation and integration. Newton methods for solving nonlinear equations and optimization in one and several variables. Fast Fourier transform. Emphasis on effective use of mathematical software and understanding of its strengths and limitations.
Introduction to Partial Differential Equations  Method of separation of variables for linear partial differential equations, including heat equation, Poisson equation, and wave equation. Topics from Fourier series, Sturm-Liouville theory, Bessel functions, spherical harmonics, and method of characteristics.
Applied Linear Algebra  Advanced topics in applied linear algebra including eigenvalues, eigenvalue localization, singular value decomposition, symmetric and Hermitian matrices, nonnegative and stochastic matrices, matrix norms, canonical forms, matrix functions. Applications to mathematical and physical sciences, engineering, and other fields.
Analysis I A rigorous development of calculus of functions of one real variable: real number properties and topology, limits, continuity, differentiation, integration, series.
Analysis II  Sequences and series of functions of a real variable, uniform convergence, power series, metric spaces, calculus of functions of two or more real variables.
Logic for Mathematics and Computer Science Propositional and predicate logic. Topics selected from Horn logic, equational logic, resolution and unification, foundations of logic programming, reasoning about programs, program specification and verification, model checking and binary decision diagrams, temporal logic and modal logic.
Introduction to High Performance Computing Unix, serial programming of scientific applications, OpenMP for shared-memory parallelization. No Unix, Fortran or C experience required.
Geometry I  Euclidean geometry of triangles, circles, and parallelograms, studied from several points of view, chosen from: synthetic, analytic, axiomatic, transformational, complex numbers, or vector methods. Possible and impossible constructions with compass and straightedge.
Geometry II Foundations of Euclidean geometry and the axiomatic method, including the use of models. The history, logical consistency, and basic theorems of non-Euclidean geometries, such as hyperbolic, elliptic, and projective geometry.

Public Speaking The nature and problems of public speech communication, with practical experience in representative speaking situations.
Electrical and Computer Engineering Seminar Introduces first year and transfer students to different aspects of Electrical Engineering and Computer Engineering programs and exploration of career paths and professional responsibilities.  Presentations will be made by the instructor, faculty, and industry speakers.
Introduction to Electrical and Computer Engineering Introduction to information and concepts of general use in Electrical and Computer Engineering.  Topics include: basic use of personal computers, mathematical concepts, development of problem solving skills with professional communication.
Introduction to Programming for Engineers Introduction to computer programming with emphasis on algorithms and an understanding of underlying hardware. Topics include syntax, variables, control structures, pointers, operators, functions, and input and output.
Electric Circuits Topics include: Basic circuit laws and theorems, nodal analysis, op-amps, natural and forced responses of first and second order systems, phasor concepts, solution of steady-state AC circuits, AC power calculations, frequency response, basic filters, Bode plots, and Fourier Series.
Sequential Logic Systems Methods of design and testing for logic systems with memory. Includes procedures and the design of system tests, combinational design, multi-level circuits, logic minimization, sequential design, analysis and optimization and the use of computer tools for logic design.
Electrical Circuits Laboratory Lab exercise and circuit simulations demonstrate concepts presented in ECE 210.  Participants become familiar with circuit simulation, safety and grounding considerations, instrumentation, e.g., oscilloscopes, signal sources, multimeters, and signal analyzers.
Microcomputer Architecture and Applications The microcomputer and its component parts including microprocessors, registers, memory and I/O.  Programming in C and Assembly and applying the microcomputer in engineering systems.
Electronics I Investigates semiconductor fundamentals of the p-n junction, BJT and MOSFET. Static and low frequency dynamic models are developed and utilized in design and analysis. Explores basic electronic circuit building blocks based on diodes, BJT’s MOSFET’s and fully-compensated op-amps. Digital efforts are concentrated in the CMOS and pseudo-NMOS areas.
Computer Architecture and Organization Evolution, design implementation, and evaluation of state-of-the-art systems; the organization and structure of computer systems; the architecture of single-processor computer systems; Memory Systems, including interleaving, hierarchies, virtual memory and cache implementations; Communications and I/O, including bus architectures, disk arrays, and DMA.
Signals and Systems Analysis of continuous linear time-invariant systems including Fourier series, Fourier transforms, Laplace transform techniques and their applications; transformation and properties of continuous signals and systems, convolution, transfer functions and state variable system representations.
Introduction to Unix Systems Administration Topics include hardware and devices, file systems, user management, backup and recovery, application management, and network services such as NFS, NIS, DNS, DHCP, electronic mail and web servers. Problem solving and diagnostic methods, performance tuning, legal and professional issues, ethics and policies and security aspects of hosts on the Internet are discussed. Students gain hands-on experience and complete a project.
Computer Engineering Design Project First of a three semester sequence of courses involving the design, implementation and reporting of an engineering device, system or software package by an individual student or small group.  Part one: project selection, feasibility studies and proposal writing.
Hardware Applications Using C Emphasizes the use of the C programming language to control hardware devices.  Review of the necessary features of the C programming language will be included.
Computer Engineering Design Project Second of a three semester sequence of courses involving the design, implementation and reporting of an engineering device, system or software package by an individual student or small groups.  Part two: resource location, module debugging, prototype testing.
Embedded Systems Application of micro-processors to the solution of design problems, including hardware characteristics, peripheral control techniques and system development.
Electrical and Computer Engineering Design Project Third of a three semester sequence of courses involving the design, implementation and reporting of an engineering device, system or software package by an individual student or small group. Part three: written and oral presentation of the completed project.
Digital Signal Processing A study of discrete-time signals and systems, Z-transforms, discrete Fourier series and transforms. Efficient implementations of discrete-time system and design of IIR, FIR and multirate digital filter structures.
Calculus I An introduction to calculus for students in mathematics, engineering, and the sciences. Covers the differential calculus of the algebraic, trigonometric, exponential and logarithmic functions, concluding with the definite integral and the fundamental theorem of calculus. The approach is intuitive and geometric, with emphasis on understanding the basic concepts of function, limit, derivative and integral.
Calculus II Completes the study of single-variable calculus. Topics covered include inverse trigonometric functions, hyperbolic functions, methods of integration, improper integrals, indeterminate forms, parametric equations, polar coordinates and infinite series.
Calculus III For students of mathematics, engineering and the sciences. Vector algebra, geometry and calculus; multivariable differential and integral calculus, including the theorems of Gauss, Green and Stokes.
Introduction to Differential Equations with Linear Algebra An introduction to elementary linear algebra and ordinary differential equations including applications.
Discrete Mathematics Topics covered typically include graphs and networks, analysis of algorithms, generating functions and recurrence relations, graph coloring, satisfiability, computational complexity, automata and languages, Turing machines and computability, and a brief introduction to the theory of NP-completeness.
Physics for Engineers and Physical Scientists I An introductory calculus-based physics course, primarily serving students majoring in engineering or the physical sciences.
Physics for Engineers and Physical Scientists II Physics for Engineers and Physical Scientists II
College Composition Students practice the ways in which writing serves to expand, clarify, and order experience and knowledge, with particular attention to persuasive writing. Satisfactory completion of the course depends upon quality of weekly writing assignments as well as demonstration of proficiency in college-level writing.
Data Structures in C++ This course introduces object-oriented programming techniques and data structures in C++.  Topics include class design, dynamic memory management, lists, stacks, queues, trees. STL, algorithm efficiency, searching and sorting algorithms.
Statistical Process Control and Analysis The basics of statistics and statistical process control and systems optimization will be investigated.
Feedback Control Systems Analysis and design of continuous control systems using transfer function and state variable system representations. Covers signal flow graphs and Mason’s gain formula, decomposition of transfer functions, controllability and observability, root locus techniques, Routh-Hurwitz criterion, Nyquist criterion, controller design in time and frequency domains, State feedback, phase lead and lag controllers, PID type controllers.
Fields and Waves Topics include: Transmission lines and wave propagation with special emphasis on transverse electromagnetic waves in dielectric and lossy media, complex numbers, vectors, phasors, vector calculus, Smith Chart, electrostatics, magnetostatics, Gauss’s laws, Faraday’s law, Ampere’s law, Maxwell’s equations, properties of dielectric and ferromagnetic materials, time varying fields, wave reflection and transmission, waveguides, radiation.
Introduction to Robotics Introduces robotics and operation of microcomputer-controlled manipulators with their applications in automation. Includes a general review of robot structure, current application of robots in automation, spatial descriptions and coordinate transformations, manipulator kinematics and solutions, robot control and path planning, dynamics and vision in robot application.
Network Engineering Focuses on the engineering aspects of data networks including physical media and interconnections, signals and noise, modulation, multiplexing, frame and packet transmission, routing, network design and network management.  Problem solving and diagnostic methods, legal and professional issues, ethics and policies, and security aspects of interconnected networks are discussed.
Embedded Systems Application of micro-processors to the solution of design problems, including hardware characteristics, peripheral control techniques and system development.

American Cultures to 1877 American culture examined through political, literary, artistic, economic and social development. American values, ideas and institutions from popular culture as well as traditional sources.
American Cultures 1877 to present American culture examined through political, literary, artistic, economic and social development. American values, ideas and institutions from popular culture as well as traditional sources.
Engineering Reports Regular technical writing assignments and company-focused oral presentations while integrating effects of environmental factors as they relate to products, systems and engineering processes
The Living World Provides students with an understanding of the most fundamental concepts of modern biology including ecology (the interaction between organisms and their environment), human inheritance, the structure and function of living organisms, evolution, strategies for survival and reproduction, and biotechnology
Argument and Analysis is a writing course that focuses on argumentation and analysis. Through the study of literary, rhetorical, and professional texts, students will develop the habits of mind required to write argumentative and critical essays. Particular emphasis is placed on writing and reading processes. Students will have repeated practice in prewriting, drafting, revising, and editing, and repeated practice in reading closely in a variety of forms, styles, structures, and modes.
Engineering Probability and Statistics Probability theory, graphical displays of data, graphical methods of comparisons of samples and hypotheses testing. Statistical estimation and inference. Uses graphical statistical packages.
Calculus I Introduction to calculus including limits, continuity, differentiation, applications and introduction to integration. Graphical, algebraic and numerical methods of solving problems.
Calculus II Definite and indefinite integration with applications. Sequences and series. Graphical, algebraic and numerical methods of solving problems
Calculus III Functions of more than one variable, partial derivatives, multiple integrals and vector calculus. Graphical, algebraic and numerical methods of solving problems.
Discrete Mathematics Sets, logic, methods of proof including mathematical induction, functions, relations, elementary combinatorics, probability, Boolean algebras
Differential Equations and Linear Algebra Matrices, determinants, systems of linear equations, vector geometry, linear transformations, eigenvalues and eigenvectors, diagonalization, first order differential equations, linear systems of differential equations, higher order differential equations, Laplace transforms.
General Physics/Mechanics A calculus-based treatment of particle kinematics and dynamics, work, energy, momentum, rotational motion, equilibrium, and simple harmonic motion
General Physics/Electricity and Magnetism A calculus-based introduction to electricity and magnetism, covering electric charges, electric and magnetic fields, dc and ac circuits, and electromagnetic waves. Intensive Science
Programming Concepts and Methodology Introduction to programming; overview of computer organization and introduction to software engineering. Topics include methodologies for program design, development, style, testing, and documentation; algorithms, control structures, functions, and elementary data structures.
Object-Oriented Concepts and Methodology Application of object-oriented software engineering techniques to the design and development of larger programs; data abstraction, structures, classes and associated algorithms.
Introduction to Engineering Introduction to engineering through hands-on design projects, case studies, and problem-solving using computers. Students also acquire non-technical skills, such as team skills and the ability to deal with ethical dilemmas
Introductory Electrical Engineering Laboratory Basic instruments and experimental techniques in electrical engineering. Oscilloscopes, function generators, frequency counters and multiple-use meters. Measurements of voltage, current, frequency response, transient response and computer simulation of circuits.
Introduction to Circuit Analysis Circuit laws and nomenclature, resistive circuits with DC sources, ideal operational amplifier, controlled sources, natural and complete response of simple circuits, steady-state sinusoidal analysis and power calculations.
Assembly Language Programming Assembly programming; assembly-C interface; CPU and memory organization; addressing modes; arithmetic, logic and branch instructions; arrays, pointers, subroutines, stack and procedure calls; software interrupts; multiplication, division and floating point arithmetic.
Electronics for Computing Systems RC, RL and RLC circuit analysis, diodes and diode circuits, MOSFET and bipolar transistor I-V characteristics and circuits, CMOS logic circuits, CMOS-TTL interface, sensors and signal conditioning circuits using operational amplifiers, A/D and D/A converters, electromechanical device control.
Digital Design I Combinational and sequential logic theory and circuits. Emphasis on mixed logic and algorithmic state machines. Design projects using standard integrated circuit packages.
Digital Design II Digital system building blocks, data path and control units, system-level RTL design, Verilog HDL for design and verification, contemporary design flow and methodology, lab experiments using industry standard CAD tools and field programmable gate array (FPGA) devices.
Algorithms and Data Structure Design Object-oriented data organization and representation as strings, arrays, stacks, queues, dequeues, lists, sets, trees, tables, and graphs. Sorting and searching and algorithm design and performance analysis.
Microprocessor Design I Microprocessor architecture and assembly language. Design of peripheral blocks and their interfaces to the microprocessor. Design projects using standard integrated circuit packages.
Advanced Algorithm Design Design and analysis of data structures and algorithms. Advanced tree structures, hashing, searching and sorting. Divide-and-conquer, greedy and dynamic programming algorithm design techniques.
Software Engineering I Why software engineering? What is software engineering? Software development lifecycle activities: project planning and management requirements analysis, requirement specification. Software design, software testing, verification, validation, and documentation. Software quality assurance and review techniques, software maintenance, team-based projects
Computer Architecture and Design Pipelining and timing issues in CPU data-paths. Principles of RISC-type CPU instruction set and architecture. Structural, data and control hazards in a RISC processor, forwarding loops, branch mechanisms. Memory architectures in CPUs such as register files and caches.
Operating Systems Design Overview: history, concepts, system calls and structures. Management of major components: processes, memory, input/output and files. Design of system calls and device drivers for hardware dependence. Concepts of kernel and shell, file protection and interactive computation.
Real-Time Embedded System Co-Design Embedded system architecture with real-time operating system including microcontrollers, interfacing techniques for industrial applications using transducers, sensors, and A/D-D/A converters. Hardware/software integration and codesign.
Computer Networks I Comparative evaluation of network architecture, layering model, standards, protocol examples for ISO and TCP/IP layers. Network applications, transport layer protocols, Internet routing, data link and physical transmissions. Applications in world wide web, file transfer, electronic mail, peer-to-peer and other areas.
Compiler Design Principles of lexical analysis, finite state automata and parsing; issues of variable declarations, variable types, control statements, function calls, nested scopes and efficient assembler target code.
Senior Design Project I Senior Design Project I
Senior Design Project II Senior Design Project II
Global and Social Issues in Engineering Interdisciplinary seminar treating social and global impacts of technology and engineering. This integrated GE experience requires students to apply these concepts in their senior project classes. Students must enroll concurrently in their department senior project course
Global and Social Issues in Engineering Second course in a two-course sequence to support the integration of General Education Area S and Area V into the engineering major. Case study approach to the relationship of engineering to social, ethical and cultural aspects of the broader community both in the U. S. and worldwide.
Artificial Intellegence Artificial Intellegence
Computer Vision Computer vision
Natural Language Processing Natural Language Processing
Introduction to Engineering and Computer Science Discussion of disciplines within the college, technical communication, presentation of technical results, professional behavior, ethics, problem solving, modeling, and data analysis.
Introduction to Computing Computing concepts. Principles of programming. Applications of computing concepts to problem solving in engineering and computer science.
Calculus I Analytic geometry, limits, derivatives, maxima-minima, related rates, graphs, differentials, exponential and logarithmic functions, mean-value theorem, L’Hospital’s rule, integration.
General Chemistry Lecture I Fundamental principles and laws underlying chemical action, states of matter, atomic and molecular structure, chemical bonding, stoichiometry, properties of solutions, chemical equilibria, and introductory thermochemistry.
General Chemistry Laboratory I Experimental study of basic principles and techniques of chemistry. States of matter, determination of formulas and molecular weights, simple volumetric and gravimetric analysis, heats of reaction. Equilibrium, rates of reactions, and qualitative analysis.
Studio 1: Practices of Academic Writing Study and practice of writing processes, including critical reading, collaboration, revision, editing, and the use of technologies. Focuses on the aims, strategies, and conventions of academic prose, especially analysis and argumentation.
Introduction to Object-Oriented Design Present fundamental software design concepts of functional decomposition and object-oriented design. Use both C++ and Java to implement design projects which will be completed to demonstrate the design concepts.
Calculus II The definite integral and applications; trigonometric functions, methods of integration, improper integrals, infinite series, elementary differential equations, parametric equations, polar coordinates.
Logic Logic as a formal language, as a component of natural language, and as a basis of a programming language. Varieties of logical systems and techniques. Syntax, semantics and pragmatics.
General Physics I Uses calculus.
General Physics Laboratory I Techniques of laboratory work: treatment of random errors, graphical representation of data. Experimental demonstration of principles of mechanics, thermodynamics, and waves (of vector forces, conservation of momentum and energy, thermal properties of gases).
Introduction to Discrete Mathematics Basic set theory and symbolic logic. Methods of proof, including mathematical induction. Relations, partitions, partial orders, functions, and graphs.
Algorithms & Data Structures Data structures and algorithms implemented in high-level language. Nonnumeric processing, including database management. Types, structures, pointers, linked lists, recursion, iteration, retrieval, pattern recognition, and context processing.
Web System Architecture and Programming Issues involved in architecting and programming Web servers and clients. Topics include Java Socket Programming; Java Thread Programming; HTTP; Apache HTTP Server; PHP/Python scripting; Java Servlets; JSP.
Electrical Engineering Fundamentals Analysis of electric circuits. Resistive, reactive circuits. Independent, dependent sources. Network theorems, circuit reduction, op amps. Elements of transient and steady state circuit analysis.
Electrical Engineering Laboratory I Electrical-instrumentation and measurement. Experimental methods in linear and nonlinear devices and circuits.
First Course in Linear Algebra Linear equations, n-dimensional euclidean space, linear independence, bases, linear transformations, matrices and determinants, eigenvalues and eigenvectors.
Digital Logic Design Number representations, Boolean Algebra, logic minimization, memory circuits, counters, state diagrams, state machine design, arithmetic circuits, and asynchronous circuits. Logic simulators will be used to demonstrate and provide students with design activities.
Digital Logic Design Laboratory Basic digital logic circuit design and implementation. Structural and RTL description of digital system using VHDL/Verilog. Simulation and verification of combinational and sequential logic. Digital system design, including coding, testing, synthesis, troubleshooting and documentation.
Systems and Network Programming Programming and shell scripting in Unix for systems and network software. Makefiles, compilers, linkers, and debuggers, and software with multiple source files. Dynamic memory allocation techniques, system calls,  pointers, concurrent/parallel programming, and network and programming.
Electrical Engineering Fundamentals II Frequency response, filters. Second order circuits. Semiconductors, diodes, bipolar junction transistors, field effect transistors, models, circuits. Operational amplifiers, models, circuits. Transformers, rotating machines. DC generators and motors. Alternators. AC motors.
Linear Systems Laboratory Electrical-instrumentation, measurement and data-logging.  Experimental methods in linear systems.  Computer computations for analysis and modelling.
General Physics II General Physics II
General Physics Laboratory II Experimental study of principles of electromagnetism and their application in electrical circuits. Use of electronic instruments, such as the oscilloscope.
Studio 2: Critical Research and Writing Study and practice of critical, research-based writing, including research methods, presentation genres, source evaluation, audience analysis, and library/online research.
Computer Architecture Data representation, memory hierarchies, protection, specialized processors, multiple computers, performance evaluation, and reliability.
FPGA and Microcontroller Design Laboratory Experimental methods using test equipment. Logic-circuit design and testing using a Hardware Description Language and FPGAs. Micro-controller architecture, programming, interfacing, and communication with analog and digital components.
Introduction to Computer and Network Security Operating system security. Authentication. Access control. Program vulnerabilities. Malicious code. Secure programming principles. TCP/IP protocols, vulnerabilities, attacks, and countermeasures. Firewalls. Intrusion detection. Secret-key and Public-key cryptography.
Ethical Aspects of Engineering and Computer Science Ethical issues related to engineering and computer science studied, including professionalism, collective and individual moral responsibility, codes of ethics, whistle blowing, conflict of interest, pluralism in the workplace, product liability, and employer-employee expectations.
Introduction to Probability and Statistics  Programming-oriented introduction to fundamentals in statistics and probability; elementary statistics, graphical and numerical representation; probability distributions; tests and confidence intervals; regression, and correlation.
Embedded and Mobile Systems Laboratory Design and testing of embedded systems with an operating system. Rapid prototyping and design methods. Interfacing and network communication with mobile devices.
Design of Operating Systems Design and implementation of modern operating systems. Resource management and protection of CPU, memory, and storage. File systems. Input/output. Concurrent process implementation. Process synchronization. Networking.
Senior Design Project I Design methodology and presentation techniques for one extensive team project to be completed in the follow-up course. Focus on design processes and associated technical documentation.
Advanced Workshop in Technical Communications: Design Methodology Advanced technical communications for pre-professional computer and electrical engineers. Focuses on the communication that engineering design teams perform. Emphasis on communication embedded in system analysis and design processes.
Senior Design Project II Prototyping, construction, and demonstration skills for one extensive project created by a team of students.
Advanced workshop in Technical Communication: Prototyping and Construction Advanced technical communications for pre-professional computer and electrical engineers. Focuses on a range of communication activities embedded in the development, testing, and deployment phases of engineering projects.
Mobile Application Programming Development of applications for different mobile devices. Creating effective user interfaces, efficient use of persisitent storage, network services, GPS, maps and sensors.
Concurrent Programming Processes, events, alphabets, and trace sets. Process equivalence. Divergence, dead-lock, fairness, and termination. Message channels, buffers, pipelines, trees, rings, grids, recursive nets. Mutual exclusion, semaphores, conditional critical regions, monitors, remote procedures. Programming exercises in Joyce.
Control of Robots Kinematics, dynamics, and control of mobile and/or manipulator robots. Path planning, actuators, sensors, human/machine interface.
Analog Electronics Introductory semi-conductors; non-linear electronic circuits and devices including operational amplifiers, diodes and MOSFETs; Integrated electronics
Semiconductor Devices Physics of semiconductor devices. Energy bands. Electrons and holes. PN and metal semiconductor diodes. Characteristics, operation, properties and limitations of bipolar transistors, JFETS and MOSFETS. PNPN devices. Optoelectronic devices.
Applied Electromagnetics Electromagnetic Waves.  Waveguides, coaxial cables, and optical fibers. Resonators, Transmission lines. Antennas and antenna systems.
Introduction to Biological Anthropology Biological anthropology subfields; anthropology’s relationship to history of science. Evolutionary theory; mechanisms of evolution; survey of the non-human primates; humans ancestral to modern Homo sapiens; and modern human variation.
Human Osteology This course is an intensive study of the human skeletal system. The focus is identification of fragmentary skeletal elements and their osseous structure, skills relevant to archaeological and forensic contexts.

Programming Practicum Provides practical experience designing and developing a large, complex programming project. Introduces true object-oriented language like C++ and Java to build on the number of tools available to engineers for designing more complex projects
Data Structures Covers data structures and classical algorithms with an emphasis on implementing them in high-level programming languages. Includes sequential and linked lists, binary trees, heaps, B-trees, hash tables, graphs, and algorithms for searching and sorting. Concentrates on developing implementations, understanding their performance, and estimating their potential effectiveness in applications.
Linear Systems and Transforms Covers theoretical concepts and mathematical tools used for the design and analysis of continuous-time linear systems as well as analog signals. Topics covered in this course include linear convolution, impulse response, Laplace transform, Fourier series and Fourier transforms. Computer laboratory: Matlab is introduced for the analysis of signals and systems.
Electronic and Analog Systems Physics, characteristics, applications, analysis, and design of circuits using semiconductor diodes and field-effect transistors with an emphasis on large-signal behavior and digital logic circuits. Introduction to operational amplifiers, frequency analysis and response, and filters.
Computer Organization and Architecture Covers the general features of computation systems, including an introduction to processor architecture, instruction sets, assembly programming, cache and memory architecture, debug monitors, and translation from higher level languages to machine language.
Operating Systems for Engineers Covers the fundamental principles of operating design and function for both general purpose computing and real-time application control. Includes concurrent processes, scheduling, inter-process communications, memory management, I/O, and file systems.
Discrete Structures I Introduces definitions and tools for reasoning about discrete mathematical objects useful for computer professionals, including set theory, propositions and predicates, Boolean algebra, sequences, enumeration, algorithms, methods of proof, and relations.
Probability and Statistics Investigates probability and statistics using exploratory data analysis and interactive computing. Study topics including conditional probability, independence, random variables, distribution functions, descriptive statistics, transformations, sampling errors, confidence intervals, least squares, and maximum likelihood.
Computers, Ethics and Society Analyzes social, political, and ethical implications of computer and information technologies. Covers Western ethical theories, professional ethics, and diverse topics in computer ethics. Emphasizes writing and the construction of ethical arguments.
Introduction to Logic Design Examines Boolean algebra and logic simplification, design of combined logic for decoders and multiplexers, and design of sequential devices including registers, and counters. Analysis of devices for logic networks including, three-state, CMOS, programmable logic devices. Uses tools for schematic capture and circuit simulations. Introduction to state machines.
Digital System Design Examines digital system design fundamentals using programmable logic devices (PLDs). Uses Verilog to analyze and design complex digital systems based on field programmable gate arrays (FPGAs). Uses testing techniques to verify design and introduces operation of digital systems.
Microprocessor System Design Introduces hardware and software design techniques for microprocessor-based systems. Gives experience designing and implementing a system using current technology and components. Provides the opportunity to interface microprocessors to external devices. Gives experience using state-of-the-art development systems and procedures.
Devices and Controls Teaches how to control motors and other physical actuators by delving into their theories of operation. Examines automatic control theory and provides experience using computers to control devices.
Embedded Systems Design Covers the analysis, design, and prototyping of an embedded control application.
Senior Design Project I Covers the preparation for conducting the senior project systems analysis and design and implementation, testing, and delivery. Includes case studies of engineering projects.
Senior Design Project II Provides guidance to project teams to analyze client needs, develop problem statements, specifications, and plans for implantation of project deliverables.
Senior Design Project III Focuses on design and implementation, testing, and demonstration of the capstone design project.
Coding Theory Covers electronic communication over noisy channels, and digital storage on various types of media. Describes constructions of modern error-correction codes, including Reed Solomon, Golay, and BCH codes. Also covers computational aspects, complexity of encoding/decoding algorithms, their implementations and their uses in modern communication systems.
Cryptography Covers basic concepts of cryptography, including authentication, public key cryptography, and digital signatures. Additionally, it covers modern definitions of security, implementation aspects of cryptographic schemes and their use in computer networks and the internet.
Critical Thinking in the Digital Information Age  Help students develop critical thinking skills using technical software. Main topics include: identifying engineering issues for investigation, developing planning and problem solving strategies, locating pertinent information and examples, critically analyzing these sources, forming and testing hypotheses, synthesizing and organizing results for effective communication, and developing transferable problem solving skills.
Introduction to Computer Engineering and Computer Science  Introduction to the fields of computer engineering and computer science. Current and future trends and challenges in various fields of computing. Social, ethical and economical issues related to computing technology. Exploration of career and professional development opportunities.
Introduction to Programming and Problem Solving  Introduction to basic concepts of computer science and fundamental techniques for solving problems using the Python programming language. Variables, data types, conditional statements, loops and arrays. Programming style. Applications to numerical and non-numerical problems.
Computer Logic Design I  Basic topics in combinational and sequential switching circuits with applications to the design of digital devices. Introduction to Electronic Design Automation (EDA) tools. Laboratory projects with Field Programmable Gate Arrays (FPGA).
Principles of Computer Engineering I  Basic principles of analysis and design of computer-based circuits. Application of transistors, logic families, digital, devices in computer and embedded processor interfacing, importance of phasors and the complex plane. Basic DC/AC circuit fundamentals. Laboratory safety.
Discrete Structures with Computing Applications  An introduction to discrete mathematics with applications towards computing. Topics include sets, functions, logic, relations, graphs, trees, recursion, combinatorics, and mathematical reasoning.
Discrete Structures with Computing Applications II  This is the second course in a two-course sequence in computing applications of discrete structures. Topics include applications of computer arithmetic and matrices in computer systems. Programming assignments in Python will be provided.
Introduction to Embedded System Programming Introduction to embedded system architecture, memory organization and programming using C. Interfacing with external I/O devices, Use of internal special function registers. Development tools and extended C instructions unique to embedded systems. Course will be taught using an embedded processor development board.
Introduction to Numerical Methods  Numerical methods for algebraic equations, computer arithmetic, error propagation, fixed and arbitrary precision, numerical integration and differentiation, ordinary differential equations, Fourier Transform, discrete Fourier Transform. Programming assignments for implementation.
Programming and Data Structures in C++  Disciplined methods of design, coding and testing using the C++ programming language. Data abstraction and class design. Introduction to data structures (linked lists, stacks, queues and trees.)
Introduction to the Engineering Profession  Freshman orientation seminar on careers in engineering. Speakers from various fields illustrate opportunities and challenges in the engineering profession.
Academic Success Skills Development of skills and identification of strengths and weaknesses for success in a COE major.
Calculus I Derivatives and applications including graphing, related rates, and optimization. Transcendental functions. L’Hospital’s Rule. Antiderivatives. Definite integrals. Area under a curve.
Calculus II  Applications of the integral. Techniques of integration. Infinite series including convergence tests and Taylor series. Parametric equations. Polar coordinates. Introduces differential equations.
Mechanics and Heat  Kinematics, Newton’s Laws, rotational motion, fluid statics, laws of thermodynamics.
General Biology  Brief survey of major areas of biology including cell biology, genetics, evolution, phylogeny, plant and animal anatomy and physiology, ecology, and behavior. Specially designed for non-science majors.
PHYS 254 - Applied Modern Physics  Geometrical and physical optics, models of atomic and condensed matter systems.
Laboratory on Modern Physics  Experimental work in optics and modern physics.
General Chemistry  Introduction to principles of chemistry including chemical reactions, stoichiometry, thermochemistry, electronic structure, bonding, and properties of solids, liquids, gases, and solutions.
Computer Logic Design II  Sequential logic emphasizing Finite State Machine design & analysis, timing analysis of sequential logic, Introduction to Data Path, Control and Memory. Use of Electronic Design Automation (EDA) tools for design, simulation, verification. Laboratory projects with Field Programmable Gate Arrays (FPGA’s).
Principles of Computer Engineering II  Embedded system components. Bipolar and MOS devices and switching circuits. Embedded systems signal processing with operational amplifiers. Digital/analog interfacing including A/D and D/A converters. Schematic capture, analysis and implementation of embedded signal processing algorithms. Fundamentals of digital communication.
Operating Systems  The structure and functions of operating systems. Interrupt handling, processes and interprocess communication, memory management, resource scheduling, information sharing and protection. Project implementation in C/C++.
Embedded Systems I  Intro microprocessor/controller, embedded programming and design. Basic computer organization, representation of information and instruction, addressing techniques, input/output, assembly language programming. Introduction to assemblers, linkage editors and loaders. Study of the 8051. Design of microprocessor-based systems.
Embedded Systems II  Study of embedded processor applications and interfacing. Embedded systems design, control of external devices, embedded programming in C and assembly. A/D and D/A converters, digital signal processing, motor and LCD controllers. Laboratory implementation of embedded designs and hardware-assisted debugging.
Digital Design Techniques and Verification  Discussion of advanced techniques for synchronous digital design, verification of digital designs utilizing test fixtures, and the confirmation of meeting the physical constraints of timing, area and power, with an emphasis on timing.
Computer Architecture  Review of logic design. Register transfer and micro-operations. Basic computer organization. Central processor organization. Microprogram control organization. Arithmetic processor design. Arithmetic algorithms. Input-output organization. Memory organization.
Embedded Systems III  Embedded system applications and techniques. Real-time multitasking systems, schedulers, kernels, and operating systems for embedded processors. Advanced I/O technologies - CAN, I2C, Ethernet. Embedded Internet applications. Polling vs. interrupt handling. Lab implementation of embedded designs and hardware-assisted debugging.
System on Chip Design  Complete System on Chip (SOC) design flow from design specification to working SOC. Creation of RTL level modules designed for reuse, integration of Intellectual Property (IP) for RTL and physical level IP, IC verification, creation of self-checking test benches for designs.
Digital Signal Processing Design and Simulation System on Chip (SOC) design applications. Study of a variety of signal processing SOC designs and ASIC algorithms. Class projects emphasizing hardware/software integration with use of FPGA/CPLD devices. Design reviews, specification, team design implementation with project planning and tracking for system level design applications.
Computer Engineering Senior Project I  The first in a two-course capstone senior project in computer engineering that fulfills GE integrative learning. Students work in teams to define a problem, complete a design and provide both a written report and a multimedia presentation at the end of the semester.
Computer Engineering Senior Project II  Second of a two-semester capstone senior project in computer engineering that fulfills GE integrative learning. Student teams will build, program and verify operation of project started in prior design course.
Probability and Statistics with Applications to Computing  Applications of probability and statistics to computing. Topics include random variables and their statistics, probability distributions, Markov chains, Bayesian networks, sampling techniques, hypothesis testing, regression and analytic methods. Programming assignments using Python.
Data Structures and Algorithms A broad view of data structures and the structure-preserving operations on them. Abstract data types, algorithms, complexity. Programming projects to exemplify these concepts.
Introduction to Software Engineering Principles of software engineering, UML, modeling large software systems, requirements elicitation, object oriented analysis and design using UML, introduction to design patterns, implementation of large systems, software testing, project management, the software lifecycle.
Selected Topics in Computer Science Selected Topics in Computer Science
Artificial Intelligence  Introduction to the history and implementation of artificial intelligence agents. Topics include search, constraint satisfaction, game-playing, logical agents, belief networks, optimal sequential decision systems. Project implementation.
Machine Learning  An introduction to machine learning and its applications, including supervised, unsupervised learning and deep learning. Main topics include regression, classification and neural networks. Programming assignments.
Hardware/Software Co-design  Introduction to top-down methods for hardware/software system-on-chip co-design. Design flow - system specification, software implementation, hardware synthesis, system design, and verification. Process optimization with various design decisions emphasized. Projects/case studies using system-level design methods and tools.
Accelerated Single-Variable Calculus I Functions, limits, differentiation of algebraic functions, integration, applications including extrema problems, areas, volumes, centroids, and work.
Accelerated Single-Variable Calculus II Differentiation and integration of transcendental functions, applications, methods of integration, coordinate geometry, polar coordinates, infinite series.
Multivariable Calculus Vectors, curves, and surfaces in space. Functions of several variables, partial derivatives, multiple integrals. Vector integral calculus, including line and surface integrals.
Differential Equations with Linear Algebra Scalar differential equations, Laplace transforms, systems of differential equations. Gauss-elimination, algebra of matrices, determinants, vector spaces, linear operators, eigenvalues and eigenvectors.
Probability and Statistics for Engineering Discrete and continuous probability functions, cumulative distributions. Normal distribution. Poisson distribution and Poisson process. Conditional probability and Bayes’ formula. Point estimation and interval estimation. Hypothesis testing. Covariance and correlation. Linear regression theory and the principle of least squares.
General Chemistry General principles of chemistry for science and engineering students. Composition and structure of matter, chemical reactions, bonding, solution chemistry, and kinetics. Thermodynamics, equilibrium, acids and bases, electrochemistry, and coordination compounds.
General Chemistry Laboratory General Chemistry Laboratory
General Physics I Calculus-based introduction to general physics and its applications.
General Physics Laboratory I General Physics Laboratory I
General Physics II Calculus-based introduction to general physics and its applications. Electricity and magnetism, optics, modern physics.
General Physics Laboratory II General Physics Laboratory II
Materials Science I Concepts of materials science developed from an understanding of the atomic and molecular structure of materials and their relationship to the properties of matter. Mechanical, electrical, physical, chemical, and magnetic properties of metals, ceramics, organics, composites, and semiconductors are covered.
Materials Science Laboratory Materials Science Laboratory
Introduction to Engineering, Module 1 First of three required discipline-specific modules for Introduction to Engineering credit providing an introduction to engineering analysis and design. Discipline-specific modules selected based on individual choice.
Introduction to Engineering, Module 2 Introduction to Engineering, Module 2
Introduction to Engineering, Module 3 Introduction to Engineering, Module 3
Technical Communications Instruction and practice in written and oral communication. Emphasis is on organization and presentation of information to a specific audience for a specific purpose.
Program and Project Management for EECE Methods for planning programs and projects. Organization structures and information management for project teams. Communications between project teams and clients, government agencies, and others.
Electrical and Computer Engineering Design Based on product specifications typically supplied by industrial sponsors, teams of students responsible for the formulation, execution, qualification, and documentation of a culminating engineering design. The application of knowledge acquired from earlier coursework, both within and outside the major area, along with realistic technical, managerial, and budgetary constraints using standard systems engineering methodologies and practices.
Senior Engineering Design Seminar Elements of professional engineering practice. Professionalism, licensing, ethics and ethical issues, intellectual property, contracts, liability, risk, reliability and safety, interdisciplinary teams and team tools, codes, standards, professional organizations, careers, entrepreneurship, human factors, and industrial design.
Circuits I Development of basic electrical circuit element models, signal representations, and methods of circuit analysis. Matrix methods and computer techniques. Demonstrations of physical components, measurement techniques, and transient phenomena.
Digital Systems Digital systems and computer architectures and digital systems, from transistor circuits and logic gates, to simple machine (e.g. von Neumann) models. Boolean algebra, Information representation, state machines.
Digital Systems Laboratory Digital Systems Laboratory
Microcontrollers Microprocessor and microcontroller architecture with emphasis on control applications. Usage of assembly language and interfacing with programs written in high-level languages. Interfacing and real-time I/O with 8-bit microprocessors, control algorithms, and networking with microcontrollers.
Microcontrollers Laboratory Microcontrollers Laboratory
Programming and Problem Solving An intensive introduction to algorithm development and problem solving on the computer. Structured problem definition, top down and modular algorithm design. Running, debugging, and testing programs. Program documentation.
Program Design and Data Structures The study of elementary data structures, their associated algorithms and their application in problems; rigorous development of programming techniques and style; design and implementation of programs with multiple modules, using good data structures and good programming style.
Intermediate Software Design High quality development and reuse of architectural patterns, design patterns, and software components. Theoretical and practical aspects of developing, documenting, testing, and applying reusable class libraries and object-oriented frameworks using object-oriented and component-based programming languages and tools.
Embedded Systems Design and implementation of embedded computer-based systems. Programming for real-time systems and the Internet of Things. Embedded system modeling, design, analysis, and implementation using real-time and event-driven techniques.
Control Systems I Theory and design of feedback control systems, steady-state and transient analysis, stability considerations. Model representation. State-variable models.
Principles of Operating Systems I Resource allocation and control functions of operating systems. Scheduling of processes and processors. Concurrent processes and primitives for their synchronization. Use of parallel processes in designing operating system subsystems. Methods of implementing parallel processes on conventional computers. Virtual memory, paging, protection of shared and non-shared information. Structures of data files in secondary storage. Security issues. Case studies.
Database Management Systems Logical and physical organization of databases. Data models and query languages, with emphasis on the relational model and its semantics. Data independence, security, integrity, concurrency.
Control Systems I Theory and design of feedback control systems, steady-state and transient analysis, stability considerations. Model representation. State-variable models.
Artifcial Intelligence Principles and programming techniques of artificial intelligence. Strategies for searching, representation of knowledge and automatic deduction, learning, and adaptive systems.
Computer Science I Introduction to computer science and engineering, problem-solving techniques, algorithmic processes, software design and development.
Computer Science II Software design, structured programming, object-oriented design and programming.
Foundations of Computing Conceptual and formal models, efficiency and levels of abstraction as used in the field of computing, big-Oh notation, combinatorics and conditional probability, basic operations of sets, functions, relations, trees and graphs, regular expressions, deterministic finite automata and non-deterministic finite automata to describe patterns in strings.
Foundations of Data Structures Data structures and formalisms used in computing, such as asymptotic behavior of algorithms, graph, table, relational and set data structures, context-free grammars to describe patterns, assertions in propositional logic form, amortized analysis to evaluate efficiency of data structures such as splay trees and O(1) expansion of tables.
Assembly Language and Computer Organization Principles of computer systems organization, instruction sets, assembly language programming, computer arithmetic, data and control paths, and introduction to memory hierarchy.
Signals and Systems Elementary concepts of continuous-time and discrete-time signals and systems. Specific topics include linear time-invariant (LTI) systems, impulse response, convolution, Fourier series, Fourier transforms, frequency-domain analysis of LTI systems, Laplace transforms, z-transforms, and rational function descriptions of LTI systems.
Communications Systems Introduction to the concepts of analysis and design of communication system components using signal analysis techniques. Amplitude and angle modulation for the transmission of continuous-time signals. Introduction to analog and digital filter design and analysis.
Principles of Systems Programming Introduction to the design and operation of systems software. Analysis is made of current system software technology, including operating systems, language translation systems and file systems.
Embedded Systems Design Computer systems as embedded computing elements and micro-controllers. System specification using UML or other high-level abstract models. Issues and constraints on embedded computing systems, including power, performance, memory and size. Use of DSP, ASIC and micro-controllers in a single design.
Reconfigurable Logic Advanced concepts in Boolean algebra, use of hardware description languages as a practical means to implement hybrid sequential and combinational designs, digital logic simulation, rapid prototyping techniques, and design for testability concepts. Focuses on the actual design and implementation of sizeable digital design problems using representative computer aided design (CAD) tools.
Engineering Ethics The effect of technology in modern society with emphasis on the role of engineering and technical professionals.
Computer Engineering Design I First course in the senior capstone design sequence. Focus is the application of techniques to the design of electronic systems that have digital hardware and software components. Students apply the theory acquired from numerous engineering courses to solve real-world design problems. The design will consider realistic constraints including economic, environmental, sustainability, manufacturability, ethical, social, safety.
Computer Engineering Design II Second course in the senior capstone design sequence. Focus is the application of techniques to the design of electronic systems that have digital hardware and software components. Students apply the theory acquired from numerous engineering courses to solve real-world design problems. The design will consider realistic constraints including economic, environmental, sustainability, manufacturability, ethical, social, safety.
Electronics I (Devices and Materials) Introduction to contemporary electronic devices, terminal characteristics of active semiconductor devices, and models of the BJT and MOSFET in cutoff and saturation region are introduced. Incremental and DC models of junction diodes, bipolar transistors (BJTs), and metal-oxide semiconductor field effect transistors (MOSFETs) are studied to design single and multistage amplifiers.
Circuit Analysis Introduction to electrical elements, sources and interconnects. Ohms law, Kirchoffs law, superposition and Thevenins theorems are introduced. The resistive circuit, OP Amp, RL, RC circuits, Sinusoidal analysis.
Digital Logic Digital system design; number systems and codes; Boolean algebra; logic gates; programmable logic devices and hardware description languages; arithmetic operations and circuits; combinational circuits; code converters, multiplexers and demultiplexers; sequential circuits; flip-flops, registers and shift registers; finite state machines; microprocessor fundamentals.
Calculus I Limits and continuity, derivatives and integrals; differentiation and integration of polynomial, rational, trigonometric, and algebraic functions; applications, including slope, velocity, extrema, area, volume and work.
Calculus II Differentiation and integration of exponential, logarithmic and transcendental functions; integration techniques; indeterminate forms; improper integrals; area and arc length in polar coordinates; infinite series; power series; Taylors theorem.
Probability Models Probability theory, discrete and continuous random variables, Markov chains, limit theorems, stochastic processes, models for phenomena with statistical regularity.
Linear Algebra and Vector Geometry Vector spaces over the real number field; applications to systems of linear equations and analytic geometry in En, linear transformations, matrices, determinants and eigenvalues.
Multivariable Calculus Vectors and analytic geometry in 3-space; partial and directional derivatives; extrema; double and triple integrals and applications; cylindrical and spherical coordinates.
Technical Writing Expository writing, especially for science, pre-engineering and business students.
Mechanics Laws of motion; inertia, acceleration, force, energy, momentum and angular momentum. Rotational and oscillatory motion. Gravitation.
Electricity and Magnetism Electric fields, dc and ac circuits, magnetic fields and magnetic induction. Electric and magnetic properties of matter.
Computer Architecture Study of performance issues and power requirements related to modern computer systems, including Instruction Level Parallelism, out-of-order instruction scheduling, branch prediction, speculative execution, cache memory, and concurrency.
VLSI Design Introduction to VLSI design using CAD tools, CMOS logic, switch level modeling, circuit characterization, logic design in CMOS, systems design methods, test subsystem design, design examples, student design project.
Directed Study Study by individuals or small groups if faculty supervisor agrees. A plan of study approved by the faculty supervisor along with the study will be graded by the faculty supervisor; must be approved by the coordinator for undergraduate studies.  Prerequisite(s): Junior or senior standing in computer science, computer engineering or information technology, and consent of instructor. You must get Instructor consent by email. As well as, Departmental Consent by filling out the Enrollment Assistance request form at www.cse.unt.edu/overrides. Please upload the instructor consent in the form.
Embedded C-Programming C programming and applications for modern microcontroller architectures. Topics covered include C data types, arrays and pointers, data structures and their uses. Introduction to basic techniques of memory management and programming with dynamic data structures. Interrupt handling, multi-module programming including applications containing a mixture of C and assembly language modules, and techniques for manipulating hardware registers and special function registers.
Embedded System Organization Common architectures and instruction sets for embedded microcontrollers. Detailed study of the software/hardware components and interfaces in embedded systems. Applications of soft cores and custom programming interfaces to embedded system control with emphasis on Field-Programmable Gate Array (FPGA) implementation. Usage of a modern Hardware Description Language (HDL) such as Verilog or VHDL. This course practices ETEC OpenLab Format: at least 30% of the assignments are completed in the lab or at home using proper technology.
Digital Logic Design Techniques Study of modern digital circuit implementation technologies, with emphasis on Field-Programmable Gate Arrays (FPGAs). Traditional and computer-based digital synthesis techniques for combination and sequential circuits are covered. Complex systems, such as reaction timers, processors and buses, are built from simpler circuits. A modern hardware description language, such as Verilog or VHDL, is used throughout the course. This course practices ETEC OpenLab Format: at least 30% of the assignments are completed in the lab or at home using proper technology.
Introduction to Solid-State Physics Introduction to the major areas of solid-state physics, including crystal structure and symmetry, lattice vibrations and phonons, thermal properties, energy bands, semiconductors, superconductivity, and magnetic properties.

PHYSICS I Kinematics, Newton's laws of motion, gravitation, Coulomb's law, Lorentz force law, strong and weak nuclear forces, conservation of energy and momentum, relevant laboratory experiments.
CALCULUS I Calculus and analytic geometry in the plane. Algebraic and transcendental functions. Limits and continuity. Differentiation, geometric and physical interpretations of the derivative, Newtons method. Introduction to integration and the Fundamental Theorem of Calculus.
FOUNDATIONS FOR ROSE-HULMAN SUCCESS is to learn about services and resources available on campus and help students to successfully transition to college  laying the foundation for their college career. In RHIT100, the focus of the course is you, and you will be challenged to reflect on and analyze your own learning strategies, study skills, and other professional skills that will help you succeed in and out of the classroom.
RHETORIC & COMPOSITION Emphasizes rhetorical analysis oftexts and images,research methods, and theconventions of academic writing, including argumentation.
ENGINEERING PRACTICE An introduction to electrical and computer engineering, systems engineering design, programming, microcontrollers, soldering and circuit building. Students will work individually and on teams to complete projects and create a system for an end of term competition. Students will also learn about technical documentation and communication. Topics include functions, arrays, conditionals, loops, Boolean algebra, wireless communication, resistors, transistors, diodes motors, sensor, analog and digital inputs and outputs.
PHYSICS II Torque and angular momentum, oscillations, one-dimensional waves, electric fields and potentials, electric current and resistance, DC circuits, capacitance, relevant laboratory experiments.
CALCULUS II Techniques of integration, numerical integration, applications of integration. LHopitals rule and improper integrals. Separable first order differential equations, applications of separable first order differential equations. Series of constants, power series, Taylor polynomials, Taylor and McLaurin series.
INTRODUCTION TO SOFTWARE DEVELOPMENT An introduction to procedural and object-oriented programming with an emphasis on problem solving. Problems may include visualizing scientific or commercial data, interfacing with external hardware such as robots, or solving numeric problems from a variety of engineering disciplines. Procedural programming concepts covered include data types, variables, control structures, arrays, and data I/O. Object-oriented programming concepts covered include object creation and use, object interaction, and the design of simple classes. Software engineering concepts covered include testing, incremental development, understanding requirements, and teamwork.
PHYSICS III Sources of magnetic fields, Faraday's law, inductance electromagnetic waves, reflection and polarization, geometric and physical optics, introduction to relativity, relevant laboratory experiments.
CALCULUS III Vectors and parametric equations in three dimensions. Functions of several variables, partial derivatives, maxima and minima of functions of several variables, multiple integrals, and other coordinate systems. Applications of partial derivatives and multiple integrals.
DC CIRCUITS A review of the definition of voltage, current, energy and power. An introduction to Ohms Law, ideal DC independent and dependent voltage and current sources, resistors, inductors, capacitors, and operational amplifiers. Circuit analysis and simplification by using series, parallel, and Wye-Delta reduction, Kirchhoffs laws, mesh and nodal analysis, Thevenin, Norton and Maximum Power Theorems, superposition, and source transformations. An integral laboratory to build electric circuits and measure voltage, current, resistance and power.
INTRODUCTION TO SIGNAL PROCESSING An introduction to discrete-time signal processing applied to audio, images, and video. Topics include phasor representation of sinusoidal signals, complex arithmetic, sampling, signal spectra, linear time-invariant systems, frequency response, convolution, filter implementation, and MATLAB programming. Integral laboratory.
DIFFERENTIAL EQUATIONS First order differential equations including basic solution techniques and numerical methods. Second order linear, constant coefficient differential equations, including both the homogeneous and non-homogeneous cases. Laplace transforms, Introduction to complex arithmetic, as needed. Applications to problems in science and engineering.
AC CIRCUITS Capacitance, Self and Mutual Inductance. Root-mean-square values of waveforms. Application of phasors to sinusoidal steady-state. Impedance of circuit elements. Mesh and Nodal Analysis applied to ac circuits. Thevenin and Norton theorems applied to ac circuits. Single-phase ac power. Power factor correction. Voltage regulation and efficiency of feeders. Balanced three-phase systems. Ideal and non-ideal transformer models. Integral laboratory
INTRODUCTION TO DIGITAL SYSTEMS Number systems, Binary arithmetic, logic gates, forming logic circuits. Boolean algebra, Karnaugh maps. Propagation delay, hazards, common Combinational logic circuits, structures, and design. Contraction, latches, flip-flops, finite state machines, counters, Sequential circuit timing, and designing Sequential circuits. Register design, control and datapath design. Basic computer architecture, including memory. Integral laboratory.
MATRIX ALGEBRA & SYSTEMS OF DIFFERENTIAL EQUATIONS Basic matrix algebra with emphasis on understanding systems of linear equations from algebraic and geometric viewpoints, and eigenvalues and eigenvectors. Solution of systems of first order linear differential equations by eigensystems and investigation of their solution structure determined by eigensystems. Phase portrait analysis and classification of the nature of the stability of critical points for linear and nonlinear systems. Fourier series. Introduction to complex arithmetic, as needed. Applications to problems in science and engineering.
INTRODUCTION TO EMBEDDED SYSTEMS Sensors and actuators. Input and output devices. Microcontroller architecture. Standard communications protocols. Interrupt generation and processing. Data representation and storage. Memory management. The C programming language and programming styles. Integral laboratory and a term project.
CIRCUITS & SYSTEMS Introduction to 1st and 2nd order circuits and review of differential equations. Bode plots. System classification, impulse and step response, convolution. Laplace and inverse Laplace transforms, block and signal flow diagrams. Benefits of feedback. Modeling and simulating electrical systems. Matlab and Simulink. Integral laboratory.
INTRODUCTION TO PROBABILITY WITH APPLICATIONS TO STATISTICS Introduction to probability theory; axioms of probability, sample spaces, and probability laws (including conditional probabilities). Univariate random variables (discrete and continuous) and their expectations including these distributions: binomial, Poisson, geometric, uniform, exponential, and normal. Introduction to moment generating functions. Introduction to jointly distributed random variables. Univariate and joint transformations of random variables. The distribution of linear combinations of random variables and an introduction to the Central Limit Theorem. Applications of probability to statistics.
CONTINUOUS-TIME SIGNALS & SYSTEMS Signal modeling. Fourier series and Fourier transforms. Response of systems to periodic and aperiodic signals. Filter characterization and design. Ideal and practical sampling. Use of numerical analysis software. Integral laboratory
OBJECT-ORIENTED SOFTWARE DEVELOPMENT Object-oriented programming concepts, including the use of inheritance, interfaces, polymorphism, abstract data types, and encapsulation to enable software reuse and assist in software maintenance. Recursion, GUIs and event handing. Use of common object-based data structures, including stacks, queues, lists, trees, sets, maps, and hash tables. Space/time efficiency analysis. Testing. Introduction to UML.
ELECTRONIC DEVICE MODELING Modeling, analysis, and simulation of electronic circuits that contain two-terminal and threeterminal semiconductor devices. Large-signal, biasing, and small-signal analysis models. Introduction to wave shaping circuits, switching circuits, and amplifiers. Integral laboratory.
DISCRETE & COMBINATORIAL ALGEBRA I An introduction to enumeration and discrete structures. Permutations, combinations and the pigeonhole principle. Elementary mathematical logic and proof techniques, including mathematical induction. Properties of the integers. Set theory. Introduction to functions.
COMPUTER ARCHITECTURE I Computer instruction set architecture and implementation. Specific topics include historical perspectives, performance evaluation, computer organization, instruction formats, addressing modes, computer arithmetic, single-cycle and multi-cycle data paths, and processor control. Assembly language programming is used as a means of exploring instruction set architectures. The final project involves the complete design and implementation of a miniscule instruction set processor.
DISCRETE-TIME SIGNALS AND SYSTEMS System properties: linearity and time-invariance. Sampling and reconstruction. Convolution in discrete-time systems. Z-transform, FIR and IIR filters. Discrete-time filter design. Discrete Fourier transform. Random Variables and Random Processes.
TECHNICAL & PROFESSIONAL COMMUNICATION Provides students with instruction and practice in analyzing contexts, audiences, and genres; crafting documents to meet the demands and constraints of professional situations; integrating all stages of the writing process; and collaborating effectively within and across teams.
COMMUNICATION NETWORKS Layered architectures. Circuit and packet switching. The ISO Reference Model. Point-to-point protocols, error control, framing. Accessing shared media, local area networks. Virtual circuits, datagrams, routing, congestion control. Queuing theory. Reliable message transport, internetworking.
OPERATING SYSTEMS Students learn fundamental concepts of modern operating systems by studying how and why operating systems have evolved. Topics include CPU scheduling, process synchronization, memory management, file systems, I/O systems, privacy and security, and performance evaluation. Students implement parts of an operating system as a means of exploring the details of some of these topics.
DATA STRUCTURES AND ALGORITHM ANALYSIS This course reinforces and extends students ability to independently design, develop, and debug object-oriented software that uses correct, clear, and efficient algorithms and data structures. Students study and implement classical data structures such as list, stack, queue, tree, priority queue, hash table, graph, set, and dictionary. Formal efficiency analysis is used to evaluate the complexity of algorithms for these data structures. Students gain proficiency in writing recursive methods. Students design and implement software individually, in small groups, and in a challenging multi-week team project.
COMPUTER ARCHITECTURE II Instruction-Level Parallelism. Pipelining. Data Hazards. Exceptions. Branch Prediction. Multilength Instructions. Loop Unrolling. TI C6000 Digital Signal Processor. Cache. Memory. MSP430 Microcontroller. PIC Microcontroller. Intel Itanium. Multiprocessors. Hardware Multithreading. Graphics Processors. Supercomputers.
PRINCIPLES OF DESIGN A formal design course that emphasizes the design process. Project management, project reporting and decision-making are learned by student teams as they carry a project through several stages of a formal design process.
ENGINEERING DESIGN I A continuation of a sequence of formal design courses that emphasizes completion of a client-driven project using a formal design process. Student teams carry a project from inception to completion to satisfy the need of a client. Integral laboratory.
HIGH-SPEED DIGITAL DESIGN Signal path modeling through connecting lengths of transmission lines with lumped element models of discontinuities. Circuit parameters from geometries and material properties for resistance, capacitance, inductance and transmission line segments. Lossless and lossy transmission line circuit modeling. High-frequency and high-speed behavior of passive components. Frequency spectrum of digital signals. Digital device driver and receiver modeling. Transmission line impedance discontinuity and termination techniques. Electric and magnetic field coupling mechanisms for capacitive and inductive crosstalk. Ground noise, power plane noise and resonance. Signal and power integrity issues in high-speed digital systems at both the printed-circuit board and chip levels.
ENGINEERING DESIGN II ENGINEERING DESIGN II
ECE 462 Engineering Design III ECE 462 Engineering Design III
INTRODUCTION TO MOBILE ROBOTICS This course will introduce the basic principles of mobile robotics history, theory, hardware and control. Topics will include robot components, effectors and actuators, locomotion, sensors, feedback control, control architectures, representation, localization and navigation. This is a project-oriented course and the student will have hands-on experience with a real mobile robot. The student will be required to complete several laboratory assignments and a multidisciplinary team design project.
EMBEDDED LINUX Brief introduction to Linux on an embedded processor. Software development in various languages (C, shell scripts, Python, JavaScript, etc.). Hardware interfacing. Kernel development. Software tools (IDE, gcc, make, node.js, etc.)
Electromagnetics I: Microwave Engineering Covers microwave transmission line models and their applications; electromagnetic waves in layered media; mode structures in metallic and dielectric waveguides; resonators and cavities; and Green's functions.
General Chemistry For science and engineering majors. Atomic nature of matter, quantum mechanics, ionic and covalent bonding, molecular geometry, stoichiometry, solution stoichiometry, kinetics, and gas laws. Includes laboratory.
Computer-Aided Design in Power Systems Design-oriented course in power system engineering. Students are assigned a project concerning system operation and planning, steady-state and dynamic behaviors of power systems, or distribution systems. Each involves formulation of design criteria, development of approach, application of existing software.
Introduction to Very Large-Scale Integrated Design  Breadth-first introduction to digital VLSI design. Integrated CMOS logic design. CMOS logic delay and power analysis. Introduction to IC- mask-layout, gate-sizing, VLSI building blocks (adders, multipliers, counters, shifters etc.), design for testability, and memory. Projects involve some layout design, and mostly transistor and gate-level schematic design.
Waves Explores electromagnetic waves, the mechanics of oscillatory motion, optics, waves in matter, and experiments in these topics for physical science and engineering majors.
Computer Programming II Concepts of data abstraction and encapsulation including stacks, queues, linked lists, binary trees, recursion, instruction to complexity and use of predefined collection classes.
Calculus with Analytic Geometry I  First quarter in calculus of functions of a single variable. Emphasizes differential calculus. Emphasizes applications and problem solving using the tools of calculus.
Digital Circuits and Systems Overview of digital computer systems. Covers logic, Boolean algebra, combinational and sequential circuits and logic design; programmable logic devices; and the design and operation of digital computers, including ALU, memory, and I/O.
Modern Wireless Communications Introduction to wireless networks as an application of basic communication theorems. Examines modulation techniques for digital communications, signal space, optimum receiver design, error performance, error control coding for high reliability, mulitpath fading and its effects, RF link budget analysis, WiFi and Wimax systems.
Design in Communications Design projects in communications. Frequent projects solved by student teams. Reports and presentations.
Fundamentals of Electrical Engineering Introduction to electrical engineering. Basic circuit and systems concepts. Mathematical models of components. Kirchhoff's laws. Resistors, sources, capacitors, inductors, and operational amplifiers. Solution of first and second order linear differential equations associated with basic circuit forms.
Applied Electromagnetics Introductory electromagnetic field theory and Maxwell's equations in integral and differential forms; uniform plane waves in linear media; boundary conditions and reflection and transmission of waves; guided waves; transmission lines and Smith chart; electrostatics
Analog Circuit Design Design of analog circuits and systems applying modern integrated circuit technology: operational amplifiers, differential amplifiers, active filters, voltage references and regulators.
Microwave Electronic Design Design of microwave circuits using S-parameter techniques. Measurement techniques, CAD of microwave systems. Includes design, fabrication, and evaluation of a microwave amplifier.
Design and Application of Digital Signal Processing Application of learned theories/algorithms and available computer technologies to modern image and speech processing problems. Two-dimensional signals and systems. Image transform, enhancement, restoration, coding. Characteristics of speech signals, linear predictive coding (LPC) of speech, pitch detection, and LPC speech synthesis, speech recognition, hardware designs for signal processing.
Embedded Systems Capstone Capstone design experience. Prototype a substantial project mixing hardware, software, and communications. Focuses on embedded processors, programmable logic devices, and emerging platforms for the development of digital systems. Provides a comprehensive experience in specification, design, and management of contemporary embedded systems.
Power Electronics Design Electronic conversion and control of electrical power. Includes semiconductor switching devices, power converter circuits, design of magnetics, and control of power converters. Also ac/ac, ac/dc, and dc/dc power converters; circuit simulation; extensive laboratory work; a four-week power converter design project.
Introduction to Differential Equations and Applications Introductory survey of ordinary differential equations; linear and nonlinear equations; Taylor series; and. Laplace transforms. Emphasizes on formulation, solution, and interpretation of results. Examples drawn from physical and biological sciences and engineering.
Circuit Theory Electric circuit theory. Analysis of circuits with sinusoidal signals. Phasors, system functions, and complex frequency. Frequency response. Computer analysis of electrical circuits. Power and energy. Two port network theory. Laboratory in basic electrical engineering topics.
Linear Integrated Circuits Design of linear integrated circuits applying modern MOS and BJT integrated circuit technologies: single-stage amplifiers; current-mirror DC bias and active load circuits; stability and frequency compensation of single-stage and two-stage operational amplifiers; output stages; current and voltage reference circuits.
Quantitative Introductory Statistics for Data Science The basic concepts of statistics, machine learning and data science, as well as their computational aspects. Statistical models, likelihood, maximum likelihood and Bayesian estimation, regression, classification, clustering, principal component analysis, model validation, statistical testing. Practical implementation and visualization in data analysis. Assumes knowledge of basic probability, mathematical maturity, and ability to program.
Energy Systems Develops understanding of modern energy systems through theory and analysis of the system and its components. Discussions of generation, transmission, and utilization are complemented by environmental and energy resources topics as well as electromechanical conversion, power electronics, electric safety, renewable energy, and electricity blackouts.
Semiconductor Devices Fundamentals of semiconductor theory: carrier diffusion and drift; concept of direct and indirect energy materials, effective mass of mobile carriers; device physics: homo- and heterojunctions, operating principles of bipolar, junction, and MOS field-effect transistors.
Sensors and Sensor Systems Introduction to optical and solid-state chemical and physical sensors. Topics include transduction mechanisms, design parameters, fabrication methods and applications.
Network Security and Cryptography Fundamental principles of cryptography and its application to network and communication security. An introduction to the fundamental tools in cryptography and the protocols that enable its application to network and communication security.
Capstone Project in Synthetic Biology Capstone design experience in synthetic biology. Provides students with skills in handling open-ended design problems in synthetic biology. Students participate on a team that designs, builds and tests a new transgenic microorganism with potential applications ranging from advanced materials, bio-sensing and/or remediation, or human health.
Computer Architecture I  Introduction to computer architecture. Assembly and machine language, microprocessor organization including control and datapath. Computer arithmetic. Memory systems and caching. Performance modeling of microprocessors.
Calculus with Analytic Geometry II Second quarter in the calculus of functions of a single variable. Emphasizes integral calculus. Emphasizes applications and problem solving using the tools of calculus.
Medical Instrumentation Introductory course in the application of instrumentation to medicine. Topics include transducers, signal-conditioning amplifiers, electrodes and electrochemistry, ultrasound systems, electrical safety, and the design of clinical electronics.
Introduction to Differential Equations Introductory course in ordinary differential equations. Includes first- and second-order equations and Laplace transform.
Design of Digital Circuits and Systems Provides a theoretical background in, and practical experience with, tools, and techniques for modeling complex digital systems with the Verilog hardware description language, maintaining signal integrity, managing power consumption, and ensuring robust intra- and inter-system communication.
Matrix Algebra with Applications Systems of linear equations, vector spaces, matrices, subspaces, orthogonality, least squares, eigenvalues, eigenvectors, applications. For students in engineering, mathematics, and the sciences.
Introduction to Computer-Communication Networks  Computer network architectures and protocols. OSI Layers and performance analysis. Transmission media, switching, multiple access arbitration. Network routing, congestion control, flow control. Transport protocols, real-time, multicast, network security.
VLSI II Provides a fairly deep understanding of how IC-based memory and datapath blocks are designed using static and dynamic CMOS technologies. Gives students extensive experience with industry-standard computer-aided design tools, including Cadence (Virtuoso, DRC, LVS) and Avanti (Hspice).
Introduction to Embedded Systems Introduces the specification, design, development, and test of real time embedded system software. Use of a modern embedded microcomputer or microcontroller as a target environment for a series of laboratory projects and a comprehensive final project.
Integrated Systems Capstone Team-based design experience to develop integrated electronic systems by constructing and validating, prototype integrated circuits (IC) and sensors using modern Computer Aided Design (CAD) tools. Systems are simulated using modern semiconductor, MEMs and nanophotonic technologies. Teams define requirements; investigate tradeoffs in performance, cost, power and size; design for both reliability and testability.
Engineering Entrepreneurial Capstone Completion of an industry-motivated and mentored engineering project to develop design skills. Overseen by UW Faculty and guided by practicing engineers sponsored by industry. Emphasizes cross-disciplinary teamwork.
Introduction to Professional Issues Covers topics of interest to students planning their educational and professional path, including salaries, the value of advanced degrees, societal expectations of engineering professionals, the corporate enterprise, ethical dilemmas, patents and trade secrets, outsourcing, and the global market.
Control System Analysis I Linear Servomechanism theory and design principles. Pole-zero analysis, stability of feedback systems by root locus and real-frequency response methods. Design methods of Bode and Nichols. Introduction to advanced topics in automatic control theory, state variable methods.
Fundamentals of Integrated Circuit Technology  Processing physics, chemistry, and technology, including evaporation, sputtering, epitaxial growth, diffusion, ion implantation, laser annealing, oxidation, chemical vapor deposition, photoresists. Design considerations for bipolar and MOS devices, materials and process characterization. Future trends.
Antennas: Analysis and Design Fundamentals of antennas, analysis, synthesis, and computer-aided design, and applications in communications, remote sensing, and radars. Radiation pattern, directivity, impedance, wire antennas, arrays, numerical methods for analysis, horn antennas, microstrip antennas, and reflector antennas.
Computer Programming I Basic programming-in-the-small abilities and concepts including procedural programming (methods, parameters, return, values), basic control structures (sequence, if/else, for loop, while loop), file processing, arrays, and an introduction to defining objects.
Systems, Controls, and Robotics Capstone In-depth control engineering design experience in small design teams. Includes project planning and management, reporting, and technical communication. Student teams design, implement, test, and report on their project results, Includes lectures on selected topics, e.g., project management, intellectual property, and some control engineering topics.
Devices and Circuits I Physics, characteristics, applications, analysis, and design of circuits using semiconductor diodes and field-effect transistors with an emphasis on large-signal behavior and digital logic circuits. Classroom concepts are reinforced through laboratory experiments and design exercises.
Mechanics  Basic principles of mechanics and experiments in mechanics for physical science and engineering majors.
Digital Signals and Filtering Methods and techniques for digital signal processing. Review of sampling theorems, A/D and D/A converters. Demodulation by quadrature sampling. Z-transform methods, system functions, linear shift-invariant systems, difference equations. Signal flow graphs for digital networks, canonical forms. Design of digital filters, practical considerations, IIR and FIR filters. Digital Fourier transforms and FFT techniques.
Random Signals for Communications and Signal Processing Probability and random processes in communications. Random variables, distributions, and expectation. Statistical filter design for detection and estimation.
Capstone Integrated Digital Design Projects VLSI-capstone course. A more detailed examination of building high-performance or low-energy integrated circuits. Wire design, timing-elements, clock generation, distribution and control, dynamic-logic, low-power design.
Engineering Design for K-12 Outreach Design process targeted toward development of relevant activities for K-12 audiences in such areas of science and engineering. Instruction in basic design process, design specification combined with an overview of relevant cognitive/social development in K-12.
Continuous Time Linear Systems Introduction to continuous time signal analysis. Basic signals including impulses, pulses, and unit steps. Periodic signals. Convolution of signals. Fourier series and transforms in discrete and continuous time. Computer laboratory.
Devices and Circuits II Characteristics of bipolar transistors, large- and small- signal models for bipolar and field effect transistors, linear circuit applications, including low and high frequency analysis of differential amplifiers, current sources, gain stages and output stages, internal circuitry of op-amps, op-amp configurations, op-amp stability and compensation.
Instrumentation Design Project Capstone Team-based design for developing an electronic instrumentation system and constructing and validating a prototype using modern printed circuit board technology. Teams develop design requirements; investigate tradeoffs for miniaturization, integration, performance, and cost; and consider use cases, failure modes, manufacturability, and testability.
Power System Dynamics and Protection Analysis of symmetrical and unsymmetrical power systems' networks, fault analysis, and stability studies.
Advanced Multivariable Calculus I Topics include double and triple integrals, the chain rule, vector fields, line and surface integrals. Culminates in the theorems of Green and Stokes, along with the Divergence Theorem.
Statistical Methods in Engineering and Science Concepts of probability and statistics. Conditional probability, independence, random variables, distribution functions. Descriptive statistics, transformations, sampling errors, confidence intervals, least squares and maximum likelihood. Exploratory data analysis and interactive computing.
Electromagnetism Covers the basic principles of electromagnetism and experiments in these topics for physical science and engineering majors.
Power System Analysis Introduction to methods of analyzing power systems. Includes symmetrical components, calculation of line parameters, representation of transmission lines and power components, and power flow control.
Introduction to Digital Imaging Systems Image representation and standards, visual perception and color spaces, spatial domain image filtering and enhancement, image restoration, image transforms, image and video coding, image geometrical transformation and camera modeling.
Calculus with Analytic Geometry III Third quarter in calculus sequence. Introduction to Taylor polynomials and Taylor series, vector geometry in three dimensions, introduction to multivariable differential calculus, double integrals in Cartesian and polar coordinates.
Probability I Sample spaces; basic axioms of probability; combinatorial probability; conditional probability and independence; binomial, Poisson, and normal distributions.
Discrete Time Linear Systems Discrete time signals and systems, impulse response, convolution, Z-transforms, discrete time Fourier analysis. Computer laboratory.
Applied Linear Algebra and Numerical Analysis Analysis and application of numerical methods and algorithms to problems in the applied sciences and engineering. Applied linear algebra, including eigenvalue problems. Emphasis on use of conceptual methods in engineering, mathematics, and science. Extensive use of MATLAB package for programming and solution techniques.
DATA STRUCTURES AND ALGORITHMS Advanced data structures, including lists, trees, sets, and graphs. Analysis of algorithms. Emphasis on abstract data types, their representations, and role as models in the development of computer algorithms.
INTRODUCTION TO SOFTWARE ENGINEERING Systems development life cycle from project request through project implementation and evaluation. Systems analysis and design concepts, tools, and techniques are emphasized. Traditional and structured approaches.
SYSTEM-LEVEL PROGRAMMING AND UTILITIES Introduction software infrastructure underlying development of computer programs. Topics include Linux utilities, shell scripting, processes, facilities for programming, the C programming language, libraries, structures, pointers, dynamic memory management, and system calls.
OPERATING SYSTEMS CONCEPTS Fundamental operating systems concepts: processes and threads, CPU scheduling, coordination and synchronization, deadlock, memory management, input/output devices, file systems, distributed systems, protection and security. Case studies and lab exercises using modern operating systems.
CIRCUIT ANALYSIS II Topics include first and second order system transient analysis, Laplace transform analysis, sinusoidal steady state analysis, Bode plots, resonance, first and second order filters, Fourier series, and use of computer aided design software.
ELECTRONIC CIRCUITS I The design of discrete and integrated electronic circuits. Topics include large and small signal modeling of diodes, bipolar junction transistors, and MOS transistors. Biasing, small and large signal amplifier design, feedback, oscillators, and the use of computer-aided design software.
EMBEDDED SYSTEM DESIGN A course in the design and implementation of embedded electronic systems. Topics include digital logic building blocks, programmable logic, microcontrollers, analog interface and support components, timing margin analysis, serial interfacing, signal integrity, heat sinks, and thermal resistance. A significant term project is required.
COMPUTER ARCHITECTURE This course will survey advanced computer architecture techniques such as branch prediction, super-scalar, multiprocessors and multicomputers. It will also compare CPU design options (such as CISC vs. RISC) and discuss the effects of these options on performance.
DATA COMMUNICATIONS An introduction to data communications techniques, particularly as applied to computer networks. Physical media and devices, data link and network protocols, and other data communications topics will be studied.
SIGNALS AND SYSTEMS ANALYSIS A course in the engineering applications of transform methods. The processing of analog and digital signals is discussed, as well as the analysis and design of linear time invariant systems. Topics include signal and system classification, vector space representations, convolution, impulse response, Fourier Transform, DTFT, DFT, FFT, windowing, and time frequency tradeoff.
DIGITAL SIGNAL PROCESSING SYSTEMS The techniques and tools used for signal/system analysis and design in the digital domain. Filter design and frequency analysis are presented in the context of implementation on modern digital hardware. Hands-on experiments and design projects are a central component of the course.
DESIGN OF MICROCONTROLLER APPLICATIONS The architecture and capabilities of single chip microcontrollers and the design of microcontroller applications. A/D and D/A conversion, I/O, timing, programming, expansion methods, and development systems. Design projects will be an integral part of both lecture and laboratory.
INTEGRATED CIRCUIT SYSTEMS DESIGN The design of digital circuits using behavioral modeling with VHDL. Topics include CPLD and FPGA architectures, the VHDL language, modeling of combinational logic, sequential logic, microcontrollers, state machines, and algorithms for numeric computation on integer and fixed-point numbers. Hands-on projects are a significant part of the course.
BIOMEDICAL IMAGING AND IMAGE PROCESSING Study of biomedical imaging modalities used in diagnostic imaging with an emphasis on physical principles and algorithms underlying X-ray imaging, computed X-ray tomography, magnetic resonance imaging, fluoroscopy, and ultrasound imaging. Topics also include multidimensional signal processing, image acquisition and filtering, reconstruction, qualification, segmentation, and pattern analysis.
EMBEDDED SYSTEMS INTERFACE Study of the interface between microcontrollers and sensors and actuators that enable programmed control of monitoring and interaction with the environment. Use of wired and wireless communications to link users to modern electronic systems either directly or through the Internet.
ENGINEERING CO-OP 1 The first full-time, four-month cooperative engineering work experience usually in a local industrial/manufacturing firm. Reading and writing assignments required. At least one evening meeting required.
ENGINEERING CO-OP 2 The second full-time, four-month cooperative engineering work experience usually in a local industrial/manufacturing firm. Reading, writing assignments required. At least one evening meeting required.
INTRODUCTORY MACROECONOMICS Introduction to the study of the national and global economies. Topics include the effects of government taxation and budget deficits on economic growth; ways to alleviate unemployment, inflation and international trade imbalances, and the importance of expectations and decision-making in an uncertain world. Fulfills Foundations - Social and Behavioral Sciences.
INTRODUCTORY MICROECONOMICS Focuses on the interactions among households, producers, and governments in market economies. Applies fundamental methods of economic analysis to topics such as household spending and saving patterns; producer pricing, profits, and organization; wages and income distribution; investment decisions; health care and insurance; government taxes, spending, and regulation of markets. Fulfills Foundation - Social and Behavioral Sciences.
ENGINEERING CO-OP 3 The third full-time, four-month cooperative engineering work experience usually in a local industrial/manufacturing firm. Reading and writing assignments required. At least one evening meeting required.
SENIOR ENGINEERING PROJECT I (CAPSTONE) An independent investigation of theoretical or experimental design problems in engineering. The nature and scope of the project are determined by the student in consultation with the instructor and depend upon the facilities available. Normally this project is carried out during the entire senior year, with one-hour of credit during the first semester and two hours of credit during the second semester. A written technical report is required.
ETHICS What is good? What is evil? Are there objective standards for right and wrong? What are these objective standards? How can they be applied to important contemporary moral problems? This course considers the answers philosophers give to these and related questions.
SENIOR ENGINEERING PROJECT II (CAPSTONE) SENIOR ENGINEERING PROJECT II (CAPSTONE)
DYNAMICS Study of motion and the relationship between force, mass, and acceleration for particles and rigid bodies. Work-energy and impulse-momentum concepts.
MACHINE DESIGN I Topics include shear and bending stresses in beams, beam deflections, statically indeterminate beams, planar combined loading, triaxial stress and strain transformations, static failure theories, fatigue failure theories, surface failures, belt and chain drives, clutches and brakes, finite element analysis for planar loading, and introduction to strain gauges and rosettes.
ELECTRONIC MATERIALS AND DEVICES An introduction to solid state electronic materials and devices. Topics include basic quantum mechanics, atomic structure, electrical, magnetic and optical properties of electronic materials, and fundamentals of semiconductor devices including diodes and transistors.
TEACHING SOCIAL STUDIES: ELEMENTARY Introduces students to strategies, methods, and issues that are related to teaching social studies content at the elementary level. Students will study current state and national standards and design units and lessons to achieve appropriate objectives.
PERSPECTIVES ON GLOBALIZATION The anthropology of globalization examines the emergence of "globalized local cultures." Students employ the ethnographic approach to understand globalization as the intensification of interconnectedness, in which anthropologists learn that fundamental problems of deep and universal concern to humans everywhere will need to be addressed at local, national, and global levels.
INTRODUCTION TO ART Introduction to the visual arts. Examination of creative, social, historical, and aesthetic aspects of selected works of art.
ORGANIC CHEMISTRY FOR LIFE SCIENCES I The first semester of a two-semester sequence of organic chemistry designed to meet the specific needs of life science students. Topics include classes of organic compounds, nomenclature, transformations and reaction mechanisms, stereochemistry, and spectroscopy. This course emphasizes the importance and application of functional group organic chemistry in living systems.
HISTORICAL PERSPECTIVES IN ANTHROPOLOGY Students will explore historical, theoretical, and methodological developments from an anthropological perspective, focusing on trends in interpretation of material culture, cultural resources management, experimental archaeology, and the contribution of anthropology to understanding major social issues. Students will critically examine the practice and application of anthropological research from a historic perspective.
General Chemistry I This course is an introduction to important concepts and principles of chemistry with a focus on the following topics: atomic structure and periodic properties, stoichiometry, properties of gases, thermochemistry, chemical bond types, intermolecular forces, liquids and solids and a brief introduction to chemical kinetics, organic chemistry and materials chemistry.
General Chemistry Laboratory I  Experiments of atomic spectra, stoichiometric analysis, qualitative analysis, and organic and inorganic syntheses.
Engineering Experiences I  This course consists of a set of engineering experiences such as lectures, small group sessions, on-line modules and visits. Students are required to complete a specified number of experiences during the semester. The goal is to introduce students to the engineering profession, engineering disciplines, college success strategies, Stevens research and other engaging activities.
Engineering Design I: Introduction to Systems Thinking  This course introduces students to the process of design and seeks to engage their enthusiasm for engineering from the very beginning of the program. The engineering method is used in the design and manufacture of a product. Product dissection is exploited to evaluate how others have solved design problems. Development is started of competencies in professional practice topics, primarily: effective group participation, project management, cost estimation, communication skills and ethics.
Engineering Graphics Engineering graphics: principles of orthographic and auxiliary projections, pictorial presentation of engineering designs, dimensioning and tolerance, sectional and detail views, assembly drawings. Descriptive geometry. Engineering figures and graphs. Solid modeling introduction to computer-aided design and manufacturing (CAD/CAM) using numerically-controlled (NC) machines.
Introduction to Programming An introduction to the use of an advanced programming language for use in engineering applications, using C++ as the basic programming language and Microsoft Visual C++ as the program development environment. Topics covered include basic syntax (data types and structures, input/output instructions, arithmetic instructions, loop constructs, functions, subroutines, etc.) needed to solve basic engineering problems as well as an introduction to advanced topics (use of files, principles of objects and classes, libraries, etc.). Algorithmic thinking for development of computational programs and control programs from mathematical and other representations of the problems will be developed.
Integral Calculus  Definite integrals of functions of one variable, antiderivatives, the two versions of the Fundamental Theorem of Calculus, integration techniques including substitution, integration by parts, inverse trigonometric substitutions, and partial fraction decompositions; improper integrals, L’Hospital’s Rule, applications to geometry and physics including calculation of areas, volumes, and work done by a variable force.
Differential Calculus Limits and derivatives of functions of one variable including the trigonometric, inverse trigonometric, logarithmic and exponential functions; differentiation rules, implicit differentiation, geometric and physical interpretations of the derivative, applications of the derivative including optimization and sketching graphs of one variable functions.
Writing And Communications Colloquium This course empowers students with the written and oral communications skills they need for university-level academic discourse and thoughtful global citizenship. The mission of the course is to help students develop their skills in the following essential areas: connective and innovative thinking about complex global issues; composition, structure and argumentation; grammatical and stylistic sophistication; critical reading and textual analysis; research and investigation; group work and mutual evaluation; and polished public speaking using visual aids.
Engineering Design II: Field Sustainable Systems with Sensors  This course will continue the freshman year experience in design. The engineering method introduced in Engineering Design I will be reinforced. Further introduction of professional practice topics will be linked to their application and testing in case studies and project work.
Series, Vectors, Functions, and Surfaces Taylor polynomials and series, functions of two and three variables, linear functions, implicit functions, vectors in two and three dimensions.
Calculus of Two Variables Partial derivatives, the tangent plane and linear approximation, the gradient and directional derivatives, the chain rule, implicit differentiation, extreme values, application to optimization, double integrals in rectangular coordinates.
Mechanics  Vectors, kinetics, Newton’s laws, dynamics or particles, work and energy, friction, conserverative forces, linear momentum, center-of-mass and relative motion, collisions, angular momentum, static equilibrium, rigid body rotation, Newton’s law of gravity, simple harmonic motion, wave motion and sound.
CAL Colloquium: Knowledge, Nature, Culture  This course introduces students to enduring questions and methods of inquiry that drive research and creative endeavors in the College of Arts and Letters. Drawing on multiple ethical, cultural, and disciplinary perspectives, each faculty member will select a theme designed to help students deepen their understanding of a social-cultural phenomenon by examining it from different points of view.
Introduction to Entrepreneurial Thinking Entrepreneurial thinking enables engineers to design value-added products and processes that delights the customer and creates a superior business model. This course teaches students a new way of problem solving, finding unique fit between a real-world problem and a new solution. Learning objectives include, teaming and leadership skills, obtaining information through customer discovery, enhancing presentation skills, and techniques for assessing a new idea; including customer and value analysis, competition analysis, and basic financial analysis.
Differential Equations  Ordinary differential equations of first and second order, homogeneous and non-homogeneous equations; improper integrals, Laplace transforms; review of infinite series, series solutions of ordinary differential equations near an ordinary point; boundary-value problems; orthogonal functions; Fourier series; separation of variables for partial differential equations.
Electricity and Magnetism Coulomb’s law, concepts of electric field and potential, Gauss’ law, capacitance, current and resistance, DC and R-C transient circuits, magnetic fields, Ampere’s law, Faraday’s law of induction, inductance, A/C circuits, electromagnetic oscillations, Maxwell’s equations and electromagnetic waves.
Mechanics of Solids  Fundamental concepts of particle statics, equivalent force systems, equilibrium of rigid bodies, analysis of trusses and frames, forces in beam and machine parts, stress and strain, tension, shear and bending moment, flexure, combined loading, energy methods, statically indeterminate structures
Circuits and Systems  Ideal circuit elements; Kirchoff laws and nodal analysis; source transformations; Thevenin/Norton theorems; operational amplifiers; response of RL, RC and RLC circuits; sinusoidal sources and steady state analysis; analysis in frequency domain; average and RMS power; linear and ideal transformers; linear models for transistors and diodes; analysis in the s-domain; Laplace transforms; transfer functions.
Engineering Design III: Structural Performance and Failure  This course continues the experiential sequence in design. Design projects are linked with Mechanics of Solids topics taught concurrently.
Physical Education I Physical Education I
Discrete Mathematics This course provides the background necessary for advanced study of mathematics or computer science. Topics include propositional calculus, predicates and quantifiers, elementary set theory, countability, functions, relations, proof by induction, elementary combinatorics, elements of graph theory, mends, and elements of complexity theory.
Engineering Design IV: Systems with Analog Circuits This course continues the experiential sequence in design. Design projects and lectures address the area of electronics and instrumentation.
Thermodynamics  This course introduces students to concepts of energy, energy transfer and analysis. Major thermodynamic devices such as heat exchangers, turbines and compressors will be discussed in the context of the first and second laws of thermodynamics along with the required property relationships and equations necessary to analyze these systems. The fundamental mechanisms of heat transfer will also be presented before the course culminates with a discussion of integrated thermodynamic systems and cycles such as refrigeration and air conditioning units.
Computational Data Structures and Algorithms  The role of data structures and algorithms in the real world; principles of programming including the topics of control flow, recursion and I/O; principles of computational intelligence; topics from elementary data structures including arrays, lists, stacks, queues, pointers, strings; searching and sorting; data structures for concurrent execution; topics from elementary algorithms including analysis of algorithms and efficiency, computational complexity, empirical measurements of computational complexity of algorithms, proof techniques including induction; selected topics from advanced algorithms including distributed algorithms; programming laboratory exercises and projects.
Microprocessor Systems  A study of the implementation of digital systems using microprocessors. The architecture and operation of microprocessors is examined in detail along with I/O interfacing, interrupts, DMA and software design techniques. Specialized controller chips for interrupts, DMA, arithmetic processing, graphics and communications are discussed. The laboratory component introduces hardware and software design of digital systems using microprocessors.
Physical Education II Physical Education II
Transport Phenomena in Solid State Devices Introduction to the underlying phenomena and operation of solid state electronic, magnetic and optical devices essential in the functioning of computers, communications and other systems currently being designed by engineers and scientists. Charge carrier concentrations and their transport are analyzed from both microscopic and macroscopic viewpoints, carrier drift due to electric and magnetic fields in solid state devices is formulated and optical energy absorption and emission are related to the energy levels in solid-state materials. Diffusion, generation and recombination of charge carriers are combined with carrier drift to produce a continuity equation for the analysis of solid state devices.
Materials Processing  An introduction is provided to the important engineering properties of materials, to the scientific understanding of those properties and to the methods of controlling them. This is provided in the context of the processing of materials to produce products.
Engineering Design V: Materials Selection and Process Optimization  This course includes both experimentation and open-ended design problems that are integrated with the Materials Processing course taught concurrently. Core design themes are further developed.
Probability and Statistics for Engineers  Descriptive statistics, pictorial and tabular methods, measures of location and of variability, sample space and events, probability and independence, Bayes’ formula, discrete random variables, densities and moments, normal, gamma, exponential and Weibull distributions, distribution of the sum and average of random samples, the central limit theorem, confidence intervals for the mean and the variance, hypothesis testing and p-values, applications for prediction in a regression model.
Information System Engineering The focus of the course is on data networks and end-user software environments for information systems. Topics include the TCP/IP protocols, organization of large-scale data networks, end-to-end operation over heterogeneous networks and the software foundation of client-server application programs. The students complete a project using TCP/IP protocols to create a basic client-server application.
Physical Education III Physical Education III
Modeling and Simulation Development of deterministic and non-deterministic models for physical systems, engineering applications, and simulation tools for deterministic and non-deterministic systems
Engineering Economics  Students learn a set of Engineering Economic techniques that serve as powerful tools to aid in the design, implementation and continued improvement of any engineering project or process. The primary goal of this course is to help students develop an ability to make sound economic decisions, thereby facilitating effective evaluation and selection of alternative technical, design, and engineering solutions. In this course students will be exposed to the analysis of financial data, the concept of interest rates, the time value of money, economic analysis using the three worths, internal rate of return and benefit cost analysis.
Engineering Design VI This course addresses the general topic of selection, evaluation, and design of a project concept, emphasizing the principles of team-based projects and the stages of project development. Techniques to acquire information related to the state-of-theart concepts and components impacting the project, evaluation of alternative approaches and selection of viable solutions based on appropriate cost factors, presentation of proposedprojects at initial, intermediate and final stages of development, and related design topics
Introduction to Image Processing and Coding  Image acquisition, storage, image formation, sampling, basic relationship between pixels, imaging geometry, segmentation: edge detection, edge linking and boundary detection, Hough transform, region growing, thresholding, split and merge, histogram matching, representation: chain code, polygonal approximation and skeletonization, thinning algorithms, texture, image compression: elementary discussion of motion vectors for compression, discussion of industry standards such as JEPG and MPEG.
Physical Education IV Physical Education IV
Senior Innovation I This course enables students to effectively identify senior design project topics, form and build teams and create a project charter.
Digital System Design  Design of complex digital CMOS/VLSI circuits. Introduction to MOS transistor characteristics and fabrication, digital circuit design and layout for integrated circuits, major categories of VLSI circuit functions, design methodologies including use of Hardware Description Languages (HDL), FPGA, verification, simulation, testability.
Engineering Design VII The development of design skills and engineering judgment, based upon previous and current course and laboratory experience, is accomplished by participation in a design project. Projects are selected in areas of current interest such as communication and control systems, signal processing, and hardware and software design for computerbased systems.
Senior Innovation II  This course focuses on the Identification and articulation of the entrepreneurial, societal and humanitarian values of the products and processes developed during the senior design project.
Engineering Design VIII This includes the completion of a prototype (hardware or software), testing and demonstrating the performance, and the evaluation of results.
Senior Innovation II This course focuses on preparing a business idea based on the senior design project and creating a business model for that idea.

Introduction to Academic Writing Teaches rhetorical knowledge and skills, focusing on critical reading, writing, and thinking. Introduces writing for specific academic audiences and situations. Emphasizes writing as a process through multiple drafts and revisions
Public Speaking Provides an introduction to basic concepts, theories, principles of oral communication as applied to a variety of speaking situations. Develops competence in oral communication through performance, the development of critical thinking skills, arrangement of ideas, and use of evidence and reasoning to support claims
HUMANITIES HUMANITIES
Interpersonal Communication Examines the role of communication in interpersonal relationships. Includes the history of interpersonal communication research and theory, and applications such as negotiation, conflict management, listening, and assertiveness.
Physics for Scientists and Engineers I A calculus-based treatment of introductory physics for scientists and engineers. Topics include mechanics, fluid physics, thermodynamics, vibrations, and waves
Fundamentals of Programming Introduces the fundamental concepts of computer programming. Presents the ideas, tools, structure, syntax, and design techniques for developing well-formed programs. Studies problem solving, program structure, data types, decision logic, loops, functions, input and output, and arrays. Introduces the basic ideas of classes and objects. Requires students to program a number of assignments that demonstrate their understanding of these concepts.
Computer Networks I  A rigorous introduction to computer networking theory and technologies for Computer Science and Information Technology majors. Includes theory of data communications protocols; theory and design of transmission systems; transmission media; and communication software. Emphasizes the lower layers of the Open Systems Interconnection model.
Computer Organization and Architecture Uses assembly language to introduce basic concepts of computer organization. Includes number systems, CPU organization, instruction sets, programming in assembly, memory organization, debugging, program design, and documentation
Computer Engineering Problem Solving with MATLAB and LabVIEW Computer Engineering Problem Solving with MATLAB and LabVIEW
Circuit Theory Circuit Theory
Digital Design I Digital Design I
Introduction to System Administration--Linux/UNIX Introduces the UNIX Operating System using the popular Linux OS. Explores the Linux file system, Linux administration, OS utilities, and program features and uses. Aids the student in the development, understanding, and working knowledge of the details of the Linux Operating System, memory organization, disk architectures, and demand paged virtual memory. Includes OS installation, user creation, rights management, loading daemons, and server best practices.
Calculus I  Covers limits, continuity, differentiation, applications of differentiation, integration, and applications of integration, including derivatives and integrals of polynomial functions, rational functions, exponential functions, logarithmic functions, trigonometric functions, inverse trigonometric functions, and hyperbolic functions.
Object-Oriented Programming Introduces the key concepts of object-oriented programming. Includes pointers and dynamic memory allocation, linked lists, inheritance and polymorphism, the development of graphical user interfaces, operator overloading, memory managment, exceptions, templates and the standard template library, and an overview of object-oriented analysis and design
Introduction to Algorithms and Data Structures Introduces data structures using an object-oriented programming language, and paradigm. Studies data abstraction as a design tool. Includes advanced arrays, records, dynamic data structures, searching and sorting, vectors, trees, linked lists, and graphs. Uses file I/O to store data structures. Discusses algorithm metrics
Discrete Mathematical Structures I For Computer Science Majors. Covers algebraic structures applied to computer programming. Includes logic, sets, elementary number theory, mathematical induction, recursion, algorithm complexity, combinatorics, and relations
Software Engineering Presents concepts, methodology and best-practices necessary to develop large scale software projects. Includes step-wise software requirements analysis, design, implementation, testing and release. Discusses software generation, reuse, scheduling, verification, and maintenance. Emphasizes current "real world" industry best-practices and tools.
Web Programming I  Covers design and development of browser-based programs with an emphasis on single-page applications. Teaches generation and modification of HTML via JavaScript, debugging techniques, communicating with web servers, and use of XML and JSON.
Operating Systems Theory Introduces the Unix operating system. Presents the underlying theory and concepts of an operating system, and covers the following topics in depth: device management, processes, threads, synchronization, scheduling, deadlocks, memory management, virtual memory, and file systems. Provides practical experience in writing programs that use standard Unix system calls to interface directly with the operating system.
Database Theory Introduces theory, concepts, architecture, and use of database management systems (DBMS). Presents the relational and object-oriented database models used in both local and client/server databases. Discusses the Structured Query Language (SQL), database design, normalization theory, and relational calculus relating to database management systems.
Engineering Analysis Engineering Analysis
Signals and Systems Signals and Systems
Embedded Systems II Embedded Systems II
Digital Signal Processing Digital Signal Processing
Electronic Systems Electronic Systems
Calculus II Includes integration techniques, arc length, area of a surface of revolution, moments and centers of mass, sequences and series, parametrization of curves and polar coordinates, vectors in 3-space, and quadric surfaces.
Physics for Scientists and Engineers I Lab Provides firsthand experience with the laws of mechanics, thermal physics, vibrations, and waves. Introduces methods of scientific data analysis.
Discrete Mathematical Structures I Covers algebraic structures applied to computer programming. Includes logic, sets, elementary number theory, mathematical induction, recursion, algorithm complexity, combinatorics, and relations.
Software Engineering Presents concepts, methodology and best-practices necessary to develop large scale software projects. Includes step-wise software requirements analysis, design, implementation, testing and release. Discusses software generation, reuse, scheduling, verification, and maintenance.
Database Theory Introduces theory, concepts, architecture, and use of database management systems (DBMS). Presents the relational and object-oriented database models used in both local and client/server databases. Discusses the Structured Query Language (SQL), database design, normalization theory, and relational calculus relating to database management systems.
Calculus I Differential calculus of functions of a single variable, including polynomial, rational, exponential, and trig functions. Applications, including optimization and related rates problems. Single variable integral calculus, using anti-derivatives and simple substitution. Applications may include area, volume, work problems.
Calculus II Techniques of integration. Calculus involving transcendental functions, polar coordinates. Taylor polynomials, vectors/curves in space, cylindrical/spherical coordinates.
Linear Algebra and Differential Equations Linear algebra: basis, dimension, matrices, eigenvalues/eigenvectors. Differential equations: first-order linear, separable; second-order linear with constant coefficients; linear systems with constant coefficients.
Introductory Physics for Science and Engineering I Use of fundamental principles to solve quantitative problems. Motion, forces, conservation principles, structure of matter. Applications to mechanical systems.
Introductory Physics for Science and Engineering II  Use of fundamental principles to solve quantitative problems. Motion, forces, conservation principles, fields, structure of matter. Applications to electromagnetic phenomena.
Introduction to Algorithms, Data Structures, and Program Development Advanced object oriented programming to implement abstract data types(stacks, queues, linked lists, hash tables, binary trees) using Java language. Searching/sorting algorithms.  Basic algorithmic analysis. Scripting languages using Python language. Substantial programming projects. Weekly lab.
Introduction to Circuits and Electronics Physical principles underlying circuit element models. Kirchhoff's laws. Independent/dependent sources. Opamps. Linearity in circuits. Diodes and rectification. FET characteristics, biasing, small signal models, and simple amplifiers. Transients in first- and second-order circuits. CMOS-based logic gates. Circuit simulators.
Introduction to Digital System Design Boolean algebra, logic gates, combinational logic, logic simplification, sequential logic, design of synchronous sequential logic, VHDL modeling, design of logic circuits. Integral lab.
Multivariable Calculus and Vector Analysis Derivative as linear map. Differential/integral calculus of functions of several variables, including change of coordinates using Jacobians. Line/surface integrals. Gauss, Green, Stokes theorems. Use of computer technology.
Introduction to Computing Systems C/C++ programming constructs, binary arithmetic and bit manipulation, data representation and abstraction, data types/structures, arrays, pointer addressing, control flow, iteration, recursion, file I/O, basics of object-oriented programming. An Internet-of-Things lab is integral to the course.
Discrete Structures of Computer Science Foundations of discrete mathematics. Sets, sequences, functions, big-O, propositional/predicate logic, proof methods, counting methods, recursion/recurrences, relations, trees/graph fundamentals.
Introductory Circuits and Electronics Laboratory Introductory lab in electronics to accompany 2001. Experiments with simple circuits. Familiarization with basic measurement tools and equipment.
Linear Systems, Circuits, and Electronics Sinusoidal steady state analysis. AC power calculations. Laplace transforms. Laplace transforms in circuit analysis. Elementary filter circuits. Frequency response of elementary MOSFET amplifiers. BJT characteristics and biasing. BJT small signal models and elementary amplifiers. Frequency response of BJT amplifiers. Use of circuit simulators.
Introduction to Microcontrollers Basic computer organization, opcodes, assembly language programming, logical operations and bit manipulation in C, stack structure, timers, parallel/serial input/output, buffers, input pulse-width and period measurements, PWM output, interrupts and multi-tasking, using special-purpose features such as A/D converters. Integral lab.
Algorithms and Data Structures Rigorous analysis of algorithms/implementation. Algorithm analysis, sorting algorithms, binary trees, heaps, priority queues, heapsort, balanced binary search trees, AVL trees, hash tables and hashing, graphs, graph traversal, single source shortest path, minimum cost spanning trees.
Introduction to Operating Systems Processes/threads, process coordination, interprocess communication, asynchronous events, memory management/file systems. Systems programming projects using operating system interfaces and program development tools.
Signals and Systems Basic techniques for analysis/design of signal processing, communications, and control systems. Time/frequency models, Fourier-domain representations, modulation. Discrete-time/digital signal/system analysis. Z transform. State models, stability, feedback.
Statistical Methods in Electrical and Computer Engineering Notions of probability. Elementary statistical data analysis. Random variables, densities, expectation, correlation. Random processes, linear system response to random waveforms. Spectral analysis. Computer experiments for analysis and design in random environment.
Circuits and Electronics Laboratory I Experiments in circuits/electronics.
Circuits and Electronics Laboratory II Circuits and Electronics Laboratory II
Analog Electronics Basic differential amplifiers using FETs and BJTs. Current sources for differential amplifiers. Op- amp-based differential amplifiers.  IC op amps as multi-stage amplifiers. Ideal (dc) feedback. Stability and compensation of negative feedback amplifiers. Sinusoidal oscillators.  Waveshaping circuits. Power amplifiers. Use of circuit simulators.
Computer Architecture and Machine Organization Introduction to computer architecture. Aspects of computer systems, such as pipelining, memory hierarchy, and input/output systems. Performance metrics. Examines each component of a complicated computer system.
Senior Design Project Team participation in formulating/solving open-ended design problems
Senior Honors Project II  Experience in research/design for electrical/computer engineering. Oral/written reports.
Advanced Analog Electronics Design Basic integrated circuit building blocks of differential amplifiers, high bandwidth, instrumentation amplifiers. Current/voltage references. Feedback, stability, and noise in electronic circuits. Integral lab.
Energy Conversion and Storage Laboratory Provides laboratory experiences with the topics of 4161W, including the fundamental physics and chemistry of selected energy conversion and energy storage devices, their application, and their connection strategies in electric power applications.
Linear Control Systems Laboratory Linear Control Systems Laboratory
State Space Control Laboratory State Space Control Laboratory
Digital Design With Programmable Logic Introduction to system design/simulation. Design using Verilog code/synthesis. Emulation using Verilog code.
Embedded System Design Microcontroller interfacing for embedded system design. Exception handling/interrupts. Memory Interfacing. Parallel/serial input/output methods. System Buses and protocols. Serial Buses and component interfaces. Microcontroller Networks. Real-Time Operating Systems. Integral lab.
Communications Systems Laboratory Experiments in analysis/design of wired/wireless communication systems.
Electric Drives Laboratory Simulink-based simulations of electric machines/drives in applications such as energy conservation and motion control in robotics.
Power System Analysis Laboratory ab analysis of AC power systems, power system networks, power flow, short circuit, transient stability.
Switch-Mode Power Electronics Laboratory Laboratory to accompany 4741. PSpice-/Simulink-based simulations of converters, topologies, and control in switch-mode dc power supplies, motor drives for motion control, and inverters for interfacing renewable energy sources to utility grid.
Special Topics in Electrical and Computer Engineering Laboratory Special Topics in Electrical and Computer Engineering Laboratory
Introduction to Microsystem Technology Microelectromechanical systems composed of microsensors, microactuators, and electronics integrated onto common substrate. Design, fabrication, and operation principles. Labs on micromachining, photolithography, etching, thin film deposition, metallization, packaging, and device characterization.
Basic Microelectronics Laboratory Students fabricate a polysilicon gate, single-layer metal, NMOS chip, performing 80 percent of processing, including photolithography, diffusion, oxidation, and etching. In-process measurement results are compared with final electrical test results. Simple circuits are used to estimate technology performance.
VLSI Design Laboratory Complete design of an integrated circuit. Designs evaluated by computer simulation.
Data Modeling Using R Introduction to data modeling and the R language programming. Multi-factor linear regression modeling. Residual analysis and model quality evaluation. Response prediction. Training and testing. Integral lab.
Digital Signal Processing Design Real-time implementation of digital signal processing (DSP) algorithms, including filtering, sample-rate conversion, and FFT-based spectral analysis. Implementation on a modern DSP Platform. Processor architecture. Arithmetic operations. Real-time processing issues. Processor limitations. Integral laboratory.
Physical Optics Laboratory Fundamental optical techniques. Diffraction and optical pattern recognition. Spatial/temporal coherence.  Interferometry. Speckle. Coherent/incoherent imaging.  Coherent image processing. Fiber Optics.
Physical Principles of Thin Film Technology Fabrication, characterization, and application of thin film and nanostructured materials and devices. Focuses on vacuum deposition. Materials science. Hands-on, team-based labs.
Electric Drives in Sustainable Energy Systems Laboratory Electric Drives in Sustainable Energy Systems Laboratory
Biological Instrumentation This course will cover the physics and technology of biological instruments. The operating principles of optical, electrical, and mechanical biosensors will be discussed, followed by transport and delivery of biomolecules to the sensors. Techniques to manufacture these sensing devices, along with microfluidic packaging, will be covered. Lectures will be complemented by lab demo sessions to give students hands-on experiences in microfluidic chip fabrication, microscopy, and particle trapping experiments.
Introduction to Artificial Intelligence Problem solving, search, inference techniques. Knowledge representation. Planning. Machine learning. Robotics. Lisp programming language.
Artificial Intelligence I Introduction to AI. Problem solving, search, inference techniques. Logic/theorem proving. Knowledge representation, rules, frames, semantic networks. Planning/scheduling. Lisp programming language.
Introduction to Intelligent Robotic Systems Transformations, kinematics/inverse kinematics, dynamics, control. Sensing (robot vision, force control, tactile sensing), applications of sensor-based robot control, robot programming, mobile robotics, microrobotics.
Linear Control Systems: Designed by Input/Output Methods Modeling, characteristics, performance of feedback control systems. Stability, root locus, frequency response methods. Digital implementation, hardware considerations.
State Space Control System Design State space models, performance evaluation, numerical issues for feedback control. Stability, state estimation, quadratic performance.  Implementation, computational issues.
Embedded System Design Microcontroller interfacing for embedded system design. Exception handling/interrupts. Memory Interfacing. Parallel/serial input/output methods. System Buses and protocols. Serial Buses and component interfaces. Microcontroller Networks. Real-Time Operating Systems. Integral lab.
Physics of Computing: Basics Physics of Computation will explore how physical principles and limits have been shaping paradigms of computing. A key goal of this course is to understand how (and to what extent) a paradigm shift in computing can help with emerging energy problems. Topics include: Physical limits of computing, coding and information theoretical foundations, computing with beyond-CMOS devices, reversible computing, quantum computing, stochastic computing.
Computing With Neural Networks Neural networks as a computational model. Connections to AI, statistics and model-based computation. Associative memory and matrix computation; Hopfield networks. Supervised networks for classification and prediction. Unsupervised networks for data reduction. Associative recognition/retrieval, optimization, time series prediction, knowledge extraction.
Artificial Intelligence II Uncertainty in artificial intelligence. Probability as a model of uncertainty, methods for reasoning/learning under uncertainty, utility theory, decision-theoretic methods.
Introduction to Machine Learning Problems of pattern recognition, feature selection, measurement techniques. Statistical decision theory, nonstatistical techniques. Automatic feature selection/data clustering. Syntactic pattern recognition. Mathematical pattern recognition/artificial intelligence.
Machine Learning Models of learning. Supervised algorithms such as perceptrons, logistic regression, and large margin methods (SVMs, boosting). Hypothesis evaluation. Learning theory. Online algorithms such as winnow and weighted majority. Unsupervised algorithms, dimensionality reduction, spectral methods. Graphical models.
Introduction to Intelligent Robotic Systems Transformations, kinematics/inverse kinematics, dynamics, control. Sensing (robot vision, force control, tactile sensing), applications of sensor-based robot control, robot programming, mobile robotics, microrobotics.
Sensing and Estimation in Robotics Bayesian estimation, maximum likelihood estimation, Kalman filtering, particle filtering. Sensor modeling and fusion. Mobile robot motion estimation (odometry, inertial,laser scan matching, vision-based) and path planning. Map representations, landmark-based localization, Markov localization, simultaneous localization/mapping (SLAM), multi-robot localization/mapping.
Computer Vision Issues in perspective transformations, edge detection, image filtering, image segmentation, and feature tracking. Complex problems in shape recovery, stereo, active vision, autonomous navigation, shadows, and physics-based vision. Applications.
Communications Systems Systems for transmission/reception of digital/analog information. Characteristics/design of wired/wireless communication systems. Baseband, digital, and carrier-based techniques. Modulation. Coding. Electronic noise and its effects on design/performance.
Internet Programming Issues in internet programming. Internet history, architecture/protocols, network programming, Web architecture. Client-server architectures and protocols. Client-side programming, server-side programming, dynamic HTML, Java programming, object-oriented architecture/design, distributed object computing, Web applications.
Introduction to Computer Networks Concepts, principles, protocols, and applications of computer networks. Layered network architectures, data link protocols, local area networks, routing, transport, network programming interfaces, networked applications. Examples from Ethernet, Token Ring, TCP/IP, HTTP, WWW.
Developing the Interactive Web Hands-on design experience using modern web development tools. Students work in teams to develop software programs using each of four toolkits. Analyze developments in forum posts and classroom discussions.
Data Communications and Computer Networks Concepts, principles, protocols, and applications of computer networks. Layered network architectures, data link protocols, local area networks, network layer/routing protocols, transport, congestion/flow control, emerging high-speed networks, network programming interfaces, networked applications. Case studies using Ethernet, Token Ring, FDDI, TCP/IP, ATM, Email, HTTP, and WWW.
Foundations of Advanced Networking Design principles, protocol mechanisms. Network algorithmics, implementation techniques. Advanced network architectures, state-of-art/emerging networking technologies/applications, network modeling. Simulation, experiments.
Wireless and Sensor Networks Enabling technologies, including hardware, embedded operating systems, programming environment, communication, networking, and middleware services. Hands-on experience in programming tiny communication devices.
Introduction to Computer Security Concepts of computer, network, and information security. Risk analysis, authentication, access control, security evaluation, audit trails, cryptography, network/database/application security, viruses, firewalls.
Modern Cryptography Introduction to cryptography. Theoretical foundations, practical applications. Threats, attacks, and countermeasures, including cryptosystems and cryptographic protocols. Secure systems/networks. History of cryptography, encryption (conventional, public key), digital signatures, hash functions, message authentication codes, identification, authentication, applications.
Algorithmic Techniques for Scalable Many-core Computing Algorithm techniques for enhancing the scalability of parallel software: scatter-to-gather, problem decomposition, binning, privatization, tiling, regularization, compaction, double-buffering, and data layout. These techniques address the most challenging problems in building scalable parallel software: limited parallelism, data contention, insufficient memory bandwidth, load balance, and communication latency. Programming assignments will be given to reinforce the understanding of the techniques.
Formal Languages and Automata Theory Logical/mathematical foundations of computer science. Formal languages, their correspondence to machine models. Lexical analysis, string matching, parsing. Decidability, undecidability, limits of computability. Computational complexity.
Practice of Database Systems Concepts, conceptual data models, case studies, common data manipulation languages, logical data models, database design, facilities for database security/integrity, applications.
Operating Systems Conceptual foundation of operating system designs and implementations. Relationships between operating system structures and machine architectures. UNIX implementation mechanisms as examples.
Introduction to Distributed Systems Distributed system design and implementation. Distributed communication and synchronization, data replication and consistency, distributed file systems, fault tolerance, and distributed scheduling.
Programming Languages Design and implementation of high-level languages. Course has two parts: (1) language design principles, concepts, constructs; (2) language paradigms, applications. Note: course does not teach how to program in specific languages.
Developing the Interactive Web Hands-on design experience using modern web development tools. Students work in teams to develop software programs using each of four toolkits. Analyze developments in forum posts and classroom discussions.
Collaborative and Social Computing Introduction to computer-supported cooperative work, social computing. Technology, research methods, theory, case studies of group computing systems. Readings, hands-on experience.
Introduction to Compilers Techniques for translating modern programming languages to intermediate forms or machine-executable instructions/their organization into compiler. Lexical analysis, syntax analysis, semantic analysis, data flow analysis, code generation. Compiler project for prototypical language.
Introduction to Computer Security Concepts of computer, network, and information security. Risk analysis, authentication, access control, security evaluation, audit trails, cryptography, network/database/application security, viruses, firewalls
Advanced Algorithms and Data Structures Fundamental paradigms of algorithm and data structure design.  Divide-and-conquer, dynamic programming, greedy method, graph algorithms, amortization, priority queues and variants, search structures, disjoint-set structures. Theoretical underpinnings. Examples from various problem domains.
Introduction to Parallel Computing: Architectures, Algorithms, and Programming Parallel architectures design, embeddings, routing. Examples of parallel computers. Fundamental communication operations. Performance metrics. Parallel algorithms for sorting. Matrix problems, graph problems, dynamic load balancing, types of parallelisms. Parallel programming paradigms. Message passing programming in MPI. Shared-address space programming in openMP or threads.
Principles of Database Systems Concepts, database architecture, alternative conceptual data models, foundations of data manipulation/analysis, logical data models, database designs, models of database security/integrity, current trends.
Software Engineering I Advanced introduction to software engineering. Software life cycle, development models, software requirements analysis, software design, coding, maintenance.
Software Engineering II Introduction to software testing, software maturity models, cost specification models, bug estimation, software reliability models, software complexity, quality control, and experience report. Student groups specify, design, implement, and test partial software systems.  Application of general software development methods and principles from 5801.
Analysis of Numerical Algorithms Additional topics in numerical analysis. Interpolation, approximation, extrapolation, numerical integration/differentiation, numerical solutions of ordinary differential equations. Introduction to optimization techniques.
Computational Aspects of Matrix Theory Perturbation theory for linear systems and eigenvalue problems. Direct/iterative solution of large linear systems. Matrix factorizations. Computation of eigenvalues/eigenvectors. Singular value decomposition. LAPACK/other software packages. Introduction to sparse matrix methods.
Functional Genomics, Systems Biology, and Bioinformatics Computational methods for analyzing, integrating, and deriving predictions from genomic/proteomic data. Analyzing gene expression, proteomic data, and protein-protein interaction networks. Protein/gene function prediction, Integrating diverse data, visualizing genomic datasets.
Computational Techniques for Genomics Techniques to analyze biological data generated by genome sequencing, proteomics, cell-wide measurements of gene expression changes. Algorithms for single/multiple sequence alignments/assembly. Search algorithms for sequence databases, phylogenetic tree construction algorithms. Algorithms for gene/promoter and protein structure prediction. Data mining for micro array expression analysis. Reverse engineering of regulatory networks.
Introduction to Data Mining Data pre-processing techniques, data types, similarity measures, data visualization/exploration. Predictive models (e.g., decision trees, SVM, Bayes, K-nearest neighbors, bagging, boosting). Model evaluation techniques, Clustering (hierarchical, partitional, density-based), association analysis, anomaly detection. Case studies from areas such as earth science, the Web, network intrusion, and genomics. Hands-on projects.
Visualization Fundamental theory/practice in data visualization. Programming applications. Perceptual issues in effective data representation, multivariate visualization, information visualization, vector field/volume visualization.
From GPS and Virtual Globes to Spatial Computing Mathematical concepts, geo-information, representations, algorithms, data-structures/access methods, analysis, architectures, interfaces, reasoning, time.
Programming Interactive Computer Graphics and Games Tools/techniques for programming games/interactive computer graphics. Event loops, rendering/animation, polygonal models, texturing, physical simulation. Modern graphics toolkits. History/future of computer games technology. Social impact of interactive computer graphics.
User Interface Design, Implementation and Evaluation Theory, design, programming, and evaluation of interactive application interfaces. Human capabilities and limitations, interface design and engineering, prototyping and interface construction, interface evaluation, and topics such as data visualization and World Wide Web. Course is built around a group project.
Embodied Computing: Design & Prototyping  In this course, you will learn and apply the principles of embodied computing to human-centered challenges. Through a semester-long team project, you will learn and demonstrate mastery of human-centered embodied computing through two phases: (1) investigating human needs and current embodied practices and (2) rapidly prototyping and iterating embodied computing solutions. One of the ways you will demonstrate this mastery is through the collaborative creation of a written document and project capstone video describing your process and prototype.
Fundamentals of Computer Graphics 1 Fundamental algorithms in computer graphics. Emphasizes programming projects in C/C++. Scan conversion, hidden surface removal, geometrical transformations, projection, illumination/shading, parametric cubic curves, texture mapping, antialising, ray tracing. Developing graphics software, graphics research.
Animation & Planning in Games Theory behind algorithms used to bring virtual worlds to life. Computer animation topics. Real-time, interactive techniques used in modern games. Physically-based animation, motion planning, character animation, simulation in virtual worlds.
Virtual Reality and 3D Interaction Introduction to software, technology/applications in virtual/augmented reality, 3D user interaction. Overview of current research. Hands-on projects.
Principles of Chemistry Covers principles of stoichiometry, chemical bonding and structure, thermochemistry, chemical equilibrium, and kinetics. Three hours lecture, two hours lab. Prerequisite: Two semesters of hi
Introduction to Engineering A hands-on introduction to civil, computer, electrical, and/or mechanical engineering. Topics include the use of the computer in engineering and an introduction to the design process.
First Year Seminar Topic-based seminar developed by individual faculty members. Engages students in classroom activities that promote the acquisition of critical reading, writing, and thinking skills appropriate to college-level discourse. Toward that end, students will complete a significant research paper.
Calculus I Covers parametric and polar equations; limits and continuity; differentiation and integration of algebraic, trigonometric, logarithmic, and exponential functions; and applications of differentiation. Background should include eight semesters of high school mathematics, including four semesters of algebra, two semesters of geometry, and at least 12 weeks of trigonometry.
Fundamentals of Programming I Emphasizes problem-solving techniques used in the analysis and design of software solutions, including structured top-down design, abstraction, good programming style, debugging, and testing. Programming constructs covered include control structures, functions, and basic, and aggregate data types. Introduction to recursion and dynamic allocation.
Calculus II Covers integration techniques and applications of integration. Introduces vectors and matrices, functions of several variables and their derivatives, differential equations, and multiple integrals.
Calculus Physics I Calculus-based treatment of mechanics, waves, and thermodynamics.
Fundamentals of Programming II Project and problem-solving course emphasizes the use of classes for encapsulation of abstract data types and abstract data structures. Topics include classes, templates, dynamic allocation, searching and sorting, recursion, and exception handling. Introduction to algorithm analysis.
Circuits Integrated lab/lecture covers the fundamentals of electrical circuit analysis. Introduces foundational circuit theorems and analysis methods.
Differential Equations Includes standard first- and second-order methods, systems, difference equations, power series, Laplace transforms, and numerical and nonlinear methods, with applications for all of these.
Calculus Physics II  Calculus-based treatment of electricity, magnetism, and light.
Object Oriented Design In-depth study of abstract data types and objects, including inheritance and polymorphism, frameworks and design patterns, and the use of these principles in problem solving and program design.
Circuits and Systems An integrated lab/lecture covers linear system theory as applied in the analysis of electrical circuits. Topics include the sinusoidal steadystate response and phasors, the Laplace transform, Fourier series and the Fourier transform, passive and active frequency selective circuits (filters), and Bode diagrams. Theoretical principles verified by circuit construction and measurement and through the use of circuit simulation software.
Logic Design Presents a thorough treatment of combinational and sequential logic design. Topics include number systems, Boolean algebra, minimization procedures, sequential circuit design, flipflops, counters, registers, and finite-state machines. Logic design is applied to computer architecture and microprogramming and hard-wired concepts are introduced. Programmable logic devices and computer aided design tools for digital circuits used for class projects.
Electronics I Lecture/project covers analysis and design of diode and transistor circuits. Diode, metal-oxide-semiconductor field-effect transistor (MOSFET) and bipolar junction transistor (BJT) device characteristics are explored in detail. Major topics include diode applications, transistor amplifiers, and digital logic families.
Calculus III  Covers infinite series, vector-valued functions, multiple integration, line and surface integrals, and analysis of vector fields.
Linear Systems and DSP I Provides a unified treatment of continuous-time and discrete-time linear signals and systems. Topics include introduction to the mathematical representation of signals, system characterization, convolution, and system analysis in the time and frequency domains using differential equations, statevector equations and transform techniques. Fourier,Laplace, Z, and discrete-Fourier transform techniques of signal and system analysis presented.
Digital Systems Takes up the logical design of computer systems with emphasis on the interaction between hardware and software. Topics include register design, memory systems, programmable I/O devices,interrupt driven I/O, controller design and microprogramming,bus systems, interface electronics, and assembly language programming. Computer aided design tools are used throughout course. Several different microcontrollers are used for projects to illustrate concepts. Assembly language and C used for class projects
Small Computer Software Introduction to the graphical user interface provided by the WindowsT operating system using C#.NET. Topics include the console applications, windows forms, elementary graphics,ASP.NET web forms, ADO.NET, TCP/IP connection between computers, and dynamic-link libraries(DLLs) and/or device drivers.
Applied Engineering Mathematics Develops understanding of practical mathematical analysis with applications in various engineering disciplines. Probability and statistical analysis. Practical numerical analysis. Linear algebra and matrices. Applications in civil, mechanical, and electrical engineering.
Discrete and Combinatorial Math  Covers such topics as enumeration, principles of logic, set theory, mathematical induction, generating functions, recurrence relations, and graph theory
Algorithms and Data Structures  Design and implementation of algorithms and advanced data structures with attention to complexity and space analysis. Problem-solving strategies including greedy and divide-and-conquer algorithms as well as dynamic programming techniques.
Computer Architecture Studies the architecture of computer systems from four-bit machines to supercomputers. Memory systems, I/O processors, and multi-computer systems are studied in detail. RISC, CISC and Neural Nets are introduced. Establishes the relationship of hardware and software. Includes handson projects dealing with graphical user interfaces and their implementation.
Linear Control Systems Introduction to analysis and design of linear analog and digital feedback control systems. Topics include system modeling, time and frequency domain performance analysis, stability analysis, and controller design. Introduces both rootlocus and frequency domain techniques of system analysis and design. Presents emulation techniques for digital controller design.
Intermediate Electrical Projects Lab Provides for the design and construction of several openended projects chosen from 300 level electrical engineering courses. Project areas include digital and analog electronics, linear systems, logic design, microcomputers,electromagnetics, electro-optics, and circuits
Microcontroller Applications Focuses on the use of microcontrollers in real-time applications. Organized around several openended projects. Each project requires the complete design of a working microcontroller system for a given application and programming in C.
Embedded Systems and Real-Time Programming Covers real-time programming techniques that are commonly used on embedded systems. Topics include real-time operating system concepts, concurrent programming and task scheduling algorithms, mutual exclusion and synchronization methods, and interprocess communication. Real-world experience writing applications for two popular embedded operating systems.
Senior Project Seminar Provides guidance for the selection of a topic in the senior design project sequence. Projects, including industry-sponsored projects, presented for student selection.
Networks Digital data communication systems in hardware and software, synchronous and asynchronous communication, standards, protocols, network configurations, network applications.
Senior Project Phase I Plan the engineering project and formulate the preliminary design under the guidance of faculty and industrial advisors. Seminar sessions address professional ethics and the social and political contexts of engineering. The economic, environmental, health, and safety aspects of the project are addressed in a written engineering proposal, as are the issues of manufacturability and sustainability. An oral presentation of the proposal is required. Students submit written reaction to seminar topics.
Linear Systems and DSP II Provides anapplication of discrete system analysis and design techniques to digital signal processing (DSP). Reviews difference equations, the Z transform and the discrete Fourier transform. Topics include analysis and design of recursive and non-recursive filter structures, analog filter approximations, the realization problem, the Fast Fourier Transform, and two-dimensional filtering.
Electronics II Major topics include BJT amplifiers, IC amplifiers, differential amplifiers, nonideal operational amplifiers, and frequency effects. Specific topics include small-signal operation and models of BJTs, discrete-circuit BJT amplifiers, IC amplifiers, current-mirrors with improved performance, BJT and MOS differential pair circuits, common-mode rejection ratio, DC imperfections of op amps, large signal operation of op amps, LM741 op amp circuit, high frequency BJT and MOS models, and the high and low frequency response of transistor amplifiers.
Analog Circuit Synthesis Lecture/project covers analysis and design of active circuits. Major topics include feedback, instrumentation amplifiers, active filter design, non-linear circuits, signal generators, and voltage regulation circuits.
Digital Control Systems Advanced analysis and design of linear systems. Analysis and design of digital control systems emphasized through classroom discussions, homework assignments and design projects. Both classical and modern control system design techniques studied.
Operating Systems Components of operating systems. Tasking and processing, process coordination and scheduling, memory organization and management, device management, security, networks, distributed and real-time systems.
Senior Project Phase II  A formal design review is conducted early in the semester. A practice oral report, a written final report, a final oral report, and a demonstration of the completed project are required.
Principles of Macroeconomics  Macroeconomics is the branch of economics that studies the domestic economic system as a whole and its interaction with foreign economies. This course focuses on the behavior of the aggregate economy as it pertains to the determination of national income, production, level of employment, general price level, and trace flows.
The American Corporation Examines the constitution and functions of American corporations and how they interact in a global society. Studies the corporation as an instrument in the creative process of innovation throughout the world. Social and ethical responsibilities of business entities and responsibility of society toward corporations explored in relation to the role of the corporation as a source of national prosperity and wealth.
Imaginative Expressions of Human Condition  Imaginative Expressions of Human Condition
Human History and Historical Context of Knowledge Human History and Historical Context of Knowledge
Fundamentals of Chemistry Laboratory Illustrates and reinforces principles and concepts by use of qualitative and quantitative experiments, emphasizing interpretation and reporting of data and facility in handling scientific instruments.
Fundamentals of Chemistry General principles, fundamental laws, atomic & molecular structure, states of matter, & elementary inorganic, nuclear & organic chemistry.
Introduction To Engineering Overview of engineering, information about various engineering disciplines, instroductory problem-solving, engineering design, and engineering ethics.
First Year Writing I A detailed study of the principles of rhetoric as applied in reading and writing expository essays.
The U S To 1877 The social, economic, and political history of the United States to 1877
Calculus I Calculus of rational functions, limits, derivatives, applications of the derivative, antiderivatives, the definite integral with applications, mean value theorem, fundamental theorem of calculus, and numerical integration.
Computing and Problem Solving for Engineers Introduction to computing; matrix arithmetic, programming constructs, algorithms and graphical visualization using MATLAB; problem solving applications in engineering analysis and design.
First Year Writing II Detailed study of the principles of rhetoric as applied to analyzing and writing argumentative and persuasive essays; principles and methods of research, culminating in writing a substantial research paper.
The U S Since 1877 The social, economic, and political history of the United States since 1877.
Calculus II Calculus of transcendental functions: additional techniques and applications of integration, indeterminate forms, improper integrals, Taylors formula, and infinite series.
University Physics I First semester of a two part calculus-based course covering mechanics of one- and two-dimensional motion, dynamics, energy, momentum, rotational dynamics and kinematics, statics, gravity, oscillations, waves and fluids.
Circuit Analysis I Analysis of resistive circuits, including node voltage and mesh current methods, and Thevenin and Norton equivalent circuits.
Calculus III Calculus of functions of several variables: calculus of vector-valued functions, partial differentiation, multiple integrals.
Engineering Mathematics First order ordinary differential equations and initial value problems; higher order differential equations; vector spaces, matrices, determinants, eigenvectors and eigenvalues; applications to systems of first order equations; Laplace transforms.
University Physics II Second semester of a two part calculus-based course covering thermodynamics, electricity, magnetism, electromagnetic waves, optics, and modern physics.
University Physics Laboratory II Experiments in thermodynamics, electricity, magnetism, and optics. Credit may not be applied toward a
Circuit Analysis II Analysis of electric circuits, including inductors, capacitors, and first order circuits; sinusoidal analysis.
Circuit Analysis Laboratory Introduction to the electronics laboratory equipment. Introductory experiments in circuit analysis. Formal report writing. This laboratory course is a prerequisite for all other ECE laboratory courses.
Programming Applications in Electical and Computer Engineering Procedural programming in C and C++, with applications in electrical and computer engineering.
Technical Communications for Engineers Engineering communication skills: written proposals, specifications, progress reports, and technical reports; individual and group oral presentations; essays on engineering ethics, contemporary engineering issues and the impact of engineering decisions.
Digital Logic Design Boolean algebra, combinational logic, sequential machine analysis and synthesis.
Applied Electromagnetic Waves Maxwells equations in time and frequency domains, Poyntings theorem, plane wave propagation, reflection and transmission in lossless and lossy media, transmission lines, waveguides, and antennas.
Introduction to Programming Fundamental concepts of structured programming; procedures and elementary data structures with a focus on problem solving strategies and implementation; computer organization, structured procedural programming, C/C++ programming language, and algorithm design.
Electronics Laboratory Laboratory projects concerning topics studied in electronics
Electronics Signal and amplifier concepts; operational amplifiers; diodes and nonlinear circuits; bipolar junction transistors; biasing, small and large signal analysis; transistor amplifiers.
Signals and Systems Analysis Time and frequency domain techniques for signals and systems analysis. Engineering applications of the convolution integral, Fourier series and transforms, and Laplace transforms.
Microprocessor Systems Memory devices, microcomputer architecture, assembly language programming, I/O programming, I/O interface design, data communications, and data acquistition systems. Laboratory exercises in assembly language and C.
Programming and Data Structures Introduction to fundamental data structures: arrays, lists, stacks, queues, hash tables, trees; sorting and searching; graph algorithms; design, analysis, and comparison of algorithms. Correctness verification techniques such as assertions and invariants. Review program specification, unit testing, and debugging.
Digital Electronics Analysis of discrete and integrated digital electronic devices and components and their use in the design and implementation of digital circuits.
Engineering Statistics I equivalent and permission of chair. Probability and statistical inference for engineering applications; probability distributions, estimation, statistical tests, and reliability theory.
Electrical and Computer Engineering Design I Propose and begin team projects involving open-ended design problems supplied by industry and faculty. Professionalism, research methodologies, design tools, and technical communication.
Discrete Mathematics Topics selected from logic, set theory, combinatorics, and graph theory.
Introduction to Computer Architecture and Design Computer organization, computer arithmetic, instruction sets, programming with MIPS assembly language, CPU design, pipelining, and memory hierarchy including caching and virtual memory.
Microeconomic Principles Individual consumer and firm behavior, supply and demand and the market determination or prices, production, and income. Includes government price ceilings, monopoly and antitrust, market failures and environmental pollution.
Electrical and Computer Engineering Design II Complete, construct, demonstrate, and defend team projects
U.S. Government: Congress, President, and Courts Introduction to the institutions of government with an emphasis on the congress, the president, and the federal courts. (Introductory category.)
Fundamentals of Software Engineering Introduction to the concepts of software engineering. Identification of problems related to the development of large software systems. Software project planning, requirements analysis, design, implementation, quality assurance and maintenance.
Introduction to Principles of Programming Introduction to computer programming in a structured programming language including fundamental elements of program design and analysis. Data and functional abstraction as tools for constructing correct, efficient, and intelligible programs for a variety of common computing problems.
Data Structures and Object-Oriented Design Introduction to fundamental data structures and algorithms. The emphasis is on understanding how to efficiently implement different data structures, communicate clearly about design decisions, and understand the relationships among implementations, design decisions, and the four pillars of object-oriented programming: abstraction, encapsulation, inheritance, and polymorphism.
Systems Programming Introduction to system-level programming with an emphasis on C programming, process management and small scale concurrency with multi-threaded programming. Special attention will be devoted to proficiency with memory management and debugging facilities both in a sequential and parallel setting.
Principles and Practice of Digital Logic Design Representation of digital information. Analysis, design, and evaluation of combinational and sequential logic circuits. Debugging techniques. Use of computer facilities for circuit simulation, CAD, and report preparation and presentation. Introduction to structure and operation of digital computers. Design projects. Written reports with revisions are required for each project.
Introduction to Discrete Systems Mathematical methods for characterizing and analyzing discrete systems. Modern algebraic concepts, logic theory, set theory, grammars and formal languages, and graph theory. Application to the analysis of computer systems and computational structures.
Introduction to Computer Architecture Structure and operation of digital systems and computers. Machine organization, control and data paths, instruction sets, and addressing modes. Integer and floating-point arithmetic, the memory hierarchy, the I/O subsystem. Assembly language and basic program organization, interrupts, I/O, and memory allocation.
Operating Systems Introduction to the theory, design, and implementation of software systems to support the management of computing resources. Topics include the synchronization of concurrent processes, memory management, processor management, scheduling, device management, file systems, and protection.
Computer Organization and Architecture Organization and architecture of modern computer systems. Emphasis is on alternatives and advances to the basic Von Neumann architecture: topics such as pipelining, memory hierarchy and management, multiprocessor and alternative architectures, reconfigurable hardware, and other techniques for performance enhancement.
Electrical Circuits Analysis of electrical networks incorporating passive and active elements. Basic laws and techniques of analysis. Transient and forced response of linear circuits. AC steady state power and three-phase circuits. Periodic excitation and frequency response. Computer analysis tools.
Signals & Systems Representation of signals in the time and frequency domains. Fourier series. Fourier and Laplace transform methods for analysis of linear systems. Introduction to state space models. Introduction to sampling and discrete systems analysis via z transforms.
Electronic Circuit Design and Analysis Physical electronics underlying the operation of electronic devices. Diodes, diode models, and diode circuits. Transistors, transistor models, and transistor circuits. DC, small signal, and frequency analysis of transistor amplifiers. Compound transistor configurations. Computer analysis tools. Diode and transistor circuits are constructed and tested in the laboratory.
Digital Systems Design Design and evaluation of control and data structures for digital systems. Hardware design languages are used to describe and design alternative register transfer level architectures and control units with a micro-programming emphasis. Consideration of computer architecture, memories, digital interfacing timing and synchronization, and microprocessor systems.
Very Large Scale Integrated (VLSI) Design and Simulation Design of MOS transistors, including short channel effects in sub-micron devices; scaling laws; design rules. Layout of NMOS and CMOS logic gates; power-delay calculations. Design of static and/or dynamic memories. Laboratory emphasizes schematic capture, simulation, timing analysis and testing; layout of custom IC's; use of VHDL.
Communicating Engineering Solutions in a Societal Context Analysis of engineering design solutions in a broader context. Written and oral technical communication. Class time will be divided between lectures, group discussions/exercises, and student oral presentations.
Electrical and Computer Engineering Design I Discussion of the design process; project statement, specification, project planning, scheduling and division of responsibility, ethics in engineering design, safety, environmental considerations, economic constraints, liability, manufacturing, and marketing. Projects are carried out using a team-based approach.
Electrical and Computer Engineering Design II Design of a device, circuit, system, process, or algorithm.
Multivariable Calculus Two- and three-dimensional vector algebra, calculus of functions of several variables, vector differential calculus, line and surface integrals.
Applied Linear Algebra  Systems of equations, matrices, determinants, linear transformations on vector spaces, characteristic values and vectors, from a computational point of view. The course is an introduction to the techniques of linear algebra with elementary applications.
Elementary Differential Equations Introduction to ordinary differential equations and their applications, linear differential equations, systems of first order linear equations, numerical methods.
Probability Models for Engineers Probability set functions, random variables, expectations, moment generating functions, discrete and continuous random variables, joint and conditional distributions, multinomial distribution, bivariate normal distribution, functions of random variables, central limit theorms, computer simulation of probability models.
Microprocessor Applications Laboratory Design of software and interface hardware to use a microcomputer as an on-line, real-time element in data acquisition, filtering and control systems. Use of clocks, DAC's, ADC's, speech synthesis modules, and movement generators. Design project. Written and oral presentations of laboratory results
Navy STEM Professional Development Seminar Seminar series focusing on science, engineering and technology concepts in the design, construction, operation and maintenance of surface ships and submarines. Provides industry-specific knowledge for engineering students interested in pursuing Navy-related careers in the public or private sectors.
Special Topics in Computer Science and Engineering Special Topics in Computer Science and Engineering
Independent Study in Computer Science and Engineering Independent Study in Computer Science and Engineering
Computer Science and Engineering Design Project I Computer Science and Engineering Design Project I
Computer Science and Engineering Design Project II Computer Science and Engineering Design Project II
CALCULUS I The course provides an introduction to calculus with emphasis on differential calculus. Topics include limits of functions, derivatives of algebraic and transcendental functions, application of the derivative to curve sketching, optimization problems, and examples in the natural sciences, engineering, and economics.
GENERAL CHEMISTRY I First of a two-semester sequence for majors, minors, and others seeking quantitative treatment. Topics include the nuclear model, stoichiometry, chemical reactions, gas laws, thermochemistry, atomic structure, and molecular bonding.
GENERAL CHEMISTRY I LAB GENERAL CHEMISTRY I LAB
ENGLISH COMPOSITION I Prepares students for diverse types of college writing. Covers the writing process, general criteria used to evaluate writing, collaborative writing, and rhetoric, especially audience analysis.
INTRO TO ENGINEERING & DESIGN A course for first time engineering students that assists with maximizing the student's potential to achieve academic success and to adjust responsibly to the individual and interpersonal challenges presented by college life. Introduction to engineering fundamentals through reading, homework assignments, laboratory investigations, guest lecturers and group discussions on the engineering profession.
CALCULUS II Topics include techniques of integration; applications of the definite integral to geometry, natural sciences, engineering, and economics; improper integrals; infinite sequences and series; Taylor polynomials and Taylor series; parametric equations and polar coordinates.
ENGLISH COMPOSITION II EH 102 prepares students for college writing by focusing on argumentation, research, and the critical thinking required to argue effectively.
CALCULUS-BASED PHYSICS I First semester of a two-semester introductory course in calculus-based physics with recitation and laboratory. This course covers: one and two-dimensional motion, vectors, Newton's laws of motion and their applications, work and energy, momentum and collisions, circular motion, rotational motion, properties of materials, simple harmonic motion, wave motion and topics in thermodynamics.
INTRO TO C++ PROGRAMMING Introduction and fundamentals of C++ programming, input-output operations, variables, data types, arithmetic expressions, control statements, looping, functions, arrays, pointers, strings, structures, and abstract data types.
CALCULUS III Vectors; functions of several variables; partial derivatives; local linearity; directional derivatives; the gradient; differential of a function; the chain rule; higher order partial derivatives; optimization of functions of several variables; multiple integrals and their applications; parametric curves and surfaces; vector fields; line and surface integrals; vector calculus.
CALCULUS-BASED PHYSICS II Second semester of a two-semester introductory course in calculus-based physics with laboratory. This course covers electrostatic fields and Gauss' law, electric potential, electric circuits, magnetic fields, Ampere's law, Faraday's law, inductance, Maxwell's equations, electromagnetic waves and optics.
DIGITAL LOGIC DESIGN Number systems, introduction to basic logic circuits, analysis and design of combinational and sequential logic circuits, HDL based logic circuit simulation and design.
CIRCUIT ANALYSIS I Resistive networks with independent and dependent sources: Ohm's law; Kirchhoff's law; nodal and loop analysis; network theorems; energy storage elements (capacitors and inductors); operational amplifiers; steady state AC analysis; and introduction to PSpice.
NETWORK ANALYSIS Transient analysis of RLC circuits; Three-phrase systems; power-factor correction in three-phase power systems; magnetically coupled networks; Operational amplifiers; network frequency response functions and resonance; Fourier series.
CIRCUITS AND DEVICES LAB Introduction to electrical laboratory equipment and instrumentation; analog and digital meters, oscilloscopes, bridges, power supplies, function generators. Measurement of voltage, current and power in DC networks and in single-phase and three-phase AC networks. Verification of Kirchoff's laws. Measurement of resistance, capacitance, and inductance.
MICROPROCESSOR SYS-INTERFACING Small computer organization, assembly and machine level programming, microprocessor architectures and instruction sets, microprocessor and microcontroller system design, and microprocessor based peripheral interfacing.
DIGITAL LOGIC DESIGN LAB Design projects include standard SSI and MSI digital circuit based simulation and experiments.
LINEAR ALGEBRA I This course provides an introduction to linear algebra. Topics include systems of linear equations, matrices, Gaussian elimination, rank, linear independence, subspaces, basis, dimension, linear transformations, determinants, eigenvalues and eigenvectors, change of basis, diagonalization, the abstract concept of a vector space, and applications. 1
DIFFERENTIAL EQUATIONS I This course provides an introduction to ordinary differential equations. Topics include first order differential equations, higher order linear differential equations, systems of first order linear differential equations, Laplace transforms, methods for approximating solutions to first order differential equations, applications.
ENGINEERING THERMODYNAMICS ENGINEERING THERMODYNAMICS
SIGNALS, SYSTEMS & TRANSFORMS Modeling of analog and discrete-time signals and systems, time domain analysis, Fourier series, continuous and discrete time Fourier transforms and applications, sampling, z-transform, state variables, analysis of signals and systems and basic filter design, filter implementation using MatLab.
PROB, RAND SIGS & STAT ANLYS Discrete and continuous probability distributions; random variables; Bernoulli trials; hypothesis testing; confidence intervals; Anova multiple comparisons; Bayes' theorem; estimation; sampling; random processes and random signals in linear systems. Probability applications in computer and electrical engineering.
PHYSICAL ELECTRONICS Introduction to quantum concepts; particles in one dimensional potential well; tunneling. Silicon band structure, electrons and holes. Drift and diffusion current density; band bending; Einstein diffusion coefficient; recombination/generation. The pn junction; step and linear junctions; depletion layer. I-V characteristics of a pn junction and steady-state carrier concentrations at junctions. Bipolar junction transistor fundamentals; pnp and npn types; common emitter configuration, biasing and gain.
ELECTROMAGNETICS I Basic concepts of electrostatics, electric potential theory, electric fields and currents, fields of moving charge, Poisson's and Laplace's equations, magnetostatics, metallic conductors and dielectric materials, electric-scalar and magnetic-vector potentials and boundary conditions, general time varying fields and Maxwell's equations.
MICROPROCESSOR SYS INTERF LAB1 cr Topics include integration of microprocessor software, hardware and peripheral devices; assembly level programming and hardware interfaces for control and instrumentation.
ELECTROMECH ENERGY CONVERSION Introduction to the principles of electromechanical energy conversion. Energy balance, force, and torque of electromagnetic systems; magnetic circuits and ferromagnetic losses; transformers and their connections three-phase induction motors; synchronous generators and motors; non-salient machines. Parallel operation of synchronous generators. Dynamics of electric machines.
FEEDBACK CONTROL SYSTEMS Review of the Laplace Transform. Transfer functions; block diagrams; signal-flow graphs and Mason's Gain Formula. Introduction to the state-space representation. Stability of feedback control systems; Routh-Hurwitz criterion; root-locus technique and the Nyquist criterion. Bode plots; gain and phase margins. PI, PD and PID controller design. Introduction to the use of Matlab for analysis and design.
DIGITAL ELECTRONICS Review of semiconductor diodes and Diode circuits, Field effect devices, Operating characteristics and DC analysis. Introduction to digital electronics, NMOS, PMOS, CMOS devices and logic circuits, Transmission gates, Review of BJTs TTL logic gates, Design considerations.
ELECTROMAGNETICS II Lumped versus distributed circuit components, capacitance, inductance and mutual inductance, uniform plane waves, power flow and skin effect, reflection, transmission and propagation of uniform plane waves through different media, wave polarization, transmission lines, waveguides, optical fiber, electromagnetic radiation and antennas, the Radar equation.
DIGITAL SIGNAL PROCESSING Review of discrete Fourier and Z-transforms; review of analog filter design; design of IIR and FIR digital filters. Fast Fourier transform (FFT) and applications; Hardware implementation and quantization effects. Advanced digital filter structures and design. DSP algorithm design and implementation. Analysis of finite word length effects of DSP applications.
INTRODUCTION TO COMMUNICATIONS Introduction to communication systems; analog, digital, deterministic and stochastic messages; modulation; redundancy coding. Signal energy and power; correlation; orthogonal signal set and Fourier series. Fourier transforms; signal transmission through linear systems; ideal and practical filters; signal distortion; Parseval's theorem; essential band-width and energy and power spectral density. Amplitude modulation: DSB, SSB, AM, QAM and VSB; phase and frequency modulation and the basic design of a FM transmitter. Sampling theorem; pulse code modulation and differential pulse code modulation.
ENERGY CONVERSION LAB Laboratory experiments based on: Faraday's Law and magnetic coupling; magnetic circuits; transformers (single and three phase) their connections and tests. Three phase induction motors-tests and performance characteristics; synchronous generators and motors.
INTRO ELEC AND CPE DESIGN - W Specification of design criteria. Written and oral presentations of design proposals.
INTRO TO ETHICS AND ECONOMICS Introduction to ethics and the use of codes of ethics in developing an ethical profession. Application of engineering economic principles to engineering problems.
ANALOG ELECTRONICS Small signal model of diodes and application, advanced OP-AMP applications, Miller s Theorem, Nyquest stability criterion and frequency response, principle of operation of FETs small signal model of FETs basic FET amplifies, small signal model of BJT and basic BJT amplifiers, differential and multistage amplifiers, internal circuit of typical OP-AMP.
ELECTRONICS LAB Computer analysis and measurement of the characteristics and parameters of power supplies; operations amplifiers; voltage and power amplifiers; oscillators and active filters.
ELECTRICAL AND COMPUTER ENGINE Implementation of design project from the field of Electrical or Computer Engineering in the broadest sense and under the guidance of a project director from the electrical and computer engineering faculty.
ADV FEEDBACK CONTROL SYSTEMS Sensors, encoders and DC motors in control systems. The performance and design of feedback control systems. System bandwidth; Nichol's Chart and the stability of control systems with time delays. State variable analysis and design.
NONLINEAR CONTROL SYSTEMS State space description; methods of linearization; isoclines; stability of nonlinear systems; Lyapunov's direct method; harmonic linearization; describing functions; dual input describing functions; Popov's method; circle criterion and computer aided analysis.
PROG LOGIC CONTROLLER LAB PLC overview; ladder logic; programming of timers and counters; programming control; data manipulation and math; instructions; sequencers and shift register instructions; data acquisition methods.
CONTROL AND COMMUNICATIONS LAB Computer-aided modeling, design and performance analysis in time and frequency domain of analog and digital communication end-to-end systems, and automatic control systems.

ENGL 111  English Composition I 3.0 Credits Equivalent to the university requirement of ENGL 101. Develops multilingual (non-native speakers of English) students' abilities to use writing as a tool for research and reflection. Introduces the concept of genre, writing as a process, reflection on students’ own and others’ work, revision, and approaches to primary and secondary research. Reviews grammar, organization, style, and documentation conventions. Promotes positive attitudes toward writing.
CI 120  CCI Transfer Student Seminar 2.0 Credits Introduces students to the academic and co-curricular aspects of university life. Includes academic functions such as reflection papers, reading, and study skills, as well as co-curricular functions such as campus resources, activities, and social programs. Aids in the transition to student life at Drexel and is designed to help each student achieve academic and personal success through academic and career exploration.
INFO 102  Introduction to Information Systems 3.0 Credits Introduces students to major types of information systems and their development and their use in organizations.  Emphasizes ways in which information systems can be used to help individuals and organizations meet their goals.  Assumes basic knowledge of computing concepts.
CIVC 101  Introduction to Civic Engagement 1.0 Credit This course is designed to help students develop skills as active participants in a pluralistic, democratic society through direct service, education and reflection opportunities.
CS 172  Computer Programming II 3.0 Credits Covers object-oriented design, inheritance hierarchies, information hiding principles, string processing, recursion, good programming style, documentation, debugging, and testing.
Calculus II Definite integrals, Fundamental Theorem of Calculus, integration techniques, applications of integration, numerical integration and differential equations.
ENGL 102  Composition and Rhetoric II: Advanced Research and Evidence-Based Writing 3.0 Credits Advances students’ development in the writing processes. Promotes a critical evaluation and integration of information into their own writing as they research complex and open-ended issues. Identifies the relationships between rhetorical situations, the status of claims, and the need for evidence and warrants. Continues review of grammar, style, and documentation conventions. Encourages collaboration and effective search strategies of the Internet and library resources. Promotes students’ reflective analysis and a positive attitude toward writing.
UNIV CI101  The Drexel Experience 0.0-2.0 Credits This course introduces first-year students to university life, his/her major, our community, and co-op.
MATH 180  Discrete Computational Structures 4.0 Credits Covers basic concepts of discrete mathematics that are important to computing, including elementary set theory, recurrence relations, and graph theory.
CI 491   [WI] Senior Project I 3.0 Credits Part of a multi-term capstone experience involving in-depth study and application of computing and informatics. Students work in teams to develop a significant product. Requires use of a development process that includes planning, specification, design, implementation, evaluation, and documentation. This course is writing intensive.
INFO 371  Data Mining Applications 3.0 Credits Introduces students to basic data mining approaches using machine learning tools. Focuses on machine learning algorithms for information inference and knowledge discovery from data. Covers major applications in data/text/web processing, analysis and mining.
COOP 101  Career Management and Professional Development 0.0 Credits Prepares new students to achieve success, personally and academically, in their first co-operative education experience. Topics covered include career exploration, resume skills, interview techniques, professional conduct in the job search, contemporary workplace issues, and job searching and the Internet.
INFO 324   [WI] Team Process and Product 3.0 Credits Provides hands-on experience with working in small teams to apply processes and produce products typical of current best practices in computing and information technology organizations.  Allows students to develop an integrated understanding of project life cycle phases.  Examines issues of team organization and operation, problem solving, and communication.
CI 102  Computing and Informatics Design II 2.0 Credits Introduces computing and informatics through a combination of lectures and hands on laboratory exercises. Lectures emphasize an integrated view of topic areas and systems, spanning low level software and implementation issues to high level use and acceptance by individuals and communities. Lab exercises allow students to explore familiar systems in unique and novel ways to better understand how these systems are designed and used.
INFO 355  Systems Analysis II 3.0 Credits A project-oriented course that discusses software engineering and advanced techniques of requirements modeling, prototyping and software design, particularly utilizing object-oriented techniques. The course builds upon Systems Analysis I, requiring students to apply their knowledge of systems analysis tools and techniques.
CT 250  IT Security Awareness 3.0 Credits This course explores the challenges IT security teams face when trying to mitigate threats targeting the human element within their organizations. IT Security Awareness introduces students to techniques and concepts that threaten security of organizations by targeting their human assets.
COM 230  Techniques of Speaking 3.0 Credits A workshop course in improving public speaking skills. Provides experience in speeches of explanation, persuasion, and argument.
CT 201  Information Technology Security I 3.0 Credits Surveys information security topics; familiarizes students with the technologies and policies that support confidentiality, integrity and availability.  Industry standards for security architecture, operational security, policy and governance are covered and provides the foundations for further study of information security.
CI 492   [WI] Senior Project II 3.0 Credits Part of a multi-term capstone experience involving in-depth study and application of computing and informatics. Students work in teams to develop a significant product. Requires use of a development process that includes planning, specification, design, implementation, evaluation, and documentation. This course is writing intensive.
INFO 375  Introduction to Information Systems Assurance 3.0 Credits Introduction to the problem of security for modern information systems.  Provides an overview of threats, both human and computer, to the security of an organization's data and information resources.  Explores how systems may be made less vulnerable and how to respond.  Examines issues of personal security in an electronic world.
INFO 310  Human-Centered Design Process & Methods 3.0 Credits Introduces the student to the process of human-centered design of interactive user interfaces. Teaches some of the basic approaches to design and evaluation of interactive user interfaces. Delivers practical advice on interaction design challenges. Applies human-centered design principles in the design of the user interface to an interactive computer system.
CT 140  Network Administration I 3.0 Credits Students gain an understanding of terminology, technology, and issues involved in implementing networks.  Topic include: understanding the OSI 7 layer model; concepts of servers and clients; network hardware/software functions; basics of TCP/IP protocol, main types of network topologies (bus, ring, star and mesh); and share and access network resources (files, printers, etc.).
CI 101  Computing and Informatics Design I 2.0 Credits Introduces computing and informatics through a combination of lectures and hands-on laboratory exercises. Lectures emphasize an integrated view of topic areas and systems, spanning low-level software and implementation issues to high-level use and acceptance by individuals and communities. Lab exercises allow students to explore familiar systems in unique and novel ways to better understand how these systems are designed and used.
MATH 172  Introduction to Analysis B 3.0 Credits Matrices, inverse matrices, and solutions of linear systems, limits, continuity, rates of change and derivatives, techniques of differentiation.
MATH 171  Introduction to Analysis A 3.0 Credits Polynomials (including linear and quadratic functions), exponential and logarithmic functions, financial applications, matrices, inverse matrices, and solutions of linear systems.
INFO 405  Social and Collaborative Computing 3.0 Credits This course provides an introduction to the ways that computing systems support social interaction and productive collaboration. Students will learn concepts from social science theory and research and use these concepts to analyze systems and imagine novel systems designs that meet the needs of groups and organizations. Students will spend time examining, using, and participating in social and collaborative computing environments such as collaboration tools, crowdwork platforms, social media, and various online communities.
INFO 210  Database Management Systems 3.0 Credits Focuses on how to design databases for given problems, and how to use database systems effectively. Topics include database design techniques using the entity-relationship approach, techniques of translating the entity-relationship diagram into a relational schema, relational algebra, commercial query languages, and normalization techniques.
INFO 150  Introduction to Ubiquitous Computing 3.0 Credits Introduces the field of ubiquitous computing, which refers to the modern era of computers embedded into everything we do, everywhere we are. From smartphones to smart homes, students will explore what makes an object or device “smart”. Topics include privacy, interfaces, location, and context-awareness. Engages students of any background in reflecting on the role of ubiquitous computing in everyday life, and thinking critically about impacts of present and future technologies.
INFO 315  Advanced Database Management Systems 3.0 Credits This course will cover advanced database systems and concepts necessary in understanding modern database technologies beyond INFO 210 (Database Management Systems). Major topics include database programming in PL/SQL, including stored procedures, functions, triggers and packages, business intelligence, data warehouses, OLAP, ETL, data lake, big data architectures, and principles & practices of NoSQL databases.
INFO 153  Applied Data Management 3.0 Credits Explores technologies used to gather, organize, store, and retrieve data in various forms. Focuses on using databases and various file formats in software systems. Topics include file and database access, data munging and management, and data structures. Includes data management software development using pair or small team programming activities.
INFO 215  Social Aspects of Information Systems 3.0 Credits Introduces social issues involved in information systems design and use, e.g., personal computing, telecommuting, computers in education, the privacy and security of stored and transmitted information, and information ownership. Explores the interaction of high technology, employment, and class structure.
STAT 201  Introduction to Business Statistics 4.0 Credits This introductory first course in business statistics focuses on applications of data analysis and statistics in business and economics.  Topics covered include descriptive statistics and graphical presentation, probability, statistical inference, and simple regression analysis.
ENGL 112  English Composition II 3.0 Credits Equivalent to the university requirement of ENGL 102. Advances multilingual (non-native speakers of English) students’ abilities to use of writing as a tool for research and reflection and their understanding of writing as a process. Develops the critical evaluation and integration of information into students’ own writing as they research social, political, and educational open-ended issues. Continues review of grammar, organization, style, and documentation conventions. Enhances effective strategies for secondary research and collaboration skills. Promotes positive attitude towards writing.
Calculus I Functions, limits and continuity, derivatives, trancendental functions, and applications.
ENGL 113  English Composition III 3.0 Credits Equivalent to the university requirement of ENGL 103. Advances multilingual (non-native speakers of English) students' development in the reading, writing, and research processes. Some courses may focus on the student's academic and discipline-specific experiences, while others may be based on literary or social themes. Enhances multilingual students’ ability to read texts critically and to reflect on their own and others’ writing, scholarly and literary works, and social events. Promotes a positive attitude toward writing.
INFO 200  Systems Analysis I 3.0 Credits Study of the principles, practices and tools of information systems analysis and design. Emphasis on learning pragmatic aspects of working as a systems analyst and employing the tools of systems analysis and design.
INFO 101  Introduction to Computing and Security Technology 3.0 Credits Explores the infrastructure that makes current information and communication technology possible. Introduces foundational concepts of servers, networks, databases, and the Web. Addresses security and usability considerations that cut across all computing technology. Approaches computing technology from the perspective of system administrators who plan, manage, operate, and monitor large scale computing infrastructure. Covers emerging technologies including pervasive computing, continuous integration, virtualization, and the Internet of things. Explores professional opportunities in this high demand area.
CI 493   [WI] Senior Project III 3.0 Credits Part of a multi-term capstone experience involving in-depth study and application of computing and informatics. Students work in teams to develop a significant product. Requires use of a development process that includes planning, specification, design, implementation, evaluation, and documentation. This course is writing intensive.
INFO 103  Introduction to Data Science 3.0 Credits A first course in data science. Introduces data science as a field, describes the roles and services that various members of the community play and the life cycle of data science projects. Provides an overview of common types of data, where they come from, and the challenges that practitioners face in the modern world of “Big Data.” Provides an introduction to the interdisciplinary mixture of skills that the practice requires.
INFO 152  Web Systems and Services II 3.0 Credits Explores techniques used to build leading-edge application systems on the World Wide Web.  Topics include Web server components of Web applications, and basic database processing.  Includes Web programming using pair or small team programming activities.
MATH 102  Introduction to Analysis II 4.0 Credits Covers limits, continuity, derivatives, indefinite and definite integrals, and applications.
CI 103  Computing and Informatics Design III 2.0 Credits Follows CI 102 in the Computing & Informatics design sequence. Introduces computing and informatics through a combination of lectures and hands-on laboratory exercises. Lectures emphasize an integrated view of topic areas and systems, spanning low-level software and implementation issues to high-level use and acceptance by individuals and communities. Lab exercises allow students to explore familiar systems in unique and novel ways to better understand how these systems are designed and used.
ENGL 101  Composition and Rhetoric I: Inquiry and Exploratory Research 3.0 Credits Develops students’ abilities to use writing as a tool for inquiry. Introduces genre theory, writing as a process, revision, and strategies of primary and secondary research. Reviews grammar, style, and documentation conventions. Engages students in reflection and promotes positive attitudes toward writing.
ENGL 103  Composition and Rhetoric III: Themes and Genres 3.0 Credits Advances students' development in the writing and research processes and their understanding of how genres of writing shape meaning. Some courses may focus on the student's academic and discipline-specific experiences; Others may be based on literary or social themes. Promotes a critical reading of texts, reflective analysis, and a positive attitude toward writing.
CS 171  Computer Programming I 3.0 Credits Introduces fundamental concepts of computing including memory, instructions, function calls, and activation records. Covers fundamentals of structured computer programming in the language of instruction: variables, input and output, expressions, assignment statements, conditionals and branching, subprograms, parameter passing, repetition, arrays, top-down design, testing, and debugging.
INFO 420  Software Project Management 3.0 Credits The objective of this course is to study project management in the context of software systems development. The course will cover the processes, contexts, metrics, planning and management concerns of managing projects for modern software systems.
COM 310   [WI] Technical Communication 3.0 Credits Develops skills in communicating technical information. Focuses on writing letters, resumes, proposals, reports, and instructions. Offers extensive writing practice along with exercises and presentations. This is a writing intensive course.
INFO 151  Web Systems and Services I 3.0 Credits Introduces technologies used to build leading-edge application systems and services on the World Wide Web. Coverage includes a selection of Web components such as mark-up and scripting languages, and server components of Web applications. Introduces Web programming using pair or small team programming activities.
MATH 101  Introduction to Analysis I 4.0 Credits Covers linear, quadratic, exponential, and logarithmic functions; systems of linear equations; elementary linear programming; matrix algebra; inverse; and mathematics of finance.
ENGLISH COMPOSITION I Prepares students for diverse types of college writing. Covers the writing process, general criteria used to evaluate writing, collaborative writing, and rhetoric, especially audience analysis.
ENGLISH COMPOSITION II ENGLISH COMPOSITION II
INTRO TO COMMUNICATION MEDIA Course examines various approaches people take to communicating. Focuses on developing an awareness of how and why we communicate and why we do not always communicate effectively. Includes consideration of variables related to interpersonal, group, public, and mass-communication contexts.
BRIT LIT BEFORE 1785 This course introduces students to the cultural heritage of the British Isles by studying representatives literary works from the Middle Ages through the 18th Century.
ART APPRECIATION A broad introduction to the nature, vocabulary, and media of the visual arts of drawing, painting, prints, the camera arts, graphic design, sculpture, crafts, and architecture.
GENERAL CHEMISTRY I Topics include the nuclear model, stoichiometry, chemical reactions, gas laws, thermochemistry, atomic structure, and molecular bonding.
INTRODUCTION TO ASTRONOMY This is a descriptive survey course of elementary astronomy with laboratory intended for both non-science and science majors. Topics covered include a description of the celestial sphere, a tour of the Solar System, techniques for measuring and classifying stars, stellar evolution, white dwarfs, black holes, neutron stars, galaxies, and Big Bang cosmology.
PHYSICAL GEOLOGY Materials that make up the Earth as well as the properties and geological processes that operate in the Earth. Special topics include plate tectonics, mineral chemistry, the rock cycle, sedimentary processes, metamorphism and geological map reading.
LIFE SCIENCE I The basic principles of biological phenomena are emphasized by examples relating to the human. Cell structure and function, energy and organ systems are studied.
MARINE SCIENCE I This course will present the basic principles of geological and physical oceanography. Marine science is an interdisciplinary science field in which geology, physics, chemistry and biology interact in complex ways that are fundamental to the oceanic environment.
ATMOSPHERIC PROCESSES Introduces students to the natural science branch of geography. Emphasizes Earth-Sun relationships, weather and climate.
LANDSCAPE PROCESSES Introduces students to the natural science branch of geography. Emphasizes spatial patterns and processes related to natural landscape regions and landforms.
CALCULUS AND ITS APPLICATIONS Introduction to calculus with an emphasis on problem solving and applications. Key concepts are presented graphically, numerically and algebraically, although the stress is on a clear understanding of graphs and tabular data. The course covers: algebraic, exponential and logarithmic functions, their properties and their use in modeling; the concepts of derivative and definite integral and applications.
BUSINESS ANALYTICS I An introduction to data analytics in business that includes analysis to make data driven business decisions. This course utilizes statistical applications in business problems solving using descriptive statistics, probability theory, sampling distributions, methods of estimation, and tests of hypotheses.
STAT REASON AND APPLICATION An introduction to modern statistics designed to provide the student with a solid foundation in statistical concepts, reasoning and applications. Emphasis given to problem identification, methodology selection and interpretation of results. Analysis of data accomplished by extensive use of statistical computer software, thereby minimizing manual computation.
BUSINESS ANALYTICS II A second course in quantitative data analytics in business decision making utilizing methods of analysis including statistical inference, predictive, modeling, forecasting, correlation and regression analysis. It further develops fundamental knowledge and skills for making data driven business decisions including the use of computer applications for problem solving.
STAT RESEARCH TECHNIQUES Coverage includes analysis of experimental designs such as completely randomized design, randomized block design, and factorial design using analysis of variance (ANOVA), correlation, simple and multiple regression analysis, model building, nonparametric techniques, contingency table analysis, sampling and survey methods. Time permitting topics such as time series analysis and statistical simulations will be covered. Statistical computer software will be extensively used for data analysis.
DESIGN-ANALYSIS OF EXPERIMENTS Principles, constructions, and analysis of experimental designs to include completely randomized, randomized complete block, Latin square and split plot designs, factorial experiments, designs with nested and/or crossed factors, multifactor experiments with randomization restrictions, transformations, incomplete block designs, multiple comparisons including contrasts, confounding, fractional replication, computer-assisted data analysis.
HY OF WESTERN CIVILIZATION I History of humankind, emphasizing the development of the West to c. 1600 C.E. Topics may include Mesopotamia and Egypt, Ancient Greece and Rome, the origins of monotheistic religions, and medieval Europe.
INTRO TO CULTURAL ANTHROPOLOGY Introduces culture as a set of integrated behaviors and meanings learned in a social environment. Explores the diversity of human cultural practices in terms of kinship, gender, religion, subsistence, and politics. Language is emphasized as the means by which culture is transmitted from one generation to the next.
PRIN OF MICROECONOMICS Functions of the price system in a market economy; role of households and business firms in mobilizing resources to meet human needs. The functional and personal distribution and use of income. Relevant problems are discussed.
INTRODUCTION TO PSYCHOLOGY A survey of the basic theories, concepts, principles, and research findings in the field of Psychology.
DECISION MAKING - SMALL GROUPS Theory and practice in leading and participating in small group decision making Special focus on group problem solving and the management of conflict in small group decision-making meetings.
TECHNICAL WRITING - W The purpose of this course is to train students in the kinds of written reports required of practicing professionals, aiming to improve mastery of the whole process of report writing from conceptual stage through editing stage.
WRITING IN PROFESSIONS - W Practice in the kinds of writing done in such professions as speech pathology and audiology, nursing, teaching, criminal justice, and business. Assignments, which emphasize persuasive writing, may include position papers, correspondence, and reports.
BEGINNING PROGRAMMING A first course in programming using a visual, event-driven programming language. Coverage includes algorithmic problem solving, fundamentals of programming, procedures, decisions, repetition, and arrays.
INFO TECHN IN ORGANIZATIONS This course introduces students to the Information Technology (IT) concepts and the software that facilitates IT solutions. Topics include: data, information, and knowledge concepts, productivity software tools, role of networking and communication, the "digital phenomena", and the benefits of IT. Also included are IT program concepts such as: ethics, the importance of effective written and oral communication, continuous learning, and technology monitoring-evaluation.
SYSTEMS ARCHITECTURE This course introduces students to the Information Technology (IT) hardware and systems software concepts. Topics include: computer hardware, operating systems, system software, hardware and software integration, operating procedures, system performance, security/safety, and compatibility.
INTERMEDIATE PROGRAMMING Topics include arrays, sequential files, random access files, structured exception handling, use of LINQ, object-oriented programming, debugging, and additional controls and objects.
INFORMATION TECH IN SOCIETY A discussion of personal, local, national, and global impact of information technology on ethical, legal, and social issues.
DATA COMM AND NETWORKING An introduction to data communications, computer networking and network operating systems. Topics include: basic concepts of data transmission, network architectures, communications devices, and communication protocols.
DATABASE DESIGN-DEV-MGT Analysis, design, and development of desktop database systems. Coverage of normalization concepts, DBMS models, E-R/Semantic modeling, and query processing.
ADV APPLICATION DEVELOPMENT This course explores advanced topics in visual applications development. Emphasis is placed upon developing increased program functionality and connectivity with local and remote databases. Other topics: integrating programming components and libraries, object-oriented application development and testing methodologies, and using an object-oriented approach for multi-tiered applications.
HUMAN COMPUTER INTERFACE Students will study the concepts of human-computer interaction and interface design. Topics include: detailed human-computer interaction concepts, modern graphical user interface models, and interface usability testing. Students will use rapid-prototyping tools to develop and test a typical user interface.
IT PROJECT MANAGEMENT This course examines the principles and techniques of project management from an information technology perspective. Topics included are: project planning, scheduling, resource allocation, and project management software tools. There is a specific focus on management of software projects, integrating the principles of information systems/needs analysis, software engineering, risk management, and change management.
NEEDS ASSESS-TECH EVAL - W This course presents methodologies for assessing technological needs in support of organizational information requirements. Students learn the next logical step is a formal means of evaluating a given technology. Major topics of the course are specifying organizational needs, identifying potential technologies, evaluating potential benefits, assessing the organization's ability to utilize the technology.
ITE SENIOR DEMO PROJECT A senior capstone project course that utilizes teams and/or individuals working from problem requirements and specifications to produce a solution.
SENIOR CAPSTONE EXPERIENCE-W A comprehensive team project will be completed and documented. Writing assignments will reinforce the importance of life-long learning, leadership skills, and the ethical issues of computing as well as appropriate resume and job application cover letter creation.
CIS SENIOR SEMINAR A series of mini-seminars designed to prepare graduating seniors for transition to professional careers in computing or graduate study and to assess student learning outcomes in the curriculum. Mini-seminars would include, but would not be limited to: resume development, interviewing tips and techniques, career planning, professionalism and ethics in the workplace, and advanced graduate study and professional development.
PUBLISHING FOR THE WWW This course is an introduction to the models and tools used to develop documents for the World Wide Web. Course topics include website planning and design, markup and styling languages, graphics, multimedia utilization, typography, and scripting.
MULTIMEDIA PRODUCTION This course covers the models and tools of multimedia development and production. Development models include: message analysis, audience analysis, and media formats. Technical issues include: data formats, data interoperability, and hardware concepts.
WEB SITE MANAGEMENT This course addresses the design, establishment and implementation of a World Wide Web site. Issues addressed are: definition of the site, establishment of a physical site, choice of a Web server, determination of software requirements, implementation details, security, management, and monitoring of the site.
ADV WEB DEVELOPMENT This is an advanced course in web programming and development. This course provides a hands-on approach using high-level development tools to learning advanced web programming concepts including server-side and database processing.
NETWORK ADMINISTRATION This course examines the network and database administrator functions in an organization. Students study the functions required of an administrator to facilitate the usage of the environment while securing the resources. Various methods and software products will demonstrate the areas of access and security.
NETWORK INFRASTRUCTURE SYSTEMS This course focuses upon the concepts of network hardware systems that provide interconnection of communication devices. Topics include: network architectures and technologies, concepts such as routing, addressing, and network protocols (TCP/IP and others).
NETWORK SECURITY MANAGEMENT This course examines network and web security issues including: risks and threats, system access points, hardware and software defense methods, and organizational security policies.
ADVANCED NETWORK MANAGEMENT This course explores advanced network management issues including: developing/designing network implementation strategies, managing users and data, providing operational support and help-desk, developing network use policies, developing network recovery procedures.
ADVANCED OPERATING SYSTEMS This course introduces students to advanced Operating Systems techniques and related system architecture concepts.
FILE SYS FOR DIGITAL FORENSICS This course introduces students to advanced file system techniques used in Forensic Analysis. Students will examine the current principles in drive storage hardware and file systems, including Windows and Linux-based systems and evaluate possible data hiding techniques which can be employed within these systems.
INTRO TO CRIMINAL JUSTICE An overview of crime in the U.S. and the three major criminal justice agencies: law enforcement, courts, and corrections.

Introduction To Software Development Concepts This course introduces fundamental software development concepts common to most programming languages. Topics include problem solving and algorithm development, debugging, programming standards, variables, data types, operators, decisions, repetitive structures, modularity, arrays, user interface construction, software testing and debugging. A broad range of examples will be used throughout the course to show how each programming concept applies to real life problems.
Information Technology Architectures A conceptual and technological survey of information technology architectures inclusive of operating systems, network operating systems, distributed systems architectures, and distributed application architectures. Interoperability between these architectural components is explored. Current technology and trends in each architectural element are reviewed. PC literacy required
Introduction To Systems Development This course introduces information systems development. Topics include types of information systems, system development, database management systems, and problem solving. Students will read/create UML, ERD, and data flow diagrams to model information system objects, data, processes, and logic. Labs emphasize modeling and SQL/QBE querying to prepare students for later systems, programming, and database classes. Given user requirements students will design, construct, and test a personal computer information system. PC literacy required.
System Administration This course provides a comprehensive introduction to system administration. Topics include authentication and authorization, directory services, system management and system security. Emphasis is placed on enterprise level systems.
Object-Oriented Programming Introduction This course introduces software development concepts common to modern object-oriented programming languages. Topics include: intermediate data types, decisions, repetitive structures; methods; arrays and collections; encapsulation, inheritance, and polymorphism; exception handling; data persistence; Database Management System (DBMS) connectivity; user interface construction; software testing and debugging; and working in teams.
Cybersecurity Fundamentals This course introduces cybersecurity fundamentals and concepts. Security models that provide a basis for overarching security solutions are introduced to provide a basis for discussion. Risks and vulnerabilities are examined along with technical controls that can be used to mitigate them. The role of security policy and the incident management framework are examined. Emphasis is placed on building a strong foundation for further study in the field
Database Fundamentals A study of relational database concepts. These concepts include data design, modeling, and normalization; the use of Structured Query Language (SQL) to define, manipulate, and test the database; programmatic access to a database and practical issues that database developers must handle
Systems Analysis And Design Methods Comprehensive introduction to information systems development. Topics include the systems analyst, the systems development life cycle, methodologies, development technology, systems planning, project management, systems analysis, systems design, systems implementation, and systems support. Introduction to tools and techniques for systems development
Policy, Regulation, And Globalization In Information Technology This course provides students with opportunities to study how technology is intertwined with larger economic, social, cultural, and ethical dynamics in an era of intensified globalization. The course examines technology in a global environment. Students will explore concepts and issues related to law, policy, regulation, outsourcing, offshoring, globalization, global competitiveness, global communications, cultural differences and quality of life issues. Students will examine ethical situations that arise as a result of the impact of technology. In summary, the course is designed to help students understand what it means to identify as, and/or work with, technology in a global environment.
Managing Information Technology Projects This course introduces the application of knowledge, skills, tools, and techniques that project managers use to plan, staff, estimate, and manage information technology projects. Special emphasis is placed on learning and applying the concepts of managing scope, risk, budget, time, expectations, quality, people, communications, procurement, and externally provided services. Students will apply project management technology and techniques to business problems
Database Programming This course explores advanced database programming techniques for enterprise-wide databases and their implementation. It uses programmatic extensions to Structured Query Language (SQL) supported by todays enterprise-class Relational Database Management Systems (RDBMS). Topics include advanced data manipulation, storage considerations, data transformation techniques to enhance interoperability of data, stored procedure and trigger design and implementation; and query optimization.
Enterprise Data Management This course examines advanced design techniques and physical issues relating to enterprise-wide data management. Topics include advanced design concepts, enhanced modeling and constructs, objects and unstructured and semi-structured data in databases, data management in non-business contexts, implementation of an enterprise data architecture, and data quality and stewardship.
Systems Programming This course introduces concepts of lower level systems programming in C/C++ on a UNIX/Linus operation system platform. Command level development, algorithms, data structures, iteration and recursion, algorithms and analysis will be covered.
Object-Oriented Application Development This course focuses on using object-oriented programming languages in the development of modern, business applications. Topics include object-oriented design, encapsulation, object interfaces, inheritance, aggregation, abstract classes, polymorphism, data structures, and exception handling.
Transformative Texts, Critical Thinking And Communication I: Antiquity To Modernity The primary goal of the course is to provide students with a foundational knowledge of transformative literature from around the world as well as fundamental reading, writing, speaking and analytical skills. This first course in the sequence introduces students to great texts from antiquity to the birth of the modern era. Its goal is to create life-long learners, open to the world, and sensitive to other points of view. It exposes students from across the university to the ideas, skill-set and inspiration that animates from the liberal arts, and it also introduces them to liberal arts faculty.
Transformative Texts, Critical Thinking And Communication II: Modern World The primary goal of the course is to provide students with a foundational knowledge of transformative literature from around the world as well as fundamental reading, writing, speaking and analytical skills. This second course in the sequence introduces students to great texts from the modern era. Its goal is to create life-long learners, open to the world, and sensitive to other points of view. It exposes students from across the university to the ideas, skill-set and inspiration that animates from the liberal arts, and it also introduces them to liberal arts faculty.
Design Thinking In Technology Student will engage in critical analysis of real-world problems and global challenges. They will demonstrate the ability to recognize opportunity and to take initiative in developing solutions applying the principles of human centered design. Students will be able to communicate effectively and to work well on teams. Problems and solutions will be examined from societal, cultural, and ethical perspectives.
Applied Calculus I Topics include trigonometric and exponential functions; limits and differentiation, rules of differentiation, maxima, minima and optimization; curve sketching, integration, anti-derivatives, fundamental theorem of calculus. Properties of definite integrals and numerical methods. Applications to life, managerial and social sciences.
Applied Calculus II This course covers techniques of integration; infinite series, convergence tests; differentiation and integration of functions of several variables; maxima and minima, optimization; differential equations and initial value problems; matrices, determinants, eigenvalues and eigenvectors
Foundations Of Organizational Leadership A survey of individual and organizational behavioral concepts and principles that provide a foundation for leadership in technology organizations. The focus will be toward the understanding of behaviors necessary for effective organizational leadership, including concepts of work in a technology-rich environment.
Fundamentals Of Speech Communication A study of communication theories as applied to speech; practical communicative experiences ranging from interpersonal communication and small group process through problem identification and solution in discussion to informative and persuasive speaking in standard speaker-audience situations.
America And The World This course examines the evolution of American culture as the United States transitioned from a relatively isolated country at the end of the 19th century to an active shaper of a global community by the 21st century. We will examine ways in which American Culture shaped and was shaped by international relationships that transcend nation states. We will explore reactions to, and the results of, the spread of American culture both inside and outside the United States. By studying traditional cultural forms like art, music, design, literature, film, and technology the course will build a foundation from which to understand the configuration of American culture. Yet the course will also emphasize American culture expression, that in the forms of television, advertising, sport, cartoons, social media, video games, fashion, food, drugs, and automobiles, have transcended the geographical boundaries of the United States to engage in global interplays of material cultural exchange.
Quantitative Reasoning This course will cover important mathematical ideas, including proportion, weighted averages, linear models, exponential models, basic probability and statistics, and some algebra, by using concrete real-world problems. It will not be a prerequisite for any other mathematics course.
Basic Drawing An introduction to drawing and sketching as a means of communication of ideas.
Economics National economic problems such as unemployment, recessions, inflation, taxation, bank interest rates, the growth of government, monetary systems, and a rising national debt are discussed along with the principles, policies and institutions for solving these macroeconomic problems.
Statistics And Society Introduction to statistical ideas and their impact on public policy and the sciences. Sample surveys, design of experiments, measurement, analysis of data, simulating probabilities, concepts of inference. Application to current issues and controversies.
College Algebra Coordinate systems, functions and their graphs; linear, quadratic, general polynomial, rational, exponential, and logarithmic functions;equations and inequalities; linear and non-linear systems and matrices.
Survey of Accounting This course is an introduction to financial and managerial accounting. It will introduce the concepts of business and the measurement systems used to control and evaluate business activities. It will also explore product costing systems and the use of accounting data as a basis for management planning and decision making.
Fundamentals of Financial Accounting Accounting 200 is an introduction to the concepts of business and the measurement systems used to control and evaluate business activities.
Programming I Problem solving using a high level programming language and object oriented software design. Fundamental stages of software development are discussed: problem specification, program design, implementation, testing, and documentation. Introduction to programming using an object oriented language: using classes, defining classes, and extending classes. Introduction to algorithms and data structures useful for problem solving: arrays, lists, files, searching, and sorting.
Principles of Molecular and Cellular Biology An integrated lecture and laboratory course for biology majors and students planning to take additional courses in biology. This course covers basic biochemistry, cell structure and function, molecular biology, genetics, physiology, and development of plants and animals.
General Chemistry I This course seeks to develop a working knowledge of the conceptual foundation and the quantitative chemical relationships on which subsequent chemistry courses are built. Atomic structure, chemical bonding, reaction stoichiometry, thermochemistry, and periodic trends are emphasized in this integrated lecture and laboratory course.
General Psychology A basic introduction to the science of psychology.
Introductory Economics An introduction to modern economics designed primarily for students who do not plan to major in economics. Topics include economic history, the operation of economic institutions, and the formation and execution of economics policies to meet the current problems of the domestic and international economy. Course may be offered in lecture or online format.
Principles of Microeconomics An analytical introduction to microeconomics. Topics include theory of markets, public policy, international trade, economic efficiency, and equity.
Principles of Macroeconomics An analytical introduction to macroeconomics. Topics include determination of aggregate income, employment, inflation, exchange rates, and the role of fiscal and monetary policy in dealing with unemployment, inflation, and economic growth.
Programming II This course continues developing problem solving techniques by focusing on the imperative and object-oriented styles using Abstract Data Types. Basic data structures such as queues, stacks, trees, and graphs will be covered. Recursion. Basic notions of algorithmic efficiency and performance analysis in the context of sorting algorithms. Basic Object-Oriented techniques. An associated laboratory will develop projects reinforcing the lecture material.
College Physics I Principles and applications of mechanics, fluids, heat, thermodynamics, and sound waves. Three class hours and one laboratory per week. This course emphasizes the development of quantitative concepts and problem solving skills for students needing a broad background in physics as part of their preparation in other major programs, and for those who wish to meet the laboratory science requirement of the College.
Foundations of Technical Writing Introduces students to the principles of technical communication. Students learn to organize, develop, write, and revise various technical documents (e.g., letters, manuals, presentations, proposals, reports, resumes, websites) often needed in business, engineering and scientific settings.
Computer Organization and Platform Technologies Machine-level representation of data, digital logic and digital systems, computer architecture and organization, computing infrastructure, introduction to multiprocessing systems, firmware, hardware and software integration , introduction to intersystems communications, enterprise deployment management introduction to virtual machine emulation, platform technologies.
Computer and Information Security Fundamentals of computer security, security mechanisms, information states, security attacks, threat analysis models, vulnerability analysis models, introduction to cryptography, authentication, intrusion detection, intrusion prevention (firewalls), operating systems security, database security, software security, host hardening, incident and disaster response.
Elementary Statistics Elementary descriptive statistics of a sample of measurements; probability; the binomial, Poisson, and normal distributions, populations and sampling from populations; simple problems of statistical inference.
Survey of Management and Leadership This course is designed to acquaint students with traditional business management ideas, recent management thinking, and the contemporary application of both to the management functions of planning, organizing, leading and controlling. A survey of a wide variety of topics is offered, generally including goal setting, strategy formulation and implementation, managerial decision making, structure and design of organizations, corporate culture, organizational change and development, human resources management, managing diversity, leading, motivation, communication, teamwork, quality control, management control systems, operations and service management, entrepreneurship and small business management, managerial ethics, corporate social responsibility, and management in the global environment.
System and Network Administration This course introduces operating systems and network administration and presents topics related to selection, installation, configuration, and maintenance of operating systems and computer networks. Topics to be covered include: Unix and Windows operating systems installation, configuration, and maintenance, server administration and management, client and server services, user and group management and support, software systems installation and configuration, content management and deployment, security management, network administration, backup management and disaster recovery, resource management, automation management, operating systems and Web domain management, operating systems and application version control management. A laboratory component will provide hands-on experience with system and network administration.
Web Systems and Technologies The objective of this course is to discuss how the Web systems are programmed and maintained and how online pages are created and delivered by Web servers and used by clients. Topics to be covered include: Web systems and technologies, information architecture, digital media, Web development, Web standards, vulnerabilities, social network software, client-side programming, server-side programming, Web services and servers, XHTML, CSS, flash and CGI programming, CSS, Web systems security, JavaScript, PHP, and emerging technologies.
Information Security Management The objective of this course is to present topics related to the administration and management of information security. Topics to be covered include: security fundamentals, operational issues, cost-benefit analysis, asset management, security risk management, security policies and enforcement, risk avoidance, risk prevention, risk transfer, security services, security forensics, contingency planning, security auditing.
Project Management This course develops a systems view of business so students can more effectively integrate project management into their business strategy. A common language and knowledge of project management concepts, principles and practices is developed. Students develop an understanding of what project management involves, how it relates to other functional management areas, and its role in an organization's structure and leadership. Topics are covered in the order they appear in the project lifecycle starting with project selection and bidding and ending with project acceptance and close out. Topics covered in this course include: the importance and role of project management, the contextual nature of projects, logistics issues in project management, and the E-business impact on project management.
Software Engineering and Management This course introduces the software development life cycle and key concepts related to software engineering. Topics include software process models, software project management, software requirements engineering, formal and informal modeling, software architecture, software design, coding and implementation, software testing and quality assurance, software deployment, and software evolution. Additional topics such as software metrics and measures, application domains, software engineering standards, and software configuration management will also be presented. This is a project-driven course.
Operating Systems This course introduces operating systems principles and associated key concepts. Topics to be discussed include: processes and threads, concurrency, scheduling and dispatch, memory management, processor management, device management, security and protection, file system, disk scheduling, real-time and embedded systems, fault tolerance, scripting, and an introduction to virtualization.
Computer Networks Foundations of computer networking with practical applications and network administration, with emphasis on the Internet and wireless public switched telephone network. Topics to be covered include routing and switching, routing algorithms, physical layer, data link layer, network layer, network security, network management, and application areas.
IT Capstone I Capstone is a senior level course designed to allow a student to review, analyze, integrate, and apply technical knowledge in a meaningful and practical manner. The student will be expected to complete an approved academic project in IT that may be in collaboration with an industrial partner.
System Integration and Architecture This course introduces system integration and architecture. Key concepts to be presented include: system architecture, system requirements, organizational context, acquisition and sourcing, system and component integration, middleware platforms, design patterns, integrative coding, scripting coding, testing and quality assurance, system deployment.
Human-Computer Interaction This course introduces principles of human-computer interaction. Important topics to be presented include: human factors, human-centered design and evaluation, graphical user interfaces, multimedia system integration, interactive systems development, computer-supported cooperative work, human cognitive skills, accessibility, alternative input/output media, and emerging technologies.
Social and Professional Issues This course will provide an overview of the history of computing and presents key concepts related to the social and professional aspects of IT. Topics to be covered include: pervasive themes in IT, social context of computing, intellectual property, legal issues in computing, professional and ethical issues and responsibilities, privacy and civil liberties.
IT Capstone II. 3 Hours. Senior level course designed to allow a student to review, analyze, integrate, and apply technical knowledge in a meaningful and practical manner. The student will be expected to complete an approved academic project in IT that may be in collaboration with an industrial partner.
Composition Instruction and practice in writing in a variety of rhetorical contexts, including academic ones.
Critical Reading and Writing. Critical Reading and Writing.
Discrete Structures Mathematical foundations including logic, sets and functions, general proof techniques, mathematical induction, sequences and summations, number theory, basic and advanced counting techniques, solution of recurrence relations, equivalence relations, partial order relations, lattices, graphs and trees, algorithmic complexity, and algorithm design and analysis. Throughout there will be an emphasis on the development of general problem solving skills including algorithmic specification of solutions and the use of discrete structures in a variety of applications

Composition I Expository writing with emphasis on effective communication and critical thinking. Emphasizing the writing process writing topics are based on selected readings and on student experiences
Composition II Focus on extensive research in analytical and argumentative writing based on a variety of readings from the humanities. Emphasis on developing critical thinking and diversity of perspective
Fundamentals of Technical Presentations Communication theory and its application to preparing and delivering technical information in public speaking situations.
Fundamentals of Oral Communication Communication theory and its application to preparing and delivering public speeches.
Statistical Methods I First methods course introducing probability and statistical inference, including estimation, hypothesis testing, binomial and normal distributions, sample size
College Algebra Inequalities. High degree polynomials. Graphs, rational, logarithmic, and exponential functions. Systems of equations. The “NC” grading policy applies to this course.
Pre-Calculus Algebra Properties and graphs of polynomials, rational, exponential and logarithmic functions, matrices, sequences and series, conics, induction, binomial theorem. Introduction to limits. Prepares students for upper level mathematics.
Principles of Macroeconomics An introduction to macroeconomics, including an overview of the market economy; national income, employment, and price level determination, stabilization policies, and international economics
General Psychology A survey of the basic principles, theories, and methods of contemporary psychology, including the study of human diversity.
College Physics I Mechanics, waves, thermodynamics
College Trigonometry The circle arc length, identities, trigonometric functions, inverse functions, applications to simple harmonic motion, function of angles, complete development of triangle solving
Principles of Macroeconomics An introduction to macroeconomics, including an overview of the market economy; national income, employment, and price level determination, stabilization policies, and international economics.
General Psychology A survey of the basic principles, theories, and methods of contemporary psychology, including the study of human diversity.
Introduction to Programming with C Programming in C including arrays, pointer manipulation and use of standard C math and IO libraries
Object Oriented Programming Object oriented programming concepts (classes, objects, methods, encapsulating, inheritance, interfaces) and the expression of these concepts in the programming languages such as JAVA
Database Concepts Entity-relation model, relational database managements systems, normal forms, performance or databases, report generation.
Foundations of Discrete Math Basic mathematical logic, methods of proof in mathematics, and application to elementary discrete structure.
Introduction to Discrete Structures Logic, sets, functions, relations, combinatorics, graphics, Boolean algebras, finite-state machines, Turing machines, unsolvability, computational complexity.
Computer I Problem solving techniques, order analysis and notation, abstract data types, and recursion
Security in Computing Security theory. Legal and human factors, Malware, Intrusion patterns and tools, Windows, Unix, TCP/IP, and applications vulnerabilities. Detection. Policies and enforcement. Protection and assurance.
Foundations of HCI Students will learn the foundational concepts of Human-Computer Interaction (HCI), including human-centered design principles, interaction modalities, design guidelines and heuristics, and interface evaluation techniques
Computer Architecture Concepts CPU organization, current computer architectures, network file servers
Computer Network Concepts Network media, protocol, current and evolving standards for local, metropolitan, wide area and wireless networks.
Fundamentals of Information Technology Pervasive themes in Information Technology. Organizational issues. History of Information Technology. Information Technology and its related and informing disciplines. Application domains. Applications of math and statistics to Information Technology.
Managing Information Technology Integration Requirements, acquisition and sourcing. Integration. Project management. Testing and QA. Organizational context
Enterprise Computing Client-server architecture. Server-side scripting: Servlets, JSP, PHP. JDBC and MySQL database; connectivity. Multi-threaded Java applications. J2EE development. SSL
Web-Based Information Technology Digital libraries. Media formats. Compression. Streaming Media. Mobile internet and WML. Emerging technologies. Capacity planning for web services
Design and Implementation of Computer Communication Networks Data communication networking technologies (TCP/IP, Ethernet, Gigabit Ethernet, ATM, Frame Relay), products (routers, switches, adapters, cabling). Base design and detailed configuration including hands-on exercises.
Frontiers in Information Technology Research into leading edge information technologies that have a high likelihood of affecting the work place in the two to five year time frame.
Advanced Ethics in Science and Technology Critical thinking applied to ethics in science and technology
Operating System Concepts System calls, concept of processes, CPU scheduling, security issues, client server paradigms, and computer supported workgroups
System Administration and Maintenance An examination of operating systems and applications installation, configuration, and maintenance, including client-server services, content management and deployment, server administration and management, and user/group management.
College Physics II Fluids, electricity and magnetism, optics, x-rays, radioactivity
Documentation and Project Management Development of a book-length project from idea to final published product. Examples may include style manuals, policies and procedures, and training manuals.
Writing for the Computer Industry Creating different kinds of software manuals or online help systems for the computer industry
Writing and Hypertext Writing and HTML/CSS coding for online environments, hypertext architectures, and electronic literacy theory to develop a more critical and applied understanding of hypertext
Digital Rhetorics and The Modern Dialectic Explores the development of digital rhetorics appearing in online environments through close reading and analysis of formative rhetorical texts, fiction, and internet materials.
Technical Communication for the Virtual Workplace Collaborative technologies used in the modern workplace and the challenges associated with virtual collaboration. Students will participate in a virtual team project
Writing in Digital Environments Study and practice of new media/Internet writing and publishing, covering a range of online and multimedia genres.
International Technical Communication International issues in the field of technical communication including internationalizing documents, user interface design, international collaboration, and rhetorical and logistical challenges
Document Design and Publication Theory and practice of technical document design, including style, format, and layout. Create documents with relevant publication technologies. Practice in publication project management
Writing for the Technical Professional Writing effective correspondence, instructions, proposals, and informal and formal reports
Professional Writing Study of and practice with professional writing as a rhetorical act involving problem solving and audience accommodation; includes research and text production practices as well as business genres and conventions.
Information Technology Career and Academic Advising I Information Technology Career and Academic Advising I
Careers in Information Technology Careers in Information Technology

Introduction to Computer Programming Introduction to object-oriented program design and development. Principles of algorithm formulation and implementation.
Data Structures and Algorithms Fundamental data structures and algorithms of computer science; basic algorithm analysis; recursion; sorting and searching; lists, stacks, queues, trees, hashing; object-oriented data abstraction.
Discrete Structures Introduction to grammars and parsing; predicate and propositional logic; proof techniques; sets, functions, relations, relational data model; graphs and graph algorithms.
Foundations of Global Leadership Foundational principles and practices of individual and organizational leadership in a global context from an integrated moral, technical and social perspective. Emphasis on developing integrity, valuing and leveraging diversity, acquiring and applying leadership skills.
Technical Communication Effective processes of written, oral, and visual technical communication, including collaborative processes. Writing for academic and professional audiences.
Calculus 1 Differential and integral calculus: limits; continuity; the derivative and applications; extrema; the definite integral; fundamental theorem of calculus; L'Hopital's rule.
Introduction to Newtonian Mechanics Linear, circular, and projectile motion; their prediction from forces and torques. Conservation of energy and momentum. Weekly lab.
Statistics for Engineers and Scientists The scientific method; probability, random variables, common discrete and continuous random variables, central limit theorem; confidence intervals and hypothesis testing; completely randomized experiments; factorial experiments.
Exploration in Innovation Design Techniques Through a series of hands-on experiences, students explore principles, methods, and tools of innovation and design thinking in technology and engineering.
Economic Principles and Problems Strengths and weaknesses of markets and governments for solving problems of social organization or conflict, including policy response to inflation, unemployment, pollution, poverty, growth, etc.
Introduction to Psychological Science Basic course in modern scientific psychology.
Cornerstone: Information Technology Planning and preparing for a successful career in information technology. Developing skills with computers, problem solving, studying, and time management. Comparing information technology to computer science, computer engineering, and information systems.
Introduction to Computer Systems How a computer works, from hardware to high-level programming language. Logic circuits, Boolean algebra, computer instructions, assembly language, binary arithmetic, and C programming.
Fundamentals of Web-Based Information Technology Web technologies including distributed architecture, networking, database concepts, client and server development, infrastructure management, and web system integration.
Fundamentals of Web-Based Information Technology Web technologies including distributed architecture, networking, database concepts, client and server development, infrastructure management, and web system integration.
Computer Architecture and Organization Principles of computer hardware and instruction set architecture. Subjects include: internal CPU organization and implementation, peripheral interconnect and IO systems, and low-level programming and security issues.
Human-Computer Interaction User experience design techniques and best practices including requirements analysis, usability studies, prototyping methods, evaluation techniques, and cognitive, social, and emotional theories.
Digital Communications Ohm's law, power, inductance, capacitance, reactance, impedance, resonance, transformers. Properties of waves and electromagnetic radiation, including light. Communication systems, wired and wireless. Bandwidth, modulation; Shannon's theorem, telecommunications. Network physical and data link layers (ISO/OSI model). Optics/Coax/Twisted pair; RS-232/Ethernet; Signals/Protocols/Packets; digital communication theory fundamentals.
Operating Systems Applying and using computer operating systems. Configuration, file systems, security, administration, network interfacing, multitasking, multiuser, device driver installation. Analyzing operating system performance.
Computer Networks Computer networks. Local and wide-area networking for enterprises and service providers. Workgroups/routers/hubs/switches; network server administration; Internet protocols and routing; security and privacy.
Database Principles and Applications Database theory and architecture; data modeling; designing application databases. Query languages, data security, database applications on the Web..
Information Assurance and Security Computer security principles. Incident prevention and management. Information assurance dimensions of availability, integrity, authentication, confidentiality and non-repudiations to ensure transmission, storage, and processing of information.
Senior Project / Capstone 1 IT senior project proposal and feasibility studies. Project management, teamwork principles, intellectual property, supplier interactions, identifying and using professional technical literature, oral and written presentations.
Senior Projects/Capstone 2 Senior project design and integration. Second class of two-course sequence. Implementing design. Project management, teamwork, and presentations. Fee.
Professional Seminar Developing best employment opportunities and strategies. Interviewing, negotiations, resume, and professional etiquette. Professional seminar guest speakers.
Professional Seminar Required three times during sophomore/ junior years while in professional program. College Lecture and School of Technology Lecture attendance required.
Advanced Web Technologies Practical application of the latest evolving web technologies. Topics include HTMLS, CSS/SASS, JavaScript, NodeJS, Polymer, noSQL, asynchronous programming, functional programming, event driven systems, debugging, testing, workflow optimization, and deployment pipelines.
Embedded Computer Systems Design and development of embedded computer systems interacting with the physical world. Hardware/software interfacing and multiple types of embedded systems. Integrated IT design approach with networking, IAS and human interaction concerns.
Database Administration The role and responsibilities of database administrators. Database platform, architecture, and configuration; security and account management; backup, restore and disaster recovery; availability, access and performance; data migration.
Special Problems in Information Technology Individual study in current topics of information technology.
Special Topics in Information Technology New topics in information technology for graduate and undergraduate students. Standard lecture and lab format.
Advanced Networking Analyzing, selecting, configuring, monitoring, and managing of computer network equipment. SNMP-based monitoring and control in process of fault isolation and root cause analysis.
System Administration Systems and network administration. User management. Server and workstation deployment and maintenance. Network Security. Infrastructure. Systems and infrastructure support. Cross-platform systems integration. Update and patch management. Mobile workforce services.
Cyber-Physical Systems Integration of technologies to develop computers and mobile devices that interact with the real world, including control and sensor interfaces. Incorporate IT core topics such as networks, security, and user-space experience design. Analysis and creation of cyber-physical and Internet-of-Things (IoT) systems.
Advanced Human-Computer Interaction Advanced techniques for designing, prototyping, building, and evaluating technology-mediated user experiences. Human-computer interaction research methods including experimental design. Ethics of working with human subjects. HCI theories and best practices.
Digital Forensics Fundamentals of digital forensics, legal issues, evidence, chain of custody, media analysis, incident response, corporate forensics, and network forensics.
Cyber Security and Penetration Testing Advanced computer systems security. Vulnerabilities and exploits. System and network attacks. Ethical hacking and penetration testing. Cyber security, cyber weapons, and advanced persistent threats. Legal and regulatory requirements for security and privacy.
INTERMEDIATE PROGRAMMING This is an intermediate programming course that covers problem-solving and algorithm development using the popular programming language Java. Java is one of the most popular languages used in object-oriented programming.
BUSINESS DATA COMMUNICATIONS This course offers an overview of the current theory and practice of business data communications and networks. It places emphasis on the role of the telecommunications industry in the growth of information societies and their reliance on knowledge and information services to stimulate economic growth.
COMPUTER ORGANIZATION AND OPERATING SYSTEMS In this course, the architecture of a modern computer system and the organization of an operating system are emphasized. Course topics include an overview of computer architecture, central processing unit architecture and instructions, arithmetic and logical operations, structure of modern operating systems, operating system functions, concurrency and synchronization, process control, interprocess communication, memory organization and management, file systems, interfaces to network structures, protection and security, and virtualization concepts. These concepts are reinforced with practical applications using a personal computer, Raspberry Pi, and computer programs and scripts.
DATABASE MANAGEMENT SYSTEMS Examines the technology and impact of the design of database systems on the organization. Covers the application, design, and implementation of database systems. Topics include an introduction to basic database concepts, database design principles including E-R diagrams and database normalization, SQL queries, transaction management, distributed databases, data warehousing, and database administration. Course focuses on the relational model.
WEB DESIGN AND DEVELOPMENT This course will provide practical instruction on the design, creation and maintenance of web pages. The course will cover the fundamental principles of web programming and formatting. This will include learning the difference between client side and server side scripting technologies, effective use of web authoring tools and code development. The course will also cover web design standards and the need for integrating human computer interaction principles in web design. The final project in the course will enable learners to apply current development and production practices to design web pages.
HUMAN COMPUTER INTERACTIVE DESIGN The hallmark of human-computer interaction (HCI) is the understanding of human behavior. The course starts with fundamental concepts related to human behavior through the lens of HCI, human-centered design, user experience (UX) and user interface (UI). These concepts are applied experientially throughout the 8 modules of the course. Research design, persona development, information architecture, low and high fidelity prototyping using wireframing are all used to develop a minimally viable product (MVP) using HTML and CSS. The course long project is the culmination of material covered throughout the course and can be used as a portfolio item to showcase classwork for an interview or other employment situation.
OVERVIEW OF COMPUTER SECURITY This course will focus on providing you with insights, guidance, and best practices on the principles of information security. Students develop an understanding of the technologies and methods utilized to defend systems and networks. They learn to describe, evaluate, and operate a defensive network architecture employing multiple layers of protection, using technology appropriate for secure mission accomplishment. Students will also examine the various types of vulnerabilities (design and implementation weaknesses), their underlying causes, their identifying characteristics, the ways in which they are exploited, and potential mitigation strategies.
PROJECT MANAGEMENT Explores system development life cycle (SDLC) and project life cycle to enhance skills in budget and timeline management.  Use of project management software to design project schedules, using bar charts, PERT and critical path method.
SYSTEM ADMINISTRATION This course provides learners with the knowledge and hands-on skills necessary to administer systems and its resources. Topics covered include directory services, user account management, file and print services, load balancing, security and user/client administration. Students will setup and manage a fully functioning computer network of systems. Furthermore, through hands-on (labs) assignments, students deal with challenges designed to help them install, configure and manage servers.
INTEGRATED TECHNOLOGY ASSESSMENT BIX This is the capstone course for the Bachelor of Science in Information Technology program. It requires you to reflect on your past academic and professional experiences and use the information gained from this reflective exercise to develop learning statements related to the Information Technology degree outcomes. The learning statements must be supported by documented evidence that demonstrates that the outcomes have been met. Additionally, you will be tested on your knowledge of information technology fundamentals and practices to ensure that you are able to meet the needs of industry. Finally, you are required to complete an information technology project that requires the demonstration of information technology system integration and the outcomes of this degree program.
FUNDAMENTALS OF PROGRAMMING This is an introductory programming course that covers problem solving and algorithm development using the popular programming language Python. Python is the programming language that is used to run applications like: YouTube, Google, DropBox, Instagram, Spotify, and Reddit. This course offers an introduction to basics programming concepts as well as reinforces the logical, systematic thinking required to develop basic algorithms.
COMPUTER FORENSICS Emphasizes the technical and legal aspects of electronic evidence and the computer forensic investigative process.  Topics include the discovery and recovery of electronic evidence stored on or transmitted by computers, networks, and cellular devices.
CYBER ATTACKS AND DEFENSES This course investigates security issues, vulnerabilities, and mechanisms to identify, respond to and prevent cyberattacks and to build active defense systems. The course will follow the formal ethical hacking methodology including reconnaissance, scanning and enumeration, gaining access, escalation of privilege, maintain access and reporting. Ethical Hackers are computer and network experts who attack security systems on behalf of its owners, seeking vulnerabilities that a malicious hacker could exploit.
BUSINESS CONTINUITY A course designed to provide a broad coverage of topics related to security in the business environment. Coverage of methods for physical security in addition to the security measures involving hardware, software, secure and unsecure protocols, authentication, and processes used to prevent access. Emphasis on the development of a business continuity plan and disaster recovery plan will provide essential details to mitigate the effect of a breach in security or in the event of a disaster.
NETWORK AND APPLICATION SECURITY This course covers the main concepts and models of network and application security, which includes: security models and threats, access control, secure routing and switching, cryptography and secure communication, and how to mitigate security threats.
ORGANIZATIONAL INFORMATION SECURITY This course will prepare students to recognize information security threats, enable them to plan, develop, and communicate policies and practices to mitigate those risks, and respond to security information and event management (SIEM) incidents as they occur from a management perspective.
ENGLISH COMPOSITION This class provides students with foundational knowledge and skills to prepare them for academic and professional writing.   By analyzing the work of other writers, students will learn to approach writing from a rhetorical and genre-based perspective
COMPOSITION II The primary objective of this course is to continue your development as an effective writer. While we will be using literature as our focus, the emphasis of this course will be on writing. As critical thinking and writing are interdependent, you will learn various methods of analyzing literature, including point of view, character, structure, plot, setting, imagery, tone, and theme. These methods will be applied to different formats and styles of writing such as analysis, and reviews.
BUSINESS ETHICS This course explores the nature of ethical business environments within the private and public sector. Today's complex, dynamic global environment requires business professionals who acknowledge, understand, and act appropriately when faced with inherent ethical challenges. This course prepares business professionals for these challenges by exploring ethics theory, personal values, and impacts of organizational culture. This leads to a deeper understanding of how ethical principles relate to the organizations in which people function, and the effects of the organization's ethics on its reputation, functioning, and performance.
WORLD RELIGIONS World Religions is a historical and comparative survey of the major religious systems of the world, including but not limited to contemporary nature/culture religions, as well as Hinduism, Buddhism, Taoism, Confucianism, Judaism, Christianity, and Islam.
INTRODUCTION TO PSYCHOLOGY I In this class you ll apply psychological principles and theory to your everyday life. In addition to foundational topics like psychology as a science, learning and memory, human development, and consciousness, each student creates an individualized path through the course by choosing to study topics like stress and health, psychological disorders and therapy, and human sexuality. This course is self-paced, instructor-led, but all coursework must be completed by the term end date.
INTERNATIONAL ECONOMICS Builds on student understanding of macroeconomics and microeconomics to analyze the world economy. Students apply economic theory to topics like trade agreements and restrictions, patterns of trade, the international flow of labor and capital, exchange-rate issues, the international monetary system, and the roles of international organizations like the World Trade Organization and International Monetary Fund.
UNITED STATES HISTORY I An introductory course on the early history of the United States, from pre-European contact Native American societies to the end of the Reconstruction era after the Civil War. The course examines the major political, social, and economic trends in the American colonies and new nation from the fifteenth through the mid-nineteenth centuries. Students will engage in primary and secondary source analysis to examine history through multiple lenses and perspectives. The course also focuses on diversity and cross-cultural encounters that contributed to the creation of the United States. This course uses all open educational resources, and does not require the purchase of a textbook.
BUSINESS STATISTICS Develops skills in the essential tools used for statistical analysis and decision making in business. Covers descriptive and inferential statistics. Emphasizes research techniques such as sampling and experimental design concepts for single and multiple sample groups.
DISCRETE STRUCTURES This course provides the mathematical foundations for information technology and other technology fields. Topics covered in this course include logic, relations, functions, recursion, induction, set theory, patterns of inference, elementary combinatorics, algorithm complexity, and graph theory.
SCIENCE IN TODAY'S WORLD The purpose of this course is to give the student an overview of current and emerging trends in science and technology so that s/he will be able to make informed decisions and be an informed consumer. The course will introduce the scientific method and terminology used in reporting scientific results. A survey of current topical science issues will be covered as examples. This course will also prepare the student to read accounts about scientific, technological, and medical advances in the press and assess the scientific conclusions presented.
ESSENTIAL ALGEBRA AND STATISTICS This course introduces algebraic concepts, probability, and statistics, with an emphasis on ways these concepts apply in everyday life. Course modules will contain a review of necessary algebraic concepts, and examples of their application to probability and statistics.
HISTORY OF WESTERN ART: ANCIENT THROUGH THE 14TH CENTURY Examine bison on cave walls, marvel at the Greek ideal of beauty, glimpse Byzantine splendor, and feel the pathos of medieval piety. We explore Western art from its earliest known forms, dating as far back as 30,000 BCE, to the beginnings of civilization in Mesopotamia and Egypt. We will look at the Mediterranean cultures of the ancient Aegean, Greece, and Rome and the religious visual expressions of the Middle Ages, including spectacular Gothic cathedrals.
Writing With Confidence and Purpose Writing With Confidence and Purpose
Ethics Ethics
College Algebra Concepts This course provides students with a solid foundation in key algebra skills. Topics include solving and graphing linear, quadratic, and polynomial functions, composition and inverses of functions, rational and radical functions, modeling of exponential and logarithmic data, and solving systems of equations and inequalities. Upon completion, students will have cultivated perspectives and analytical skills required for efficient use, appreciation, and understanding of algebraic concepts.
Living and Learning in a Technological World Imagine life without cell phones, television, or the Internet. Recent technological developments have significantly altered all aspects of human life: at work; in play; and in personal, family, and social interactions. In this course, students examine the advantages, disadvantages, and controversies of living and learning in an ever-changing technological environment. By exploring multiple perspectives, students discover how technology is changing media, culture, business, health, human behavior, and overall access to information.
Introduction to Management The roles, functions, and styles of managers, specifically principles and procedures for planning, organizing, leading, and controlling organizations, are addressed in this introductory course. Emphasized is the practical application of theory to reality. Students focus on the techniques, tools, and methods of managerial decision making [JLM1] and employee motivation, as well as consider the effects of ethical leadership and management practices on an organization. This course is structured so that students have the opportunity to see the interrelationships among the functions, components, and disciplines that comprise the field of management and thereby gain a comprehensive perspective as a foundation for the further study of management.
Fundamentals of Accounting Students take a top-down approach to understanding introductory accounting documents and procedures by exploring a business's financial statements, including the balance sheet, income statement, and cash flow statement in this course. Students explore the practical uses for information that can be gleaned from these statements, individually and as a whole, through a detailed examination of the properties and characteristics of each statement. Students engage in application assignments and discussions on a variety of topics, such as regulations that should be followed when preparing financial statements as promulgated by generally accepted accounting principles
Operations Management An overview of the concepts, methodologies, and applications of business operations management is provided to students in this course. Students focus on operations, the supply chain, and the process of transforming resources into products and services. They explore the responsibility of operations managers to make cost-effective and cross-functional decisions that increase the productivity and competitiveness of manufacturing and service organizations. Students examine product flow processes and product-process strategies to increase efficiency and effectiveness within organizations. Students also have the opportunity to learn the process of planning, implementing, and monitoring operations to ensure the continuous improvement and quality standards of goods and services.
Information Systems in Enterprise All businesses rely on systems to process, collect, share, and store important information. The most effective way to help an organization achieve its goals is to understand how to leverage information systems and emerging technology. In this course, students have the opportunity to gain skills needed to employ such leverage in the professional arena. Students examine the characteristics of information systems and their role in organizations. They also assess and discuss the impact that information systems have on the enterprise as a whole, in addition to their current
Statistical Methods and Applications Students in this course gain a foundation in statistical methodology as well as ways to use critical judgment in analyzing data sets. Through technology applications and hands-on lab work, students learn concepts of descriptive statistics, hypothesis testing, confidence intervals, t-test, one-way analysis of variance, correlation, and non-parametric methods (e.g., chi-square tests). Students gain the knowledge and skill to be able to analyze and apply statistics to research problems and everyday life situations.
Object-Oriented Programming Concepts Information systems rely on underlying programs that respond to users and process information. An information systems specialist must understand the structure and purpose of programs and be able to work with programmers to ensure designs that meet system requirements. Object-oriented programming (OOP) and design facilitate this by presenting information systems as classes and objects that represent complex system contexts in a manner directly transferable to programming specifications
IT Infrastructure Information technology (IT) is essential to the function and success of nearly all businesses. Businesses whose systems are lacking or experience failure are at risk of significant loss; therefore, there will always be a need for IT support and innovation. In this course, students are introduced to fundamental concepts of the IT infrastructure to prepare for a role in the field of IT. Students learn about the structure and purpose of hardware components (computers, networks, and interface devices) and software components (operating systems, middleware, applications, and system software). They examine key issues of capacity, performance, reliability, scale, and obsolescence through the evaluation of IT's role in supporting business and individuals.
Internet Computing The Internet stitches together many disparate devices and software components into a flexible fabric that supports an enormous variety of uses. Students in this course learn about the functions of these components through a comprehensive evaluation of Internet computing. They examine the design of the Internet protocol stack, the structure and function of some of the most important Internet services and applications, and Internet governance. Students have the opportunity to gain practical experience through the application of concepts, such as performance, scale, and reliability, in the design of information systems.
Systems Analysis There are many roles involved in creating and managing an organization's information system, including the systems analyst. The analyst helps ensure that the software development process is successful by understanding its purpose, scope, and resource requirements. Students in this course face the prospect of understanding the field from the perspective of a systems analyst. Students focus on the definition and examination of system requirements, both functional and nonfunctional, for an information system (IS) project. Through the review of videos, case, studies, and supplemental websites, they learn about the identification of stakeholders and techniques for requirement elicitation, representation, and life cycles. Students sharpen their communication and practical skills through group projects during which they apply concepts learned in the course to an actual information system.
Systems Design This course is an introduction to the approaches used to specify details during the design phase of a systems development life cycle (SDLC). Students explore the discipline of reducing requirements to the structural and functional design of organizational information technology solutions. They examine conceptual modeling, design patterns, and application frameworks. Students learn the basics of modeling, design representations, and the use of design tools. Through discussion with their peers, students confer about and debate the different approaches to systems design, security aspects of interfaces, and documentation. Students work toward gaining collaborative and critical-thinking skills through group projects focusing on the specifics of system design, including planning and implementation.
Database Management Systems All types of businesses rely on systems to manage their data and to keep that data secure, accurate, and reliable. A database is a system designed to do just this as well as to simplify the processes of data entry, search, and retrieval. In this course, students learn about database management through the examination of the life cycle of a database. Students focus on the representation and manipulation of information in relational database management systems. They learn how to map real-world concepts onto relational representations and how to manipulate them through relational queries to implement data-intensive applications. They also discuss related issues, such as database storage, data validation, sorting, grouping, and nesting data. Students learn to use a core subset of the Structured Query Language (SQL) as well as the fundamentals of database administration.
Project Management Project Management
Business Process Design Students in this course have the opportunity to gain working knowledge of the requisite skills, concepts, and methodologies that managers and team members use to conduct a business process redesign (BPR). Through weekly readings of literature and contemporary articles, students learn about the managers role in the business process as well as the function of BPR. They examine the function of information systems as enablers for business process design. They also learn how to analyze business processes and redesign them for dramatic results. Reinforcing the practical application of concepts, students demonstrate their critical-thinking and problem-solving skills through a case study assignment in which they solve a real-world
Management of Technology The efficiency and success of most organizations today depends on the ability of leaders to integrate technology and business functions through activities such as supply chain management, outsourcing, and e-business practice. Students in this course examine the key concepts in management of information technology and the role of technology managers. They analyze the management of technology from both a process and system perspective and investigate major technical issues involved in innovation and implementation. Students engage in weekly discussions on a variety of topics, such as advanced databases, business intelligence, artificial intelligence systems, wireless technology, and outsourcing.
Information Systems Service Management Businesses often do not have the knowledge or resources to execute a project on their own. As a result, they rely on external resources, often times using offshore vendors who have the skills and tools required to complete the job. While this process allows business-lucrative opportunities, it also requires someone to manage the relationship between the organization and outside vendor. In this course, students examine the conception of information systems (IS) as collections of services aggregated in a supply chain that stretches across organizations and continents. Students investigate the concept of service-oriented architecture and the various disciplines of open interfaces, open source software, service-level agreements, and client-vendor relationships that allow complex assemblies of services to work. They analyze and discuss the business and organizational strengths and weaknesses of different approaches for a real-world, practical'
IS Capstone Project IS Capstone Project

CS 441.  Database Programming.  3 credits, 3 contact hours (3;0;0). Many technologies have been developed due to the interplay between World-Wide Web development and databases on one hand and the growth of database applications in e-commerce on the other hand. Today, practically every e-commerce application has at least a Web component and a database component. Many languages have been developed in order to deal with these interactions. The course will focus on accessing databases through the Web but also cover new developments in the field.
IS 448.  Usability & Measuring UX.  3 credits, 3 contact hours (3;0;0). Prerequistes: Statistics GUR (MATH 105, MATH 120, MATH 225, MATH 244, MATH 279, MATH 305, MATH 333, IE 331, ECE 321 or MNET 315). User experience research is the process of understanding why and how people use products and services. Usability refers to the ease of use and learnability of such a product or service. The primary function of usability is to be able to measure and assess the optimal use of a product from the perspective of the user. This course will teach students a set of quantitative tools to understand user needs, derive design recommendations, and evaluate the user experience. Students will receive an overview of the different quantitative methods being used in industry and academia, such as eye-tracking, big social media data analysis, and physiological tests. They will then get an in-depth knowledge of how to design, execute, and analyze data from experiments and surveys using both descriptive and inferential statistics. The course will incorporate a hands-on approach and be comprised completely of individual and group project assignments.
CS 370.  Introduction to Artificial Intelligence.  3 credits, 4 contact hours (3;1;0). Prerequisites: CS 114 and (MATH 226 or CS 241). An exploration of concepts, approaches and techniques of artificial intelligence. Emphasizes both underlying theory and applications. Topics include knowledge representation, parsing language, search, logic, adduction, uncertainty, and learning. LISP and Prolog programming languages are used extensively. Students are required to do programming assignments, complete a programming term project and review case studies.
ENG 354.  Composing Documents for the Web.  3 credits, 3 contact hours (3;0;0). R350 354.  Mod/Contemp Eng Nov.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. Seminar and laboratory-based course designed for BA/BS majors; open to others with appropriate backgrounds and interests and permission of instructor. Follow up of ENG 353, explores information structuring via digital media, and how computer technology has influenced the ways in which information is presented in contemporary culture. Through guided interactive research, presents information for technical, commercial, and artistic use. Projects involve use of HTML editors, NJIT networks, and graphical and animation software. This course satisfies the three credit 300 GER in History and Humanities.
IS 491.  Senior Project - IS.  3 credits, 3 contact hours (0;0;3). Prerequisites: IS 331, IS 431, or CS 431, and senior standing. Integration of knowledge and skills gained in previous information systems courses into an individual research project. The project entails investigation of current literature and the design, implementation and evaluation of an information system.
IS 687.  Transaction Mining and Fraud Detection.  3 credits, 3 contact hours. Prerequisite: IS 665  Increasingly, all of our transactions are electronic. We use debit and credit cards (electronic transactions) instead of checks and cash at banks, restaurants, stores, and many other businesses. Evaluation of transactions to find risk includes detection of terrorists and money launderers. Every financial institution is legally required to monitor transactions to detect organized crime and terrorism. Mining transaction streams to find good or bad customers is a rapidly growing area of employment for IS graduates. This course will present methods that are being used to analyze and mine transactional data and the business applications of these methods.
MGMT 492.  Business Policy.  3 credits, 3 contact hours (3;0;0). Prerequisite: senior standing. A capstone course in the area of business administration focusing on the integration of concepts taught in various functional courses such as marketing, finance, operations management, accounting, organizational behavior. Issues related to corporate responsibilities and ethical behavior are also incorporated in this course. Emphasis on application of concepts to real life situation is achieved through case discussion and projects. All SOM students need to earn a C or better in MGMT 492 in order to graduate.
IT 202.  Internet Applications.  3 credits, 3 contact hours (3;0;0). Prerequisites: CS 100 or CS 113 or CS 115 or a course in a high-level programming language as approved by department. This course presents the concepts and software technologies that underline web-oriented, three-tier software architectures and applications. The enabling software mechanism include the markup languages (HTML5 and CSS3) used by browsers, client-side scripting languages and libraries (Javascript and AJAX), web servers and server-side-scripting languages (Apache, PHP, HTTP protocol), and background databases (SQL, MySQL). The course uses a hands-on, guided development approach with substantial assignments to illustrate the fundamental computing concepts systems, and technologies considered and to provide direct experience in their use.
CS 288.  Intensive Programming in Linux.  3 credits, 3 contact hours (3;0;0). Prerequisite: CS 280. The course covers Linux programming with Apache Web and MySql database using Php/Python and C as primary languages. It consists of four stages: basic tools such as Bash and C programming; searching trees and matrix computing, end-to-end applications such as one that constantly presents top 100 stocks; and extending the applications to run on multiple machines. The course provides students with hands-on experience for programming relatively large applications.
IT 332.  Digital Crime.  3 credits, 3 contact hours (3;0;0). Prerequisite: Computing GUR. Comprehensive, multidisciplinary overview of the methods and means by which technology is used by the criminal in today's society. An examination of the historical, legal, technological and sociological aspects of cybercrime. The course covers the challenges of a new era of technology has brought to combating crime of all types, including terrorism. Topics covered will include: the sociology of the white collar criminal, the criminal justice system and law enforcement, computer security and deterrence/prevention.
IS 265.  Introduction to Information Systems.  3 credits, 3 contact hours (3;0;0). Information systems is the study of how organizations use information technology. This course is an overview of the information systems discipline, the role of information systems in organizations, and the changing nature of information technology. Computer tools for analysis and presentation are used.
CS 100.  Roadmap to Computing.  3 credits, 3 contact hours (3;0;0). An introduction to programming and problem solving skills using Python or other very high level language. Topics include basic strategies for problem solving, constructs that control the flow of execution of a program and the use of high level data types such as lists, strings and dictionaries in problem representation. The course also presents an overview of selected topics in computing, such as networking and databases.
YWCC 307.  Professional Dev in Computing.  1 credit, 1 contact hour (1;0;0). Prerequisites: YWCC207  This course is designed for junior year students to reflect back on the college experience and to help plan for the future as a computing professional. The course will explore transitional issues that occur during the progression from student to professional through reflection on co-op and/or internship.
FRSH SEM.  Freshman Seminar.  0 credits, 1 contact hour (1;0;0). Addresses issues related to a successful college life during weekly seminars. Topics include time management, study skills, interpersonal relationships, wellness, multicultural issues and career decision making. Freshman Seminar is a graduation requirement for all first-time, full-time freshmen.
ENG 340.  Oral Presentations.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. Instruction and practice in effective oral presentations. Students deliver a wide range of presentations adapted to the needs of a variety of audiences. Topics include voice and diction, presentation skills, the effective use of visual aids, reporting technical material and audience analysis. This course satisfies the three credit 300 GER in History and Humanities.
IT 230.  Computer and Network Security.  3 credits, 3 contact hours (3;0;0). Prerequisite: IT 120. This course introduces the applied topic of Computer Security, presenting the evolution of computer security, the main threats, attacks & mechanisms, applied computer operations & security protocols, main data transmission & storage protection methods via cryptography, ways of identifying, understanding & recovery from attacks against computer systems, various methods of security breach prevention, network systems availability, applications security, recovery & business continuation procedures and counter systems penetrations techniques and the role of the US Government in security of national computer infrastructure.
IS 677.  Information System Principles.  3 credits, 3 contact hours. This course introduces the field of Information Systems; the study of how people and organizations should use information technologies effectively. We examine the major areas in the field, analyzing the major issues, trends and problems. We survey the role of information systems in organizations and how these systems support organizational objectives and organizational structure, as well as providing competitive business advantages. We discuss basic concepts such as the systems point of view, the organization of a system, the nature of information and information flows, as well as how people process information and related cognitive concepts. We also examine various types of information system applications such as e-commerce, supply chain, decision support, and enterprise systems. And, finally, we also consider critical ethics issues including privacy, personalization and security.
IS 322.  Mobile Applications: Design, Interface, Implementation.  3 credits, 3 contact hours (3;0;0). Prerequisites: IS 218, IS 219, or IT 202. This course is a practical introduction to building applications for mobile devices. The course combines hands on design and development experience, with a conceptual overview and discussion of design and practical development issues. Taken into account will be constraints and requirements of devices with small screen sizes, limited battery power, limited computational power, etc. Tools used for building an application in the context of a specific device such as iPhone or an Android based device will be discussed. Students build a mobile application to demonstrate their understanding of mobile web constraints and tools.
ACCT 117.  Principles Of Fin Accountng.  3 credits, 3 contact hours (3;0;0). This is an introductory course designed to develop fundamentals of financial accounting-a process of identifying, recording, and communicating economic events of an organization. This course will provide students with an opportunity to develop skills in applying financial accounting principles to record basic economic transactions, summarize and present such transactions in financial statements as well as analyze reported accounting information by using ratios.
COM 303.  Video Narrative.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. Introduces various multimedia resources and environments in order to develop new strategies for both reading and writing within a visually-based, screen-oriented culture. Students will study different historical and theoretical lineages in videography, and learn hands-on techniques and technologies to produce independent media works of their own.  This course satisfies the three credit 300 GER in History and Humanities.
IS 218.  Building Web Applications.  3 credits, 3 contact hours (3;0;0). Prerequisites: (IS 117 or IT 202) and (CS 100, CS 113, or CS 115). This course provides a critical, hands-on introduction to the design of Web-based Information Systems. We will explore and discuss emerging trends, capabilities, and limitations of web technologies used to capture, store, access, and disseminate information for both businesses and online communities. Students, working in groups, will design and develop different types of web applications, which will then be analyzed and critiqued by the students as to their usability in actual public and private settings. An open-source web content management system will be utilized throughout the course.
IT 201.  Information Design Techniques.  3 credits, 3 contact hours (3;0;0). Prerequisite: IT 101. This course presents an introduction to the theory and practice of information design. Topics covered include the theoretical foundations of information design, graphic design, content design, interaction design, usability, multimedia design, sound and video, animation, and an introduction to 3D modeling.
IS 688.  Web Mining.  3 credits, 3 contact hours. Prerequisite: IS 665.  Web mining aims to discover useful information and knowledge from the Web hyperlink structure, page contents and usage logs. It has direct applications in e-commerce, Web analytics, information retrieval/filtering, personalization, and recommender systems. Employees knowledgeable about Web mining techniques and their applications are highly sought by major Web companies such as Google, Amazon, Yahoo, MSN and others who need to understand user behavior and utilize discovered patterns from terabytes of user profile data to design more intelligent applications. The primary focus of this course is on Web usage mining and its applications to business intelligence and biomedical domains. We learn techniques from machine learning, data mining, text mining, and databases to extract useful knowledge from the Web and other unstructured/semistructured, hypertextual, distributed information repositories. This data could be used for site management, automatic personalization, recommendation, and user profiling. Topics covered include crawling, indexing, ranking and filtering algorithms using text and link analysis, applications to search, classification, tracking, monitoring, and Web intelligence. Programming assignments give hands-on experience. A group project highlights class topics.
CPT 425.  Medical Informatics Technology II.  3 credits, 4 contact hours (2;2;0). Prerequisite: CPT 325. Restriction: Senior standing. Advanced topics, builds on the core competencies introduced in Medical Informatics I. This course focuses on: Management of Information in Healthcare Organizations/Cost Benefit Analysis, Health and Financing, Consumer Health and Telehealth and Wireless Patient-Monitoring Systems. Cutting edge technologies that will impact on future healthcare delivery.
MATH 138.  General Calculus I.  3 credits, 3 contact hours (3;0;0). Intended for students who are not in Science or in Engineering. Prerequisite: MATH 107 with a grade of C or better, or MATH 110 with a grade of C or better or NJIT placement. An introduction to differential and integral calculus of a single variable.
IS 764.  Research Methods for Human-Centered Computing and Design.  3 credits, 3 contact hours. Prerequisites: None. This introductory seminar in human centered computing and design provides a survey of the methodological literature on qualitative research methods paired with appropriate article-length exemplars. We cover a variety of different research strategies including design science, action research, case study, qualitative data collection and analysis techniques, and scenario-based design. This course develops skills in designing and evaluating systems using qualitative methods. We also discuss writing and reviewing academic articles and research proposals. The course utilizes information systems as the primary domain but could be extended for students in other disciplines.
ENG 352.  Technical Writing.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. An advanced writing course. Combines current theory with actual practice to prepare students as technical writers. Analyze complex communication situations and design appropriate responses through tasks that involve problem solving, rhetorical theory, document design, oral presentations, writing teams, audience awareness, ethical considerations, and gender equity issues. This course satisfies the three credit 300 GER in History and Humanities.
IS 680.  Information Systems Auditing.  3 credits, 3 contact hours. Due to the dynamic nature of information technology, the need arises continually to redefine audit, control and security requirements and processes. Topics include the IS audit process, IT infrastructure and operations, information protection, disaster recovery and business continuity, IT service delivery and support, business application systems, and project management. Students gain practical experience with each by working through a series of sample Certified Information Systems Audit (CISA) exam questions.
YWCC 207.  Computing & Effective Com.  1 credit, 1 contact hour (1;0;0). Prerequisites: Student of YWCC and sophomore/junior standing. Through encouraging collaboration and communication, this course addresses how to best present oneself via verbal and nonverbal communication. Students will learn how to effectively network, create resumes, interview and best present ideas. The skills learned in this course prepare students for co-op/internship opportunities as well as future employment.
COM 390.  Electronic Writing Workshop.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. A practice-oriented workshop for creative expression in a variety of electronic formats with the specific goal of facilitating individual writing projects for screen and performance. Topics in literary theory will be combined with current criticism in electronic writing, media and screen studies to produce new cultural works in a variety of digital sub-genres, including soundscapes, hypertext poetry, animation, code poems, interactive games, digital video and wiki poems.  This course satisfies the three credit 300 GER in History and Humanities.
IS 455.  IS Mgmt & Business Processes.  3 credits, 3 contact hours (3;0;0). Prerequisites: (IS 265 or MIS 245) and IS 390. Grade of C or better. This course will emphasize how information systems enable core and supportive business processes, as well as those that interface with suppliers, partners and customers. It will discuss basic administrative, management and policy issues associated with the impact of information systems on the user and organization. The second part of the course looks at business processes in organizations: what the business process view is and why it is important, how information systems can improve processes, and how Enterprise Resource Planning systems help with that improvement. Hands-on use of a major ERP system (SAP) is included.
IS 690.  Web Services and Middleware.  3 credits, 3 contact hours. Prerequisite: IS 601 Web services enable integration of web-based applications and feature sets to any other web-based system in a modular way. Middleware is a set of functionality positioned in between and enabling interoperability among different, distributed enterprise and other computing applications. This course provides an introduction to web services and middleware in the context of digital libraries - large scale multimedia information repositories. Students will gain hands on experience in developing their own web services managing a complex distributed computing platform.
HUM 101.  English Composition: Writing, Speaking, Thinking I.  3 credits, 3 contact hours (3;0;0). Entrance is determined by placement test score or completion of HUM 099 with a grade of C or better. Focuses on developing written and oral communication skills; emphasizes writing expository and research essays; preparing oral reports; drafting, revising, editing; evaluation and proper documentation of source material; using rhetorical strategies such as narration and argument.
IS 663.  System Analysis and Design.  3 credits, 3 contact hours. Pre or Corequisite: IS 601 This course develops the skills necessary to analyze, design and manage the development of effective enterprise-scale information systems solutions incorporating contemporary methods and effective organizational and global project management practices. It focuses on technical business systems analysis and design techniques, and covers key software engineering principles, methods and frameworks, including process models, agile and lean principles, project and risk management, estimation, requirements elicitation and analysis, modeling, system and software architecture, design patterns, and quality systems. Students will actively participate in discussions, review selected articles, participate in team exercises and collaborate on projects involving analysis and prototyping of applications addressing real-world problems and integrating current and emerging technologies.
ENG 333.  Cybertext.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. Through theoretical readings and electronic research, students explore and compare information structuring in print and digital media, particularly how digital technology influences the dynamics of text. Interactivity, visual communication and developments in the realm of cybernetics are addressed in the course. Materials presented in creative, technical and commercial areas were studied. This course satisfies the three credit 300 GER in History and Humanities.
STS 210.  General Psychology.  3 credits, 3 contact hours (3;0;0). Introduction to the study of human behavior. Topics include motivation, perception, learning, cognitive development, personality and emotion, individual difference, and biological basis of behavior, as well as methodology in psychological research. This course satisfies the three credit 200 GER in History and Humanities.
IT 491.  IT Capstone Project.  3 credits, 3 contact hours (3;0;0). Prerequisites: senior standing. An opportunity for students to integrate the knowledge and skills gained in previous information technology work into a team research project. The project involves investigation of current literature as well as implementation of either a part of a large application or the whole of a small system.
IS 390.  Requirements Analysis and Systems Design.  3 credits, 3 contact hours (3;0;0). Prerequisite: CS 103, CS 113, CS 115, IS 218 or IT 202  A study of the information systems development life-cycle, from the initial stages of information requirements analysis and determination to the ultimate activities involving systems design. Theory, methodologies and strategies for information requirements analysis, including the assessment of transactions and decisions, fact-finding methodologies, structured analysis development tools, strategies of prototype development, and an overview of computer-aided software engineering (CASE) tools. Theory, methodologies and strategies for systems design, including design of user-interfaces, particularly menu-driven and keyword dialogue strategies, and issues in the proper design of computer output.
IT 340.  Introduction to System Administration.  3 credits, 3 contact hours (3;0;0). Prerequisite: IT 120. This course will introduce the tasks and techniques required to perform as a system administrator of Linux systems. Topics to be covered include: booting, process control, the file system, managing users and resources, backups, configuration management, networking, the network file system, email servers, security, hardware devices, interoperability and daemons. Whenever possible, lectures will be augmented with hands-on exercises.
HRM 301.  Organizational Behavior.  3 credits, 3 contact hours (3;0;0). Restriction: upper division standing. A foundation course in individual and group behavior in organizations. Processes such as perception, motivation and leadership are examined with a focus on issues central to technology-based organizations (innovation, creativity, managing technical professionals).
IS 461.  Systems Simulation.  3 credits, 3 contact hours (3;0;0). Prerequisites: completion of a 100-level GUR course in computing; MATH 333. This course introduces computer simulation as an algorithmic problem solving technique. Includes discrete simulation models, elementary theory, stochastic processes, use of simulation languages, random number generators, simulation of probabilistic processes, design of simulation experiments, validation of models, queueing systems, and applications to the design and analysis of operational systems. The GPSS language is covered in detail.
IT 490.  Systems Integration.  3 credits, 3 contact hours (3;0;0). Prerequisites: CS 113, IS 331 and IT 340. The course will introduce the major design, implementation & distributed deployment issues regarding system integration, Network Operating Systems (NOS), cross platform database integration, e-commerce and e-business applications implementation, cross-servers & multiple locations e-sessions migration and the related communications security.
IS 685.  Enterprise Architecture and Integration.  3 credits, 3 contact hours. R198 685.  Special Topics in IS.  3 credits, 3 contact hours. Prerequisites: None, but recommend completion of IS 663 or CS 673. The Enterprise Architecture (EA) describes an organization's IT strategy and operational structure. IS and IT professionals utilize the EA to analyze, design and integrate the (often heterogeneous) IT infrastructure and applications to most effectively support the enterprise and respond to risks. Students learn to develop an EA analysis which reflects its business strategies, capabilities, processes, and systems, metrics, information resources, and networking infrastructure. This enables students to determine the impact of IT solutions, by learning to deconstruct, analyze and configure IT systems in alignment with enterprise-wide business strategies. The course covers the industry standard The Open Group Architecture Framework (TOGAF) enterprise architecture framework and focuses on Enterprise Application Integration (EAI).
IS 683.  Web Systems Development.  3 credits, 3 contact hours. Students will gain experience in open source web development through an intensive hands-on project, applying real-world problem-solving skills to meeting information systems requirements. Students will learn Web development principles, as well as professionally relevant skills including industry standards, conventions, and procedures within large-scale programming projects. Also covered are the communication tools, technologies, and practices that individuals use to coordinate and collaborate within the open source software development community.
CS 357.  Fundamentals of Network Security.  3 credits, 3 contact hours (3;0;0). Prerequisites: CS 356 or IT 420. This course is designed for Computer Science and Information Technology students. They must have a networking course before taking CS 357. IT students take IT 420 and Computer Science students take CS 356. This course offers an in-depth study of network security issues, types of computer and network attacks, and effective defenses. It provides both a theoretical foundation in the area of security and hands-on experience with various attack tools, firewalls, and intrusion-detection systems. Topics include: network scanning, TCP/IP stack fingerprinting, system vulnerability analysis, buffer overflows, password cracking, session hijacking, denial-of-service attacks, intrusion detection.
IT 330.  Computer Forensic.  3 credits, 3 contact hours (3;0;0). Prerequisites: IT 230.  This course introduces students to the applied topic of Computer Forensic, the study of obtaining and analyzing digital information from computers that have been used to commit illegal actions (computer crime), for use as evidence in civil, criminal, or administrative cases.
IS 681.  Computer Security Auditing.  3 credits, 3 contact hours. This course reflects the current emphasis on information security and security management in Fortune 500 corporations. Students will delve into information protection concepts, privacy impact analysis, computer crime, legal issues, controls and auditing systems, and firewall configuration. Students will have the opportunity to learn and perform evaluations on security infrastructures in a controlled environment in class labs by completing realistic security auditing projects and using vulnerability assessment tools to assess risks and evaluate security controls on networked infrastructures.
COM 352.  Photojournalism.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. Through hands-on writing and photography supervised by the instructor, students develop competencies in discovering and creating an interdisciplinary viewpoint using a variety of writing methods and photographic viewpoints. Special focus on interpreting architecture and architectural detail, nature's conflict and place in urban and suburban environs, and the human interface with nature and man-made spaces. Particular emphasis is placed on the creative process and critical revision. This course satisfies the three credit 300 GER in History and Humanities.
IT 310.  E-Commerce Technology.  3 credits, 3 contact hours (3;0;0). An overview of the technologies relevant to electronic commerce. Communications and networking, web authoring tools, system security, databases and archiving, EDI, transaction processing, and factory/warehouse data networks. Provides competency to appraise tools such as HTTP servers, secure transaction software and firewalls, low and high-end database systems, heterogeneous networks, NNTP Servers, client software, procurement systems, and intelligent agents. Covers e-commerce models including agent-based and Java-based, electronic contracts and the electronic exchange of technical data, electronic cash systems and user security.
IT 331.  Privacy and Information Technology.  3 credits, 3 contact hours (3;0;0). Prerequisite: Computing GUR. This course will introduce the legal, social and technical issues involving information privacy. Topics covered will include the historical development of information privacy law; law enforcement, technology and surveillance; government databases and records; privacy and business records and financial information; privacy and the media; health and genetic privacy and international privacy law.
IT 420.  Computer Systems and Networks.  3 credits, 3 contact hours (3;0;0). Prerequisite: IT 120. This course provides students with an understanding of methods, tools and technologies required to work with computer systems and networks. It includes a detailed discussion of Internet/intranet issues, including standards, connectivity, performance, protocols, network configurations, network design, wireless technology, management and simulation through practical cases, covering both hardware and software systems.
ENG 353.  Composing Documents for Print.  3 credits, 3 contact hours (3;0;0). R350 353.  Mod/Contemp Eng Nov.  3 credits, 0 contact hours (0;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. Explores information structuring via print and digital media; how computer technology has influenced the ways in which information is presented in modern culture. Focuses on the optimal ways to prepare and present information for technical and commercial use. Important concepts such as visual literacy and effective design are discussed and addressed. This course satisfies the three credit 300 GER in History and Humanities.
CS 433.  Introduction to Linux Kernel Programming.  3 credits, 3 contact hours (3;0;0). An introductory study of how the Linux operating system is built from scratch. AS a hands-on course, students will perform intensive programming using the Linux kernel. The contents include booting, segmentation and paging, creating and destroying processes, process switching and scheduling, handling exceptions and interrupts, software interrupts, creating system calls, creating file systems, networking with TCP/IP, device driver writing and module programming. At the end of the course, students will be able to modify the Linux operating system to create their own.
IS 465.  Advanced Information Systems.  3 credits, 3 contact hours (3;0;0). Prerequisites: Statistical GER (MATH 105, MATH 120, MATH 225, MATH 244, MATH 279, MATH 305, MATH 333, IE 331, ECE 321 or MNET 315), and (IS 265 or MIS 245) and IS 344, and (IS 331 or CS 431). This course serves as an introduction to data analysis, probability and statistics from an information systems perspective, including many of the techniques that are most relevant to the profession of Data Scientist for business, data and web analytics, as well as current research areas. The course emphasizes manipulation and analysis of relevant data sets. Course topics include the rudiments of probability and random variables, estimation, hypothesis testing, graphics and visualization, data warehousing and OLAP analysis, dashboard, scorecard, data mining algorithms, optimization techniques, DSS and knowledge systems. Students will get hands-on experience in designing and building a data warehouse. They will get hands-on experience building a dashboard with real-world data, and they will apply various data mining algorithms learned in class to solve real world problems.
IS 247.  Designing the User Experience.  3 credits, 3 contact hours (3;0;0). This course covers the design and evaluation of the human-computer interface in interactive computer systems. Among the topics covered are approaches to interface design such as menus, commands, direct manipulation; screen layout strategies; metaphor models; models of human information processes; evaluation approaches such as protocol for analysis, interactive monitoring, use of surveys; and requirements for documentation and help. Students are expected to design interface mockups and evaluate them.
CPT 325.  Medical Informatics Technology.  3 credits, 3 contact hours (3;0;0). Restriction: Junior standing. Medical Informatics (MI) professionals use information technology to benefit the health and human services industry. One of the main challenges is to develop an integrated medical record/information system that links doctors, pharmacists, medical imaging facilities and hospitals. In addition, MI professionals will also develop skills to design and develop suport technology for seniors to maintain independent life styles. This includes remote monitoring systems linked to medical professionals, software for support services, and home automation technology.
HUM 102.  English Composition: Writing, Speaking, Thinking II.  3 credits, 3 contact hours (3;0;0). Prerequisite: HUM 101 with a grade of C or better or HUM 100 with a grade of C or better. Focuses on enhanced written and oral communication skills; emphasizes reading and interpretation of literary forms; critical analysis; methods of research using print and on-line sources; report writing and writing about literature.
MRKT 360.  Digital Marketing.  3 credits, 3 contact hours (3;0;0). Prerequisite: MRKT 330. Provides an overview of fundamental principles of digital marketing for the contemporary business environment. Topics include digital marketing fundamentals and digital user behavior, online market research, digital marketing strategies, digital marketing plan, and development of digital marketing programs.
ECON 201.  Economics.  3 credits, 3 contact hours (3;0;0). The nature of a market economy. Microeconomics, demand theory, production possibilities, cost and price, equilibrium analysis, and applications to decision making in the firm. Macroeconomics, national income accounts, consumption, investment, government monetary and fiscal policy, and problems of employment and price levels. Economic analysis leading to an understanding of current developments in the United States economy and international trade and currency problems. Students who have received credit for ECON 265 or ECON 266 may not subsequently receive credit for ECON 201. Students majoring within Martin Tuchman School of Management are not allowed to register this course.
IT 302.  Advanced Internet Applications.  3 credits, 3 contact hours (3;0;0). Prerequisites: IT 202 or IS 217. This course covers Internet-related software technologies in a more comprehensive, in-depth manner than IT 202. Topics considered include: client-side technologies like HTML5 and jQuery, JQuery UI (user interface) library, jQuery Mobile, CSS3 (transitions, animations), feature detection and polyfills using jQuery UI and Modernizr, advanced Javascript DOM and JSON (Javascript Object Notation), basic web services applications, JSONP. Advanced PHP topics considered include: sessions, cookies, HTTP exchanges, encryption, graphics library (CAPTCHA?s), and as time permits regular expressions and remote file access. An introduction to the Model-View-Controller (MVC) paradigm is presented using Ruby-on-Rails environment. Programming assignments are required which provide experience with the concepts covered.
IS 344.  Computing Applications in Business.  3 credits, 3 contact hours (3;0;0). Prerequisites: MIS 245 or IS 265 or ACCT 115 or ACCT 117 or MGMT 390 A comprehensive overview of the various types of computing applications used by businesses in order to run effectively and efficiently. All the major functional departments within organizations are examined and evaluated to see how applications are integrated to implement "business processes" that flow across department boundaries, and from suppliers to customers. Students will learn to model business situations and the design of applicable software solutions. A full-semester hands-on student project will provide experience in designing solutions to changes in the business environment.
MGMT 190.  Introduction to Business.  3 credits, 4 contact hours (3;0;1). Introduction to the School of Management and the Business major. Foundations of the business enterprise and ecosystem. Organizational structures, governance, financial systems, marketing, and government interactions. Economic, political, psychological, and social influences on business. Incorporates freshman seminar topics related to a successful college life, including time management, study skills, interpersonal relationships, wellness, multicultural issues and career decision making. This course is restricted to freshmen BUSINESS majors only except with permission of SOM’s undergraduate program director.
IT 335.  Introduction to .NET Framework.  3 credits, 3 contact hours (3;0;0). Prerequisite: IT 202 or equivalent. This course introduces students to .NET Framework, a new computational environment that supports more than 25 programming languages and is platform and device independent. Problem solving and system development topics are integrated into the course by using C# languages as a vehicle to illustrate the concepts.
IS 375.  Discovering User Needs for UX.  3 credits, 3 contact hours (3;0;0). Prerequisites: none What new digital products or services need to be developed? How do you anticipate someone’s needs before they do? How do you understand how people interact with products? These are key questions that both interaction designers and start-up entrepreneurs need to answer. It’s all about understanding the user. We need to work with users to investigate or "research" their needs and how they interact with the product or service.  In this course, we take a deep dive into qualitative user experience (UX) research. UX research is the process of understanding why and how people use products and services. This course will teach you a set of research tools to discover user needs, investigate the user experience, and enhance the user experience by deriving design recommendations. We will cover techniques like ethnography, focus groups, interviewing, and analyzing qualitative data. We will be talking with user experience researchers at major companies and getting involved with actual user research. This practical, hands-on course will give you an insight into the psychology of user behavior and lay the foundation for students who are pursuing careers designing, evaluating, or marketing products for people.
FIN 315.  Fundamentals of Corporate Finance.  3 credits, 3 contact hours (3;0;0). Prerequisites: ACCT 115, or ACCT 117, ECON 265 or ECON 201, MATH 105. This course focuses on how companies invest in real assets and how they raise the money to pay for those investments. Topics covered include the firm and the financial manager, time value of money, bonds, stocks, and net present value. International finance, risk management, capital structure strategy and case studies of technology-based companies will be introduced.
CS 434.  Advanced Database Systems.  3 credits, 3 contact hours (3;0;0). Prerequisite: CS 431. The course covers the basic concepts of traditional files and file processing, provides a "classic" introduction to the relational data model and its languages, and discusses database design methodology and application developments. Students are expected to learn the design of database application systems through a small project and to get some practical hands-on experience with commercial database management systems (DBMS) by writing application programs using the commercial DBMS query languages.
IS 631.  Enterprise Database Management.  3 credits, 3 contact hours. Prerequisites: IS 601 This course provides an understanding of the issues as well as hands-on experience in managing database systems as an essential organizational resource. Students will obtain a conceptual foundation of database design and explore the implications for organizational database usage. Students also will gain experience with enterprise database management systems, such as Oracle. This course introduces the design and management of enterprise-wide database systems. Topics include: (1) data modeling and database design; (2) database implementation with SQL; (3) database access standards for enterprise database systems; (4) multidimensional databases, online analytic processing (OLAP) and data warehousing, customer relationship management (CRM); and (5) web-based enterprise database systems.
IS 331.  Database Design Management and Applications.  3 credits, 3 contact hours (3;0;0). Prerequisite: IS 218 or IT 202. Businesses use databases extensively for analysis and decision-making because they provide efficient, large-scale information storage and rapid retrieval. Databases support the "back end functionality" of most large web systems. This course gives students extensive, pragmatic experience in designing, building, querying, updating, maintaining and managing relational databases, using the Structured Query Language (SQL). Proper database design principles are emphasized throughout the course, beginning with high level descriptions of relational databases using data modeling tools (such as entity-relationship or ER diagrams)and progressing to relational database design principles based on higher order normalizations. We will examine some poorly designed databases and show how these can be transformed into well designed databases. SQL will be extensively covered, and students will design and implement sophisticated SQL queries invoking self-joins, outer joins, correlated subqueries and related concepts. Students will explore and utilize design methodologies for input data validation and maintaining database integrity, and study issues of database privacy and security. Advanced topics to be discussed include the role of the Database Administrator (DBA), database life cycle activities, database denormalization, read-only databases and data warehouses. Hands-on experience will be gained by working with actual databases using industry-standard database management systems such as Oracle.
IS 421.  Advanced Web Applications.  3 credits, 3 contact hours (3;0;0). Prerequistes: IS 219 and (IS 331 or CS 431).  This course focuses on the design, development, and management of cloud-based web information systems, within the context of startup companies and established organizations.  Within the course, we examine business, organizational and technical challenges faced by developers, project managers, and the business development professionals that create web-based software products.  The course consists of readings, discussions, and a final team project that demonstrates modular design, planned scalability, maintainability, and the creation of a set of organizational processes that supports the continued support and development of the application.  Some of the topics covered in the course are: continuous deployment, continuous integration, automated unit testing, modular design, software team management, agile development, Kanban, customer focused development, and the technologies used to scale cloud applications.
IT 430.  Ethical Hacking for System Administrators.  3 credits, 3 contact hours (3;0;0). Prerequisite: IT 340 or equivalent. This course will explore the various means that an intruder has available to gain access to computer resources. Traditional security analysis often falls short due to the rapidly evolving threats that exist. The course was developed to teach how system and network vulnerabilities are found and exploited and what steps can be taken to mitigate the risk.
ENG 351.  Online Journalism.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. A study of how news is covered on the World Wide Web, and the impact of online news on society and politics. History of news online. Differences between print, broadcast and online-what are the strengths and weaknesses inherent to each medium? Analysis of the websites of different news organizations-from the New York Times to CNN to special interest e-zines to blogs. This course satisfies the three credit 300 GER in History and Humanities.
IS 661.  User Experience Design.  3 credits, 3 contact hours. This is a foundation course on the design of digital products. User eXperience Design (UXD) isn't just about making interfaces usable. It is about designing and building relevant and successful products. Effective UXD requires a mix of Interaction Design (ID) methods and processes. This course takes you through the process of creating compelling interaction designs for digital products from the idea stage into creating a simple and intuitive user experience blueprint. You will 'learn by doing' in a team environment, enabling you to practice the techniques with coaching from instructors. The course will demystify Lean UX; Agile UX; Human Computer Interaction (HCI); Design Audits and Claims analysis; Persona construction; Storyboarding; ID scenarios; ID Frameworks; Role of user-research in UXD; and Design Patterns.
MATH 105.  Elementary Probability and Statistics.  3 credits, 3 contact hours (3;0;0). Consider notions of probability. Topics include the binomial and normal distributions, expected value, and variance. The notions of sampling, hypothesis testing, and confidence intervals are applied to elementary situations.
ENTR 410.  New Venture Management.  3 credits, 3 contact hours (3;0;0). Prerequisite: Junior standing. Provides an understanding of the process of start up and early stage management of new, technology based, small firms. Emphasis is on recognizing, evaluating and deciding on a new business idea, as well as preparation for and management of the start up process. Preparation and execution of a new business plan.
IT 265.  Game Architecture and Design.  3 credits, 3 contact hours (3;0;0). Prerequisite: IT 201 or equivalent. Course introduces students to the core concepts and design methodologies integral to designing and developing games and other Entertainment Software.
MRKT 330.  Principles of Marketing.  3 credits, 3 contact hours (3;0;0). Prerequisites: MGMT 190 or MGMT 390 or departmental approval. Provides an understanding of how environmental factors (political, legal, economy, competition, socio-cultural, and technology) influence the design of product, pricing, promotion and distribution strategies. Topics discussed include strategies to satisfy target markets, market segmentation, buyer behavior, marketing ethics, and an introduction to global marketing issues. Fundamentals of marketing are integrated using cases, videos, and class projects.
IT 120.  Introduction to Network Technology.  3 credits, 3 contact hours (3;0;0). An introduction to the basics of networking in a modern operating system environment. Emphasis is placed on the application and management of networking technology. Topics to be covered include: the OSI model, network hardware and technologies, network protocols, wired and wireless networks, TCP/IP. Whenever possible, concepts will be explained through the use of hands-on exercises that reinforce the lecture material.
IT 380.  Educational Software Design.  3 credits, 3 contact hours (3;0;0). Prerequisite: IT 201. Educational Media Design employs the instructional principles of constructivist pedagogy as the process used to develop a solution to develope courseware for K-12 audience. The course builds on the participatory design model of software engineering in order to develop integrated learning environments that support visual and verbal literacy; enables student to be able to plan, organize, and systematically develop instructional materials. This course implements instructional design theory and pedagogy in order to create an actual application for a computer-based environment. Same as STS 318.
IE 492.  Engineering Management.  3 credits, 3 contact hours (3;0;0). Restriction: junior or senior standing. An introduction for engineering majors to the fundamentals of engineering economics and the management process for engineering and development. Major topics include capital investment justification methods, project organization, scheduling and control techniques, legal, quality, and staffing issues.
CS 458.  Technologies-Network Security.  3 credits, 3 contact hours (3;0;0). Prerequisite: CS 351. This course provides both an in-depth theoretical study and a practical exposure to technologies that are critical in providing secure communication over the Internet. Topics include remote access security, web security, wireless security, e-mail security, spam and spam filtering techniques, computer viruses and internet worms, honeypots and honeynets, security liability issues and compliance.
IT 220.  Wireless Networks.  3 credits, 3 contact hours (3;0;0). Prerequisite: IT 120. This course introduces the students to the applied topic of Wireless Networks, focusing on applied methods, tools and technologies, as well as practical experience in designing & implementing wireless networks.  Topics include hardware, software, data, applications, communication, design & installation of wireless networks, together with the implementation, performance, security and limitations of such systems.
IS 634.  Information Retrieval.  3 credits, 3 contact hours. Prerequisite: IS 601 Modern information retrieval systems, such as web search engines, empower users to easily access information on the web. The course covers the concepts and principles of information retrieval systems design, including web crawling, automatic indexing, vector space modeling, retrieval algorithms, digital libraries, text mining, information extraction, and document warehousing. These techniques are essential for building web systems, text databases, document processing systems, and other advanced information management systems.
IS 350.  Computers, Society and Ethics.  3 credits, 3 contact hours (3;0;0). Prerequisites: GER (CS 100, CS 101, CS 103, CS 104, CS 111, CS 113, CS 115, or BNFO 135), AND any History and Humanities GER 200 level course AND HUM 101. Examines the historical evolution of computer and information systems and explores their implications in the home, business, government, medicine and education. Topics include automation and job impact, privacy, and legal and ethical issues.
CS 408.  Cryptography and Internet Security.  3 credits, 3 contact hours (3;0;0). Prerequisite: CS 351. Covers security requirements for telecommunication over the Internet and other communication networks, various conventional and public-key encryption protocols, digital encryption standard, RSA and EIGamal cryptographic systems, digital signature algorithm and analysis of its cryptoimmunity, and access-sharing schemes. Students receiving credit for CS 408 may not enroll in CS 608.
IS 373.  Content Management Systems.  3 credits, 3 contact hours (3;0;0). Prerequisites: IS 117 or IT 202. This course provides a hands-on introduction to the design and implementation of enterprise-scale web systems built upon web based content management systems (CMS). CMS manage the creation, storage, retrieval, dissemination, and collection of information in order to meet the needs of businesses, organizations and individuals. Students learn to how to create blogs, discussion boards, wiki, intranets, and dynamic websites using popular CMS packages such as Wordpress and Drupal. Throughout the course students learn how to overcome common challenges that impact the design of these systems such as security for multi-user systems, content strategy, marketing and performance.
IS 678.  IT Service Management.  3 credits, 3 contact hours. Prerequisites: IS 663 or CS 673 This course introduces the Information Technology Infrastructure Library (ITIL) fundamentals of the service management life cycle-service strategy, service design, service transition, service operation, and continual service improvement. ITIL provides a comprehensive, consistent, and coherent framework of best practices for IT Service Management (ITSM), which promotes a quality approach for achieving business effectiveness and efficiency in the use of information systems. This course presents the basic terminology and an overview of the functions and processes for each of the life cycle phases as they apply to IT Management. Although ITIL is originally presented as an approach for designing IT processes, we can expand this view and apply it to the design of other business services. Possible semester-long contexts are the processes of an educational services provider or health care services provider.
CS 266.  Game Modification Development.  3 credits, 3 contact hours (3;0;0). Prerequisites: IT 102 OR IT 114 OR CS 116, OR CS 114. This course introduces students to the basic concepts of game programming and development. Students will learn how to reprogram a professional game engine, or Modification (Mod) development as it is referred to in the industry. Students will work with C extensively. Students will work on their own game projects utilizing the professional game engine.
CS 490.  Guided Design in Software Engineering.  3 credits, 3 contact hours (3;0;0). Prerequisites: CS 280 and CS 288. This course focuses on the methodology for developing software systems. Methods and techniques for functional requirements analysis and specifications, design, coding, testing and proving, integration and maintenance are discussed.
IT 266.  Game Modification Development.  3 credits, 3 contact hours (3;0;0). Prerequisites: IT 102 or IT 114 or CS 116 or CS 114. This course introduces students to the basic concepts of game programming and development. Students will learn how to reprogram a professional game engine, or Modification (Mod) development as it is referred to in the industry. Students will work with C intensively. Students will work on their own game projects utilizing the professional game engine.
CS 280.  Programming Language Concepts.  3 credits, 3 contact hours (3;0;0). Prerequisite: CS 114 OR CS 116 OR IT 114 OR IT 102. Conceptual study of programming language syntax, semantics and implementation. Course covers language definition structure, data types and structures, control structures and data flow, run-time consideration, and interpretative languages.
IS 117.  Introduction to Website Development.  3 credits, 3 contact hours (3;0;0). This course discusses the concepts and skills required to plan, design and build websites. It will be taught in a lab to ensure hands-on experience with each of these tasks. The course begins with an overview of web technologies. Students learn to plan websites, which includes determining the business and end-user requirements for the site. Design includes learning to develop "mockups" of how the site will look and how people will use it. The major tools for building websites will be industry standard HTML and XHTML to describe webpage content, and Cascading Style Sheets (CSS) for flexibly formatting the content. Using XHTML and CSS makes it relatively simple to change formats across the entire site, as well as "future-proofs" a website, allowing it to be viewed on every major web browser (such as Firefox or Chrome) and easily adapt to changes in future browser technology. The course features substantial hands-on projects comprising websites of several interlinked pages and images, enabling students to thoroughly learn the course's important concepts and skills.
ENG 200.  Communicating in Organizations.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 101 and HUM 102 with grades of C or higher; HUM 102 may be taken concurrently as a co-requisite. Allows students to understand the need for writing in an information-based corporate culture. Students write intensively in a variety of forms for a variety of audiences. Attention is given to editing, graphic design, communications ethics, and desktop publishing. At the conclusion of the course, students prepare a portfolio of their work. This course satisfies the three credit 200 GER in History and Humanities.
IS 392.  Web Mining and Information Retrieval.  3 credits, 3 contact hours (3;0;0). Prerequisites: IS 218, IT 114, or CS 114. This course introduces the design, implementation and evaluation of search engines and web mining applications. Topics include: automatic indexing, natural language processing, retrieval algorithms, web page classification and clustering, information extraction, summarization, search engine optimization, and web analytics. Students will gain hands-on experience applying theories in case studies.

Introduction to Academic Writing Teaches rhetorical knowledge and skills, focusing on critical reading, writing, and thinking. Introduces writing for specific academic audiences and situations. Emphasizes writing as a process through multiple drafts and revisions
Intermediate Writing/Academic Writing and Research Emphasizes academic inquiry and research. Explores issues from multiple perspectives. Teaches careful reasoning, argumentation, and rhetorical awareness of purpose, audience, and genre. Focuses on critically evaluating, effectively integrating, and properly documenting sources.
College Algebra Includes inequalities, functions and their graphs, polynomial and rational functions, exponential and logarithmic functions, systems of linear and nonlinear equations, matrices and determinants, arithmetic and geometric sequences, and the Binomial Theorem
US History to 1877 Surveys the origins of the United States from the Pre-Columbian era and early colonization through Reconstruction. Focuses on encounters among indigenous, African and European peoples; gender, race, and Atlantic slavery; the causes and consequences of the American Revolution; the westward expansion of the United States; and the sectional crisis that lead to the American Civil War.
Ethics and Values Challenges students to explore and clarify their values; critically read works of philosophy, literature, religion, and history toward understanding the basis of their ethical views; and read, study, research, discuss, and write about difficult ethical issues. Focuses on issues of good vs. evil, justice vs. injustice, equality vs. inequality, and the necessity of defining and examining happiness and values. Engages students in serious reflection on issues of ethics and values as they relate to the students' own lives
Business Statistics I Presents an application of statistics in business and economics covering methods of collecting, analyzing, and presenting data. Includes frequency distributions, averages, index numbers, probability, sampling, estimation, analysis of variance, time series, regression and correlation, and chi-square. May be delivered online
Information Systems and Technology Fundamentals Explores the fundamental concepts of information technology and the role played by enterprise systems in business and organizational strategy. Introduces types of systems, computer organization and hardware, operating systems and networking, project planning, software development, computer ethics, and career paths for enterprise developers and IT professionals.
Computer Programming I for IS IT Presents concepts of modern computer programming. Emphasizes problem-solving, algorithm development, and programming desgin. Stresses constructs, data representation, fundamental types and data structures, decision structures, repetition structures, methods, arrays, classes, and objects. Includes testing, debugging, and documentation. Introduces object-oriented, event-driven programming models
Fundamentals of Programming For Majors in Computer Science, Computer Engineering, Software Engineering, and other majors requiring computer programming skills. Introduces the fundamental concepts of computer programming. Presents the ideas, tools, structure, syntax, and design techniques for developing well-formed programs. Studies problem solving, program structure, data types, decision logic, loops, functions, input and output, and arrays. Introduces the basic ideas of classes and objects. Requires students to program a number of assignments that demonstrate their understanding of these concepts
Computer Programming II for IS IT Focuses on object-oriented design and programming methodologies. Teaches inheritance, polymorphism, and encapsulation. Develops knowledge to abstract functionality by using interfaces. Covers collection classes, generics, exception handling, file handling, and more advanced topics such as accessing databases via LINQ, socket/network programming, and multi-threading.
Database Fundamentals Introduces concepts and use of database management systems. Presents the relational model, Structured Query Language, database design including normalization theory, and application development tools using an enterprise-level relational database management system.
Web Application Design Focuses on the design and construction of Web pages and maintenance of Web sites. Includes foundations in standards-based HTML and CSS. Covers code markup, design concepts and web graphics manipulation, page layout, form development, and usability and accessibility issues. Teaches use of Web authoring tools for code development and site management. Requires individual projects
Basic Computer Applications Teaches basic computer fundamentals, digital living concepts, and key applications. Includes PC computer system concepts, basics of the Windows operating system, software licensing and installation, electronic communication, Internet and research fluency, and ethical computer usage. Provides hand-on experience in the basic features of Microsoft Word, PowerPoint, Excel, and Access as common business problem solving and communication tools.
Living and Learning in a Technological World Imagine life without cell phones, television, or the Internet. Recent technological developments have significantly altered all aspects of human life: at work; in play; and in personal, family, and social interactions.
Introduction to Management The roles, functions, and styles of managers, specifically principles and procedures for planning, organizing, leading, and controlling organizations, are addressed in this introductory course. Emphasized is the practical application of theory to reality. Students focus on the techniques, tools, and methods of managerial decision making and employee motivation, as well as consider the effects of ethical leadership and management practices on an organization.
Fundamentals of Accounting Students take a top-down approach to understanding introductory accounting documents and procedures by exploring a business's financial statements, including the balance sheet, income statement, and cash flow statement in this course. Students explore the practical uses for information that can be gleaned from these statements, individually and as a whole, through a detailed examination of the properties and characteristics of each statement.
Operations Management An overview of the concepts, methodologies, and applications of business operations management is provided to students in this course. Students focus on operations, the supply chain, and the process of transforming resources into products and services. They explore the responsibility of operations managers to make cost-effective and cross-functional decisions that increase the productivity and competitiveness of manufacturing and service organizations. Students examine product flow processes and product-process strategies to increase efficiency and effectiveness within organizations.
Information Systems in Enterprise All businesses rely on systems to process, collect, share, and store important information. The most effective way to help an organization achieve its goals is to understand how to leverage information systems and emerging technology. In this course, students have the opportunity to gain skills needed to employ such leverage in the professional arena. Students examine the characteristics of information systems and their role in organizations.
Statistical Methods and Applications Students in this course gain a foundation in statistical methodology as well as ways to use critical judgment in analyzing data sets. Through technology applications and hands-on lab work, students learn concepts of descriptive statistics, hypothesis testing, confidence intervals, t-test, one-way analysis of variance, correlation, and non-parametric methods (e.g., chi-square tests). Students gain the knowledge and skill to be able to analyze and apply statistics to research problems and everyday life situations.
Object-Oriented Programming Concepts Information systems rely on underlying programs that respond to users and process information. An information systems specialist must understand the structure and purpose of programs and be able to work with programmers to ensure designs that meet system requirements. Object-oriented programming (OOP) and design facilitate this by presenting information systems as classes and objects that represent complex system contexts in a manner directly transferable to programming specifications. In this course, students learn fundamental aspects of computer programming in an object-oriented language.
IT Infrastructure Information technology (IT) is essential to the function and success of nearly all businesses. Businesses whose systems are lacking or experience failure are at risk of significant loss; therefore, there will always be a need for IT support and innovation. In this course, students are introduced to fundamental concepts of the IT infrastructure to prepare for a role in the field of IT. Students learn about the structure and purpose of hardware components (computers, networks, and interface devices) and software components (operating systems, middleware, applications, and system software).
Internet Computing The Internet stitches together many disparate devices and software components into a flexible fabric that supports an enormous variety of uses. Students in this course learn about the functions of these components through a comprehensive evaluation of Internet computing. They examine the design of the Internet protocol stack, the structure and function of some of the most important Internet services and applications, and Internet governance.
Systems Analysis There are many roles involved in creating and managing an organization's information system, including the systems analyst. The analyst helps ensure that the software development process is successful by understanding its purpose, scope, and resource requirements. Students in this course face the prospect of understanding the field from the perspective of a systems analyst. Students focus on the definition and examination of system requirements, both functional and nonfunctional, for an information system (IS) project.
Systems Design This course is an introduction to the approaches used to specify details during the design phase of a systems development life cycle (SDLC). Students explore the discipline of reducing requirements to the structural and functional design of organizational information technology solutions. They examine conceptual modeling, design patterns, and application frameworks. Students learn the basics of modeling, design representations, and the use of design tools.
Database Management Systems All types of businesses rely on systems to manage their data and to keep that data secure, accurate, and reliable. A database is a system designed to do just this as well as to simplify the processes of data entry, search, and retrieval. In this course, students learn about database management through the examination of the life cycle of a database. Students focus on the representation and manipulation of information in relational database management systems.
IT Project Management The process of creation, from conception through completion, is complicated and requires a diverse set of management skills. Students in this course are introduced to the knowledge, tools, and techniques needed to successfully manage information technology (IT) projects throughout a project life cycle. Students in this course focus on the IT project management process and development of the project team as key to the successful achievement of IT projects.
IS Capstone Project In this capstone project course, students complete an integrative information systems project that combines multiple aspects of their information systems program. The project requires collaboration with a team of students to manage, analyze, design, implement, and evaluate a computer-based information system. The system development process is initiated with a case study included within the course structure.
College Algebra Concepts This course provides students with a solid foundation in key algebra skills. Topics include solving and graphing linear, quadratic, and polynomial functions, composition and inverses of functions, rational and radical functions, modeling of exponential and logarithmic data, and solving systems of equations and inequalities.
English Composition This course develops the skills necessary for persuasive and research-based writing at the college-level. The primary focus is on the use of argument and supporting evidence.
Modern Popular Culture This course is designed to analyze the artistic and philosophical impact of contemporary media and popular culture. Topics include graphic novels, film, advertising, television, cyberculture, and popular music.
Intercultural Communication This course is designed to promote the ability to communicate effectively in a diverse, global environment. Topics include the relationship of culture and personal identity to communication strategies.
Women’s Literature and Social Change This course offers students a variety of historical and contemporary literary works written by women in the form of essays, short fiction, drama and poetry/lyrics. Topics include social change as it relates to women’s experiences of work, family, and community; health and well-being; education; and the future.
Introduction to Biology This course is designed to provide a survey of fundamental biological principles. Emphasis is placed on basic biology, cell biology, metabolism, genetics, taxonomy, evolution, ecology, diversity, and an introduction to the scientific method.
Indigenous Peoples in the Modern World This course is designed to develop a modern and inclusive understanding of indigenous peoples of the world. Topics include indigenous identity, historical continuity with pre-colonial and/or pre-settler societies, relationship to natural resources, and indigenous languages, cultures and beliefs.
Microeconomics The principles of microeconomics explain how in a market economy the price system answers the fundamental economic questions: What goods and services are produced and distributed, and how and for whom? This course examines the behaviors of households that supply factors of production—natural resources, labor, and capital—to firms and that purchase consumer goods and services from firms.
World History 1945–2000 This course is designed to introduce students to the history of the contemporary world from 1945 to 2000. Topics include major historical events that shaped the development of the world from post-World War II decolonization through the post-Cold War era.
Network Security This course provides an overview of network security defense techniques and countermeasures. Topics include design and configuration of firewalls, traffic analysis and filtering, intrusion detection systems, statistical anomaly detection, and wireless security.
Server-Side and Multi-Tier Programming Life in the 21st century is fast-paced and the public demands information that is expeditious, accurate, and appealing. This course provides students with the opportunity to acquire the knowledge and skills needed to create the types of dynamic web pages that are practical, well-designed, and can provide people with the information they need at the pace they want. Students examine the configuration of web server software, the function of server-side programming, and the use of scripting languages. They learn about techniques for enhancing performance through examination of multi-tier locality and parallelism.
IT Service Management This course looks at management of IT by focusing on the relationship between IT and the business customers and users, and is concerned with the customer’s perspective of IT’s contribution to the organization. Topics include operations architecture, IT governance, and relevant frameworks, as well as relationships of IT service management to process improvement movements (for example, Six Sigma, TQM, BPM, and CCMI)
Data Centers Efficient and well-designed data centers can add significant value to the enterprise by cutting costs and streamlining operations. This course provides students with an overview of data center principles and operational issues, including environmental controls, power architecture, data backup, data communications, and security standards to assure enterprise continuity. Students discuss emerging trends and technologies in areas including cloud computing, virtualization, middleware, databases, data centers, green grids, and enterprise environmental responsibility.
Database-Driven Web Applications This course examines concepts and provides skills to develop and administer database-backed dynamic Web sites. Topics include contemporary development tools for database-driven Web applications, the use of templates to separate business logic and presentation, and data storage and management.
Systems Software Security This course investigates security of operating systems and other system software, such as database management systems. Topics include components of networked operating system, architectural designs for secure usage, and system administration tasks and tools for security.
Network Security This course provides an overview of network security defense techniques and countermeasures. Topics include design and configuration of firewalls, traffic analysis and filtering, intrusion detection systems, statistical anomaly detection, and wireless security.
Application Software Security Students in this course examine life cycle practices used to develop, operate, and maintain secure applications. They identify and analyze the security vulnerabilities in code as reported by software tools. Students engage in a variety of assignments intended to provide them with a coherent, end-to-end understanding of common processes, tools, and technologies used to protect software applications against exploitation.
Computer Forensics In this course, students learn procedures and tools for collecting and investigating evidence from illegal or inappropriate computer use. Topics include the legal, ethical, and policy implications of monitoring and forensic techniques.
Database Administration This course provides an in-depth coverage of the range of tasks a database administrator in an organization performs, including disaster recovery, performance analysis and tuning, data dictionary maintenance, data modeling and optimization, and database and user management and monitoring.
Fault-Tolerant Systems This course focuses on the study and application of the principles of fault tolerant systems (failsafe) and networks. Topics address design, modeling, analysis, and integration of hardware and software and redundancy techniques to achieve dependable systems, performance and reliability evaluation techniques, system diagnosis, disaster recovery planning, backup strategies for data and hardware, virus monitoring, and associated security and administration issues.
Network Planning and Maintenance This course focuses on the planning, maintenance, and auditing of data communications and networks in an organization. Topics include business planning, longer- and shorter-term planning, operations, maintenance, forecasting, topological design, network synthesis, and network realization.
Software QA Testing and Test Tools In this course students develop an understanding of software quality and the components of software quality assurance systems before, during, and after software development. It also discusses metrics and models for software quality as a product, in process, and in maintenance, as well as the testing tools used to automate the process, including their challenges and limitations.
User Interface Evaluation, Design, and Development In this course students learn methods for evaluating, designing, and improving human computer interfaces. Topics include user interface evaluation methods, requirements analysis, and user interface design methodologies, including rapid prototyping and iteration.
User Experience Design Web designers strive to optimize the interaction between the user and the system to create a smooth and productive user experience. This course focuses on the particular challenges of designing user interactions for Web-based applications. It also investigates design products such as process flows and wireframes used to communicate with clients, technical leads, and other stakeholders.
Computer Programming II Advanced problem solving. Efficiency and reuse. Abstract Data Types. Object-Oriented programming. Dynamic data structures: linked lists, queues, stacks. Recursive functions and procedures.
Technical Writing for Computer Science Introduction to the writing tasks necessary of computer technology professionals. Covers skills necessary to prepare the technical reports, presentations, and documentation specific to the information technology environment.
Introduction to E-Commerce This course focuses on a rich variety of models and strategies for connecting individuals, businesses, governments, and other organizations to each other. The topics covered in the course will span value and supply chain concepts, varying business relationship types, as well as obligations for protection of individual privacy and organizational security.
Software Engineering I Introduction to the systems development life cycle, software development models, analysis and design techniques and tools, and validation and verification testing. Emphasis and experience will be on software engineering within a team environment.
Management Information Systems Study of the systems concept and its relationship to information requirements for decision making and management in traditional and e-commerce environments.
Computer Organization and Architecture Digital logic; instruction set architecture and computer organization; memory systems; functional organization; interfacing and communication; multiprocessing and alternative architectures.
Fundamentals of Computer Operating Systems Overview of operating system concepts and structures. Study of process management, including synchronization techniques for cooperating processes, main memory management, including virtual memory systems, system resource allocation and deadlocks, file system implementation, secondary storage management and input/output subsystems.
COBOL for Information Systems An introduction to solving business problems using structured programming techniques and methodology for both interactive and batch processing.
Computer Networking Study of computer interconnection and protocols with emphasis on network layers, error detection/correction, data compression, and topologies. Project approach utilized.
Ethics and Legal Issues An overview of legal, ethical, global and professional issues in computing.
Database Systems Concepts and terminology associated with data structure, file organization, access methods, packaged systems, database design and database systems.
Software Engineering II This course is a continuation of software engineering that emphasizes the entire software process, developing and using process and product metrics, and managing software projects. Both individual and team projects will develop student expertise.
Mgt of Information Security & Forensics Study of information security and digital forensics using practical case studies. Emphasis is on developing security policies, security management and practices, utilization of digital forensic tools and techniques, risk management, security project management, and protection mechanisms.
Embedded & Control Systems Security A study of embedded system architectures, security, and digital forensics; the role of hardware abstraction layers and middleware; real-time OS issues, such as concurrency, synchronization, and resource management; and the components and applications of industrial control systems. Laboratory activities include: ladder logic programming, embedded systems programming, and digital forensics for microcontrollers, mobile computing platforms, and industrial control systems.
Computer Security Study of network security architectures and models, cryptography, authentication and authorization protocols, secure application and systems development, and federal regulations and compliance. Emphasis is on security professional certification.
Disaster Response & Recovery How people, groups, organizations, communities, and governments manage disasters in the immediate aftermath and recover from their effects, including social, physical, business, and infrastructure problems as well as intra- and inter-organizational issues.
Introduction to Web Design Step-by-step process of creating a well-designed website. Emphasizes web design techniques resulting in fast-loading and well-placed graphics, cohesive color and typography across platforms and browsers, clear navigational interface, and appropriate use of sound and video. Includes studio component where students analyze, design, and implement websites.
Web Scripting A practical hands-on introduction to web scripting for writing clientside scripts. Topics include fundamentals of scripting as a web programming language, scripting techniques and programming concepts, such as control structures, data structure, objects, event handling and functions. Multiple scripting languages will be used for the hands-on projects.
Dynamic Web Application The course will present dynamic web based application architecture, web scripting languages syntax, principles and techniques for developing database driven web applications using multiple web scripting languages. Students will gain experience in web scripting programming via the completion of a series of practical dynamic website projects.
Web Application Development Using Web Introduction to technologies and tools for developing web applications using Web Services, emphasizing organizational issues, challenges, and security concerns related to the effective deployment of those applications
Business Finance This course introduces the financial concepts, tools, and principles utilized by the entrepreneur to initiate, build, and develop a successful entrepreneurial venture. This course also examines the sources of financing necessary to initiate and develop the venture. Additional topics include proforma financial statement development; business valuation models; cash flow analysis; and raising capital from private investors, venture capitalists, and banks.
Principles of Management A basic course in general management principles and theories.
Principles of Marketing An introduction to marketing strategy. Focuses on the application of product, promotion, price and distribution elements in satisfying the wants and needs of target markets.
Applied Probability and Statistics Provides a summary of introductory probability and statistics centered around data analysis examples and computer simulations. Includes discrete and continuous probability distributions, estimation, and hypothesis testing.
English Composition Spelling, grammar, punctuation, vocabulary, and the strategies of effective writing. Introduction to literature. In 102: a research paper.
World Literature The literature of Greece and Rome, the Medieval Period, the Renaissance, the Enlightenment, the Romantic Age, Realism and Symbolism, and our own times.
American Literature  The American tradition as presented in literature. 201: Franklin, Irving, Poe, Douglass, Emerson, Thoreau, Hawthorne, Melville, Whitman.
Introductory Biology I  An introduction to the concepts of biology, including cellular structure and function, bioenergetics, patterns and mechanisms of inheritance, the processes of evolution, and ecology.
Introductory Biology Lab I Introductory Biology Lab I
Introductory Biology II An introduction to biodiversity, from bacteria through plants and animals, with an emphasis on their structure, function, and ecological interactions.
Introductory Biology Lab II  Introductory Biology Lab II
Calculus and Its Applications Topics in differential and integral calculus with business applications, functions of several variables, partial derivatives with business applications, Lagrange Multipliers, and multiple integration.
Western Civilization  Civilization from earliest times to the present. Some training in the technique of historical research.
Principles of Microeconomics Microeconomic analysis, including the consumer, the firm, the market and price determination.
Principles of Psychology An introduction to basic methodology, principles, and terms of contemporary psychology. Stresses a scientific analysis of behavior. Direct experience with research psychology or its equivalent may be required.
Introduction to Anthropology Surveys the field of anthropology, including cultural anthropology, archaeology, and physical anthropology.
Composition I Intensive study of and practice in writing processes, from invention and researching to drafting, revising, and editing, both individually and collaboratively. Emphasis on effective rhetorical choices, including audience, purpose, arrangement, and style. Focus on writing the academic essay as a vehicle for learning, communicating, and critical analysis.
Composition II Intensive study of and practice in the strategies and techniques for developing research-based expository and persuasive texts. Emphasis on effective and ethical rhetorical inquiry, including primary and secondary research methods, critical reading of verbal, visual, and multimedia texts; systematic evaluation, synthesis, and documentation of information sources; and critical thinking about evidence and conclusions.
Calculus for Business and Social Sciences Limits and continuity, derivatives, graphing and optimization, exponential and logarithmic functions, anti-derivatives, integration, applications to management, economics and business. Stars and Galaxies Part of a two semester survey course in astronomy intended for both science and nonscience majors. Properties of the sun and stars, stellar spectra, stellar formation, life and death of stars, formation of the elements, black holes, galaxies, expansion of the universe and cosmology. Laboratory experiments and activities in stellar and galactic astronomy.
Solar System Part of a two semester survey course in astronomy intended for both science and non-science majors.&nbsp; History of astronomy, Copernican revolution, astronomical observation, physics of planetary motion, comparative study of planet surfaces and atmospheres, moons, asteroids, comets, planetary system formation and exoplanets.
Humanities An interdisciplinary, multi-perspective assessment of cultural, political, philosophical, and aesthetic factors critical to the formulation of values and the historical development of the individual and of society
World Art Survey I Examination of painting, sculpture, architecture, and other arts from prehistoric to Renaissance periods.
United States History I A survey of the social, political, economic, cultural, and intellectual history of the United States from the pre-Columbian era to the Civil War/Reconstruction period. Includes the study of pre-Columbian, colonial, revolutionary, early national, slavery, sectionalism, and the Civil War/Reconstruction eras. Themes may include: American settlement and diversity, American culture, religion, civil and human rights, technological change, economic change, immigration and migration, and creation of the federal government.
United States History II A survey of the social, political, economic, cultural, and intellectual history of the United States from the Civil War/Reconstruction era to the present. Examines industrialization, immigration, world wars, the Great Depression, Cold War and post-Cold War eras. Themes may include: American culture, religion, civil and human rights, technological change, economic change, immigration and migration, urbanization and suburbanization, the expansion of the federal government, and the study of U.S. foreign policy.
Federal Government Origin and development of the U.S. Constitution, structure and powers of the national government including the legislative, executive, and judicial branches, federalism, political participation, the national election process, public policy, civil liberties, and civil rights.
Texas Government Origin and development of the Texas constitution, structure and powers of state and local government, federalism, and intergovernmental relations, political participation, the election process, and the political culture of Texas.
Principles of Microeconomics Analysis of the behavior of individual economic agents, including consumer behavior and demand, producer behavior and supply, price and output decisions by firms under various market structures, factor markets, market failures and international trade
Public Speaking Application of communication theory and practice to the public speaking context with emphasis on audience analysis, speaker delivery, ethics of communication, cultural diversity, and speech organizational techniques to develop students' speaking abilities as well as their ability to effectively evaluate oral presentations.
Learning Frameworks An inquiry around the broad, interdisciplinary concepts of civic engagement and citizenship for students to explicitly examine and engage in advanced critical thinking for university study. This course promotes intellectual readiness by helping students build and find the resources to become personally responsible and active members of the university community, their education, and their word.
Principles of Accounting I - FinanciaL Accounting concepts and their application in transaction analysis and financial statement preparation; analysis of financial statements; and asset and equity accounting in proprietorships, partnerships and corporations.
Introduction to Computer Information Systems A general overview of the computing field and its typical applications, information systems concepts and terminologies. Topics include hardware, software and telecommunication fundamentals, the internet, systems development methods and career opportunities. Hands-on experience using application software.
Information Systems Theory and Practice Introduction to the theory and practice of information systems. Development, application and management of IS. Hardware and software issues for IS. Ethical, social and security related issues of IS. IS environmentS.
Business Data Communications Introduction to business data communications. WANs, LANs and internet concepts. A survey of data communications with emphasis on the impact of digital technology on the operation, management and economics of computer information systems.
Web Application Development Survey of languages, tools and techniques for Web application development, HTML, XHTML, CSS, JavaScript, dynamic HTML, Server-side web development using .Net Framework with ASP.NET and C#, Perl, CGI programming with Perl, XML. Laboratory instruction.
Modern System Analysis and Design Key concepts and principles of system analysis and design within the context of information system development. Emphasis on the application of tools and techniques along with the role and responsibilities of the systems analyst as well as the systems project manager.
Computer Systems Administration Administration of computers and their operating systems, both as stand-alone and in network topologies. Unix is used as an example. Laboratory instruction.
Senior Project in Computer Science May be taken only during the final semester before graduation. Registration is restricted to students with an approved Candidate Plan of Study. Students develop a significant computer application for a realistic project. Emphasis will be on practical experience on all phases of constructing a computer solution. Professional behavior, ethics and teamwork will be developed throughout the project. Students prepare written reports and give oral presentations.
Computer Science I Introduction to computer programming using Python. Topics include: design tools (flowcharts, pseudocode) control flow statements (if, while, for), simple arithmetic expressions, input and output statements, functions, data structures including strings and lists, text files. Introduction to software development lifecycle and testing. The course is programmingintensive with in-class assignments and weekly homework and a final project. Introduction to Arduino and number systems.
Computer Science II Build upon basic programming concepts using Java constructs such as iteration, selection, recursion, exception handling, data structures and file I/O. Introduce Objectoriented programming concepts including: reuse principles, data abstraction, classes, inheritance, polymorphism, exception handling and UML to build robust code and enhance problem solving methodology.
Data Structures Advanced programming techniques and data structures including arrays, linked lists, queues and stacks; abstract data types, recursion, searching and sorting, binary trees, hashing techniques, elementary algorithm design and analysis, and more.
Design of Database Systems Design of database systems, data description and manipulation languages, data models, entity-relationship model, relational model, SL, relational algebra, normalization theory, DBMS, internet, database design, data flow diagrams, and implementation of database systems. Laboratory instruction.
Quantitative Methods for Management Introduction to quantitative techniques for management; probability, inventory and production models, linear programming, queuing, replacement models, Markov analysis and network models.
Discrete Mathematics Introductory mathematical logic, mathematical induction, relations and functions, basic counting techniques, graphs and trees and applications to computing devices. Designed for students majoring in the computer related disciplines.
Management Theory and Practice Management policies and processes including planning, organizing and controlling; overview of the&nbsp;functions of organization theory and behavior.
Computational Statistics Descriptive statistics, basic probability concepts, normal distribution, parameter estimation, testing of hypothesis, correlation and
Software Engineering Introduction to Software Engineering. Major phases of the software life cycle are introduced from requirements through maintenance.
Written Communications in Business Theory and practices of business communications: preparation of effective letters, policy statements, procedures, reports, and related documents.
Advanced Technical Writing Advanced approaches to the writing of technical documents for professional audiences: correspondence, proposal reports, manuals, and descriptions.
Information Technology Project Management Credit: 3 | Lecture: 3 The course examines the defining characteristics of technology-oriented projects, especially involving the development of software intensive systems, and introduces students to a variety of project management techniques that can be applied in a technology-oriented project context. Project management issues including estimation, risk-assessment, quality management, monitoring and control will be discussed. While technology-intensive projects are similar in some respects to other types of projects, they also pose unique challenges for the managers and organizations that undertake them. Technology-intensive project management is particularly challenging because of several factors including: (1) the rapid pace of technological changes occurring in the IS and IT fields, (2) the invisible nature of software, (3) the ever-present pressure to add new features and functionality to systems, and (4) the difficulty of managing the organizational changes that accompany most technology implementations.
Advanced Software Development With .Net Framework and C# In depth study of the managed environment provided by .NET Framework and its use in developing advanced windows applications utilizing OOP concepts and techniques. Includes GUI issues, event and exception handling, multithreading, networking, collections, file and database access as well as an introduction to ASP.NET, Web Forms and Web Services.
Electronic Commerce Key concepts and principles of e-commerce; importance of e-commerce in the global economy; technological elements of the infrastructure of e-commerce; business and social factors associated with the success or failure of e-commerce; critical thinking to strategize and plan technology based solutions to achieve business goals.
Network Protocols Data communications systems software concepts; computer network architecture; ISO model.
Operating Systems Analysis and design of basic operating systems concepts, including multiprocessing, interprocess communication and synchronization, scheduling, file systems, memory management, input/output and deadlock. Examples drawn from real operating systems including Unix and Windows NT.
Computer Security Introduction to encryption, decryption and cryptographical protocols; security components; security policies and mechanisms in computer applications, computer systems and networks; legal/ethical issues in computer security.
First-Year Experience Seminar The primary objective of this course will be to assist students in acquiring and applying strategies for academic success in their first year at UNA. The course will help students identify appropriate academic and university resource services on campus and become academically and socially integrated into the UNA community. It will teach students about UNA’s academic expectations, policies, and procedures and enhance academic skills such as goals setting, time management, study and test-taking skills.
First-Year Composition I An introduction to expository writing, rhetoric, and reading. The acquisition of the basic skills in standard English is stressed.
Computer Skills for Problem-Solving Using personal computers as effective problemsolving tools, this course will enhance analytical thinking and abstraction skills. Topics include problem specification, problem- solving techniques, and the interpretation of results to problems from scientific, business, and social domains. Students will utilize productivity software, the Internet, and programming principles to foster an understanding of the impact of computing technology on society and culture.  /  First-Year Composition II A continuation of training in expository writing and reading, stressing the acquisition of higher-level skills in standard English and the introduction to the basic tools and processes of academic research.
Business Ethics This course will explore the nature of business ethics. It will begin by examining the importance of rational justification in the establishment of ethical belief and how the creation of a rationally informed moral point of view can help us to navigate the various moral challenges encountered in business practices. Specifically, the class will explore the nature of ethical justification by looking at various philosophical attempts to ground ethical thought (e.g. Utilitarianism, Social Contract Theory, Deontology, and Virtue Ethics).
Fundamentals of Speech Communication theory and practice for public speaking with emphasis on content, research, organization, delivery, adaptation to the audience, as well as listening and speaker evaluation.
Business Applications of Microcomputer Software A study of the application of microcomputer software to the business environment. Included are word processing, data management, presentation, and spreadsheet software programs.
Principles of Macroeconomics An introduction to basic macroeconomic principles. Analysis of the determination of national income, employment, output, and prices.
Survey of World Civilization to 1500 A survey of major world civilizations from the earliest times to 1500.
Accounting Concepts I An introduction to the concepts, procedures, and ethical aspects of accounting and financial reporting as a basis for decision making. Financial accounting fundamentals including the accounting cycle, the elements of financial statements, and financial statement presentation are emphasized for service and merchandising organizations.
Introduction to Object-Oriented Programming A study of programming syntax and logic and the fundamental features of current programming languages. Students will learn to analyze, program, test, document, and maintain a variety of information systems solutions to business problems.
Statistical Process Control Theory and application of statistical process control including experimental design, X-Bar, R and P charts, and acceptance sampling.
Survey of World Civilization since 1500 A survey of major world civilizations from 1500 to present.
Accounting Concepts II Coverage of financial accounting for manufacturing organizations, as well as basic managerial accounting decision making concepts consisting of cost- volume-profit analysis and budgetary control.
Information Systems in Organizations A survey of information systems applications to support business processes, including operational, tactical, and strategic applications. Emerging and pervasive hardware, software, telecommunications, and data resource management technologies are emphasized. Security, ethics, global/international aspects, and systems integration issues are considered using the information systems (IS) framework.
The Legal Environment of Business The study of public and private law impacting business, including the sources of US law and its system of jurisprudence, the US constitution, criminal law, international transactions, business ethics, contracts, business organizations, agency and employment law, consumer protection, real property and land use, torts, and product liability.
Statistical Analysis for Business Application of statistical analysis to problems in business and economics. Simple and multiple regression and correlation analysis, decision making under uncertainty, time series, and nonparametric statistics.
Principles of Microeconomics An introduction to the price system and theory of the firm. Application of microeconomic theory to current economic issues.
Systems Analysis and Design An introduction to the strategies and technologies for developing information systems (IS) within organizations. Emphasis is placed on the concepts, methodologies, and tools associated with the analysis, design, and implementation of successful systems.
Advanced Object-Oriented Programming An advanced programming course with an emphasis on object-oriented methodologies and concepts for solving complex business problems. This indepth study of program data structures, algorithms, design patterns, and best practices in software development includes advanced elements from object-oriented programming languages.
Principles of Management A basic course in general management designed to acquaint the student with the theories and principles of organization as they are developing in modern society.
Principles of Marketing This course is an introduction to the language and issues of marketing. The course focuses on basic marketing concepts, the role of marketing in the organization, and the role of marketing in society.
Managerial Communications The study of communication theory and its application to business is the main focus of this course. Emphasis is placed on planning and preparing effective written and electronic communication as well as nonverbal and oral presentation skills. Other course components include teamwork, global and ethical communication, and employment document preparation.
Database Development and Management An introduction to the theory and practice of database design and processing within the information systems (IS) framework. This includes fundamental design concepts, technical aspects, and components of relational databases and database management systems (DBMS), and use of specific DBMS software. Emphasis is placed on the importance of the management and effective use of the data resource within an organization.
IT Infrastructure Introduction to IT infrastructure and data communications including terminology, components, and models. Communication protocols, network architectures, network security, and network operating systems are included. The management of communications networks is examined.
Financial Management Valuation of stocks and bonds; risk and rates of return; topics in capital budgeting, cost capital, working capital management, and ratio analysis
International Business This course is an advanced survey of management practices and styles in developed and developing nations along with a study of the growing opportunities and potential risks in the marketing of goods and services across international boundaries.
Operations Management A survey of production-operations management functions, both manufacturing and service, which focuses on the business processes that organizations utilize to produce and deliver its goods and services.
Web Development Introduction to Web development (design HCI and creation) using current standards for client-side content delivery (e.g., HTML and CSS). Students will learn to create and publish a multi-page, static-content website using associated applications. Special focus is given to user interface design, data presentation, and data organization.
Web Development Introduction to Web development (design HCI and creation) using current standards for client-side content delivery (e.g., HTML and CSS). Students will learn to create and publish a multi-page, static-content website using associated applications. Special focus is given to user interface design, data presentation, and data organization.
Enterprise Architecture A study of the design, implementation, and management of enterprise information systems. The course focuses on the development, maintenance, and management of systems that support business processes. Students are exposed to a wide range of tools, standards, and topics such as security, ethics, system administration, distributed computing, middleware, multi-tier architectures, interoperability, legacy system integration and emerging technologies. Agile software engineering methodologies, tools, and techniques are discussed and employed.
Projects in Information Systems This course integrates theoretical concepts and practical skills gained in previous information systems courses into a capstone information systems project. This course presents real- world problems through case studies and projects while emphasizing the student’s communication, collaboration, technical, and problem solving skills.
Information Systems Seminar Current problems in information systems through the reading of periodicals, government publications, books, and Web pages which have had a profound effect on the rapidly changing technology.
Introduction to Organic and Biochemistry Includes an introduction to organic chemistry and biochemistry.
Introduction to Organic and Biochemistry Laboratory. Introduction to Organic and Biochemistry Laboratory.
General Chemistry. The fundamental principles and laws governing inorganic substances. Introductory materials, subatomic and atomic theory and structure, chemical bonding, molecular structure, chemical equations and calculations, thermochemistry, kinetic theory of matter and gas laws, and the periodic table
General Chemistry Laboratory Consisting of the determination of densities, chemical formulas, combining ratios, molar masses, molecular structure, group reactivities, ion identities, and specific heats and heats of solution.
Survey of British Literature The development of English literature as an expression of English culture from Beowulf through Neoclassicism.
Art Appreciation A broad study of the contemporary visual arts by means of illustrated lectures, gallery visits, and studio demonstrations.

First-Year Seminar This course explores how scientific and technical professionals approach significant issues such as faith and religion. Students will engage in service learning, as well as discuss and reflect upon aspects of philosophy and theology that relate the typical approaches taken by technically-oriented persons toward issues of belief and spiritual practice. Materials include aspects of Catholic Social Teaching relevant to technical and scientific professionals.
Problem Solving and Computer Prog. The course focuses on problem solving and its relationship to computer programming. The student is introduced to the tools for developing the solution to a problem, and its subsequent implementation as an algorithm in a computer program. Once the introductory concepts of computer algorithm development have been assimilated, the student progresses to creating programs in the Java programming language including sequence, condition, iteration, functional decomposition and object use.
Problem Solving and Computer Prog. Lab The course focuses on problem solving and its relationship to computer programming. The student is introduced to the tools for developing the solution to a problem, and its subsequent implementation as an algorithm in a computer program. Once the introductory concepts of computer algorithm development have been assimilated, the student progresses to creating programs in the Java programming language including sequence, condition, iteration, functional decomposition and object use.
Calculus 1 Limits; derivatives of algebraic and trigonometric functions; graphing; related rates; optimization problems
Introduction to Networks The theory and techniques of data communications design and analysis are studied. Topics include data communication concepts, terminology, and standards. Error correction and detection, LANs, ISO/OSI layers are also an integral part of this course.
College Composition The principles of logic, rhetoric, and language and their use in written discourse. Application of these theories to numerous reading and writing assignments. Much attention to basic writing skills.
Foundations of Theology and Christian Morality Rooted in the richness of the Catholic Intellectual Tradition, this course explores the religious experiences of the human person and their relationship to Christian moral living.
Object-Oriented Programming The course is aimed at developing advanced object-oriented programming skills, and assumes a foundation in the basic syntax of Java. The student will explore the basis of software development using the major constructs of encapsulation, polymorphism, inheritance and dynamic binding. Topics include GUI objects, event-driven programming, threading, networking and exception handling.
Object-Oriented Programming Lab The course is aimed at developing advanced object-oriented programming skills, and assumes a foundation in the basic syntax of Java. The student will explore the basis of software development using the major constructs of encapsulation, polymorphism, inheritance and dynamic binding. Topics include GUI objects, event-driven programming, threading, networking and exception handling.
Calculus 2 The definite and indefinite integrals; applications of integration; techniques of integration; calculus of the exponential, logarithmic, and other transcendental functions.
Critical Analysis & Comp. Development of the reading, research, and writing skills needed to use library resources to solve problems in a variety of disciplines, and relate these solutions to appropriate audiences.
Introduction to Philosophy An introduction to the study of philosophy. Beginning with the dawn of philosophical awareness among the ancient Greek philosophers, the course surveys both traditional and modern approaches to the philosophical understanding of the human condition.
Data Structures & Algorithms Data Structures and Algorithms An in-depth programming-based study of data structures and of algorithms for their manipulation. Arrays, tables, stacks, queues, trees, linked lists, sorting, searching and hashing are topics considered.
User Experience This course deals with the study of the user experience (UX), and its relationship to human computer interaction. This course includes identifying and assessing usability issues, particularly as they apply to computer-based systems. Includes coverage of UX goals and processes, usability factors and measurements, wireframes and other prototyping technologies, and introductory web implementation. Special attention is given to usability and usability testing.
Probability and Statistics 1 Enumeration, probability, independence, probability distributions, random variables, expectation, mean, variance, moment generating functions, Central Limit Theorem, sampling distributions, and other selected topics.
Discrete Mathematics 1 Logic, sets, methods of mathematical proof, functions, mathematical induction, counting methods, recurrence relations, graphs.
Mobile Application Development I This is an introductory course into the methods and tools for developing mobile applications for integrated devices such as iOS, Android and other mobile computing platforms. Topics include introduction to the coding and development platforms for one of the major mobile platforms (e.g., iOS or Android), unit testing, source code control, the development of prototype applications, and deployment
Object-Oriented Design Lab An advanced treatment of methods for producing a software design. Includes treatment of the developing Unified Modeling Language (UML) models and their application to software development.
Database Management & Admin Develop skills in query statements usage for programming, database design, as well as implementing and managing SQL servers. The core concept of SQL database design, usage and server configuration will be first introduced. Query statements for programming and SQL server management will be substantially taught. Essential skills for administrating a database are covered.
Algorithm Development Lab Algorithm Development Lab
Discrete Mathematics 2 Algorithms, relations, topics in graph theory, tree traversal, spanning trees, Boolean algebra, logic gates, circuits, automata, Turing machines.
Computer Architecture This course is for understanding the interactions between computer hardware and software, Von-Neumann and Harvard architectures, hardware, software and system performance measurement, and instruction-set architecture (ISA). In particular, this course offers students the opportunity to understand and enrich their capability to interface between software (e.g., computer instructions and assembly language programming) and hardware (e.g., computer arithmetic, processor control and data manipulation, memory hierarchy and performance, and I/O subsystems) components.
Mobile Application Development II A project-based course for developing mobile applications for integrated devices such as iOS, Android and other mobile computing platforms. Includes introduction to the coding and development platforms for one of the major mobile platforms (e.g., iOS or Android), unit testing, source code control, and deployment includes the development of useable applications.
Numerical Analysis Taylor polynomials, machine representation of numbers, computational error, interpolation, root finding, systems of linear equations, curve fitting, numerical differentiation and integration.
Formal Methods in Software Development Focusing on the issues and techniques needed to apply formal specification methods to the development of software, the course uses mathematical and logical formalism to develop a precise statement of what software is to do
Requirements & Project Management Focusing on the management of software requirements and projects, particularly teams andstakeholders, the course includes coverage of requirements elicitation, analysis, documentation, and negotiation. It also includes the roles and methods of effective technical project management. Typical coverage includes the cost of quality, and its implications for requirements and project management.
CIS Leadership Seminar The Leadership Seminar introduces students to a three-dimensional model of leadership, including a repertoire of leadership skills and means of using those skills responsibly in the various communities to which they belong. In addition, the course helps students explore the relevance of leadership skills in the leadership process.
Linux Programming This course introduces the students to the Linux boot and login processes, basic process management techniques, file system, user controlled software build process, and basic application software architecture using the operating system. This course applies the concepts of shells, shell programming, controlling tasks developed with high-level programming languages to understand co-operating tasks by using signals and inter-processing communication (IPC).
Software Testing & Quality Assurance The course focuses on the issues, techniques, strategies, representations and patterns used to implement a software component or a large-scale system. Specifically, it emphasizes the defining architectures that conform to functional requirements and that work within defined constraints including resource, performance, reliability, and security.
Project Economics This course develops the techniques necessary for understanding economic price theory, the time-value of money, and the basic issues surrounding organizational architecture. These include issues surrounding supply and demand, cost-production, decision making and market models. In particular, the course focuses on the application of these economic theories to projects, including issues surrounding risk analysis and triage, budgeting, planning, and scheduling necessary to the successful completion of a project.
Technical Communication This course is an introduction to the exploration of the procedures of preparing a public speech with emphasis on personal credibility, audience analysis, and effective delivery techniques. This course fulfills Gannon University’s Liberal Studies Speech requirement for students enrolled in programs approved by the Liberal Studies Committee.
CIS Professional Seminar The course focuses on current issues facing engineering and software professionals. Included with the focus, is an introduction to technical speaking as well as a review of trends in the software, computing and other engineering fields, job prospects, political issues, team and workplace behavior.
History Without Borders This course chronicles the West’s interaction with the world from the fifteenth century to the present. Particular attention will be paid to the West’s interaction with the non-Western world. In the course of understanding the process of globalization, students will encounter Asian, Latin American, African, and Western perspectives.
The Bible: An Introduction Students will explore the structure, theological themes, literary forms, and historical context of the Judeo-Christian Bible using methods of Biblical interpretation.
Software Architecture The course focuses on the issues, techniques, strategies, representations and patterns used to implement a software component or a large-scale system. Specifically, it emphasizes the defining architectures that conform to functional requirements and that work within defined constraints including resource, performance, reliability, and security
Philosophy of God An introduction to the philosophical study of God, based largely on the tradition of Christian philosophy.
Senior Design I The Liberal Studies senior capstone is the culminating experience of the Core curriculum and therefore requires students to integrate knowledge and skills from their major study areas, Liberal Studies courses, and co-curricular experiences.
Operating Systems An introduction to the study of operating systems. Topics covered include: process manipulation and synchronization, processor management, storage management, security, I/O and file systems, and basic distributed system concepts
Software Maintenance & Deployment Introduces the concepts and approaches for the maintenance, refactoring and deployment of software projects, particularly in a rigorous life-cycle process. Focuses on materials associated with software maintenance, process, metrics and quality related to the development, improvement and deployment of high-quality software and systems. The course includes significant project work where students apply a rigorous process to deploy a refactored software product with improved features and quality
Philosophy of Ethical Responsibility The subject matter of ethics is “the good life and how to live it.” Students will examine a variety of influential approaches to ethics, and will gain skill in applying ethical theory both to practical ethical issues in daily life, and to some of the urgent ethical issues in contemporary society
System and Network Security The course reviews standard computer security for desktop and server-based systems. Coverage includes network security issues and techniques. Ethical hacking and defenses against unethical hacking and other computer and network intrusions are discussed.

Introduction to Computing In this course, students learn computational problem-solving techniques through the process of design, implementation, testing, and documentation using the programming language Python. The main ideas of computing are explored and students learn the most essential information about computers and technology in today's digital world and the latest computing trends and skills.
Fundamentals of Engineering This course provides core engineering knowledge and competencies in a highly interactive class format. Topics include professional skills such as technical writing and presentation, guidelines for professional engineering practice, and career preparation. Introduction to the fields, roles, and industries of engineering also serves as a basis for selection of engineering major field.
Calculus I  This course covers analytic geometry, continuous functions, derivatives of algebraic and trigonometric functions, product and chain rules, implicit functions, extrema and curve sketching, indefinite and definite integrals, applications of derivatives and integrals, exponential, logarithmic and inverse trig functions, hyperbolic trig functions, and their derivatives and integrals.
Fundamentals of Programming This course introduces programming constructs and techniques in a logical progression beginning with small problems and basic algorithms through larger scale programs and design. While not an object oriented course, classes and objects are used in an ancillary capacity while working on broader topics of software architecture.
Introduction to Rhetoric and Composition This course introduces students to the academic discipline of rhetoric and composition. Students read nonfiction texts, including rhetoric and composition and cross-disciplinary scholarship, in order to analyze their conventions and craft texts in various genres and modalities for a range of audiences.
Calculus II  This course covers applications of the integral to area, arc length, and volumes of revolution; integration by substitution and by parts; indeterminate forms and improper integrals: Infinite sequences and infinite series, tests for convergence, power series, and Taylor series; geometry in three-space.
Introduction to Philosophy This course is a topical introduction to philosophy. The aim of the course is to introduce students to the vocation of wonder and questioning by engaging students in discussions about some of the basic questions of philosophy.
Programming Workshop This course covers advanced programming concepts in one or more current programming languages, including syntax and theories. It prepares students for adapting to various programming environments and coding in an efficient manner.
Programming Workshop Lab This lab accompanies the Programming Workshop course for hands-on practice with course concepts.
Computer Science Sophomore Clinic This sophomore clinic provides faculty guidance and supervision beyond the scope of existing courses. Students learn how to develop and structure their deliverables, as well as how to use computer science tools in the context of real-world or research projects.
Web Development This course introduces the student to developing applications for use on the World Wide Web. Students learn basic n-tier concepts for designing distributed applications and gain hands on experience through the construction of Web-based applications. The course covers concepts that allow communication over the Web. This includes designing and authoring Web pages, markup languages, the client-side document object model, usability, search engine optimization, and client-side dynamic Web pages.
Discrete Mathematics Topics in this course include logic, sets, functions, equivalence relations and partitions, mathematical induction, and countability.
Digital Design I An introduction to computer hardware design. Topics include: digital design principles, Boolean algebra, combinational logic design, sequential logic design, registers, counters, memory, multiplexers, finite state machines, radix conversion, and programmable logic devices.
Digital Design I Lab This lab course covers the practical aspects of digital logic design.
Data Structures This course covers abstract data structures such as queues, stacks, heaps, linked lists, trees, graphs, hash tables, and sorting.
Data Structures Lab This lab accompanies the Data Structures course for hands-on practice with course concepts.
Computer Systems Architecture This course introduces the machine language and various components of a computer hardware in modern computer systems. The course focuses on CPU, memory, bus, cache, I/O module, internal data representation, and instruction set design. It also covers pipelining, superscalar architecture, reduced instruction set computers, parallel architectures, and interconnection networks.
Design and Analysis of Algorithms This course introduces various algorithms and analyzes the complexity and efficiency of the algorithms. Topics cover classic and heuristic algorithms, searching, sorting and parsing techniques, and algorithm complexity analysis.
Computer Science Junior Clinic I This first junior clinic provides faculty guidance and supervision beyond the scope of existing courses. Students learn how to develop and structure their deliverables, as well as how to use computer science tools in the context of real-world or research projects.
Software Engineering Methods This course explores the requirements gathering, system analysis, and software design methods of software application following the software processes required for the production of high quality software. Techniques for creating documentation and using software development tools will be presented. Students will gain experience in software project management, requirements, analysis, and safety issues in software development, interpersonal skills for management and team membership, and the software engineering discernment of systems architecture.
Introduction to Cybersecurity In this course, students will be given an extensive overview of the various components of cybersecurity, including software development, operating systems, databases, and networks. Students will learn cybersecurity concepts, issues, and tools that are critical in solving problems in the computing security domain. The course will use lectures, reading assignments, and interactive lab exercises to reinforce the concepts that are introduced.
Computer Science Junior Clinic II This second junior clinic provides faculty guidance and supervision beyond the scope of existing courses. Students learn how to develop and structure their deliverables, as well as how to use computer science tools in the context of real-world or research projects.
Theory of Programming Languages Topics in this course include the design of programming languages; organization, control structures, data structures; run time behavior of programs; and formal specification and analysis of programming languages. The course includes a comparative survey of several significantly different languages.
Software Design Methods Through the use of case studies and project work that has the student gradually building a large design specification, students will achieve an understanding of how complex applications are designed and built.
Senior Design Project I In this capstone course, students work in teams on advanced projects that emphasize engineering design with due attention to design constraints and engineering standards. The overarching scope of this course is to transform engineering students to practicing engineers.
Senior Design Project II In this capstone course, students work in teams on advanced projects that emphasize engineering design with due attention to design constraints and engineering standards. The overarching scope of this course is to transform engineering students to practicing engineers. Under the guidance of a faculty instructor and a mentor, each team conducts literature searches, write a technical proposal and its members develop skills in information analysis and synthesis; they model and test prototypes of their devices, and make frequent oral and poster presentations of their work to faculty and peers, and submit timely progress reports.
Agile Software Engineering In this course, students apply in-depth techniques and experience various roles incorporated into one of the main approaches to software development which is agile methodology. It uses detailed knowledge about each of the major traditional software engineering phases to explore a more iterative approach for development of faster and more adaptable software.
Software Testing and Maintenance This course will cover in-depth methods for software testing, reliability and maintenance of software. Students will learn the principles of software testing and how to apply software testing techniques to the development of quality software and how to deploy software systems, maintain, enhance, and reuse software systems.
Special Topics This course provides an in-depth study of selected topics in software engineering of particular interest to the students and instructor. The course is counted as a major elective/specialization course.
Computational Biology This course is designed to benefit computational and experimental biologists to understand the principles of analyzing biological data, building models and testing hypotheses using computer science paradigms. Students will learn how to build computational tools that are used to analyze DNA content, identify protein binding patterns, compare sequences, and discover variation within genomes.
General Biology I Lab General Biology I Lab
General Biology II Lab General Biology II Lab
Precalculus Topics in this course include: algebra; linear, rational, exponential, logarithmic and trigonometric functions from a descriptive, algebraic, numerical and graphical point of view; limits and continuity. Primary emphasis is on techniques needed for calculus.
Religion and the Critical Mind This course examines some of the themes in the study of religion and offers a comparative analysis of the nature, function, and purpose of religion as found in a variety of models of religion. A wide variety of contemporary religious practices will serve as discussion points for scholarly analysis.
Origins of the Modern World Since 1500 This course, which examines the history of Europe and its relationship to the world from the end of the Middle Ages through the 19th century, emphasizes the cultural, social, economic, and political forces and structures that led to the development of commercial and industrial capitalism, and the effects of this development on Europe, the New World, Asia, and Africa.
General Chemistry I A general overview of chemistry, including principles and theories as well as descriptive chemistry of important elements and compounds.
Introduction to Computer Science I This course is an introduction to basic concepts of computer science, with emphasis on programming. Computer programming is to the study of computer science what writing is to the study of literature. It is a primary tool for implementing algorithms in computer science. Fundamental techniques for software design and implementation will be covered and these concepts demonstrated in a programming language like C++.
Introduction to Engineering Use of the Computer Introduction to computer programming using equation solving software applied to engineering problems.
Engineering and Society Engineers apply scientific knowledge and principles, and use the engineering design process to develop technology. While engineers frequently develop solutions to problems in controlled environments, the products that are developed are used by 'real people' in the 'real world.' Thus, it is essential that engineers have an understanding o the interactions between engineering, technology development, and society.
Calculus I Functions and graphs; derivative concept and formulas, including chain rule and implicit differentiation; integral concept; the Fundamental Theorem of Calculus; properties and applications of the derivative, including max-min problems and graph sketching; exponential, logarithmic, and inverse trigonometric functions.
Calculus II roperties and applications of the integral, including areas, volumes, arc length and differential equations; integration techniques, including parts, partial fractions, trigonometric substitution, and numerical integration; indeterminate forms; improper integrals; infinite series and Taylor series; introduction to polar coordinates, complex numbers, and parametric equations.
Physics I Calculus-based general physics course covering elements of Newtonian mechanics and thermal physics. Laboratory experiments keyed to the lectures to illustrate and demonstrate some of the physical principles and concepts.
Physics II Calculus-based general physics course covering elements of electricity and magnetism, waves and optics. Laboratory experiments keyed to the lectures to illustrate and demonstrate some of the physical principles and concepts.
Programming Languages This course examines the major paradigms underlying modern programming languages. The course currently focuses on objectoriented and logic programming. The rationale of the paradigms is discussed along with typical programming idioms used with them.
Algorithms and Data Structures The course also introduces the basic formalism and concepts used in the analysis of algorithms.
Operating Systems This course is an introduction to the concepts of operating systems, their structures and organization. Major topics include process management (asynchronous processes, interprocess communication and synchronization, multithreading, deadlock and starvation, scheduling), storage management (paging/segmentation, virtual memory, file systems), protection and security issues, and an introduction to distributed systems.
Formal Methods for Program Verification Formal methods are algorithms and techniques that actually prove that a program meets its design criteria, and are the only way to guarantee that a program works correctly. As computer software increases in size and complexity, formal methods are becoming an essential part of software engineering. This is especially true of safety critical and life critical systems, where software errors can have life threatening consequences
Linear Circuits Steady state response of linear circuits to both sinusoidal and periodic inputs. AC steady-state power. Magnetically coupled circuits. Network functions, transfer functions, gain and phase shift. Bode plots. Fourier series. Laplace transform. The relationship between the time and frequency domain solutions.
Embedded Systems An introductory course covering the fundamentals of microcontroller hardware and software. Topics include microcontroller systems, input/output (I/O) standards and data communication protocols, interfacing with memory systems and sensors, data collection, display, and control of peripheral modules and actuators. The microcontroller will be programmed in the C programming language. Interfacing assembly language to high level language code will be treated as well.
Intro to Object-Oriented Programming and Software Design A thorough introduction to Object Oriented Programming, including classes, inheritance and subtyping, overloading, and overriding. Dynamic memory management. Debugging. Introduction to Testing Driven Development. Introduction to fundamental data structures.
Introduction to Digital Design An introductory course covering the fundamentals of computer system hardware. Topics include data representation using number systems and codes, Boolean algebra and logic, digital logic devices, combinational and sequential circuits, arithmetic logic units and simple processor organization including registers, memory, addressing and processing of machine instructions.
Fundamentals of Software Engineering This is a foundation course in the design of computer software. It covers fundamental techniques and methodologies for software design and implementation. Topics include the software engineering life cycle, object-oriented design, data and procedural abstraction, recursion, iteration, file I/O, and elementary data structures.
Software Components and Generic Programming This course is concerned with software design principles that foster creation of reusable software components. Topics include abstract data types, behavioral inheritance and subtyping, generics, interface design, dependency injection, and analysis of algorithmic behavior. Students will gain experience with software development best practices including design of test scenarios, unit testing, code reviews, refactoring and version control in the context of a modern integrated development environment.
Software Engineering Study of the principles and practices of software engineering. Topics include software quality concepts, process models, software requirements analysis, design methodologies, software testing, and software maintenance. Hands-on experience building a software system using the waterfall life cycle model and CASE tools. Students working in teams develop all life cycle deliverables: requirements document, specification and design documents, system codes, and user manuals.
Computer Networks This course covers layered networking protocols with an emphasis on common Internet protocols such as TCP, IP, HTTP, and SMTP. It also covers local area networking, focusing on link layer standards such as the IEEE standards for Ethernet and wireless.
Software Design For Visual Environments This course is an introduction to object-oriented, event-driven windowing environments. The primary focus will be interface design and development, with an emphasis placed on the event-driven paradigm. Topics will include: a thorough investigation of the underlying windowing framework selected, an examination of static and dynamic control objects used for system input and output, virtual functions, multithread programming, code synchronization and locking, and resource sharing.
Software Engineering Senior Design Working in a team environment, students will design and develop a complex software system. Using sound software engineering techniques, the students will take a conceptual idea for a software system and turn it into a well-engineered product.
Software System Architecture A study of system software components in the context of a modern operating system such as UNIX, together with the necessary tools and utilities for software development. Topics will include software development tools, operating system interfaces and utilities, and network access methods. Emphasis will be placed on conceptual understanding and practical use of system software components rather than on detailed implementation.
Computer Architecture A study of modern processor system architecture including set design and performance enhancement of computer systems will be discussed. Topics include pipelining, cache organization, memory management, and multiprocessors. Tradeoffs in system design and the impact of hardware/software interactions will be discussed.
Database Systems An introduction to database systems. The entity-relationship and relational models are presented and applied to the design of typical databases. New developments in objectoriented and multimedia databases are presented.
Electrical Science Network concepts. DC circuits: mesh and node equations, network theorems, operational amplifiers. Complex numbers, effective values, sinusoids and phasors. AC circuits: phasor diagrams, power. Time domain solution of first order circuits.
Foundations A transitional course between the technique-oriented lower level courses and the concept-oriented upper level courses in both mathematics and computer science. Logic, numbers, sets, functions, equivalence relations, completeness, combinatorics. Additional topics may include probability and number systems.
Calculus III Vectors and vector-valued functions; functions of several variables; partial differentiation, including the chain rule, gradients, and maxima and minima; multiple integration, including polar, cylindrical, and spherical coordinates; vector calculus, including Green's, Divergence, and Stokes's Theorems.
Elementary Differential Equations Solutions and applications of first-order differential equations and linear differential equations with constant coefficients. Laplace transform methods. Introduction to matrix algebra, systems of algebraic equations, eigenvalues and eigenvectors, with application to systems of differential equations.
Probability Sample spaces; axioms of probability; basic theorems; random variables (discrete and continuous); combinatorial methods; Bayes' Theorem and conditional probability; expected values and variances; distribution functions, including: binomial and multinomial, Poisson, normal and bivariate normal distributions, and others such as geometric, hypergeometric, negative binomial, exponential, gamma and beta; joint distributions; covariance and correlation; central limit theorem; geometric probability; method of transformations; introduction to stochastic processes.
Probability and Statistics A calculus based introduction to topics in probability and statistics. Probability content includes events and sample spaces, the basic axioms of probability, discrete and continuous random variables (definitions and basic characterizations such as the means and variances) including binomial, Poisson, normal, exponential, studentt, and uniform distributions. Topics in statistics include the central limit theorem, statistical inference including confidence intervals and hypothesis testing for one and two sample data, and linear regression.
Professional Experience for Engineering Majors This course number is used to matriculate the Professional Experience requirement of the Clarkson Common Experience curriculum. The student must participate in a project-based professional experience such as a co-op, internship, directed research, significant responsibility in an appropriate team project, or a community project clearly related to the student's professional goals.
Advanced Programming Concepts in Java Topics will include basic object-oriented programming design, graphical user interfaces (GUIs), exception handling, multithreading and synchronization, networking, and client/server applications. The programming language Java with its companion OOP/GUI libraries will be used to illustrate these topics.
Dynamical Systems Dynamic systems classification, mathematical modeling of mechanical, electrical and mixed dynamic systems, state space representation, equilibrium points and linearization, solution of linear input/output and state equations, Laplace transforms, transfer functions and block diagrams, first and second order systems, stability, frequency response and simulation techniques.
Energy Conversion Properties of magnetic materials. Magnetic circuits and transformers. Fundamentals of rotating magnetic-field machines. Synchronous machines. Induction machines. Phasor diagrams and equivalent circuits of transformers, induction machines and transformers. DC machines.
Power System Engineering Transmission line and transformer models. Per unit. Power transfer equations and their solution and interpretation. Maximum power transfer. Symmetrical components and fault current calculation. Computer analysis methods for power systems.
Microelectronics Theory of semiconductor materials, p-n junctions, bipolar and field effect transistors. Analysis of device characteristics, device modeling and equivalent-circuits. PSpice simulation of electronic circuits. Applications including study of biasing, low frequency amplifiers, switching circuits and digital logic operations.
Digital Circuit Design   This course provides a knowledge and facility in logic design, interfacing digital circuits, Boolean algebra, combinatorial logic circuits, circuit minimization techniques, flip-flop storage elements, shift registers, counting devices, sequential logic circuits, state machines and computer structure..
Digital Circuit Design Laboratory   Laboratory experiments in the measurement and verification of digital circuits. Discrete and integrated logic circuit design analysis and measurements.
English Composition  This course focuses on the principles of using writing for thinking, as well as a tool for expressing ideas. It addresses the composing process, research and documentation, and rhetorical strategies for various audiences and purposes. Students develop their communicative, evaluative, critical thinking, and research writing abilities. Daytona Beach students need C or better is required.
Speech  Individual sections may focus on public speaking, group discussion, oral interpretation, or interpersonal communication.
Computer Science I   Introduction to problem-solving methods, algorithm development, and software engineering; software development process, program design, coding, review, testing, and documentation; and programming using a modern programming language that supports modular development. The course has a closed laboratory that includes activities dealing with the computing environment, the software development process, and programming exercises.
Introduction to Engineering   This course is an introduction to the interdisciplinary aspects of the engineering of aerospace systems. It is a project-based course, demonstrating how the engineering profession is a multi-disciplinary field. Students are involved in an array of conceptual exercises, simple design activities, and projects dealing with engineering in aerospace-related areas.
Introduction to Computing for Engineers   This is an introductory course in programming and computing for scientists and engineers. The course introduces students to the following aspects of software engineering: specification, requirements, design, code, and test. This course uses a problem-solving approach for developing algorithms. The following topics will be included: data types and related operations, looping, decision, input/output, functions, arrays, files, and plotting.
Physics I & II for Engineers   This calculus-based course explores vectors and scalar quantities, kinematics, Newton?s Law of Motion, work, work-energy, conversion of energy, conversion of momentum, center of mass and its motion, torque, equilibrium, orbital motion, rotational motion, simple harmonic motion, waves, and introductory thermodynamics.
Calculus and Analytical Geometry I   Limits and continuity; differentiation and integration of algebraic and elementary transcendental functions; applications of first and second derivatives.
Calculus and Analytical Geometry II   Differentiation and integration of transcendental functions; special integration techniques; applications of the definite integral; numerical methods; infinite series.
College Success  A course in which students assess and develop the personal, interpersonal, intellectual, and social skills necessary to succeed in college. Time management, study skills, goal clarification, career information, and college resources are included. This course is available to freshmen only.
Technical Report Writing   This course introduces students to the preparation of formal and informal technical reports, abstracts, proposals, instructions, professional correspondence and other forms of technical communication. Major emphasis is placed on the long technical report and the acquisition of advanced writing skills.
Computer Science II  This course emphasizes program design, style, data abstraction, information hiding, and testing; advanced programming features; and introduction to object-oriented concepts, basics of algorithm analysis, exception handling, string processing, recursion, pointers, and simple data structures. The course has a closed laboratory that includes activities dealing with the computing environment, the software development process, and programming exercises.
Data Structures and Analysis of Algorithms   This course emphasizes the design, implementation, and analysis of algorithms dealing with searching, sorting, graphs, trees, and disk files
Values and Ethics  This course focuses on the process of practical ethics as a way of resolving moral conflict and of understanding professional responsibility in a multiculturally diverse society without devaluating specific viewpoints of ethical or metaphysical theory, ideology, or religion. Students will use proposals, value judgments, observation statements, assumptions, and alternate-world assumptions in arguing contemporary issues of moral importance. With this basic moral logic, students will resolve issues in terms of rights, responsibilities, and the community of rational beings in terms of consequences and contingencies and in terms of habituated virtues and character. Free and unrestricted discourse will be encouraged to let students find common ground in diversity.
Exploring Film   A survey of the art of film. History of the cinema. Basic elements, photography, continuity and rhythm, movement, imaging, music and sound, script writing, directing, editing, acting, great film artists/directors, cinematographers, actors, etc.
Mythology  This course introduces the study of the myths of humankind, both ancient and modern, using perspectives and methods from archeology, anthropology, psychology, literature, and film. It explores what myths reveal about the human psyche and about historical and modern cultures. It builds facility in symbolic thinking and critical understanding of how this thinking influences contemporary literature, art, film, communication, and politics.
Introduction to Discrete Structures  An introduction to the fundamental algebraic, logical, and combinatorial concepts of mathematics that provides a foundation for the study of computer science.
Calculus and Analytical Geometry III   Solid analytic geometry; vector functions in three dimensions; partial differentiation; directional derivative and gradient; line integrals; multiple integrals
Physics for Engineers III   This course is a calculus-based study of the fundamental principles of classical mechanics. It is the third course of a three-semester sequence, intended for students of science and engineering and is designed to provide the student with an appropriate background for more advanced physics and engineering course work. Topics of discussion include electric forces; electric field; Gauss's law; Ohm's law; Ampere's law; Faraday's law; Lenz's law; Kirchhoff's law and Maxwell's equations; electric potential and electrostatic potential energy; capacitance; simple DC circuit theory; magnetic force, magnetic field; inductance; electromagnetic oscillations and wave propagation; linear accelerators; and cyclotrons.
Physics Laboratory for Engineers   Primarily lab report writing workshop, error analysis, damped harmonic oscillations, spectrometers, optics, atomic physics, thermodynamics and circuit theory.
Software Engineering Practices   This variable credit course introduces students to the fundamental principles and methodologies of large-scale software development. Students learn about the theory and practice of software engineering and work as part of a team on a full life-cycle software project that includes planning, software specification, software design, coding, inspections, and testing.
Microprocessor Systems   Study of digital computer organizations. Introduction to microcomputer systems using a current microprocessor. Assembly language programming techniques for microcomputers will be used to study digital computer operation. Input and output techniques, memory devices, RS 232, and other interfacing techniques will be studied. Hardware and software relationships will also be discussed.
Microprocessor Systems Laboratory  Hands-on experience with a microprocessor is provided through weekly experiments involving hardware and software techniques.
Computer Architecture   This course describes in detail the Von Neuman computer architecture, which includes processors, memory, input/ output, and transfer of information; examples of machine language, assembly language, microprogramming, and operating systems will be discussed. Additional topics in advanced computer architecture and computer systems will be covered.
Files and Database Systems   Introduction to file and database systems. The course will cover the theory of database systems, various database models, and the design of a database system. Course homework will reflect real-life problems requiring cooperation, problem formulation, and problem-solving skills. A team/group term project may be assigned.
Organization of Programming Languages   A comparative study of different programming paradigms. Students program in several languages chosen to illustrate the essential features of the paradigms studied. Formal language concepts are also introduced.
Operating Systems   Development, structure, and functions of operating systems; demand service models; development of concurrent models.
Differential Equations and Matrix Methods   Treatment of ordinary differential equations to include principal types of first and second order equations; methods of substitution on simple higher order equations; linear equations and systems of linear equations with constant coefficients; methods of undetermined coefficients and variation of parameters; Laplace transforms; series solutions; linear algebra and matrix methods of solutions; and applications to physics and engineering.
Probability and Statistics   Finite sample spaces; conditional probability and Bayes Theorem, discrete and continuous random variables and their functions; expected value, variance, and standard deviation; systematic study of the major discrete and continuous distributions; moment generating functions; hypothesis testing and estimation.
Analysis and Design of Software Systems   This course focuses on the fundamental methods employed in the analysis and design of software systems. Analysis is the process of determining a complete and consistent set of system requirements. Design is the process of producing a system architecture, both logical and physical, and determining an appropriate way to construct the software. The result of these processes is a documented model of the desired system. The student will learn and practice methods appropriate for both object-oriented and procedural systems.
Software Quality Assurance   This course exposes the student to the key concepts and practices in software testing and quality assurance. The objective of this course is to introduce students to the concepts of software quality through testing, inspection, and walkthrough. The process of software testing and different testing techniques and methodologies will be covered. This course also covers topics related to the management of a testing project. Finally, different software-testing tools and their advantages and disadvantages will be discussed.
Special Topics in Software Engineering  Individual independent or directed studies of selected topics in software engineering.
Real-Time Systems   The course introduces the concepts of real-time systems from the user and designer viewpoint. The requirements, design, implementation, and basic properties of real-time application software are described with an overview of system software. Related topics such as interrupts, concurrent task synchronization, sharing resources, and software reliability are discussed. A team project on a real-time prototype application may be incorporated in the course.
Telecommunications Systems   Techniques and applications in telecommunications. Types of data communication versus line discipline methodology. Hardware requirements and constraints. Speed versus quality. Security and encoding algorithms.
Human-Computer Interfaces   This course introduces Computer Science students to several important aspects of how humans use computers and how software is designed for usability. Students are introduced to usability issues, graphical systems, and graphical interfaces.
Information and Computer Security   The course will start with an overview of the larger context of information security, including the "softer" aspects of personnel and operational security, and then delve into the technical basis and practical difficulties of COMPUSEC itself.
Engineering Economics   An introduction to microeconomic principles, problems, and policies as well as basic financial principles such as time value of money, capital budgeting, and cost of capital. The course will provide the engineering graduate with the tools needed for success in the workplace.
Software Construction   This course provides the student with advanced instruction in programming with an object-oriented programming language. The course objective is proficiency in use of a language widely used for general purpose software development. In addition, the student will be introduced to tools and processes appropriate for employing this language in a significant software development environment.
Software Team Project I Software Team Project I
Software Team Project II Software Team Project II
Fundamentals of Computer Science Basic principles of algorithmic problem solving and programming using methods of top-down design, stepwise refinement and procedural abstraction. Basic control structures, data types, and input/output. Introduction to the software development process: design, implementation, testing and documentation. The syntax and semantics of a modern programming language.
Accelerated Introduction to Computer Science Accelerated introduction to basic principles of algorithmic and object-oriented problem solving and programming. Introduction to programming language concepts including control structures, data types, classes, and inheritance. Program design principles. Use and implementation of algorithms (searching, sorting, recursion) and data structures (lists, stacks, and queues).
Data Structures Introduction to data structures and analysis of algorithms. Abstract datatypes. Specification and implementation of advanced data structures. Theoretical and empirical analysis of recursive and iterative algorithms. Software performance evaluation and testing techniques.
Introduction to Computing Use of a supportive software development environment to design, develop, and test applications in a selected topic domain that demonstrates the potential of careers in computing. An introduction to computing and to the selected topic domain.
Project-Based Object-Oriented Programming and Design Object-oriented programming and design with applications to project construction. Introduction to class design, interfaces, inheritance, generics, exceptions, streams, and testing.
Introduction to Computer Organization Introduction to computer systems. Simple instruction set architecture and the computer hardware needed to implement that architecture. Machine and assembly language programming.
Professional Responsibilities The responsibilities of the computer science professional. The ethics of science and the IEEE/ACM Software Engineering Code of Ethics. Quality tradeoffs, software system safety, intellectual property, history of computing and the social implications of computers in the modern world. Applications to ethical dilemmas in computing. Technical presentation methods and practice.
Individual Software Design and Development Practical software development skills needed for construction of mid-sized production-quality software modules, using the CSC upper division programming language.
Software Engineering I Principles for engineering requirements analysis and design of large complex software systems. Software process models. Methods of project planning, tracking, documentation, communication, and quality assurance. Analysis of engineering tradeoffs. Group laboratory project. Technical oral and written presentations.
Software Engineering II Continuation of the software lifecycle. Methods and tools for the implementation, integration, testing and maintenance of large software systems. Software development and test environments. Software quality assurance. Group laboratory project.
Discrete Structures Structures of computer science: logic, sets, relations, functions, graphs and trees. Propositional and predicate logic. Applications of predicate logic to preconditions, postconditions, and proof techniques. Complexity of algorithms.
Design and Analysis of Algorithms Intermediate and advanced algorithms and their analysis. Mathematical, geometrical, and graph algorithms. NP-complete problems. Additional topics will be chosen from pattern matching, file compression, cryptology, dynamic and linear programming, and exhaustive search.
Systems Programming C programming language from a system programming perspective. Standard C language including operators, I/O functions, and data types in the context of system functions.
Introduction to Database Systems Basic principles of database management systems (DBMS) and of DBMS application development. DBMS objectives, systems architecture, database models with emphasis on Entity-Relationship and Relational models, data definition and manipulation languages, the Structured Query Language (SQL), database design, application development tools.
Software Requirements Engineering Software requirements elicitation, analysis and documentation. Team process infrastructure and resource estimation to support appropriate levels of quality. Software architectural design.
Software Construction Design and construction of sizeable software products. Technical management of software development teams. Software development process models, software design, documentation, quality assurance during development, software unit and integration testing; CASE tools, development environments, test tools, configuration management.
Senior Project - Software Deployment Deployment of a sizeable software product by a student team. Software maintenance and deployment economic issues. Management of deployed software: version control, defect tracking and technical support.
Programming Languages Programming language design through evaluator implementation. Expressions, functions, environments, closures, mutation, objects, type systems, and syntactic abstraction. Syntactic, semantic, and static analysis properties.
User-Centered Interface Design and Development Introduction to the importance of user-centered principles in the design of good interfaces and effective human-computer interaction. Topics include: study of human characteristics affected by interface design, effective requirements data collection and analysis, user-centered approaches to software engineering, and evaluation of interface and interaction quality.
Personal Software Process Principles and practices for defining and applying software processes to individual software development tasks. Quantitative methods for the measurement and analysis of software development cost and quality. Interpretation and evaluation of process metrics for creation of improvement plans. Adaptation of processes to individual styles.
Teaching Computing An introduction to pedagogical methods and practical techniques for computer science education: selecting appropriate content, designing assignments and activities, evaluating student learning, and evaluating teaching efficacy. Hands-on guided curricular design activities and real-world practice.
Introduction to Computer Security Survey of topics in computer system and network security, including protection, access control, distributed access control, operating system security, applied cryptography, network security, firewalls, secure coding practices, and case studies from real-world systems.
Technical Writing for Engineers The principles of technical writing. Discussion and application of rhetorical principles in technical environments. Study of methods, resources and common formats used in corporate or research writing.
Engineering Economics Economic analysis of engineering decisions. Determining rates of return on investments. Effects of inflation, depreciation and income taxes. Sensitivity, uncertainty, and risk analysis. Application of basic principles and tools of analysis using case studies.
Calculus I Limits, continuity, differentiation. Introduction to integration.
Calculus II Techniques of integration, applications to physics, transcendental functions.
Calculus III Infinite sequences and series, vector algebra, curves.
Calculus IV Partial derivatives, multiple integrals, introduction to vector analysis.
Linear Analysis I Separable and linear ordinary differential equations with selected applications; numerical and analytical solutions. Linear algebra: vectors in n-space, matrices, linear transformations, eigenvalues, eigenvectors, diagonalization; applications to the study of systems of linear differential equations.
General Psychology Introduction to the psychological study of human beings. Applications and research in area such as psychobiology, perception, learning, motivation, consciousness, memory and cognition, personality, emotion, development, psychological assessment, social behavior, psychopathology and psychotherapy.
Teamwork Group dynamics applied to teams. Topics include team development, basic team processes, conflict management, decision making, leadership, problem solving, and the impacts of diversity and culture on teams. Focus on effective use of teams in the workplace.
Statistical Methods for Engineers Descriptive and graphical methods. Discrete and continuous probability distributions. One and two sample confidence intervals and hypothesis testing. Single factor analysis of variance. Quality control. Introduction to regression and to experimental design. Substantial use of statistical software.
General Biology Principles of cellular biology, heredity, ecology, biological diversity, and evolution, with emphasis on their relationships to human affairs. Not open for major credit in Biological Sciences, Microbiology or Marine Sciences.
Introduction to Cell and Molecular Biology Fundamentals of cellular biology with an emphasis on the molecular perspective of life: metabolism, photosynthesis, cell structure and reproduction, meiosis, immunology, classical and molecular genetics, gene regulation.
Life Science for Engineers Fundamentals of life sciences: energetics, cell biology, molecular and classical genetics, microbiology, organismal biology, and ecology.
Bioengineering Fundamentals Treatment of the engineering applications of biology. Genetic engineering and the industrial application of microbiology. Systems physiology with engineering applications. Structure and function relationships in biological systems. The impact of life on its environment. Course may be offered in classroom-based or online format.
General Botany The anatomy, physiology, reproduction, and importance of plants.
Microbiology Morphology, metabolism, classification, and identification; microbiology of air, soil, water, and foods with applications to industry, agriculture, medicine, and public health.
General Microbiology I Microbial cellular structure and function, nutrition and growth dynamics, control of microbial growth, metabolism, genetics, and viruses. Both prokaryotic and eukaryotic microorganisms emphasized. /Methods of Proof in Mathematics. Methods of proof (direct, contradiction, conditional, contraposition); valid and invalid arguments. Examples from set theory. Quantified statements and their negations. Functions, indexed sets, set functions. Proofs in number theory, algebra, geometry and analysis. Proof by induction. Equivalence and well-defined operations and functions. The axiomatic method.
Vector Analysis Differential and integral calculus of vector-valued functions. Green's Theorem, Stokes' Theorem, and the Divergence Theorem. Applications and generalizations.
Graph Theory Introduction to graph theory and its applications: isomorphism, paths and searching, connectedness, trees, tournaments, planarity, graph colorings, matching theory, network flow, adjacency and incidence matrices. Further topics to be selected from the theory of finite state machines, Ramsey theory, extremal theory, and graphical enumeration.
Combinatorial Math Methods of enumerative combinatorics: sum, product, and division rules, bijective and recursive techniques, inclusion and exclusion, generating functions, and the finite difference calculus. Advanced topics to be selected from the theory of partitions, Polya theory, designs, and codes.
Numerical Analysis I Topics in interpolation and approximation methods, initial value problems, and boundary value problems of ordinary differential equations
General Chemistry for Physical Science and Engineering I Stoichiometry, thermochemistry, atomic structure, bonding, solid-state structures, intermolecular forces, and foundational principles of organic chemistry.
General Chemistry for Physical Science and Engineering II. Topics include solution chemistry, thermodynamics, kinetics, equilibrium (including acids and bases), electrochemistry, and nuclear chemistry.
General Chemistry for Physical Science and Engineering III Topics in equilibrium, kinetics, acid-base chemistry, and molecular structure, contextualized within major sub-disciplines of chemistry.
Cryptography Engineering. An introduction to the theory and practice of building secure, cryptographic systems. Core cryptographic primitives. Implementation, evaluation and subversion of widely deployed cryptographic products and protocols.
Introduction to Privacy: Policy and Technology. Introduction to policies and technologies related to digital privacy. Legal decisions and policies, domestic and global cultural expectations, and privacy related technologies including applications to surveillance, big data, websites, mobile, and privacy by design.
Music Programming Music-producing programs. Software synthesizers: oscillators, coupled oscillators, wavetable synthesis. Sound processing units/filters: LTI, FIR, IIR, nonlinear. Physics of sound, mathematical foundations of sound synthesis and filtering, existing sound formats (both sampled and MIDI).
Database Modeling, Design and Implementation The database modeling problem. Database modeling levels: external, conceptual, logical and physical. Database models: entity-relationship, relational, object-oriented, semantic, and object-relational. Normal forms. Distributed database design. Functional analysis of database applications and transaction specification, design, and implementation.
Introduction to Distributed Computing Introduction to distributed computing paradigms and cloud computing. Modern distributed computing infrastructures. Problem-solving in a distributed computing environment.
Game Design In-depth study of game design including rules, player interaction, and storytelling. Exploration of effective use of sound, art, and game controls in creating meaningful play. Development of fully functioning and engaging games, following standard domain-specific software development processes and using physical prototyping and playtesting. Current, industry-tested game engines.
Introduction to Mixed Reality Project-based study and application of Mixed Reality (MR) topics including integrated mixed reality development environments, Human Computer Interaction (HCI) peripherals, 3D environment scanning, physics interaction, diminished reality, motion capture, facial recognition, and visualization hardware.
Interactive Entertainment Engineering Project-based, software oriented, introductory study of interactive entertainment. Discussion and evaluation of classic and historically influential games. Exploration of concepts in game design and development. Topics may include interactive storytelling, game physics, game AI, character development, animation, and development of virtual worlds.
Current Topics in Software Engineering Selected topics in software engineering. Topics may include program generation, quality assurance, formal methods, software metrics, design methods, testing, or software development processes.

