C++ Programming Introduction to computer programming, software engineering principles, structured program design and implementation, using the C++ programming language; students will become familiar with common commands for managing the file system and constructing programs in the Linux operating system.
Object-Oriented Design Using C++ Further development of student problem solving and programming skills beyond CS-1210 by increased exposure to the C++ language features including pointers, object-oriented language contructs and design principles, memory management mechanisms, exception handling, event-driven programming, and graphical user interfaces (GUI).
Data Structures Using Java Introduction to the proper use of data structures for developing efficient software; data structures include stacks, queues, priority queues, hash tables, trees, and graphs. Students will develop skill in object-oriented design and the Java programming language.
Programming Language Survey Systematic study of the principles, concepts, and mechanisms of computer programming languages: their syntax, semantics, and pragmatics; the processing and interpretation of computer programs; programming paradigms; and language design. Illustrative examples will be selected and programming exercises will be assigned from a variety of programming languge paradigms.
Web Applications Introduction to the design and implementation of web-based applications. Technologies such as HTML5, CSS3, Javascript, JQuery, PHP, Java Servlets, XML, and MySQL are explored. Multiple design projects required.
Operating Systems A state-of-the-art survey of operating system principles. Covers fundamental technology and contemporary design issues such as threads, real-time systems, multiprocessor scheduling, distributed systems, and security. Course content is developed through lectures, student research of the relevant literature, presentations, and programming projects using both C++ and Java.
Foundations of Computer Security Introduction to computer security, including basic concepts, security policy, access control, authentication and key control, and cryptography
Algorithms Introduction to classical algorithms that have broad application in solving computer science problems; topics include analysis of algorithms, advanced data structures, graph algorithms, numerical methods, and NP-completeness.
Compiler Theory and Practice Introduction to the foundational technology of modern compilers, with emphasis on underlying theory and practical techniques for implementing a compiler by applying objectoriented and appropriate data structures.
Database Organization and Design Introduction to the analysis, design, and implementation of relational databases and the Structured Query Language (SQL); topics include data modeling techniques, data model to logical schema conversion techniques, relational algebra, SQL, database file organizations, query evaluation, transaction management, and client-server application architectures.
Software Engineering I The capstone design experience for computer science majors. Introduction to software engineering principles focusing on requirement development, detailed design, project scheduling and management, quality assurance, and testing.
Software Engineering II Student teams will complete the implementation, testing, and release of their capstone project, submit regular progress reports, prepare a final report, and make a formal project presentation.
Digital Logic Design Introduction to digital logic design, number systems, Boolean algebra, Karnaugh maps, computer simulation tools, combinational network design, flip flops, counters, state machines, and sequential networks.
Computer Architecture Introduction to computer architecture with an emphasis on hardware, RISC vs. CISC, pipeline and vector processing, I/O, and memory hierarchy including caches.
Computer Networks This course is an introduction to computer networking. The course will present the layered network architecture of the internet and examine the services and functions that each layer performs. The wellknown protocols of each layer will be explored in-depth through written homework, programming assignments, and packet-capture labs (using Wireshark, for example). Important fundamental networking topics will be emphasized such as packet switching, addressing, performance measurement, reliable data transfer, and routing.
Professional Ethics Introduction to the theories of morality and philosophical issues of determining what is true and what is good. Applications are made to professional conduct, engineer-client relations, and product liability. Legal problems and the engineering code of ethics are discussed from a biblical perspective.
Senior Seminar Required weekly meeting of senior engineering and computer science majors to discuss the transition into the professional work environment.
Discrete Math and Probability Principles for Computer Science An introduction to mathematical foundations of computer science, including propositional and predicate calculus, methods of proof, sets and relations, recurrences, program correctness and proofs, probability models, random variables, probability distributions, estimation, and hypothesis testing.
Computer Graphics Introduction to three-dimensional computer graphics and computer game content creation and programming. Topics include geometric modeling and common game engine capabilities; techniques for enhancing realism such as local lighting effects, texture, transparency, and physical modeling; and common computations in the rendering pipeline such as model transformations, clipping and culling, shading, rasterization and collision detection
Linux Systems Programming A study of the Linux operating system with special emphasis given to developing low-level programming skills in C and assembly language for the purpose of understanding Linux’s separation of user- and kernel-space features, system code, and how to develop kernel modules. In addition to the emphasis on low-level programming, students will study various system administration skills, scripting languages, administration and programming tools, and gain a better understanding of capabilities and limitations of the Linux operating systems (O/S).
Cyber Operations This course covers cyber operations and the best practices for securing a technology infrastructure. Topics covered include offensive cyber operations, cyber-related legal precedents and regulations, wired and wireless network security, intrusion detection and prevention systems, system hardening, and defense in-depth.
The Bible and the Gospel An introductory course on the nature of the Bible, helpful tools for biblical interpretation, biblical practices that engender growing in spiritual maturity, and the Gospel-sharing task of all believers. Topics of emphasis include the content and appeal of the Gospel, the Holy Spirit’s role in inspiring the Bible and in applying the Bible to the believer’s life, gaining a valid interpretation of the author’s textual meaning, and the role of the local church in spiritual growth.
Old Testament Literature Survey of the entire Old Testament, giving special attention to authorship, historical background, and the theme of each book with attention to literary genre. This study traces the history of the Hebrew nation from its origin to the time of Jesus Christ.
Composition Designed to assist the student in developing the skills necessary to meet the demands of typical writing situations, both academic and professional. The course will introduce the student to the common expository writing methods of description, narration, analysis, persuasion, and research presentation.
Calculus I First course of a two-course sequence covering basic concepts of analytic geometry and single variable calculus. Includes limits and single variable calculus. Includes limits and derivatives of algebraic and transcendental functions, applications of the derivative, single variable integration, including the Fundamental Theorem of Calculus and integration by substitution, and applications of integration, including solving differential equations and finding volumes of revolution.
Calculus II The second course of a two-course sequence covering the basic concepts of analytic geometry and single variable calculus. Includes techniques of integration such as integration by parts, trigonometric substitution and partial fractions, improper integrals and L’Hopital’s rule, sequences, series, expansion of functions into Taylor and power series, conic sections, plane curves, calculus of parametric equations and polar coordinates, vectors and geometry in three-space, vector-valued functions and curvature.
General Physics I Basic concepts of mechanics using calculus. This is the first of a three-course sequence intended for students in the physical sciences and engineering programs. Topics include linear and rotational motion in three dimensions, oscillatory motion, gravitation, fluid mechanics, and basic concepts of wave motion.
Physical Activity and Healthy Living Study of the role of physical activity in the Christian life from a scriptural, physiological, and psycho-sociological perspective. Emphasis is placed upon developing and continuing active, healthy, Christian life practices.
New Testament Literature Survey of the entire New Testament, including the historical background of the Inter-Testamental period, giving special attention to main events, the authorship and content of each book with attention to literary genre, and the unfolding of God’s redemptive purpose through the Lord Jesus Christ.
Theology I An introductory reflection on the theological task, the doctrines of the triune God, creation and humanity, revelation, and sin by means of a conversation between the Bible and classic and contemporary theological literature. This theological reflection will be brought to bear on contemporary challenges.
Cyber Operations This course covers cyber operations and the best practices for securing a technology infrastructure. Topics covered include offensive cyber operations, cyber-related legal precedents and regulations, wired and wireless network security, intrusion detection and prevention systems, system hardening, and defense in-depth.
Fundamentals of Speech Public speaking and strong verbal communication skills are critical components of many careers. Students learn to inform others about ideas, advocate for a position, work in groups and teams, listen and critique messages, and practice conflict resolution.
General Physics II Basic concepts of electricity and magnetism, light, and optics using calculus. This is the second of a three-course sequence intended for students in the physical sciences and engineering programs. Topics include electricity, magnetism, Maxwell’s equations, DC and AC circuits, geometrical and physical optics.
Advanced Digital Logic Design Advanced treatment of digital logical design techniques and practices with emphasis on rapid electronic prototyping and effective use of advanced computer-aided design tools; schematic, textual, and VHDL design entry; arithmetic circuits, advanced finite-state machines, and advanced controller implementations. Three lecture hours per week with periodic integrated laboratory; multiple projects and laboratory experiences including a class design contest usually involving a robot.
Theology II An introductory reflection on the theological task, the doctrines of Christ, salvation, the Holy Spirit, the Church, and last things by means of a conversation between the Bible and classic and contemporary theological literature. This theological reflection will be brought to bear on contemporary challenges with a focus on developing the students’ practice of theological thinking.
SoftWare Security A detailed look at issues involved in providing secure software systems. Students will study principles and practices of software development that result in software that is robust and secure from attack. Students will learn techniques for analyzing software to determine whether it contains weaknesses that are vulnerable to exploitation. Students will also explore reverse engineering of software to understand the design of an existing software component to determine its security and whether it could contain malware.
Politics and American Culture This course serves as an introductory study of America’s constitution and political institutions, with emphases on political participation, political culture, and public policy.
Introduction to the Humanities Historical study of the relationship of music, art, and literature to the dominant cultural, religious, and philosophical trends and their relationship to Christian theism.
United States History I Survey and analysis of the development of the United States from the colonial period through Reconstruction. The course examines ethnic, social, military, political, economic, and ideological themes in order to achieve a broad understanding of American civilization to 1877. Attention is given to the dominant Christian influences that have tended to shape our cultural, social, and political development.
Parallel Computing Introduction to the exploitation of parallelism to solve computational intensive problems; emphasis is placed on both the message passing (using MPI) and the shared memory paradigms; projects are required using both paradigms.
Professional Ethics Introduction to the theories of morality and philosophical issues of determining what is true and what is good. Applications are made to professional conduct, engineer-client relations, and product liability. Legal problems and the engineering code of ethics are discussed from a biblical perspective.
Senior Seminar Required weekly meeting of senior engineering and computer science majors to discuss the transition into the professional work environment.
Principles of Biology Emphasizes basic life processes and the principles by which these processes operate at the ecological, organismic, and cellular levels of organization with emphasis on human responsibility toward life at all levels.
Literary Analysis Introductory study of contextual analysis. This course is primarily intended for adolescent and young adult integrated language arts and English majors as preparation for upper-division literature courses.
Cultural Anthropology Analysis of the concept and its importance for the study of man; an examination of various cultures of the world as they relate to technological, economic, social, political, and religious aspects of these cultures.
American Cultures to 1877 American culture examined through political, literary, artistic, economic and social development. American values, ideas and institutions from popular culture as well as traditional sources
American Cultures 1877 to present American culture examined through political, literary, artistic, economic and social development. American values, ideas and institutions from popular culture as well as traditional sources
Technical Writing Workshop Advanced writing through preparation of technical reports and presentations. Improving skills for writing subject-related reports, project proposals and personal resumes through practice and evaluation.
Calculus I Introduction to calculus including limits, continuity, differentiation, applications and introduction to integration. Graphical, algebraic and numerical methods of solving problems.
Calculus II Definite and indefinite integration with applications. Sequences and series. Graphical, algebraic and numerical methods of solving problems.
Discrete Mathematics Sets, logic, methods of proof including mathematical induction, functions, relations, elementary combinatorics, probability, Boolean algebras
Linear Algebra I Matrices, systems of linear equations, vector geometry, matrix transformations, determinants, eigenvectors and eigenvalues, orthogonality, diagonalization, applications, computer exercises. Theory in Rn emphasized; general real vector spaces and linear transformations introduced.
Computers, Ethics and Society The nature of privacy in a technologically interconnected world; the role of computer technologies in the exercise of the human intellect and imagination with respect to freedom of expression and the social good; rights and responsibilities of intellectual property ownership.
Calculus III Functions of more than one variable, partial derivatives, multiple integrals and vector calculus. Graphical, algebraic and numerical methods of solving problems.
Introduction to Combinatorics Sets, permutations, combinations, probability, mathematical induction, counting techniques, generating functions, partitions, recurrence relations, inclusion-exclusion. Polya's theorem and applications to computer science, mathematics, engineering and physical sciences.
Applied Probability and Statistics I Descriptive and inferential statistics. Collection and analysis of data, discrete and continuous probability models, random variables, Central Limit Theorem, confidence intervals, hypothesis testing.
Introduction to Programming Basic skills and concepts of computer programming in an object-oriented approach using Java. Classes, methods and argument passing, control structures, iteration. Basic graphical user interface programming. Problem solving, class discovery and stepwise refinement. Programming and documentation style. Weekly hands-on activity.
Introduction to Data Structures Stacks and queues, recursion, lists, dynamic arrays, binary search trees. Iteration over collections. Hashing. Searching, elementary sorting. Big-O notation. Standard collection classes. Weekly hands-on activity.
Introduction to Computer Systems Instruction sets, assembly language and assemblers, linkers and loaders, data representation and manipulation, interrupts, pointers, function calls, argument passing, and basic gate-level digital logic design
Data Structures and Algorithms Implementations of advanced tree structures, priority queues, heaps, directed and undirected graphs. Advanced searching and sorting (radix sort, heapsort, mergesort, and quicksort). Design and analysis of data structures and algorithms. Divide-and-conquer, greedy, and dynamic programming algorithm design techniques.
Computer Architecture Introduction to the basic concepts of computer hardware structure and design, including processors and arithmetic logic units, pipelining, and memory hierarchy
Operating Systems Fundamentals: Contiguous and non-contiguous memory management; processor scheduling and interrupts; concurrent, mutually exclusive, synchronized and deadlocked processes; files.
Object-Oriented Design Design of classes and interfaces. Object-oriented design methodologies and notations. Design patterns. Generics and reflection. Exception handling. Concurrent programming. Graphical user interface programming. Software engineering concepts and tools. Required team-based programming assignment.
Programming Paradigms Programming language syntax and semantics. Data types and type checking. Scope, bindings, and environments. Functional and logic programming paradigms, and comparison to other paradigms.
Formal Languages and Computability Finite automata, context-free languages, Turing machines, computability. Prerequisite: MATH 42 and CS 46B (with a grade of "C-" or better in each); Computer Science, Applied and Computational Mathematics, or Software Engineering, majors only; or instructor consent.
Software Engineering Software engineering principles, software process and process models, requirements elicitation and analysis, design, configuration management, quality control, project planning, social and ethical issues. Required team-based software development, including written requirements specification and design documentation, oral presentation, and tool use.
Computer Graphics Algorithms In-depth discussion of algorithms and techniques used in computer graphics and their implementation. Topics include: animation, fractals, anti-aliasing, fill algorithms, visible surface algorithms, color and shading, ray tracing, radiosity and texture maps. Substantial programming required.
Bioinformatics II Computational methods used for searching, classifying, analyzing, and modeling protein sequences. Tools for analyzing DNA and RNA sequences. More advanced topics, such as genetic algorithms and simulated annealing, which can be used to address folding problems.
Concepts of Compiler Design Theoretical aspects of compiler design, including parsing context free languages, lexical analysis, translation specification and machine-independent code generation. Programming projects to demonstrate design topics.
Database Management Systems II Survey course. Object-oriented data model, definition language, query language. Object relational database systems. Database trends like active, temporal, multimedia, deductive databases. Web database topics, namely, architectures, introduction to interface languages. Team projects.
NoSQL Database Systems NoSQL Data Models: Key-Value, Wide Column, Document, and Graph Stores. CAP Theorem. Distribution Models. Current NoSQL Databases: Configuration and Deployment, CRUD operations, Indexing, Replication, and Sharding. Public Data Sets. API Coding and Application Development. NoSQL in the Cloud. Team Project.
Computer Network Management Principles and technologies of network management: reference models, functions (fault, configuration, performance, security and accounting management), management information, communication protocols, integration, and assessment. Network security and cyber defense: cryptography, key distribution, authentication protocols, network attacks, access control, and example systems.
Software Project A substantial project based on material from an advanced area of computer science. Includes lectures on the project topic and the design and testing of software systems. At least 50% of the course grade to be based on the project.
Practical Computing Topics Computing topics of current interest in industrial practice. Emphasis on effective use and integration of software/hardware. Different topics may be offered at different times in a short-course lecture/lab format. Different versions of this course may be repeated for credit.
Introduction to Combinatorics Sets, permutations, combinations, probability, mathematical induction, counting techniques, generating functions, partitions, recurrence relations, inclusion-exclusion. Polya's theorem and applications to computer science, mathematics, engineering and physical sciences.
Applied Probability and Statistics I Descriptive and inferential statistics. Collection and analysis of data, discrete and continuous probability models, random variables, Central Limit Theorem, confidence intervals, hypothesis testing.
Statistics for Bioinformatics Introduction to the theory and applications of statistical methodology in the biological sciences. Topics include inference, stochastic processes, Markov chains, hidden Markov models, clustering, and gene expression analysis. Applications to current molecular biology and genetics problems.
Linear and Non-Linear Optimization Linear inequalities, the simplex method and other algorithms, duality, integer optimization, convex optimization, quadratic optimization, game theory.
Mathematical Modeling Basic modeling techniques including graphing, proportion, curve fitting and interpolation, optimization, probability and computer simulation, derivatives and differences. Technology will be incorporated to model applied problems from business/economics, physical/life/social sciences and engineering.
Introduction to Graph Theory Hamiltonian and Eulerian properties, matching, trees, connectivity, coloring problems and planarity. Emphasis on algorithms and applications, including optimal network flows.
Applied Mathematics, Computation, and Statistics Projects Supervised teamwork to solve a substantial problem in mathematics or computer science usually supplied by an outside agency such as a local company. The number of different projects offered and the topics will vary widely. A project usually continues for two consecutive semesters.
Computer Ethics Students will examine a variety of topics regarding policy, legal, and moral issues related to the computer science profession itself and to the proliferation of computers in all aspects of society, especially in the era of the Internet. The course will cover various general issues related to ethical frameworks and apply those frameworks more specifically to the use of computers and the Internet. The topics will include privacy issues, computer crime, intellectual property law -- specifically copyright and patent issues, globalization, and ethical responsibilities for computer science professionals.
Gateway Computing: JAVA This course introduces fundamental programming concepts and techniques, and is intended for all who plan to develop computational artifacts or intelligently deploy computational tools in their studies and careers. Topics covered include the design and implementation of algorithms using variables, control structures, arrays, functions, files, testing, debugging, and structured program design. Elements of object-oriented programming. algorithmic efficiency and data visualization are also introduced.
Intermediate Programming This course teaches intermediate to advanced programming, using C and C++. (Prior knowledge of these languages is not expected.) We will cover low-level programming techniques, as well as object-oriented class design, and the use of class libraries. Specific topics include pointers, dynamic memory allocation, polymorphism, overloading, inheritance, templates, collections, exceptions, and others as time permits.
Data Structures This course covers the design and implementation of data structures including arrays, stacks, queues, linked lists, binary trees, heaps, balanced trees (e.g. 2-3 trees, AVL-trees) and graphs. Other topics include sorting, hashing, memory allocation, and garbage collection.
Computer System Fundamentals We study the design and performance of a variety of computer systems from simple 8-bit micro-controllers through 32/64-bit RISC architectures all the way to ubiquitous x86 CISC architecture. We'll start from logic gates and digital circuits before delving into arithmetic and logic units, registers, caches, memory, stacks and procedure calls, pipelined execution, superscalar architectures, memory management units, etc. Along the way we'll study several typical instruction set architectures and review concepts such as interrupts, hardware and software exceptions, serial and other peripheral communications protocols, etc. A number of programming projects, frequently done in assembly language and using various processor simulators, round out the course.
Automata & Computation Theory This course is an introduction to the theory of computing. topics include design of finite state automata, pushdown automata, linear bounded automata, Turing machines and phrase structure grammars; correspondence between automata and grammars; computable functions, decidable and undecidable problems, P and NP problems, NP-completeness, and randomization.
Intro Algorithms This course concentrates on the design of algorithms and the rigorous analysis of their efficiency. topics include the basic definitions of algorithmic complexity (worst case, average case); basic tools such as dynamic programming, sorting, searching, and selection; advanced data structures and their applications (such as union-find); graph algorithms and searching techniques such as minimum spanning trees, depth-first search, shortest paths, design of online algorithms and competitive analysis.
User Interfaces and Mobile Applications This course will provide students with a rich development experience, focused on the design and implementation of user interfaces and mobile applications. A brief overview of human computer interaction will provide context for designing, prototyping and evaluating user interfaces
Developing Health IT Applications This course is a project-based introduction to working on successful projects in health care. In the first half of the term, students perform reading and homework assignments designed to introduce: (1) the context of health care delivery and health IT, (2) techniques to overcome challenges to conducting health care data analyses, and (3) techniques to design meaningful applications around health care data
Software for Resilient Communities This is a project-based course focusing on the design and implementation of practical software systems. Students will work in small teams to design and develop useful open-source software products that support our communities.
Computer Science Innovation & Entrepreneurship II CS Innovation and Entrepreneurship, offered by the Center for Leadership Education
Object Oriented Software Engineering This course covers object-oriented software construction methodologies and their application. The main component of the course is a large team project on a topic of your choosing. Course topics covered include object-oriented analysis and design, UML, design patterns, refactoring, program testing, code repositories, team programming, and code reviews.
Computational Genomics: Sequences Your genome is the blueprint for the molecules in your body. It's also a string of letters (A, C, G and T) about 3 billion letters long. How does this string give rise to you? Your heart, your brain, your health? This, broadly speaking, is what genomics research is about. This course will familiarize you with a breadth of topics from the field of computational genomics. The emphasis is on current research problems, real-world genomics data, and efficient software implementations for analyzing data. Topics will include: string matching, sequence alignment and indexing, assembly, and sequence models. Course will involve significant programming projects.
Introduction to Human-Computer Interaction This course is designed to introduce undergraduate and graduate students to design techniques and practices in human-computer interaction (HCI), the study of interactions between humans and computing systems. Students will learn design techniques and evaluation methods, as well as current practices and exploratory approaches, in HCI through lectures, readings, and assignments. Students will practice various design techniques and evaluation methods through hands-on projects focusing on different computing technologies and application domains.
Neuro Data Design I In this year long course, students will work together in small teams to design, develop, and deploy a functioning tool for practicing brain scientists, either for accelerating research or augmenting the clinic.
Neuro Data Design II In this year long course, students will work together in small teams to design, develop, and deploy a functioning tool for practicing brain scientists, either for accelerating research or augmenting the clinic.
Calculus I Differential and integral calculus. Includes analytic geometry, functions, limits, integrals and derivatives, polar coordinates, parametric equations, Taylor's theorem and applications, infinite sequences and series. Some applications to the physical sciences and engineering will be discussed, and the courses are designed to meet the needs of students in these disciplines.
Calculus II Differential and integral calculus. Includes analytic geometry, functions, limits, integrals and derivatives, polar coordinates, parametric equations, Taylor's theorem and applications, infinite sequences and series. Some applications to the physical sciences and engineering will be discussed, and the courses are designed to meet the needs of students in these disciplines.
Discrete Mathematics Introduction to the mathematics of finite systems. Logic; Boolean algebra; induction and recursion; sets, functions, relations, equivalence, and partially ordered sets; elementary combinatorics; modular arithmetic and the Euclidean algorithm; group theory; permutations and symmetry groups; graph theory. Selected applications. The concept of a proof and development of the ability to recognize and construct proofs are part of the course.
Linear Algebra Vector spaces, matrices, and linear transformations. Solutions of systems of linear equations. Eigenvalues, eigenvectors, and diagonalization of matrices. Applications to differential equations.
Introduction to Probability Probability and its applications, at the calculus level. Emphasis on techniques of application and on rigorous mathematical demonstration. Probability, combinatorial probability, random variables, distribution functions, important probability distributions, independence, conditional probability, moments, covariance and correlation, limit theorems.
Introduction to Statistics Introduction to the basic principles of statistical reasoning and data analysis. Emphasis on techniques of application. Classical parametric estimation, hypothesis testing, and multiple decision problems; linear models, analysis of variance, and regression; nonparametric and robust procedures; decision-theoretic setting, Bayesian methods.
Writing I Writing I
Science I Science I
Social I Social I
Introduction to Video Game Design A broad survey course in video game design (as opposed to mathematical game theory), covering artistic, technical, as well as sociological aspects of video games. Students will learn about the history of video games, archetypal game styles, computer graphics and programming, user interface and interaction design, graphical design, spatial and object design, character animation, basic game physics, plot and character development, as well as psychological and sociological impact of games.
Parallel Programming This course prepares the programmer to tackle the massive data sets and huge problem size of modern scientific and enterprise computing. Google and IBM have commented that undergraduate CS majors are unable to "break the single server mindset" (http://www.google.com/intl/en/ press/pressrel/20071008_ibm_univ.html). Students taking this course will abandon the comfort of serial algorithmic thinking and learn to harness the power of cutting-edge software and hardware technologies. The issue of parallelism spans many architectural levels. Even ``single server'' systems must parallelize computation in order to exploit the inherent parallelism of recent multi-core processors. The course will examine different forms of parallelism in four sections. These are: (1) massive data-parallel computations with Hadoop!; (2) programming compute clusters with MPI; (3) thread-level parallelism in Java; and, (4) GPGPU parallel programming with NVIDIA's Cuda
Compilers and Interpreters Introduction to compiler design, including lexical analysis, parsing, syntax-directed translation, symbol tables, run-time environments, and code generation and optimization. Students are required to write a compiler as a course project.
Cloud Computing Clouds host a wide range of the applications that we rely on today. In this course, we study common cloud applications, traffic patterns that they generate, critical networking infrastructures that support them, and core networking and distributed systems concepts, algorithms, and technologies used inside clouds. We will also study how today's application demand is influencing the networks design, explore current practice, and how we can build future's networked infrastructure to better enable both efficient transfer of big data and low-latency requirements of real-time applications. The format of this course will be a mix of lectures, discussions, assignments, and a project designed to help students practice and apply the theories and techniques covered in the course.
Blockchains and Cryptocurrencies This course will introduce students to cryptocurrencies and the main underlying technology of Blockchains. The course will start with the relevant background in cryptography and then proceed to cover the recent advances in the design and applications of blockchains. This course should primarily appeal to students who want to conduct research in this area or wish to build new applications on top of blockchains. It should also appeal to those who have a casual interest in this topic or are generally interested in cryptography.
Augmented Reality This course introduces students to the field of Augmented Reality. It reviews its basic definitions, principles and applications. It then focuses on Medical Augmented Reality and its particular requirements. The course also discusses the main issues of calibration, tracking, multi-modal registration, advance visualization and display technologies. Homework in this course will relate to the mathematical methods used for calibration, tracking and visualization in medical augmented reality.
Computer Graphics  This course introduces computer graphics techniques and applications, including image processing, rendering, modeling and animation
Computer Vision This course gives an overview of fundamental methods in computer vision from a computational perspective. Methods studied include: camera systems and their modeling, computation of 3-D geometry from binocular stereo, motion, and photometric stereo; and object recognition. Edge detection and color perception are covered as well. Elements of machine vision and biological vision are also included.
Artificial Intelligence The class is recommended for all scientists and engineers with a genuine curiosity about the fundamental obstacles to getting machines to perform tasks such as learning, planning and prediction. Materials will be primarily based on the popular textbook, Artificial Intelligence: A Modern Approach. Strong programming skills are expected, as well as basic familiarity with probability.
Machine Learning. Machine learning is subfield of computer science and artificial intelligence, whose goal is to develop computational systems, methods, and algorithms that can learn from data to improve their performance. This course introduces the foundational concepts of modern Machine Learning, including core principles, popular algorithms and modeling platforms. This will include both supervised learning, which includes popular algorithms like SVMs, logistic regression, boosting and deep learning, as well as unsupervised learning frameworks, which include Expectation Maximization and graphical models.
Human-Robot Interaction This course is designed to introduce advanced students to research methods and topics in human-robot interaction (HRI), an emerging research area focusing on the design and evaluation of interactions between humans and robotic technologies.
Deep Learning. Deep learning (DL) has emerged as a powerful tool for solving data-intensive learning problems such as supervised learning for classification or regression, dimensionality reduction, and control. As such, it has a broad range of applications including speech and text understanding, computer vision, medical imaging, and perception-based robotics. The goal of this course is to introduce the basic concepts of deep learning (DL). The course will include a brief introduction to the basic theoretical and methodological underpinnings of machine learning, commonly used architectures for DL, DL optimization methods, DL programming systems, and specialized applications to computer vision, speech understanding, and robotics.
Natural Language Processing This course is an in-depth overview of techniques for processing human language. How should linguistic structure and meaning be represented? What algorithms can recover them from text? And crucially, how can we build statistical models to choose among the many legal answers? The course covers methods for trees (parsing and semantic interpretation), sequences (finite-state transduction such as morphology), and words (sense and phrase induction), with applications to practical engineering tasks such as information retrieval and extraction, text classification, part-of-speech tagging, speech recognition and machine translation
Undergraduate Research I Undergraduate Research I
﻿
Intensive Programming in Linux. The course covers Linux programming with Apache Web and MySql database using Php/Python and C as primary languages. It consists of four stages: basic tools such as Bash and C programming; searching trees and matrix computing, end-to-end applications such as one that constantly presents top 100 stocks; and extending the applications to run on multiple machines. The course provides students with hands-on experience for programming relatively large applications.
Introduction to Cybersecurity. This course will give a broad overview of cybersecurity. There are two main goals of this course. First, students will learn fundamental concepts of cybersecurity. Second, this course will help students gain knowledge of the applications to computer systems and communication security. Topics include basics of cryptography, access control, malware, software security, storage and file security, operating-system security, database security and secure communication protocols.
Introduction to Computer Science.  Intensive introduction to computer science. Problem solving decomposition. Writing, debugging, and analyzing computer programs. Introduction to arrays and lists. Iteration and recursion. The Java language is introduced and used to highlight these concepts.
Calculus II. Topics include integration, applications of integration, series, exponential and logarithmic functions, transcendental functions, polar coordinates, and conic sections.
English Composition: Writing, Speaking, Thinking I. Entrance is determined by placement test score or completion of HUM 099 with a grade of C or better. Focuses on developing written and oral communication skills; emphasizes writing expository and research essays; preparing oral reports; drafting, revising, editing; evaluation and proper documentation of source material; using rhetorical strategies such as narration and argument.
Probability and Statistics.. Descriptive statistics and statistical inference. Topics include discrete and continuous distributions of random variables, statistical inference for the mean and variance of populations, and graphical analysis of data.
English Composition: Writing, Speaking, Thinking II. Focuses on enhanced written and oral communication skills; emphasizes reading and interpretation of literary forms; critical analysis; methods of research using print and on-line sources; report writing and writing about literature.
Programming Language Concepts. Conceptual study of programming language syntax, semantics and implementation. Course covers language definition structure, data types and structures, control structures and data flow, run-time consideration, and interpretative languages.
Senior Project. An opportunity for the student to integrate the knowledge and skills gained in previous computer science work into a team-based project. The project involves investigation of current literature as well as computer implementation of either a part of a large program or the whole of a small system.
Oral Presentations. Instruction and practice in effective oral presentations. Students deliver a wide range of presentations adapted to the needs of a variety of audiences. Topics include voice and diction, presentation skills, the effective use of visual aids, reporting technical material and audience analysis. This course satisfies the three credit 300 GER in History and Humanities.
Professional Dev in Computing. This course is designed for junior year students to reflect back on the college experience and to help plan for the future as a computing professional. The course will explore transitional issues that occur during the progression from student to professional through reflection on co-op and/or internship.
Guided Design in Software Engineering. This course focuses on the methodology for developing software systems. Methods and techniques for functional requirements analysis and specifications, design, coding, testing and proving, integration and maintenance are discussed.
Advanced Data Structures and Algorithm Design. Advanced topics in data structures and algorithms, involving sequences, sets, and graphs such as searching, sorting, order statistics, balanced search tree operations, hash tables, graph traversals, graph connectivity and path problems. Algebraic and numeric algorithms. Performance measures, analysis techniques, and complexity of such algorithms.
Roadmap to Computing. An introduction to programming and problem solving skills using Python or other very high level language. Topics include basic strategies for problem solving, constructs that control the flow of execution of a program and the use of high level data types such as lists, strings and dictionaries in problem representation. The course also presents an overview of selected topics in computing, such as networking and databases.
Physics I Lab. Physics I Lab.
Computing & Effective Com. Through encouraging collaboration and communication, this course addresses how to best present oneself via verbal and nonverbal communication. Students will learn how to effectively network, create resumes, interview and best present ideas. The skills learned in this course prepare students for co-op/internship opportunities as well as future employment.
Freshman Seminar. Addresses issues related to a successful college life during weekly seminars. Topics include time management, study skills, interpersonal relationships, wellness, multicultural issues and career decision making. Freshman Seminar is a graduation requirement for all first-time, full-time freshmen.
Physics II. This course deals with an introduction to electricity and magnetism. Topics include simple dc circuits, the electric field, the magnetic field, electric potential, capacitance relationships between electric and magnetic fields, inductance, and simple ac circuits. Lab must be taken concurrently.
Intro to Computer Systems.  An introduction to the organization and architecture of computer systems, including the standard Von Neumann model and more recent architectural concepts. Among the topics covered are numeric data representation, assembly language organization, memory addressing, memory systems, both real and virtual, coding and compression, input/output structures treated as programmed, interrupt, and direct memory access, and functional organization of the CPU and the computer system.
Physics I.  Elementary mechanics with an emphasis on the fundamental concepts and laws of mechanics, especially the conservation laws. Topics are scalar and vector quantities of mechanics; rectilinear and circular motion; equilibrium and Newton's laws of motion; work, energy, momentum; the conservation laws. Lab must be taken concurrently.
Calculus I. Topics include limits, differentiation, applications of differentiation, and integration.
Introduction to Data Science. This course is designed for CS BS students to equip them with introductory principles as well as hands-on skills that are required to solve data science problems. The first part of the course focuses on learning models, formalism, and algorithmic techniques that are popular in data science and heavily used in practice. In the second part of the course, students are introduced to data science tools (e.g., Excel, Python).
Database System Design & Mgmt. Database system architecture; data modeling using the entity-relationship model; storage of databases; the hierarchical, network and relational data models; formal and commercial query languages; functional dependencies and normalization for relational database design; relation decomposition; concurrency control and transactions management. Student projects involve the use of a DBMS package.
Foundations of Computer Science I. An introduction to the foundations of computer science with emphasis on the development of  techniques for the design and proof of correctness of algorithms and the analysis of their computational complexity. Reasoning techniques based on propositional and predicate logic and relational calculus operations with applications to databases will also be introduced. Auxiliary topics such as combinatorics of finite sets, functions and relations, and graph-theory definitions and graph storage alternatives will also be examined.
Physics II Lab. Physics II Lab.
Introduction to Computer Science II. A study of advanced programming topics with logical structures of data, their physical representation, and the design of computer algorithms operating on the structures. Course covers program specifications, correctness and efficiency, data abstraction, and algorithm analysis.
Computers, Society and Ethics. Examines the historical evolution of computer and information systems and explores their implications in the home, business, government, medicine and education. Topics include automation and job impact, privacy, and legal and ethical issues.
Principles of Operating Systems. Organization of operating systems covering structure, process management and scheduling; interaction of concurrent processes; interrupts; I/O, device handling; memory and virtual memory management and file management.
Technical Writing. An advanced writing course. Combines current theory with actual practice to prepare students as technical writers. Analyze complex communication situations and design appropriate responses through tasks that involve problem solving, rhetorical theory, document design, oral presentations, writing teams, audience awareness, ethical considerations, and gender equity issues.
Foundations of Computer Science II.  This course provides an introduction to automata theory, computability theory, and complexity theory. Theoretical models such as finite-state machines, push-down stack machines, and Turing machines are developed and related to issues in programming language theory.  Also, the course covers undecidability and complexity classes P, NP, and NPC.
Introduction to Computer Networks. This course provides an introduction to computer networks, with a special focus on Internet architecture and protocols. Topics include layered-network architectures, addressing, naming, forwarding, routing, communication reliability, the client-server model, web and email protocols. Besides the theoretical foundations, students acquire practical experience by programming reduced versions of real Internet protocols.
Orientation Introduction to the computer science discipline and code of ethics, Com S courses, research and networking opportunities, procedures, policies, help and computing resources, extra-curricular activities offered by the Department of Computer Science and Iowa State University
Careers in Computer Science Computer science as a profession. Introduction to career fields open to computer science majors. Relationship of coursework to careers. Presentations by computer science professionals.
Object-oriented Programming Computer programming using objects as the mechanism for modularity, abstraction, and code reuse. Instance variables, methods, and encapsulation. Review of control structures for conditionals and iteration. Developing algorithms on strings, arrays, and lists. Recursion, searching, and sorting. Text parsing and file I/O. Interfaces, inheritance, polymorphism, and abstract classes. Exception handling. Tools for unit testing and debugging. Emphasis on a disciplined approach to specification, code development, and testing.
Introduction to Data Structures An object-oriented approach to data structures and algorithms. Object-oriented analysis, design, and programming, with emphasis on data abstraction, inheritance and subtype polymorphism, and generics. Abstract data type specification and correctness. Collections including lists, stacks, queues, trees, heaps, maps, hash tables, and graphs. Big-O notation and algorithm analysis. Searching and sorting. Graph search and shortest path algorithms. Emphasis on object-oriented design, writing and documenting medium-sized programs.
Software Development Practices A practical introduction to methods for managing software development. Process models, requirements analysis, structured and object-oriented design, coding, testing, maintenance, cost and schedule estimation, metrics. Programming projects.
Introduction to the Design and Analysis of Algorithms Basic techniques for design and analysis of algorithms. Sorting, searching, graph algorithms, string matching, and NP-completeness. Design techniques such as dynamic programming, divide and conquer, greedy method, and approximation. Asymptotic, worst-case, average-case and amortized analyses
Introduction to Computer Architecture and Machine-Level Programming Introduction to computer architecture and organization. Emphasis on evaluation of performance, instruction set architecture, datapath and control, memory-hierarchy design, and pipelining. Assembly language programming.
Advanced Programming Techniques Object-oriented programming experience using a language suitable for exploring advanced topics in programming. Topics include memory management, parameter passing, inheritance, compiling, debugging, and maintaining programs. Significant programming projects.
Theory of Computing Models of computation: finite state automata, pushdown automata and Turing machines. Study of grammars and their relation to automata. Limits of digital computation, unsolvability and Church-Turing thesis. Relations between classes of languages.
Principles of Programming Languages Study of concepts in programming languages, especially functional programming concepts. Overview of major programming paradigms, their relationship, and tradeoffs among paradigms enabling sound choices of programming language for application-specific development. Programming projects.
Introduction to Operating Systems Survey of operating system, networking and parallel programming issues. Introduction of processes, threads, process synchronization, deadlocks, memory, file systems, networking, security threats and encryption. Programming projects.
Computer Science Senior Project Students work as individuals and teams to complete the planning, design, and implementation of a significant project in the topic area. Oral and written reports.
Construction of User Interfaces Overview of user interface design. Evaluation and testing of user interfaces. Review of principles of object orientation, object oriented design and analysis using UML in the context of user interface design. Design of windows, menus and commands. Developing Web and Windows-based user-interfaces. Event-driven programming. Introduction to Frameworks and APIs for the construction of user interfaces.
Introduction to Computer Graphics Programming interactive computer graphics systems using standard low-level libraries (such as OpenGL or DirectX) with an emphasis on 3D rendering. The graphics pipeline and programmable shaders. Coordinate systems and transformations in two and three dimensions. Homogeneous coordinates, viewing transformations and perspective. Euler angles and quaternions. Visible surface algorithms. Lighting models and shading. Texture mapping, bump mapping, reflection, elementary ray tracing. Offscreen buffers, render-to-texture and related techniques.
Object-Oriented Analysis and Design Object-oriented requirements analysis and systems design. Design notations such as the Unified Modeling Language. Design Patterns. Group design and programming with large programming projects.
Introduction to Database Management Systems Relational, object-oriented, semistructured and query languages. SQL, XML, and NO-SQL. Database design using entity-relationship model, data dependencies, and relational database design. Application development in SQL-like languages and general purpose host languages with application program interfaces and a commonly used Object Relational Mapping framework. Web application development. Programming Projects
Software Requirements Engineering The requirements engineering process including elicitation, requirements analysis fundamentals, requirements specification and communication, and requirements evaluation. Modeling of functional and nonfunctional requirements, traceability, and requirements change management. Case studies and software projects.
Distributed Development of Software Teams of students develop software applications in a modern software engineering environment. Importance, effective processes pertaining to team organization, management and communication, and cultural issues of distributed development. Graduate credit requires in-depth study of concepts and oral presentations.
Formal Methods in Software Engineering A study of formal techniques for model-based specification and verification of software systems. Topics include logics, formalisms, graph theory, numerical computations, algorithms and tools for automatic analysis of systems. Graduate credit requires in-depth study of concepts.
Software System Safety An introduction to the hazard analysis, safety requirements, design, and testing of software for safety-critical and high-dependability systems. Safety analysis techniques, fault identification and recovery, and certification issues. Emphasizes a case-based and systematic approach to software's role in safe systems.
Software Testing An introduction to software testing principles and techniques. Test models, test design, test adequacy criteria; regression, integration, and system testing; and software testing tools.
Introduction to Computational Geometry Introduction to data structures, algorithms, and analysis techniques for computational problems that involve geometry. Convex hulls, line segment intersection, polygon triangulation, 2D linear programming, range queries, point location, arrangements and duality, Voronoi diagrams, Delaunay triangulations, geometric data structures, robot motion planning, visibility graphs.
Logic for Mathematics and Computer Science Propositional and predicate logic. Topics selected from Horn logic, equational logic, resolution and unification, foundations of logic programming, reasoning about programs, program specification and verification, model checking and binary decision diagrams, temporal logic and modal logic.
Introduction to High Performance Computing Unix, serial programming of scientific applications, OpenMP for shared-memory parallelization. No Unix, Fortran or C experience required.
High Performance Computing for Scientific and Engineering Applications Introduction to high performance computing platforms including parallel computers and workstation clusters. Discussion of parallel architectures, performance, programming models, and software development issues. Sample applications from science and engineering. Practical issues in high performance computing will be emphasized via a number of programming projects using a variety of programming models and case studies. Oral and written reports.
Introduction to Parallel Algorithms and Programming Models of parallel computation, performance measures, basic parallel constructs and communication primitives, parallel programming using MPI, parallel algorithms for selected problems including sorting, matrix, tree and graph problems, fast Fourier transforms.
Concurrent Programming in Practice A practical course in concepts, techniques, languages, and frameworks for concurrent and asynchronous systems. Concurrency fundamentals: threads, synchronization locks, waiting and notification, memory visibility. Immutability and thread confinement. Concurrent data structures and utilities, thread pools. Asynchronous programming with callbacks, futures, and message passing. Issues of aliasing, ownership and borrowing. Transactional memory, immutable and versioned data structures. Alternatives to threads and locks: event-driven systems, the actor model, CSP, coroutines
Molecular Programming of Nanoscale Devices and Processes Programming, modeling, and analysis of natural and engineered systems at the nanoscale. Topics include chemical reaction networks, strand displacement systems, models of self-assembly, biomolecular origami, and molecular robotics. Emphasis on mathematical methods of describing, simulating, programming, and assessing the computational power of such systems. Graduate credit requires a written or oral report on current research.
Algorithms for Large Data Sets: Theory and Practice Algorithmic challenges involved in solving computational problems on massive data sets. Probabilistic data structures, Curse of Dimensionality and dimensionality reduction, locality sensitive hashing, similarity measures, matrix decompositions. Optimization problems in massive data analysis. Computational problems that arise in the context of web search, social network analysis, online advertising etc.
Computer Game and Media Programming Students will learn video game programming using current game engine interfaces with real hardware. Particular attention is paid to the development environment, tool chains, 2D graphics, 3D graphics, controllers, memory management, and audio systems.
Principles and Practice of Compiling Theory of compiling and implementation issues of programming languages. Programming projects leading to the construction of a compiler. Projects with different difficulty levels will be given for 440 and 540. Topics include: lexical, syntactic and semantic analyses, syntax-directed translation, code generation, runtime environment and library support.
Programming Languages Survey of the goals and problems of language design. Formal and informal studies of a wide variety of programming language features including type systems. Creative use of functional and declarative programming paradigms.
Bioinformatic Analysis Broad overview of bioinformatics with a significant problem-solving component, including hands-on practice using computational tools to solve a variety of biological problems. Topics include: bioinformatic data processing, Python programming, genome assembly, database search, sequence alignment, gene prediction, next-generation sequencing, comparative and functional genomics, and systems biology.
Distributed Systems Theoretical and practical issues of design and implementation of distributed systems. The client server paradigm, inter-process communications, synchronization and concurrency control, naming, consistency and replication, fault tolerance, and distributed file systems. Graduate credit requires additional in-depth study of concepts. Programming projects and written reports.
Simulation: Algorithms and Implementation Introduction to discrete-event simulation with a focus on computer science applications, including performance evaluation of networks and distributed systems. Overview of algorithms and data structures necessary to implement simulation software. Discrete and continuous stochastic models, random number generation, elementary statistics, simulation of queuing and inventory systems, Monte Carlo simulation, point and interval parameter estimation. Graduate credit requires additional in-depth study of concepts.
Principles and Internals of Database Systems Database design including entity-relationship model, relational data model, and non-relational data models, data dependency, and normalization. Database management including physical storage, access methods, query processing, and transaction management. Database systems of special purposes such as spatial databases, mobile object databases, and multimedia databases. Introduction to current database research such as cloud data management and Internet information retrieval.
Principles of Artificial Intelligence Specification, design, implementation, and selected applications of intelligent software agents and multi-agent systems. Computational models of intelligent behavior, including problem solving, knowledge representation, reasoning, planning, decision making, learning, perception, action, communication and interaction. Reactive, deliberative, rational, adaptive, learning and communicative agents and multiagent systems. Artificial intelligence programming. Research project and written report required for graduate credit.
Introduction to Machine Learning Introduction to tools and techniques of machine learning for applications. Selected machine learning techniques in practical data mining for classification, regression, and clustering, e.g., association rules, decision trees, linear models, Bayesian learning, support vector machines, artificial neural networks, instance-based learning, probabilistic graphical models, ensemble learning, and clustering algorithms. Selected applications in data mining and pattern recognition.
Problem Solving Techniques for Applied Computer Science Selected topics in applied mathematics, algorithms, and geometry that have found applications in areas such as geometric modeling, graphics, robotics, vision, human machine interface, speech recognition, computer animation, etc. Homogeneous coordinates and transformations, perspective projection, rotations in space, quaternions, polynomial interpolation, roots of polynomials and polynomial systems, solution of linear and nonlinear equations, parametric and algebraic curves, curvature, torsion, Frenet formulas, surfaces, principal curvatures, Gaussian and mean curvatures, geodesics, approximation, Fourier series and fast Fourier transform, linear programming, data fitting, least squares, simplex method, nonlinear optimization, Lagrange multipliers, calculus of variations.
Numerical Methods for Differential Equations First order Euler method, high order Runge-Kutta methods, and multistep methods for solving ordinary differential equations. Finite difference and finite element methods for solving partial differential equations. Local truncation error, stability, and convergence for finite difference method. Numerical solution space, polynomial approximation, and error estimate for finite element method.
Fundamental Concepts in Computer Networking An introduction to fundamental concepts in the design and implementation of computer communication in both wired and wireless networks, their protocols, and applications. Layered network architecture in the Internet, applications, transport, network, and data link layers and their protocols, Socket API, software-defined networking, and network security.
Network Programming, Applications, and Research Issues Programming paradigms for building distributed and networking applications, including multithreaded client-server programming, socket programming, distributed object frameworks and programming suites, and web computing and security. Introduction to some on-going research issues in distributed and networking applications, including peer-to-peer computing, multimedia communications, and mobile computing and networking. Written report and oral presentation required for graduate credit.
Basics of Information System Security Introduction to and application of basic mechanisms for protecting information systems from accidental and intentional threats. Basic cryptography use and practice. Computer security issues including authentication, access control, and malicious code. Network security mechanisms such as intrusion detection, firewalls, IPSEC, and related protocols. Ethics and legal issues in information security. Wireless security.
Real Time Systems Fundamental concepts in real-time systems. Real time task scheduling paradigms. Resource management in uniprocessor, multiprocessor, and distributed real-time systems. Fault-tolerance, resource reclaiming, and overload handling. Real-time channel, packet scheduling, and real-time LAN protocols. Case study of real-time operating systems. Laboratory experiments.
Computer Networking and Data Communications Modern computer networking and data communications concepts. TCP/IP, OSI protocols, client server programming, data link protocols, local area networks, and routing protocols.
Philosophy of Technology Moral and other philosophical problems related to developments in technology. Topics may include conditions under which technological innovations contribute to human emancipation, relationship of technology and democracy, utility and limits of technical rationality, and problems of ensuring that benefits of technological advance are communally shared. Topics discussed with reference to such issues as contemporary developments in microelectronics, technology transfer to the Third World,
Fundamentals of Public Speaking Theory and practice of basic speech communication principles applied to public speaking. Practice in the preparation and delivery of extemporaneous speeches.
Calculus I Differential calculus, applications of the derivative, introduction to integral calculus
Calculus II Integral calculus, applications of the integral, infinite series, parametric curves and polar coordinates.
Discrete Computational Structures Concepts in discrete mathematics as applied to computer science. Logic, set theory, functions, relations, combinatorics, discrete probability, graph theory and number theory. Proof techniques, induction and recursion.
Engineering Statistics Statistics for engineering problem solving. Principles of engineering data collection; descriptive statistics; elementary probability distributions; principles of experimentation; confidence intervals and significance tests; one-, two-, and multi-sample studies; regression analysis; use of statistical software
Probability and Statistics for Computer Science Topics from probability and statistics applicable to computer science. Basic probability; Random variables and their distributions; Stochastic processes including Markov chains; Queuing models; Basic statistical inference; Introduction to regression.
Introduction to the Theory of Probability and Statistics I Probability; distribution functions and their properties; classical discrete and continuous distribution functions; multivariate probability distributions and their properties; moment generating functions; transformations of random variables; simulation of random variables and use of the R statistical package.
Matrices and Linear Algebra Systems of linear equations, determinants, vector spaces, linear transformations, orthogonality, least-squares methods, eigenvalues and eigenvectors. Emphasis on applications and techniques
Calculus III Analytic geometry and vectors, differential calculus of functions of several variables, multiple integrals, vector calculus.
Elementary Differential Equations Solution methods for ordinary differential equations. First order equations, linear equations, constant coefficient equations. Eigenvalue methods for systems of first order linear equations. Introduction to stability and phase plane analysis.
Elementary Differential Equations and Laplace Transforms but also including Laplace transforms and power series solutions to ordinary differential equations.
Combinatorics Enumeration strategies involving permutations, combinations, partitions, binomial coefficients, inclusion-exclusion principle, recurrence relations, generating functions. Additional topics selected from probability, algebraic combinatorics, and applications.
Graph Theory Structure and extremal properties of graphs. Topics are selected from: trees, networks, colorings, paths and cycles, connectivity, planarity, directed graphs, matchings, Ramsey theory, forbidden structures, enumeration, applications.
Theory of Linear Algebra Systems of linear equations, determinants, vector spaces, inner product spaces, linear transformations, eigenvalues and eigenvectors. Emphasis on writing proofs and results.
Principles of Biology I Introduction to the nature of life, including the diversity of microbial, plant, and animal life; the nature of heredity; evolution; and principles of ecology. Intended for life science majors.
Principles of Biology Laboratory I Principles of Biology Laboratory I
Principles of Biology II Introduction to the chemical, molecular, and cellular basis of life; form and function of microbial, plant, and animal life. Intended for life science majors.
Principles of Biology Laboratory II Principles of Biology Laboratory II
Fundamentals of Human Anatomy An introduction to human anatomy, beginning with cells and tissues, surveying all body systems, relating form to function. Systems covered include: integumentary, bones and joints, muscles, nervous, sensory, endocrine, circulatory, lymphatic, respiratory, digestive, urinary, and reproductive.
Fundamentals of Human Anatomy Laboratory Fundamentals of Human Anatomy Laboratory
Fundamentals of Human Physiology An introduction to human physiology, studying the function of all body systems. Systems covered include: integumentary, bones and joints, muscles, nervous, sensory, endocrine, circulatory, lymphatic and immune, respiratory, digestive, urinary, and reproductive.
Fundamentals of Human Physiology Laboratory Fundamentals of Human Physiology Laboratory
General Chemistry I The first semester of a two semester sequence which explores chemistry at a greater depth and with more emphasis on concepts, problems, and calculations than 163. Recommended for physical and biological science majors, chemical engineering majors, and all others intending to take 300-level chemistry courses. Principles and quantitative relationships, stoichiometry, chemical equilibrium, acid-base chemistry, thermochemistry, rates and mechanism of reactions, changes of state, solution behavior, atomic structure, periodic relationships, chemical bonding
Laboratory in General Chemistry I Laboratory in General Chemistry I
General Chemistry II General Chemistry II
How the Earth Works How does the earth work, what is it made of, and how does it change through time? Plate tectonics, Earth materials, landforms, structures, climate, and natural resources. Emphasis on the observations and hypotheses used to interpret earth system processes
How the Earth Works: Laboratory How the Earth Works: Laboratory
History of the Earth The Earth's physical and biological evolution; concepts of global tectonics. Methods used to decipher earth history
History of the Earth: Laboratory History of the Earth: Laboratory
Introduction to Classical Physics I For engineering and science majors. 3 hours of lecture each week plus 3 recitations and 1 laboratory every 2 weeks. Elementary mechanics including kinematics and dynamics of particles, work and energy, linear and angular momentum, conservation laws, rotational motion, oscillations, gravitation. Heat, thermodynamics, kinetic theory of gases; waves and sound.
Principles and Symmetries in Classical Physics I Covers all of mechanics; Kinematics and dynamics of particles, work and energy, linear and angular momentum, conservation laws, rotational motion, oscillations, gravitation, and extremum principles. Topics in kinetic theory, thermodynamics, waves and sound.
Introduction to Classical Physics II Fluid dynamics. Electric forces and fields. Electrical currents; DC circuits. Magnetic forces and fields: LR, LC, LCR circuits; Maxwell's equations; wave optics.
Principles and Symmetries in Classical Physics II Fluid dynamics, electrostatics, potentials and fields, currents, fields of moving charges, the magnetic field, electromagnetic induction, DC and AC circuits, Maxwell's equations and electromagnetic waves, electric and magnetic fields in matter. Topics in optics and special relativity.
Information Literacy Information Literacy / Critical Thinking and Communication Application of critical reading and thinking abilities to topics of civic and cultural importance. Introduction of basic oral, visual, and electronic communication principles to support writing development. Initiation of communication portfolio.
Written, Oral, Visual, and Electronic Composition Written, Oral, Visual, and Electronic Composition
Business Communication Rhetorical concepts and processes to successfully communicate individually and collaboratively via written, oral, visual, and electronic modes across a range of business disciplines. Covers strategies for analyzing audiences internal and external to an organization in order to communicate positive, neutral, and negative messages clearly, completely, correctly, and ethically; save an audiences time; and create goodwill.
Creative Writing: Nonfiction Workshop in writing imaginative essays, both critical and personal. Analytical reading, development of literary techniques. Individual and small group conferences.
Proposal and Report Writing Rhetorical concepts and processes to individually and collaboratively develop proposals for business, governmental, nonprofit, or other organizations and to report on the work completed both orally and in writing. Emphasizes the structure and classification of proposal and report types, qualitative and quantitative research methods, audience analysis, document design, and data visualization.
Technical Communication Rhetorical concepts and processes to successfully communicate technical information individually and collaboratively via written, oral, visual, and electronic modes. Emphasizes the major strategies for analyzing expert and lay audiences and adapting information to those audiences. Covers developing and designing usable technical documentation, visualizing data, and presenting technical information orally.

Foundations of Computing This course follows the core body of knowledge specified by the ACM which provides students with a broad overview of topics they might encounter within the major areas of computing. The course is taught at an introductory level and includes topics such as: history of computers, computer architecture, operating systems, web design and development, programming, database, software engineering, networking, and more.
Programming I This course covers basic operating system navigation and components of the program development process. The majority of the course covers basic problem solving and program design of a software application using a selected language. Topics presented and discussed depending on selected language include: thinking logically to solve problems, working with input/output devices, compilation and library use, structured programming and modularity concepts, conditional and iterative structures including recursion, object oriented design, data types and structures, and pointers
Object-Oriented Programming An introduction to the C++ language. Topics will include data types, control structures, functions, pointers, arrays, I/O streams, classes, objects, encapsulation, overloading, inheritance and use of these concepts in problem solving
Computational Structures An overview of the fundamentals of algorithmic, discrete mathematics applied to computation using a contemporary programming language. Topics include sets, functions, logic, matrices, relations, graphs, trees, regular expressions, grammars, finite state machines, and data encoding.
Client Side Web Development This course provides an introduction to client-side programming and Web page development. Subjects covered include responsive Web page design and dynamic Web page development. The course will explore various technologies such as HTML5, CSS3, JavaScript client-side programming, and an introduction to a JavaScript framework.
Introduction to Data Structures and Algorithms General principles of common data structures and design of efficient algorithms. Topics include: arrays, linked-lists, stacks, queues, trees, graphs, tables, storage and retrieval structures, searching, sorting, hashing, and algorithmic analysis. Emphasis will be on abstraction, efficiency, re-usable code, and object-oriented implementation.
Software Engineering I An Object Oriented Analysis and Design course which provides practical guidance on the construction of object-oriented systems. Its specific goals are to provide a sound understanding of the fundamental concepts of the Software Development Life-Cycle, to teach quality design and development style through applications of object-oriented project development within a variety of problem domains, and provide coverage of current Software Engineering models and diagramming techniques.
Network Fundamentals and Design Provide an understanding of the basic networking terminology.  This will cover the theory of networking, types of network protocols, and wide and local area networks.  The student should have a good understanding of network terminology at the completion of the course.
Introduction to Database Design and SQL This course is an introduction to databases, specifically focusing on the relational database model, database design and modeling and the structured query language (SQL). Students will become proficient at formulating data query requests using SQL and will also gain experience in database normalization and entity-relationship modeling.
Computer Architecture/Organization Computers are essential to modern life, yet most people use them with no understanding of how they accomplish everything they do. This course will explore how computers function from a technical perspective, allowing students to see why they work and are designed the way they are. The course will focus on Von Neumann computers, covering a variety of topics including logic gates, basic digital circuit concepts, number and data representation, the processor implementation, BIOS, buses, interrupts, addressing, memory management, and storage. The practical implementation of this knowledge will be examined by introducing assembly language code.
Associate Degree Assessment This course is to serve as an assessment tool whereby all AAS degree seeking students in the Department of Computer Science demonstrate core knowledge acquired from course studies in the discipline as specified in the AAS degree program.
Intermediate College Writing This course will focus on writing arguments, conducting research, and documenting sources. Students will continue to learn practices of successful academic writing including the writing process, writing for specific audiences, and collaboration with peers
Physics for Scientists and Engineers I First semester of a two-semester sequence in calculus-based physics, primarily for students in science, math, computer science, and pre engineering. This semester covers topics in mechanics, including kinematics, Newtons laws, and the conservation laws of energy, linear momentum, and angular momentum. Also covered are topics in gravity, fluid mechanics, waves, and thermodynamics.
Interpersonal and Small Group Communication Explores the dynamics of verbal and nonverbal communication in personal relationships and small groups. The emphasis is on practical application of course content to enhance interpersonal relationships and to achieve competence as group members.
Calculus I Limits, continuity, differentiation, integration
Introduction to Statistics Basic concepts of probability and statistics including data collection and analysis, correlation and regression, probability, discrete and continuous distributions (binomial, normal and t distributions), estimation and hypothesis testing, with an emphasis on applications and understanding of the main ideas
Probability and Statistics I Introductory probability theory and mathematical statistics, including applications
Professional and Technical Writing This course introduces students to the basic theories and practices of technical communication. Using audience, purpose, and context as their guides, students create various professional and technical documents, such as formal and informal reports, instructions, proposals, job application materials, brochures, web media, and presentations. Working both individually, and in collaboration, students analyze their rhetorical situation as they create usable and appropriate professional documents.
Business Communication Application of oral and written communication, including diversity and international aspects of communication
Introduction to Creative Writing In this Gen Ed course students will learn in a workshop setting to write original pieces in three genres that may include the following: short stories, poetry, creative non-fiction, and plays. As models for their own writing, students will read exemplary pieces from each genre taught from different eras and cultures, in order to build a vocabulary base. Thus, students will become familiar with aspects of storytelling such as story arc, characterization, and dialogue; and aspects of poetry such as rhyme, rhythm, and figurative language, for use in their own writing. Through regular exercises, students will generate ideas for creating original writing such as stories, poems, plays, and creative essays, and will refine oral and communicative skills. Students will critique and be critiqued by the entire class in order to revise early drafts, will analyze selected texts, and will evaluate their own and others work
Critical Thinking An introduction to informal logic, focusing on issues of logical form, standards of good and bad reasoning, and argumentative writing.
Information Literacy Competency Exam Information Literacy Competency Exam
﻿Mobile Application Development.  This project based course will teach fundamental principles of software development for the mobile device environment, emphasizing the application of numerous academic concepts and the new design and programming paradigms that stem from the use of mobile devices. Topics include user interfaces, event-based programming, interprocess communications, networking, mobile-specific capabilities and performance in a resource restricted environment.
Analysis of Algorithms. Topics include analyzing sequential and parallel algorithmic strategies such as greedy methods, divide and conquer strategies, dynamic programming, search and traversal techniques, and approximation algorithms; and analyzing specific algorithms falling into these classes, NP-Hard and NP-Complete problems.
Special Topics in Computer Science.  Special Topics in Computer Science.
General Chemistry Laboratory II. General Chemistry laboratory course for students majoring in science, engineering, or mathematics. Laboratory experience will demonstrate general chemistry principles and applications.
Computer Systems and Programming. Introduces students to computer systems from a programmer's perspective. Topics include data representation, assembly and machine-level representation of high-level language programs, the memory hierarchy, linking, exceptions, interrupts, processes and signals, virtual memory, and system-level I/O. Foundation for courses on compilers; networks; operating systems; and computer architecture, where a deeper understanding of systems-level issues is required.
Synthesis of Ethics and Law for the Computing Professional.  Practical course to become effective computer professional. Examines legal and ethical issues surrounding computer technology and its use, as well as the foundation building that is necessary to deal with those challenges. Applies philosophical bases for ethical decision making to modern concerns raised by computers and technology.
Computer Systems Architecture.  Computer subsystems and instruction set architectures. Single-cycle, multiple-cycle, and pipeline architectures. Memory hierarchy, cache, and virtual memory input-output processing.
Design Exhibition.  Capstone course focusing on design and successful implementation of major software project, encompassing broad spectrum of knowledge and skills, developed by team of students.
Introduction to Low-Level Programming.  Introduction to the language C, as well as operating system concepts, in UNIX, to prepare students for topics in systems programming.
Philosophy of Natural Sciences. Study of aims and methodology of science. Among the questions of concern are: What constitutes a good scientific explanation? What grounds are used for comparing rival theories? Is there a special method of scientific discovery?
Fundamentals of Communication.  Presents principles to develop appropriate and effective communication strategies in one-to-one and small group communication settings. Emphasizes analyzing and assessing communication skills to create and sustain effective communication in personal and professional relationships.
Analytic Geometry and Calculus III. Partial differentiation, multiple integrals, line and surface integrals, and three-dimensional analytic geometry.
Essentials of Computer Science.  Offers a broad overview of computer science designed to provide computer science majors with an introduction to their discipline. Fundamental computing concepts such as number representation, programming environments, communication tools, and basic network security measures are covered. Privacy and ethical use of computing are also discussed along with guest lectures to sample current computer science research.
Introductory Geology II. Earth processes in historical context. Topics include sedimentary rocks and principles, deformation and metamorphism, mountain building and plate tectonics, geologic time, fossils, and historical development of continents.
University Physics I Laboratory.  Experiments in mechanics, including techniques for recording, graphically and statistically analyzing, and reporting data. Offered by Physics & Astronomy.
Analysis of Algorithms.  Analyzes computational resources for important problem types by alternative algorithms and their associated data structures, using mathematically rigorous techniques. Specific algorithms analyzed and improved.
Analytic Geometry and Calculus II.  Methods of integration, conic sections, parametric equations, infinite series, and power series.
Computer Architecture. Introduces the concepts of a processor microarchitecture, from a pipelined processing unit, through a superscalar, to a multicore multithreaded computing system. Topics include instruction set architecture, single cycle processor, MIPS pipeline processor, precise state, parallel processing, superscalars, memory and cache organization, branch prediction, multicore processors, memory consistency, multi- and many-core cache coherence, and heterogeneous computing.
Introduction to Computer Statistical Packages.  Use of computer packages in statistical analysis of data. Topics include data entry, checking, and manipulation, and use of computer statistical packages for graphical procedures, basic descriptive and inferential procedures, and regression.
Data Structures.  Focuses on object-oriented programming with an emphasis on tools and techniques for developing moderate to large programs. Topics include use and implementation of linear and nonlinear data structures and the design and analysis of elementary algorithms.
Industry-Sponsored Senior Design Project. Senior design project course focusing on design and successful implementation of major software project specified by an industry sponsor, encompassing broad spectrum of knowledge and skills, developed by team of students. Requires final exhibition to faculty-industry panel.
General Chemistry II.  Fundamentals of colligative properties, reaction rates and equilibrium. Topics Include kinetics, properties of solutions, ionic equilibrium, chemical thermodynamics, electrochemistry, and nuclear chemistry.
Computer Communications and Networking.  Techniques and systems for communication of data between computational devices and layers of Internet Protocol Suite. Topics include role of various media and software components, local and wide area network protocols, network design, performance and cost considerations, and emerging advanced commercial technologies. Emphasizes TCP/IP family of protocols.
Intro Biology II Lecture.  Topics include animal (including human) structure, function, homeostatic mechanisms, organ systems, behavior, higher plant systems, and major concepts in ecology.
Single-Chip Microcomputers.  Explores designing with single-chip microcomputers and microcomputer interfacing. Topics include role of microcomputers compared with microprocessors and other computers, microcomputer architecture and organization, real-time control issues, assembly language programming for control, design of control software, input/output methods, design tools, and available single-chip microcomputers. Students select project and design, and construct system including single-chip microcomputer and ancillary hardware to implement control system.
Symbolic Logic.  Study of predicate calculi by means of a step-by-step construction of artificial languages. Topics include procedures for constructing a calculus, proof techniques, significant properties of predicate calculi, and procedures for recognizing phrases.
Discrete Mathematics I.  Introduces ideas of discrete mathematics and combinatorial proof techniques including mathematical induction, sets, graphs, trees, recursion, and enumeration.
Probability and Statistics for Engineers and Scientists I.  Introduction to probability and statistics with applications to computer science, engineering, operations research, and information technology. Basic concepts of probability, random variables and expectation, Bayes rule, bivariate distributions, sums of independent random variables, correlation and least squares estimation, central limit theorem, sampling distributions, confidence interval construction, and hypothesis testing for a single sample and two samples.
Digital System Design. Covers principles of digital logic and digital system design and implementation in VHDL. Topics include number systems; Boolean algebra; analysis, design, and minimization of combinational logic circuits; analysis and design of synchronous and asynchronous finite state machines; and introduction to VHDL and behavioral modeling of combinational and sequential circuits.
Linear Algebra.  Systems of linear equations, linear independence, linear transformations, inverse of a matrix, determinants, vector spaces, eigenvalues, eigenvectors, and orthogonalization.
Software Testing and Maintenance. Concepts and techniques for testing and modifying software in evolving environments. Topics include software testing at the unit, module, subsystem, and system levels; developer testing; automatic and manual techniques for generating test data; testing concurrent and distributed software; designing and implementing software to increase maintainability and reuse; evaluating software for change; and validating software changes.
Professional and Technical Writing. Intensive study and practice in various forms of professional and technical writing, including proposals, reports, instructions, news releases, white papers, and correspondence. Emphasizes writing for variety of audiences, both lay and informed, and writing within various professional and organizational contexts.
Numerical Analysis I.  Significant figures, round-off errors, iterative methods of solution of nonlinear equations of a single variable, solutions of linear systems, iterative techniques in matrix algebra, interpolation and polynomial approximation.
Computer Vision. Basic principles of visual perception and their implementation on computer systems. Topics include early visual processing, edge detection, segmentation, intrinsic images, image modeling, representation of visual knowledge, and image understanding. Students complete projects involving real images.
Introduction to Artificial Intelligence.  Principles and methods for knowledge representation, reasoning, learning, problem solving, planning, heuristic search, and natural language processing and their application to building intelligent systems in a variety of domains. LISP, PROLOG, or expert system programming language.
Device Driver Development.  Addresses device driver and kernel level software programming and development. The C programming language and program trouble shooting are reviewed. Basics of device driver software, Character driver operations and data structures, concurrency and race conditions, kernel timers, memory allocation, communications with hardware, interrupt handling, kernel data types, memory mapping and Direct Memory Access concepts are explored.
Digital Electronics and Logic Design Lab. Digital Electronics and Logic Design Lab.
Computer Communications and Networking.  Data communications and networking protocols, with study organized to follow layers of Internet Protocol Suite (TCP/IP family of protocols). Topics include role of various media and software components, local and wide area network protocols, network performance, and emerging advanced commercial technologies.
Probability and Statistics for Engineers and Scientists II. Multivariate probability distributions, variable transformations, properties of estimators, inference on means, variances, and proportions for two samples, contingency tables, goodness-of-fit test, nonparametric tests, simple linear regression, multiple linear regression, logistic regression, ANOVA, basic experimental design, basic resampling methods such as the bootstrap.
University Physics II Laboratory.  Experiments in mechanics, electricity, and magnetism, including techniques for recording, graphically and statistically analyzing, and reporting data.
Abstract Algebra.  Theory of groups, rings, fields.
Probability for Engineers.  Introduction to probability with applications to electrical and computer engineering, operations research, information technology, and economics. Basic concepts of probability, conditional probability, random variables and moments, specific probability distributions, multivariate distributions, moment-generating functions, limit theorems, and sampling distributions.
Digital Electronics. Introduces digital systems, circuits, and computers. Topics include binary systems and codes, digital logic gates and circuits, microelectronics and integrated circuits, coding and multiplexing, multivibrators, shift registers, counters, A/D converters, and elementary computer architecture.
Software Engineering.  An introduction to concepts, methods, and tools for the creation of large-scale software systems. Methods, tools, notations, and validation techniques to analyze, specify, prototype, and maintain software requirements. Introduction to object-oriented requirements modeling, including use of case modeling, static modeling, and dynamic modeling using the Unified Modeling Language (UML) notation. Concepts and methods for the design of large-scale software systems. Fundamental design concepts and design notations are introduced. A study of object-oriented analysis and design modeling using the UML notation. Students participate in a group project on software requirements, specification, and object-oriented software design.
Embedded Systems and Hardware Interfaces.  This course introduces embedded systems design through project-based activities. The platform runs on Linux and students design their own loT (Internet of Things) system as well as demonstrate dashboards with cloud-based data. Hardware interfaces and several types of sensors and actuators are incorporated as part of the projects. Students also learn how to simulate and test signal-conditioning circuits, eventually integrating those as part of their projects.
Game Programming I. Introduction to technologies and techniques used in modern computer games. Teams will explore the various facets of a complete design using sophisticated tools. Includes a project in which a game is prototyped; this prototype and initial design will serve as the starting point for the project.
Introductory Biology I.  Topics include chemistry of life, cell structure and function, Mendelian genetics, evolution, and diversity of life.
Data Mining.  Basic principles and methods for data analysis and knowledge discovery. Emphasizes developing basic skills for modeling and prediction and performance evaluation. Topics include system design; data quality, preprocessing, and association; event classification; clustering; biometrics; business intelligence; and mining complex types of data.
University Physics I. Calculus-based introductory physics sequence, designed primarily for science and engineering majors. Mechanics.
Operating Systems. Issues in multiprogramming. Covers concurrent processes and synchronization mechanisms; processor scheduling; memory, file, I/O, and deadlock management; performance of operating systems; and projects dealing with synchronization in multiprogrammed OS and virtual memory management.
General Chemistry I.  Fundamental principles of atomic and molecular structure; chemical bonding; basic concepts of chemical reactions and thermochemistry; properties of gases, liquids, and solids.
Computer Graphics.  Graphics principles and programming. Topics include graphics hardware, antialiasing, transformations, viewing, illumination, blending, texture mapping, color models, curves, surfaces, and animation.
Object-Oriented Programming. Thorough treatment of programming according to object-oriented principles. Introduces classes, interfaces, inheritance, polymorphism, and single dispatch as means to decompose problems. Covers intermediate programming techniques including error handling through exceptions, arrangement of source code into packages, and simple data structures. Intermediate debugging techniques and unit testing are covered.
General Chemistry Laboratory I.  General Chemistry laboratory course for students majoring in science, engineering, or mathematics. Laboratory experience will demonstrate general chemistry principles and applications.
Analytic Geometry and Calculus I.  Functions, limits, the derivative, maximum and minimum problems, the integral, and transcendental functions.
Computer Graphics.  Basic graphics principles and programming. Topics include scan conversion, transformation, viewing, lighting, blending, texture mapping, and some advanced graphics techniques.
Comparative Programming Languages. Key programming mechanisms described independently of particular machines or languages, including control, binding, procedural abstraction, types, and concurrency. Includes basic programming competence in several different types of programming languages, including a language that provides concurrency.
Introductory Geology I. Covers Earth, processes that operate within Earth and on surface, and human interaction with Earth. Topics include minerals, earthquakes and seismology, isostasy, igneous processes and rocks, paleomagnetism and plate tectonics, weathering, mass movements, rivers and streams, groundwater, glaciers, and marine processes.
Introduction to Computer Programming.  Rigorous introduction to problem solving through development of computer programs. Focuses on identifying algorithmic patterns in problems, describing problem solutions in high-level pseudocode, then implementing in a procedural programming language. Basic programming concepts are covered in detail including expressions, control structures, simple data types, and input/output. Program testing and debugging are discussed to verify that problems are solved correctly.
Language Processors and Programming Environments.  Survey of basic programming language processors and software development tools such as assemblers, interpreters, and compilers. Topics include design and construction of language processors, formal syntactic definition methods, parsing techniques, and code-generation techniques.
Human Factors Engineering.  Human information processing, inferential analysis, biases and heuristics in human information processing, support systems to aid in human information processing, human-system interaction, and software systems engineering considerations.
Formal Methods and Models.  Abstract concepts that underlie much advanced work in computer science, with major emphasis on formal languages, models of computation, logic, and proof strategies.
Systems Engineering Management.  Study of basics of systems engineering management. Includes engineering economics, planning, organizing, staffing, monitoring, and controlling process of designing, developing, and producing system to meet stated need in effective and efficient manner. Discusses management tools, processes, and procedures, including various engineering documentation templates, managerial processes, and dealing with personnel issues.
Introduction to Artificial Intelligence. Principles and methods for knowledge representation, reasoning, learning, problem solving, planning, heuristic search, and natural language processing and their application to building intelligent systems in a variety of domains. Uses LISP, PROLOG, or expert system programming language.
Probability.  Random variables, probability functions, special distributions, and limit theorems.
Introductory Biology II Laboratory.  The structure and function of major organ systems of animals and an examination of the structure and function of plants, emphasizing the higher plants.
Security Engineering.  Covers the software subsystems that are involved in defending computer systems. Studies threats and architecting solutions against them, including but not limited to access control and identity management, network and system security, intrusion detection and recovery systems, monitoring and forensic systems.
Introductory Statistics I. Elementary introduction to statistics. Topics include descriptive statistics, probability, and estimation and hypothesis testing for means and proportions. Statistical software used for assignments.
Language Processors. Basic programming language processors such as assemblers, interpreters, and compilers. Topics include design and construction of language processors, formal syntactic definition methods, parsing techniques, and code generation techniques. Lab includes construction of language processors and experience with programming environments.
Theory and Applications of Data Mining.  Concepts and techniques in data mining and multidisciplinary applications. Topics include databases; data cleaning and transformation; concept description; association and correlation rules; data classification and predictive modeling; performance analysis and scalability; data mining in advanced database systems, including text, audio, and images; and emerging themes and future challenges.
Database Concepts.  Covers basics to intermediate knowledge for the design, implementation, and use of relational database systems. Topics include the Entity-Relationship (ER) and Entity-Enhanced Relationship (EER) models for database design, Relational Algebra (RA), Structured Query Language (SQL), SQL programming techniques, functional dependencies and normalization, object and object-relational databases, and security. Students will practice to design, develop, and implement a relational ORACLE database and use the database for queries, transaction processing, and report generation.
Secure Programming and Systems. Fundamental principles and techniques for implementing secure computer systems. Topics include security and cryptography basics, vulnerability analysis, secure software development, and distributed system security. Projects involve designing and programming basic security tools, secure programs, and distributed systems.
University Physics II.  Waves, electricity, and magnetism.
Operating Systems.  Models of operating systems. Major functions including processes, memory management, I/O, interprocess communication, files, directories, shells, distributed systems, performance, and user interface.
Public Speaking.  Presents principles to develop effective presentations for public and professional settings while integrating appropriate technologies. Emphasizes analyzing audience; composing meaningful, coherent messages; conducting responsible research; developing effective arguments; and improving delivery skills to strengthen confidence and credibility.
Concurrent and Distributed Systems.  Practical issues in designing and implementing concurrent and distributed software. Topics include concurrent programming, synchronization, multithreading, local and wide-area network protocols, distributed computation, systems integration, and techniques for expressing coarsegrained parallelism at the application level. Projects involve network programming at application level.
Software Architectures.  Teaches how to design, understand, and evaluate software systems at an architectural level of abstraction. By end of course, students will be able to recognize major architectural styles in existing software systems, describe a system's architecture accurately, generate architectural alternatives to address a problem and choose from among them, design a medium-size software system that satisfies a specification of requirements, use existing tools to expedite software design, and evaluate the suitability of a given architecture in meeting a set of system requirements.
Database Systems. An introduction to database management with focus on architecting databases and using them in applications. Topics to be covered include: data modeling with the Entity-Relationship model, the relational data model and its formal languages, SQL, the theory of database design, object databases, XML and Web data.
Web Application Development.  A comprehensive introduction to the design and implementation of applications for the web, including client and server-side development. Exploration of principles for the design of web applications that are robust, scalable, and secure, that enable change and reuse, and that are usable for their intended purpose. Topics include client-server communication, asynchronous programming, persistence, security, web development tools, the document object model, templates and data-binding, interaction techniques, and site design for the web.
Autonomous Robotics. Covers various basic topics in autonomous robotics, such as autonomous architectures and their interaction with physical hardware, elementary kinematics and robot control, motion and trajectory planning, localization, task planning, learning and adaptation, modeling, and sensor fusion. Includes projects involving physical robots.
Introduction to Computer Science The goals of this class are to teach the syntax of C++ to students who already know how to program. Students are expected to be proficient at using conditionals, I/O, loops, and functions with arguments. Topics include: conditionals, I/O, files, functions, classes, pointers, dynamic memory, linear linked lists, and multi-dimensional arrays in C++, as well as program correctness, verification, and testing.
Data Structures Data abstraction with formal specification. Elementary algorithm analysis. Basic concepts of data and its representation inside a computer. Linear, linked, and orthogonal lists; tree structures. Data structures are implemented as data abstractions using pointer based implementations.
Programming Systems Students will become familiar with the language and operating system environment used in most upper division courses in the Computer Science major curriculum. Use of the file system, operating-system calls, and shell-level programming; low-level debugging of high-level programs. Programming exercises will include applications from data structures (e.g. B-trees) and memory management techniques.
Computer Systems Programming Introduction to computer systems from a software perspective. Topics include: Basic machine organization, System programming using C and assembly language, Introduction to system programming tools (gcc, makefile, gdb), Data representation (bits & bytes, characters, integers, floating point numbers), Implementation of control flow, procedure calls, and complex data types at machine level, Linking and loading, Exceptions and interrupts, Process control and signals, System calls, File I/O, Timing and improving program performance, Introduction to memory hierarchy, dynamic memory allocation techniques.
Discrete Structures I Introduces discrete structures and techniques for computing. Sets. Graphs and trees. Functions: properties, recursive definitions, solving recurrences. Relations: properties, equivalence, partial order. Proof techniques, inductive proof. Counting techniques and discrete probability.
Discrete Structures II Logic: propositional calculus, first-order predicate calculus. Formal reasoning: natural deduction, resolution. Applications to program correctness and automatic reasoning. Introduction to algebraic structures in computing.
Elements of Software Engineering Practical techniques of program development for medium-scale software produced by individuals. Software development from problem specification through design, implementation, testing, and maintenance. The fundamental design techniques of step-wise refinement and data abstraction. A software project will be carried through the development cycle.
Introduction to Operating Systems Introduction to the principles of operating systems and concurrent programming. Operating system services, file systems, resource management, synchronization. The concept of a process; process cooperation and interference. Introduction to networks, and protection and security. Examples drawn from one or more modern operating systems. Programming projects, including concurrent programming.
Principles of Programming Languages Syntax and semantics. Compilers and interpreters. Programs as data. Regular expressions and context free grammars. Programming paradigms, including procedural, functional, and object-oriented programming. Type systems, including dynamic and static typing disciplines. Binding, scope, data abstraction, and modularity. Denotational, operational, and axiomatic semantics. Introduction to program correctness.
Algorithms and Complexity Techniques for the design and analysis of algorithms. Case studies of existing algorithms (sorting, searching, graph algorithms, dynamic programming, matrix multiplication, fast Fourier transform.) NP-Completeness.
Social, Ethical, and Legal Implications of Computing History of computing, social context of computing, professional and ethical responsibilities, risks and liabilities of safety-critical systems, intellectual property, privacy and civil liberties, social implications of the Internet, computer crime, economic issues in computing.
Introduction to Database Management Systems Introduction to fundamental concepts of database management systems using primarily the relational model. Schema design and refinement. Query languages. Database application development environments. Overview of physical data organization, query optimization and processing, physical design, security, and transactions used in recovery and concurrency control.
Software Engineering Capstone I Emphasizes teamwork on a substantial project that will be developed for a real customer. The course integrates the knowledge and skills from the rest of the CS curriculum. This course creates an obligation for participation for two consecutive quarters.
Software Engineering Capstone II Emphasizes teamwork on a substantial project that will be developed for a real customer. The course integrates the knowledge and skills from the rest of the CS curriculum. This course creates an obligation for participation for two consecutive quarters.
Parallel Programming Lab Parallel Programming Lab
Accelerated Computing Lab Accelerated Computing Lab
Calculus I Differential calculus of functions of a single variable, including limits, the definition and computation of the derivative, and applications of the derivative.
Calculus II Integral calculus of functions of a single variable, including the Fundamental Theorem of Calculus, numerical integration and applications.
Calculus III Introduction to differential equations, infinite series, parametric equations, polar coordinates, and conic sections.
Vector Analysis Modern vector methods with applications for students of mathematics, physics, and engineering.
Number Theory A presentation of the properties of numbers as found in the theory of divisibility, congruence, diophantine equations, continued fractions, and algebraic numbers.
Computing Fundamentals I Intended as an overview of computers and computer technology for non-CS majors, this course is often described as a computer literacy course. The primary focus is on the personal computer and personal productivity software. Hardware components of computers such as processors, memory, and input/output devices are discussed and compared
Computing Fundamentals II Introduction to programming, appropriate for non-CS majors. Introduction to the logical thought processes and problem-solving strategies used when programming. Concepts presented include problem definition and requirements gathering, generating a description of a step-by-step solution (the algorithm), writing a program, testing, and documentation.
Computing Fundamentals III Introduction to Web programming and associated web tool usage for non-CS majors. Centering around the more sophisticated aspects of browsers. Web pages that represent the input to browsers are defined. In-depth study of HTML, VBScript and JavaScript. Brief exploration into CGI Scripts and other server-side tools. Course differentiates between Web page design (a graphics designer's role) and Web page programming, taking the results of their work and committing it to workable code.
Introduction to Programming and Problem-Solving Introduction to fundamental concepts of computer science. Problem solving, algorithm and program design, data types, loops, control structures, subprograms, and arrays. Learn to write programs in a high level programming language.
Introductory Technical Writing Practical experience in forms of technical communication, emphasizing basic organization and presentation of technical information. Focuses on strategies for analyzing the audience and its information needs.
Mathematics Tutoring Training in one-to-one and small-group tutoring over a wide range of mathematical topics. Mth 191: tutoring in arithmetic and other non-university courses. Mth 192: tutoring in freshman-level mathematics. Mth 193: tutoring in sophomore junior- and senior-level mathematics. Required field work consists of providing tutoring service in the community or University.
Introduction to Electric Power Systems Electric circuit theory with application to power handling electric circuits. Modeling and behavior of electromechanical devices, including magnetic circuits, motors, and generators. Operational fundamentals of synchronous. Interconnection of generators and motors with electric power transmission and distribution circuits. Power generation, including alternative and sustainable sources. Incorporation of energy storage in power systems. Students taking graduate version complete additional assignments.
Database Systems Topics related to the engineering and design of database systems, including data models; database and schema design; schema normalization and integrity constraints; query processing; query optimization and cost estimation; transactions; recovery; concurrency control; isolation and consistency; distributed, parallel and heterogeneous databases; adaptive databases; trigger systems; pub-sub systems; semi structured data and XML querying. Lecture and readings from original research papers. Semester-long project and paper. Students taking graduate version complete different assignments. Enrollment may be limited.
Introduction to EECS via Communication Networks Studies key concepts, systems, and algorithms to reliably communicate data in settings ranging from the cellular phone network and the Internet to deep space. Weekly laboratory experiments explore these areas in depth. Topics presented in three modules - bits, signals, and packets - spanning the multiple layers of a communication system. Bits module includes information, entropy, data compression algorithms, and error correction with block and convolutional codes. Signals module includes modeling physical channels and noise, signal design, filtering and detection, modulation, and frequency-division multiplexing. Packets module includes switching and queuing principles, media access control, routing protocols, and data transport protocols.
Introductory Digital Systems Laboratory Introduces digital systems with lectures and labs on logic, flip flops,  FPGAs, counters, timing, synchronization, and finite-state machines. Includes overview of accelerometers, gyros, time of light and other modern sensors.  Prepares students for the design and implementation of a final project of their choice: games, music, digital filters, wireless communications, video, or graphics.  Extensive use of Verilog for describing and implementing digital logic designs.
Medical Device Design Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs - via a deterministic design process - that are developed and optimized using analytical techniques. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
Introduction to EECS via Interconnected Embedded Systems Introduction to embedded systems in the context of connected devices, wearables and the "Internet of Things" (IoT). Topics include microcontrollers, energy utilization, algorithmic efficiency, interfacing with sensors, networking, cryptography, and local versus distributed computation. Students design, make, and program an internet-connected wearable or handheld device. In final project, student teams design and demo their own cloud-connected IoT system. Enrollment limited; preference to first- and second-year students.
Software Studio Covers design and implementation of software systems, using web applications as the platform. Emphasizes the role of conceptual design in achieving clarity, simplicity, and modularity. Students complete open-ended individual assignments and a major team project. Enrollment may be limited.
Power Electronics Laboratory Introduces the design and construction of power electronic circuits and motor drives. Laboratory exercises include the construction of drive circuitry for an electric go-cart, flash strobes, computer power supplies, three-phase inverters for AC motors, and resonant drives for lamp ballasts and induction heating. Basic electric machines introduced include DC, induction, and permanent magnet motors, with drive considerations. Provides instruction in written and oral communication. Students taking independent inquiry version 6.1131 expand the scope of their laboratory project.
Mathematics for Computer Science Elementary discrete mathematics for computer science and engineering. Emphasis on mathematical definitions and proofs as well as on applicable methods. Topics include formal logic notation, proof methods; induction, well-ordering; sets, relations; elementary graph theory; asymptotic notation and growth of functions; permutations and combinations, counting principles; discrete probability. Further selected topics include recursive definition and structural induction, state machines and invariants, integer congruences, recurrences, generating functions.
Automata, Computability, and Complexity Mathematical introduction to questions concerning the definition of computation, and what problems can be solved by computers. Considers what problems can be efficiently solved by way of finite automata, circuits, Turing machines, and communication complexity. Provides complete, rigorous answers to the questions in some cases; others are major open problems. Builds skills in classifying computational problems in terms of their difficulty. Discusses other fundamental issues, including the Church-Turing Thesis, the P versus NP problem, and the power of randomness.
Oral Communication Provides instruction in aspects of effective technical oral presentations and exposure to communication skills useful in a workplace setting. Students create, give and revise a number of presentations of varying length targeting a range of different audiences. Enrollment may be limited.
Advanced Natural Language Processing Introduces the study of human language from a computational perspective, including syntactic, semantic and discourse processing models. Emphasizes machine learning methods and algorithms. Uses these methods and models in applications such as syntactic parsing, information extraction, statistical machine translation, dialogue systems, and summarization. Students taking graduate version complete additional assignments.
Computational Biology: Genomes, Networks, Evolution Covers the algorithmic and machine learning foundations of computational biology, combining theory with practice. Principles of algorithm design, influential problems and techniques, and analysis of large-scale biological datasets. Topics include (a) genomes: sequence analysis, gene finding, RNA folding, genome alignment and assembly, database search; (b) networks: gene expression analysis, regulatory motifs, biological network analysis; (c) evolution: comparative genomics, phylogenetics, genome duplication, genome rearrangements, evolutionary theory. These are coupled with fundamental algorithmic techniques including: dynamic programming, hashing, Gibbs sampling, expectation maximization, hidden Markov models, stochastic context-free grammars, graph clustering, dimensionality reduction, Bayesian networks.
Principles and Practice of Assistive Technology Students work closely with people with disabilities to develop assistive and adaptive technologies that help them live more independently. Covers design methods and problem-solving strategies; human factors; human-machine interfaces; community perspectives; social and ethical aspects; and assistive technology for motor, cognitive, perceptual, and age-related impairments. Prior knowledge of one or more of the following areas useful: software; electronics; human-computer interaction; cognitive science; mechanical engineering; control; or MIT hobby shop, MIT PSC, or other relevant independent project experience.
Fields, Forces and Flows in Biological Systems Introduction to electric fields, fluid flows, transport phenomena and their application to biological systems. Flux and continuity laws, Maxwell's equations, electro-quasistatics, electro-chemical-mechanical driving forces, conservation of mass and momentum, Navier-Stokes flows, and electrokinetics. Applications include biomolecular transport in tissues, electrophoresis, and microfluidics.
Introductory Analog Electronics Laboratory Introductory experimental laboratory explores the design, construction, and debugging of analog electronic circuits. Lectures and laboratory projects in the first half of the course investigate the performance characteristics of semiconductor devices (diodes, BJTs, and MOSFETs) and functional analog building blocks, including single-stage amplifiers, op amps, small audio amplifier, filters, converters, sensor circuits, and medical electronics (ECG, pulse-oximetry). Projects involve design, implementation, and presentation in an environment similar to that of industry engineering design teams. Instruction and practice in written and oral communication provided. Opportunity to simulate real-world problems and solutions that involve tradeoffs and the use of engineering judgment.
Computer Language Engineering Analyzes issues associated with the implementation of higher-level programming languages. Fundamental concepts, functions, and structures of compilers. The interaction of theory and practice. Using tools in building software. Includes a multi-person project on compiler design and implementation.
Introduction to Nanoelectronics Transistors at the nanoscale. Quantization, wavefunctions, and Schrodinger's equation. Introduction to electronic properties of molecules, carbon nanotubes, and crystals. Energy band formation and the origin of metals, insulators and semiconductors. Ballistic transport, Ohm's law, ballistic versus traditional MOSFETs, fundamental limits to computation.
Design and Fabrication of Microelectromechanical Systems Provides an introduction to microsystem design. Covers material properties, microfabrication technologies, structural behavior, sensing methods, electromechanical actuation, thermal actuation and control, multi-domain modeling, noise, and microsystem packaging. Applies microsystem modeling, and manufacturing principles to the design and analysis a variety of microscale sensors and actuators (e.g., optical MEMS, bioMEMS, and inertial sensors). Emphasizes modeling and simulation in the design process. Students taking the graduate version complete additional assignments.
Foundations of Computational and Systems Biology Provides an introduction to computational and systems biology. Includes units on the analysis of protein and nucleic acid sequences, protein structures, and biological networks. Presents principles and methods used for sequence alignment, motif finding, expression array analysis, structural modeling, structure design and prediction, and network analysis and modeling. Techniques include dynamic programming, Markov and hidden Markov models, Bayesian networks, clustering methods, and energy minimization approaches. Exposes students to emerging research areas. Designed for students with strong backgrounds in either molecular biology or computer science. Some foundational material covering basic programming skills, probability and statistics is provided for students with less quantitative backgrounds. Students taking graduate version complete additional assignments.
Computational Cognitive Science Introduction to computational theories of human cognition. Focus on principles of inductive learning and inference, and the representation of knowledge. Computational frameworks covered include Bayesian and hierarchical Bayesian models; probabilistic graphical models; nonparametric statistical models and the Bayesian Occam's razor; sampling algorithms for approximate learning and inference; and probabilistic models defined over structured representations such as first-order logic, grammars, or relational schemas. Applications to understanding core aspects of cognition, such as concept learning and categorization, causal reasoning, theory formation, language acquisition, and social inference. Graduate students complete a final project.
Microcomputer Project Laboratory Introduces analysis and design of embedded systems. Microcontrollers provide adaptation, flexibility, and real-time control. Emphasizes construction of complete systems, including a five-axis robot arm, a fluorescent lamp ballast, a tomographic imaging station (e.g., a CAT scan), and a simple calculator. Presents a wide range of basic tools, including software and development tools, programmable system on chip, peripheral components such as A
Computation Structures Introduces architecture of digital systems, emphasizing structural principles common to a wide range of technologies. Multilevel implementation strategies; definition of new primitives (e.g., gates, instructions, procedures, and processes) and their mechanization using lower-level elements. Analysis of potential concurrency; precedence constraints and performance measures; pipelined and multidimensional systems. Instruction set design issues; architectural support for contemporary software structures.
Ethics for Engineers - Independent Inquiry Explores the ethical principles by which an engineer ought to be guided. Integrates foundational texts in ethics with case studies illustrating ethical problems arising in the practice of engineering. Readings from classic sources including Aristotle, Kant, Machiavelli, Hobbes, Locke, Rousseau, Franklin and Tocqueville. Case studies include articles and films that address engineering disasters, safety, ethical codes, biotechnology, the internet and AI, and the ultimate scope and aims of engineering.  To satisfy the independent inquiry component of this subject, students expand the scope of their term project. Students taking 20.005 focus their term project on a problem in biological engineering in which there are intertwined ethical and technical issues.
Advances in Computer Vision Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Covers topics complementary to 6.801. Students taking graduate version complete additional assignments.
Introduction to Algorithms Introduction to mathematical modeling of computational problems, as well as common algorithms, algorithmic paradigms, and data structures used to solve these problems. Emphasizes the relationship between algorithms and programming, and introduces basic performance measures and analysis techniques for these problems.
Digital and Computational Photography Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
Psychoacoustics Project Laboratory Introduces the methods used to measure human auditory abilities. Discusses auditory function, principles of psychoacoustic measurement, models for psychoacoustic performance, and experimental techniques. Project topics: absolute and differential auditory sensitivity, operating characteristics of human observers, span of auditory judgment, adaptive measurement procedures, and scaling sensory magnitudes. Knowledge of probability helpful. Students engage in extensive written and oral communication exercises.
Design and Analysis of Algorithms Techniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics include sorting; search trees, heaps, and hashing; divide-and-conquer; dynamic programming; greedy algorithms; amortized analysis; graph algorithms; and shortest paths. Advanced topics may include network flow; computational geometry; number-theoretic algorithms; polynomial and matrix calculations; caching; and parallel computing.
Fundamentals of Programming Introduces fundamental concepts of programming. Designed to develop skills in applying basic methods from programming languages to abstract problems. Topics include programming and Python basics, computational concepts, software engineering, algorithmic techniques, data types, and recursion.  Lab component consists of software design, construction, and implementation of design. Enrollment may be limited.
Introduction to EECS via Robotics An integrated introduction to electrical engineering and computer science, taught using substantial laboratory experiments with mobile robots. Key issues in the design of engineered artifacts operating in the natural world: measuring and modeling system behaviors; assessing errors in sensors and effectors; specifying tasks; designing solutions based on analytical and computational models; planning, executing, and evaluating experimental tests of performance; refining models and designs. Issues addressed in the context of computer programs, control systems, probabilistic inference problems, circuits and transducers, which all play important roles in achieving robust operation of a large variety of engineered systems.
Introduction to Computer Science Programming in Python Introduction to computer science and programming for students with little or no programming experience. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity. Meets with 6.00 first half of term. Credit cannot also be received for 6.00. Combination of 6.0001 and 6.0002 counts as REST subject. Final given in the seventh week of the term.
Robotics: Science and Systems Presents concepts, principles, and algorithmic foundations for robots and autonomous vehicles operating in the physical world. Topics include sensing, kinematics and dynamics, state estimation, computer vision, perception, learning, control, motion planning, and embedded system development. Students design and implement advanced algorithms on complex robotic platforms capable of agile autonomous navigation and real-time interaction with the physical word. Students engage in extensive written and oral communication exercises. Enrollment limited.
Solid-State Circuits Analysis and design of transistor circuits, based directly on the semiconductor physics and transistor circuit models developed in 6.012. High-frequency and low-frequency design calculations and simulation of multistage transistor circuits. Trans-linear circuits. Introduction to operational-amplifier design and application. Some previous laboratory experience assumed.
Artificial Intelligence Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals.
Foundations of Information Policy Studies the growth of computer and communications technology and the new legal and ethical challenges that reflect tensions between individual rights and societal needs. Topics include computer crime; intellectual property restrictions on software; encryption, privacy, and national security; academic freedom and free speech. Students meet and question technologists, activists, law enforcement agents, journalists, and legal experts. Instruction and practice in oral and written communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
Seminar in Undergraduate Advanced Research Instruction in effective undergraduate research, including choosing and developing a research topic, surveying previous work and publications, research topics in EECS, industry best practices, design for robustness, technical presentation, authorship and collaboration, and ethics. Students engage in extensive written and oral communication exercises, in the context of an approved advanced research project. A total of 12 units of credit is awarded for completion of the Fall and subsequent Spring term offerings. Application required; consult EECS SuperUROP website for more information.
Performance Engineering of Software Systems Project-based introduction to building efficient, high-performance and scalable software systems. Topics include performance analysis, algorithmic techniques for high performance, instruction-level optimizations, vectorization, cache and memory hierarchy optimization, and parallel programming.
The Human Intelligence Enterprise Analyzes seminal work directed at the development of a computational understanding of human intelligence, such as work on learning, language, vision, event representation, commonsense reasoning, self reflection, story understanding, and analogy. Reviews visionary ideas of Turing, Minsky, and other influential thinkers. Examines the implications of work on brain scanning, developmental psychology, and cognitive psychology. Emphasis on discussion and analysis of original papers. Students taking graduate version complete additional assignments. Enrollment limited.
Biomolecular Feedback Systems Comprehensive introduction to dynamics and control of biomolecular systems with emphasis on design/analysis techniques from control theory. Provides a review of biology concepts, regulation mechanisms, and models. Covers basic enabling technologies, engineering principles for designing biological functions, modular design techniques, and design limitations. Students taking graduate version complete additional assignments.
Biological Circuit Engineering Laboratory Students assemble individual genes and regulatory elements into larger-scale circuits; they experimentally characterize these circuits in yeast cells using quantitative techniques, including flow cytometry, and model their results computationally. Emphasizes concepts and techniques to perform independent experimental and computational synthetic biology research. Discusses current literature and ongoing research in the field of synthetic biology. Instruction and practice in oral and written communication provided. Enrollment limited.
Interactive Music Systems Explores audio synthesis, musical structure, human computer interaction (HCI), and visual presentation for the creation of interactive musical experiences. Topics include audio synthesis; mixing and looping; MIDI sequencing; generative composition; motion sensors; music games; and graphics for UI, visualization, and aesthetics. Includes weekly programming assignments in python. Teams build an original, dynamic, and engaging interactive music system for their final project.
Modern Optics Project Laboratory Lectures, laboratory exercises and projects on optical signal generation, transmission, detection, storage, processing and display. Topics include polarization properties of light; reflection and refraction; coherence and interference; Fraunhofer and Fresnel diffraction; holography; Fourier optics; coherent and incoherent imaging and signal processing systems; optical properties of materials; lasers and LEDs; electro-optic and acousto-optic light modulators; photorefractive and liquid-crystal light modulation; display technologies; optical waveguides and fiber-optic communication systems; photodetectors. Students may use this subject to find an advanced undergraduate project. Students engage in extensive oral and written communcation exercises. Recommended prerequisite: 8.03.
Elements of Software Construction Introduces fundamental principles and techniques of software development: how to write software that is safe from bugs, easy to understand, and ready for change. Topics include specifications and invariants; testing, test-case generation, and coverage; abstract data types and representation independence; design patterns for object-oriented programming; concurrent programming, including message passing and shared memory concurrency, and defending against races and deadlock; and functional programming with immutable data and higher-order functions. Includes weekly programming exercises and larger group programming projects.
Introduction to Machine Learning Introduces principles, algorithms, and applications of machine learning from the point of view of modeling and prediction; formulation of learning problems; representation, over-fitting, generalization; clustering, classification, probabilistic modeling; and methods such as support vector machines, hidden Markov models, and neural networks. Students taking graduate version complete additional assignments. Meets with 6.862 when offered concurrently. Recommended prerequisites: 6.006 and 18.06. Enrollment may be limited; no listeners.
Electrical Engineering and Computer Science Project Individual experimental work related to electrical engineering and computer science. Student must make arrangements with a project supervisor and file a proposal endorsed by the supervisor. Departmental approval required. Written report to be submitted upon completion of work.
Large-scale Symbolic Systems Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
User Interface Design and Implementation Examines human-computer interaction in the context of graphical user interfaces. Covers human capabilities, design principles, prototyping techniques, evaluation techniques, and the implementation of graphical user interfaces. Includes short programming assignments and a semester-long group project. Students taking the graduate version also have readings from current literature and additional assignments. Enrollment limited.
Computer Graphics Introduction to computer graphics algorithms, software and hardware. Topics include ray tracing, the graphics pipeline, transformations, texture mapping, shadows, sampling, global illumination, splines, animation and color.
Fundamentals of Photonics Covers the fundamentals of optics and the interaction of light and matter, leading to devices such as light emitting diodes, optical amplifiers, and lasers. Topics include classical ray, wave, beam, and Fourier optics; Maxwell's electromagnetic waves; resonators; quantum theory of photons; light-matter interaction; laser amplification; lasers; and semiconductors optoelectronics. Students taking graduate version complete additional assignments.
Machine Vision Deriving a symbolic description of the environment from an image. Understanding physics of image formation. Image analysis as an inversion problem. Binary image processing and filtering of images as preprocessing steps. Recovering shape, lightness, orientation, and motion. Using constraints to reduce the ambiguity. Photometric stereo and extended Gaussian sphere. Applications to robotics; intelligent interaction of machines with their environment. Students taking the graduate version complete different assignments.
Computer Systems Engineering Topics on the engineering of computer software and hardware systems: techniques for controlling complexity; strong modularity using client-server design, operating systems; performance, networks; naming; security and privacy; fault-tolerant systems, atomicity and coordination of concurrent activities, and recovery; impact of computer systems on society. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Includes a single, semester-long design project. Students engage in extensive written communication exercises. Enrollment may be limited.
Strobe Project Laboratory Application of electronic flash sources to measurement and photography. First half covers fundamentals of photography and electronic flashes, including experiments on application of electronic flash to photography, stroboscopy, motion analysis, and high-speed videography. Students write four extensive lab reports. In the second half, students work in small groups to select, design, and execute independent projects in measurement or photography that apply learned techniques. Project planning and execution skills are discussed and developed over the term. Students engage in extensive written and oral communication exercises. Enrollment limited.
Microcomputer Project Laboratory - Independent Inquiry Introduces analysis and design of embedded systems. Microcontrollers provide adaptation, flexibility, and real-time control. Emphasizes construction of complete systems, including a five-axis robot arm, a fluorescent lamp ballast, a tomographic imaging station (e.g., a CAT scan), and a simple calculator. Presents a wide range of basic tools, including software and development tools, programmable system on chip, peripheral components such as A
Introduction to EECS via Medical Technology Explores biomedical signals generated from electrocardiograms, glucose detectors or ultrasound images, and magnetic resonance images. Topics include physical characterization and modeling of systems in the time and frequency domains; analog and digital signals and noise; basic machine learning including decision trees, clustering, and classification; and introductory machine vision. Labs designed to strengthen background in signal processing and machine learning. Students design and run structured experiments, and develop and test procedures through further experimentation.
Constructive Computer Architecture Illustrates a constructive (as opposed to a descriptive) approach to computer architecture. Topics include combinational and pipelined arithmetic-logic units (ALU), in-order pipelined microarchitectures, branch prediction, blocking and unblocking caches, interrupts, virtual memory support, cache coherence and multicore architectures. Labs in a modern Hardware Design Language (HDL) illustrate various aspects of microprocessor design, culminating in a term project in which students present a multicore design running on an FPGA board.
Multicore Programming Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.
Feedback System Design Learn-by-design introduction to continuous and discrete-time system modeling and feedback control. Topics include performance metrics; time- and frequency-domain model extraction: classical control topics, such as dominant pole, PID, and lead-lag compensation; and state-space control topics, such as eigenvalue assignment, linear-quadratic regulators, and observer systems. In lab, students combine circuits, sensors, actuators, algorithms, and a high-performance micro-controller to address problems such as controlling the angle of a propeller-levitated robot arm, stabilizing magnetic levitation, accelerating scans in a tilted-mirror laser imager, eliminating interference in a PWM-based audio amplifier, balancing a two-wheel vehicle, or multi-axis positioning.
Power Electronics Laboratory - Independent Inquiry Introduces the design and construction of power electronic circuits and motor drives. Laboratory exercises include the construction of drive circuitry for an electric go-cart, flash strobes, computer power supplies, three-phase inverters for AC motors, and resonant drives for lamp ballasts and induction heating. Basic electric machines introduced include DC, induction, and permanent magnet motors, with drive considerations. Provides instruction in written and oral communication. To satisfy the independent inquiry component of this subject, students expand the scope of their laboratory project.
Introduction to Computer Science I Theory and practice of computer science. Algorithm development and analysis; data abstraction techniques; elementary data structures; dynamic memory manipulation; debugging; and program design issues.
Introduction to Computer Science II Theory and practice of computer science. Algorithm development and analysis; data abstraction techniques; elementary data structures; dynamic memory manipulation; debugging; and program design issues. Computer systems and applications.
Introduction to Computing Initial exploration of computing, including comparison of the various subfields. A wide range of issues, including fundamental concepts, selected current topics and the role of both computing and computing professionals in organizations and in society are also discussed.
Introduction to Internet Technologies Introductory course exploring the fundamentals of Internet communications with an emphasis on the World Wide Web. Students develop an understanding of the Internet's underlying technologies and learn how to utilize them as contributing members of the Web community. Students become proficient with creating and publishing Web pages using HTML and CSS.
Calculus I Calculus of one variable covering limits, derivatives of algebraic, trigonometric, exponential, and logarithmic functions; applications include curve sketching, max-min problems, related rates, and volume and area problems.
Calculus II Second course in calculus of one argument, techniques and applications of integration, polar coordinates, and series.
First-Year Writing Training to write more skillfully and to read with more appreciation and discernment.
Introduction to Digital Systems Fundamental analysis and design principles. Number systems, codes, Boolean algebra, and combinational and sequential digital circuits. Lab: student-built systems using modern integrated circuit technology and an introductory design session on a CAD workstation.
Data Structures and Introduction to Algorithms Reviews basic data structures; advanced data structures such as graphs, B-trees, and AVL trees; abstract data structure design and programming techniques; use of data abstraction language. Introduction to algorithm analysis.
Mathematical Proof Introduces reading and writing proofs in mathematics. The basic language of mathematics common to all branches of the subject, especially set theory and basic logic.
Computer Organization Basic computer structure, including arithmetic, memory, control, and input/output units; the trade-offs between hardware, instruction sets, speed, and cost. Laboratory experiments involving machine language programming and I/O interfacing using microcomputers.
Assembly Language Programming and Machine Organization Assembly language programming and machine organization: program and data representation; registers, instructions, and addressing modes; assemblers and linkers. Impact of hardware on software and software on hardware.
Introduction to the Theory of Computation Review of sets, relations, and languages. Induction and diagonalization. Finite automata, context-free languages, pushdown automata. Basic complexity theory.
Programming Language Concepts and Features Explores the main features of modern, high-level, general purpose programming languages from the user (programmer) point of view. Provides students with an opportunity to use non-imperative programming paradigms, such as object-oriented, functional, and logical, and to learn how specific features of such languages can be used efficiently in solving programming problems.
Algorithms An introduction to important concepts in the design and analysis of algorithms and data structures, including implementation, complexity analysis, and proofs of correctness.
Compiler Design Formal languages and formal techniques for syntax analysis and parsing; organization of the compiler and its data structures; code generation. LL and LR parsing; automatic generation of scanners and parsers from high level descriptions. Implementation of features from imperative and object-oriented languages.
Machine Learning An introduction to fundamental concepts and common methods in machine learning. In addition to theoretical topics, the course involves hands-on experience in making predictions using synthetic and real-world datasets.
Server-side Web Development An intermediate-level examination of the theory and practice of developing server-side applications for the World Wide Web. Students will learn practical techniques for designing and implementing data-driven Web sites through the use of server-side processing. Working knowledge of HTML, CSS, and some programming language is required.
Client-side Web Development An intermediate-level examination of the theory and practice of developing client-side applications for the World Wide Web. Students will learn practical techniques for designing and implementing dynamic Web sites through the use of client-side processing. Working knowledge of HTML, CSS, and some programming language is required.
Senior Project I First semester of the capstone design experience. Modern software engineering practices and tools are surveyed and applied in team projects.
Senior Project II Senior Project II

Introductory Psychology Psychology is fundamental to every field in academic study. This course is designed to teach the student a basic understanding of human behavior as well as emotional and cognitive development. Coursework incorporates terminology, principles, and foundational theories that comprise modern concepts of introductory psychology.
Interpersonal Communication This course explores the importance of effective interpersonal communication. This course covers: how interpersonal communication impacts an individual, how to recognize the different methods of communication and establishing and maintaining personal and professional relationships through effective communication.
Introductory Written Communication The workshop style course focuses on building confidence in writing as students progress through the process of choosing essay topics, developing introductory paragraphs and thesis statements, creating effective body paragraphs and topic sentences, and drafting conclusion paragraphs.
Professional Written Communications Throughout the course, students will incorporate college-level research into their writing, which includes identifying credible research and using citations following CTU APA guidelines.
Modern American History: 1950 to the 21st Century This course focuses on the key people, social experiments, and technologies that continue to impact our lives. Particular attention is paid to the latter half of the 20th Century and the dawn of a new millennium in America – a time that, through the lens of history, both gives us pause and inspires hope for the future.
College Algebra for Technical Programs Functions are introduced, including their definition, general properties of zeroes, extreme values, symmetry, transformations, and graphs. Special attention is given to linear, rational, radical, and quadratic equations. Additional topics include computation with complex numbers, solving systems of linear equations with matrices and determinants, and solving rational and radical equations and inequalities with absolute value.
Introduction to Ethics This course is designed to provide students a basic understanding of moral and ethical theories and concepts. The activities and discussions encourage students to explore and solve ethical dilemmas by identifying and applying moral and ethical theories.
Introduction to the Sciences This course is designed to provide foundational knowledge in and foster an appreciation for the many dynamic disciplines –such as chemistry, physics, biology, and geology – within this robust field. This course is designed for students to explore the basic tenets of scientific thinking, including the Scientific Method, as well as other quantitative and qualitative approaches designed to enable them to draw meaningful conclusions about the world around them.
Science and Technology- Laboratory Course This is a learning experience that complements the Introduction to the Sciences course. Since the course addresses how scientific thinking and the resultant technology has changed modern life, this lab will provide students with experiences in the scientific approaches of different sciences covered, such as: biology, chemistry, physics, geology and astronomy.
Environmental Science and Sustainability This course analyzes the interrelationships between the natural environment and human activities. In this course, students are taught about the preservation and conservation of natural resources and the resilience of the natural environment with respect to the carrying capacity of the earth.
Social Perspectives on Race, Gender, and Class There is an interconnection between gender, race, and class that not only forms our individual identities but also influences how we view the world and others. This course explores how our personal perspectives mold the lens through which we observe our interactions with others.
Academic and Career Success This course introduces effective academic strategies and resources integrating them with career planning methods that can be leveraged to pursue future academic and professional goals.
Computer Architecture This course studies computer organization and design. Topics include digital logic and digital systems, machine level representation of data, memory system organization and architecture, computer interfacing and multiprocessing.
Problem Solving in Computer Science The objective of this course is to introduce students to the foundational aspects of Computer Science as a discipline. Students will then be provided with an overview to core Computer Science knowledge areas. We will discuss the spectrum of computation technologies and their typical applications.
Principles of Programming Languages This course provides a comprehensive introduction of programming languages including assembler, scripting, procedural, and Object-Oriented languages. For each type of programming languages, construction components and techniques will be presented and the main application suitability will also be discussed with real world examples.
Introduction of Programming This course introduces students to an introductory programming language which can demonstrate several common types of programming models such as scripting, procedural, and object-oriented programming in one language. The course covers algorithmic logic, basic declarations and statements, control structures, data and program design, basic concepts of object-orientation, and also covers how to organize multiple program components into a single programming project.
Python Programming This course will give students the opportunity to extend their programming skills through use of the Python programming language. The foundation of object-oriented and event-driven programming will be discussed and applied in this course. Topics studied will include the use of data structures, the creation of classes and objects, and the application of inheritance and polymorphism, etc.
SQL Programming This course will give students the opportunity to extend their database knowledge and skills through applying the theory into practical applications implemented by programming in Structured Query Language (SQL).
Java Programming This course provides students an opportunity to learn Java, another object-oriented programming (OOP) language, through the development of a software application. Students will use various Java language features to create classes and objects, and apply inheritance to construct solutions.
C++ Programming This course provides students an opportunity to learn C++, another object-oriented programming (OOP) language, through the development of a software application. Students will apply C++ language features to create classes and objects; and also apply object-oriented features such as inheritance, operator overloading, polymorphism, and templates to construct solutions.
Fundamentals of Data Structures This course introduces students to the principles and idiosyncrasies behind representatives of some of the different types of data structures. The course includes an examination of arrays, stacks, queues, lists, and trees.
Introduction to Database Systems This course introduces the basic database management system (DBMS) concepts including relational data models, database management system architecture and components, as well as structured query language (SQL), etc. Topics such as conceptual, logical and physical database designs will be covered and applied for several small real-world database application projects.
Computer Algorithms Students are introduced to classical algorithms, including searching and sorting, hashing and information retrieval, with an emphasis on their applicability to solve real-world problems. Basic techniques to analyze and design algorithms are covered. Average and asymptotic behaviors are discussed.
Mobile Programming As a foundation course for students looking to acquire programming skills in mobile platforms, this course introduces students to application development process for mobile devices. The course illustrates the commonalities and differences between the development process and workflow, application design methodology and principles, as well as the implementation tools for mobile computing as contrasted with those for desktop computing. The design and implementation constraints will be covered and addressed through a hand-on project to build a solution to a problem involving mobile computing.
Introduction to Parallel Computing Parallel programming is a fundamental programming skill to construct high performance solutions for complicated computation tasks. This course introduces the basic concepts of parallel programming including parallel computer architectures, analytical modeling of parallel programs, and principles of parallel algorithm design, as well as effective techniques commonly used in coding, debugging, and testing parallel software.
Principles of Operating Systems In this course, students are introduced to the design and the implementation concepts of modern operating systems. The topics covered include basic capabilities of operating systems, virtual memory, resource allocation and management, concurrent processes and threads, deadlock detection and prevention, protection and security, I/O and file systems, batch and interactive subsystems.
Software Engineering This course introduces students to the software development processes and methods. Traditional software development life cycle encompassing requirements collection and analysis, design, implementation, testing and the maintenance phases will be covered. The course also introduces principles and techniques supporting topics such as software development project management, people management, software requirements, system models, software design, verification and validation, software maintenance and enhancements, and ethical responsibilities.
Foundations of Big Data Analytics Big data analytics is a critical tool to enable corporations to gain and keep their competitive advantages. To be able to apply various computer technologies to either establish or execute business related data analysis applications is a key skill for any professional with a computer science degree. This course explores the fundamental computer technologies that are required for utilizing a big data analytics applications, including how to store, pre-process, query and visualize big data, as well as how to extract the useful business information through various highly efficient data analysis techniques running on various types of computer platforms connected by various types of communication networks.
Computer Science Team Project I This is the first course in a two course sequence that entails the end-to-end development of a software application in a project team setting. Students in this class will work in project teams. Every student will join only one project team and will assume at least one type of job function typical in a software development project, such as requirement collection and analysis, system function specification, architecture design, component design, prototyping, implementation, testing, project management, etc.
Computer Science Team Project II The course reinforces students' abilities to choose and apply the right principles, engineering processes, methods, and tools to conduct productive software implementation and testing.
Introduction to Computer Security This course provides the foundation for the study of computer system security. The course centers around the ten domains comprising the Information Security Common Body of Knowledge. Topics include access control systems, telecommunications and network security, cryptography, operations security and business continuity and disaster recovery planning.
Ethical Hacking This course covers ways that computers and networks are attacked by hackers using techniques and common utilities. Learners explore security threats and ways that system vulnerabilities are exploited to attack systems. Topics include Intrusion Detection Systems (IDS), ethical hacking techniques, sniffers, protocols, social engineering, vulnerability analysis, and penetration testing to ensure infrastructure security.
Principles of User Interface Design This course introduces students to the theories, principles, and practices of user interface design for computer-based systems. Topics such as the human computer interaction, user interface design framework, platform consideration, user profiling, prototyping and usability testing will be covered.
Streaming Data Analytics This course introduces students to the basic concepts of streaming data, which includes resources of streaming data, the characteristics and properties of various types of streaming data and the principles, models, methods and technologies that can be effectively applied for streaming data analytics. The course will examine the most common challenges of streaming data analytics—data collection, measurement, tracking, analysis, security, query processing and reporting.
Fundamentals of Software Requirements This course introduces students to various practical techniques for conducting requirements elicitation, specification, analysis, and validation. The additional topics covered during this course include requirements traceability, software quality matrix, and use case scenario development.
Fundamentals of Software Design This course introduces students to the fundamentals of software design. Software Design consists of a set of commonly used design principles, design paradigms, design models, and design patterns. Through several working projects, students will learn how to choose proper design principles, design paradigms, design models and design patterns based upon the requirements specification.
NoSQL Databases This course introduces students to the foundation, application background, design and implementation principles of NoSQL databases. The course illustrates the commonalities and differences between NoSQL databases and relational databases. The course covers how to best use different NoSQL databases in their working environments. The design of NoSQL-based applications in a variety of platforms such as Windows, Linux, and the Cloud is discussed.
Machine Learning This course introduces students to the foundations, commonly used algorithms and techniques, as well as various types of applications of Machine Learning which is a branch of Artificial Intelligence. The course discusses the strengths and weaknesses of different machine learning methodologies such as decision trees, neural networks, clustering, Naive Bayes, and regression based on the application requirements.
Software Service Construction This course introduces students to how to apply the agile software development approach (process and techniques) to develop Software as a Service by using a proper type of cloud (private, public, or hybrid) enabled web application framework. Students will explore the principles and highly effective methods to design, implement and testing as well as deploying a software on a public cloud as a service.
Software Quality Assurance Software Quality Assurance (SQA) is a set of systematic activities that software testers must perform in order to ensure the quality of a software project. This course provides an overview of the techniques, approaches, and processes used for SQA.
Data Mining This course introduces students to the foundations, commonly used algorithms, techniques and tools, as well as applications of data mining. The course will cover data collection and preparation, data classification, mining association rules, clustering, and the real-world applications where these techniques are used.
Data Driven Statistics for Computer Systems and IT An elementary coverage of statistical techniques is augmented at each step with the aid of technology for data processing and analysis in making inferences. Graphical presentation and statistical measures are studied, followed by basic probability concepts leading to binomial and normal distributions. Hypothesis testing is applied to drawing inferences for one and two population parameters. A graphing calculator or equivalent technology is required.
Applications of Discrete Mathematics for Computer Systems and IT This course studies problems that involve finite or discrete data sets. Logic and set notation form a foundation for creating structure in data storage and information retrieval. Tools used include truth tables, methods of proof, Venn diagrams , graphs, trees, paths, and matrices. Additional topics include defining formal languages and recognizing syntactically correct sentences. Additional techniques include automata, digraphs, state transition tables and context free grammars.
Fundamentals of Networking This course serves as an introduction for students to acquire a foundation in current data communication and networking technologies. The course provides an introduction to the hardware, media, Ethernet, addressing, IP Configuration, components, and connections of a network. Network concepts such as network topologies, and major protocols, as well as the basic functions of network administration and operation are covered.

Introduction to Computing In this course, students learn computational problem-solving techniques through the process of design, implementation, testing, and documentation using the programming language Python. The main ideas of computing are explored and students learn the most essential information about computers and technology in today's digital world and the latest computing trends and skills. Students will get an understanding of the breadth of computing as a discipline and how it exists in the world by identifying computing applications in society and exposing them to a variety of computing topics.
Calculus I This course covers analytic geometry; continuous functions; derivatives of algebraic and trigonometric functions, product and chain rules, implicit functions; extrema and curve sketching; indefinite and definite integrals; applications of derivatives and integrals; exponential, logarithmic and inverse trig functions, hyperbolic trig functions, and their derivatives and integrals
Fundamentals of Programming This course introduces programming constructs and techniques in a logical progression beginning with small problems and basic algorithms through larger scale programs and design. While not an object oriented course, Classes and Objects are used in an ancillary capacity while working on broader topics of software architecture. Complete programs will be designed, coded, and debugged in both Java and the C programming language, developing skills necessary to work with more complex software systems.
Introduction to Rhetoric and Composition This course introduces students to the academic discipline of rhetoric and composition. Students read nonfiction texts, including rhetoric and composition and cross-disciplinary scholarship, in order to analyze their conventions and craft texts in various genres and modalities for a range of audiences. Students develop effective writing processes, sound research strategies, strong academic arguments, rhetorical awareness, and sensitivity to disciplinarity.
Calculus II This course covers applications of the integral to area, arc length, and volumes of revolution; integration by substitution and by parts; indeterminate forms and improper integrals: Infinite sequences and infinite series, tests for convergence, power series, and Taylor series; geometry in three-space.
Introduction to Philosophy This course is a topical introduction to philosophy. The aim of the course is to introduce students to the vocation of wonder and questioning by engaging students in discussions about some of the basic questions of philosophy.Students will read texts from historical and contemporary writers, and will be asked to develop their own skills of thinking, reading, and writing critically.
Programming Workshop This course covers advanced programming concepts in one or more current programming languages, including syntax and theories. It prepares students for adapting to various programming environments and coding in an efficient manner.
Programming Workshop Lab This lab accompanies the Programming Workshop course for hands-on practice with course concepts.
Computer Science Sophomore Clinic This sophomore clinic provides faculty guidance and supervision beyond the scope of existing courses. Students learn how to develop and structure their deliverables, as well as how to use computer science tools in the context of real-world or research projects.
Web Development This course introduces the student to developing applications for use on the World Wide Web. Students learn basic n-tier concepts for designing distributed applications and gain hands on experience through the construction of Web-based applications. The course covers concepts that allow communication over the Web. This includes designing and authoring Web pages, markup languages, the client-side document object model, usability, search engine optimization, and client-side dynamic Web pages.
Discrete Mathematics Topics in this course include logic; sets; functions; equivalence relations and partitions; mathematical induction; and countability.
Digital Design I An introduction to computer hardware design. Topics include: digital design principles, Boolean algebra, combinational logic design, sequential logic design, registers, counters, memory, multiplexers, finite state machines, radix conversion, and programmable logic devices. Students learn to write, implement, and simulate elementary digital design.
Digital Design I Lab This lab course covers the practical aspects of digital logic design. Students design and implement logic circuits using techniques
Data Structures This course covers abstract data structures such as queues, stacks, heaps, linked lists, trees, graphs, hash tables and sorting. Students apply data structure concept in advanced programming.
Data Structures Lab This lab accompanies the Data Structures course for hands-on practice with course concepts.
Computer System Architecture This course introduces the machine language and various components of a computer hardware in modern computer systems. The course focuses on CPU, memory, bus, cache, I/O module, internal data representation, and instruction set design. It also covers pipelining, superscalar architecture, reduced instruction set computers, parallel architectures, and interconnection networks.
Design and Analysis of Algorithms This course introduces various algorithms and analyzes the complexity and efficiency of the algorithms. Topics cover classic and heuristic algorithms, searching, sorting and parsing techniques, and algorithm complexity analysis.
Computer Science Junior Clinic I This first junior clinic provides faculty guidance and supervision beyond the scope of existing courses. Students learn how to develop and structure their deliverables, as well as how to use computer science tools in the context of real-world or research projects.
Software Engineering Methods This course explores the requirements gathering, system analysis, and software design methods of software application following the software processes required for the production of high quality software. Techniques for creating documentation and using software development tools will be presented. Students will gain experience in software project management, requirements, analysis, and safety issues in software development; interpersonal skills for management and team membership; and the software engineering discernment of systems architecture.
Introduction to Cybersecurity In this course, students will be given an extensive overview of the various components of cybersecurity, including software development, operating systems, databases, and networks. Students will learn cybersecurity concepts, issues, and tools that are critical in solving problems in the computing security domain.
Computer Science Junior Clinic II This second junior clinic provides faculty guidance and supervision beyond the scope of existing courses. Students learn how to develop and structure their deliverables, as well as how to use computer science tools in the context of real-world or research projects.
Theory of Programming Languages Topics in this course include the design of programming languages; organization, control structures, data structures; run time behavior of programs; and formal specification and analysis of programming languages. The course includes a comparative survey of several significantly different languages.
Software Design Methods with in-depth projects and further discussions of design and implementation topics. Through the use of case studies and project work that has the student gradually building a large design specification, students will achieve an understanding of how complex applications are designed and built.
Senior Design Project I Senior Design Project I
Senior Design Project II Senior Design Project II
Artificial Intelligence This course, which examines computational and theoretical accounts of human intelligence, includes knowledge representation, commonsense reasoning, planning, natural language understanding, machine learning, and deep learning.
Theory of Programming Languages Topics in this course include the design of programming languages; organization, control structures, data structures; run time behavior of programs; and formal specification and analysis of programming languages. The course includes a comparative survey of several significantly different languages.
Design and Analysis of Algorithms This course introduces various algorithms and analyzes the complexity and efficiency of the algorithms. Topics cover classic and heuristic algorithms, searching, sorting and parsing techniques, and algorithm complexity analysis.
Visual Analytics In this course, students investigate visual analytics tools and techniques used to synthesize information and derive insight from massive, dynamic, ambiguous, and often conflicting data and to communicate the findings effectively for decision-making. Extensive use of case studies based on real-world events will be used to illustrate course concepts. Students will apply visual analytics techniques toward a focused research problem in a real-world application or a domain of interest.
Mobile Application Development This project-oriented course examines the fundamental aspects of mobile computing, application architecture, and mobile application design and development. Students will learn application development on the Android platform. Students will complete a hands-on project building a prototype mobile application. Topics include user interface design and building, input and data handling, and network techniques and GPS and motion sensing. Students are expected to work on a project that produces a professional-quality mobile application. Projects will be deployed in real-world applications.
Writing I Writing I provides the undergraduate student with the foundation necessary for critical thinking through academic and other professional writing. Students will cultivate the skills of argumentation, uses of evidence, analysis, close reading of texts, and revision as essential elements of the college-level writing process
Computer Science I his course introduces Computer Science by using a high-level programming language. Students will be taught to design programs and implement them using object-oriented programming techniques
Precalculus This course prepares students for the study of calculus. Topics covered include real numbers, equations and inequalities and analytic geometry, as well as polynomial, rational, trigonometric, exponential and logarithmic functions.
Writing II Expanding upon the argumentative and analytical emphases of Writing I, Writing II will foster research-based composition. In Writing II, students will demonstrate in prose their knowledge of rhetoric, employ a variety of research methods, and become familiar with latest information technologies
Computer Science II This course builds on the concepts covered in Computer Science I. Topics covered include inheritance, polymorphism, recursion, advanced GUI programming, exception handling and input/output handling. Students use integrated development environment to create, compile, run and debug programs.
Discrete Mathematics This course introduces discrete mathematics as applied to computer science. Topics covered include Boolean logic, elementary set theory, functions, relations, enumeration, proof techniques number systems and trees.
Introduction to Electronics This course provides an introduction to electronic circuit principles including diodes, transistors and analog integrated circuit (IC) building blocks. Laboratory work involves the use of modern test equipment to construct and observe the behavior of circuits we study. Topics covered include: electrical circuit theory, DC circuit analysis, electrical signals, integrator and differentiator circuit analysis, diodes, transistor switches, operational amplifier applications and IC timers.
Systems Programming This course provides the student with the fundamentals of structured programming at the systems level. UNIX is used as a base for this course. Students obtain a thorough knowledge of the C language, comfort in using the UNIX operating system and an appreciation for a systems approach to low-level programming tasks.
Calculus I This course involves the study of the derivative of a function, methods of differentiation and applications, LHospitals Rule, integration of functions, the Fundamental Theorem of Calculus, and the substitution rule
Digital Electronics This course provides a study of the design and application of both asynchronous and synchronous electronic logic circuits. Counters, registers, serial and parallel adders, and arithmetic units are included. Topics covered are Boolean algebraic simplifications; Karnaugh maps; Quine McCluskey method; combinational logic circuits; sequential logic circuits; comparison of TTL, MOS, and ECL logic families; the arithmetic unit; coding and decoding; parity detection and generators; multiplexers and programmable logic devices.
Algorithms and Data Structures This course provides an introduction to modern study of computer algorithms and complex data structures. It explores the logic of algorithmic analysis and design as well as practical utility and implementation techniques. The basic ideas from Complexity Theory will help students understand the concept of efficiency of algorithms and its role in the design of algorithms. The analysis of data structures is focused on the concepts of linked list, queues, stacks and trees. Various programming techniques such as divide and conquer, dynamic programming and backtracking are presented.
Introduction to Speech Communication The class focuses on theory and practice of interpersonal and public communication, including communication theory, self-concept, perception, language, listening, non-verbal communication and public speaking
Programming Languages This course studies the hierarchy of programming languages starting with Assembly Language. It covers general principles of languages within imperative, object oriented and functional paradigms, as well as logic programming. Students have an opportunity to learn the basic concepts and constructs of various programming frameworks and practice software design skills in languages like Ada, Lisp and/or Prolog.
Computer Organization The purpose of this course is to provide a thorough discussion of the fundamentals of computer organization and architecture and to relate these to contemporary computer design issues. After a brief review of the basic digital components used, the steps that a designer would go through in the design of an elementary systems are covered followed by a discussion of the organization and design of the central processing unit (CPU) and various control system implementations. The input/output and memory subsystems are included as is a brief discussion of multiprocessing systems, pipelining and virtual memory.
Business Statistics Topics covered in this course include descriptive methods, probability distributions, estimation, testing, analysis of variance and regression analysis.
Data Modeling and Database Design In this course, students will learn how to create data models from business requirements and transform them into logical and physical database designs and study the evolution and advantages of various database models. It teaches students how to design relational databases by applying ERD modeling and normalization techniques. Students will work with a database engine and the SQL language to create a two-layer application using a high-level language.
Microprocessors The course provides a detailed study of the microprocessor and its applications. Emphasis is placed on a current microprocessor, its hardware and software and its associated family of integrated circuits. Students design a microprocessor system, configuring the random access memory, the read-only memory and peripheral devices using peripheral interface adapters. Students reinforce theory with extensive laboratory work
Operating Systems This course examines the internal structure and operation of operating systems with an emphasis on their design criteria and approaches. Topics covered include process management, scheduling, deadlock, memory management, virtual memory, protection and security and distributed systems. A working knowledge of a higher-level system programming language and computer data structures is assumed.
Linear Algebra In this course topics covered include the application of vector spaces, linear transformations and matrices
Ethical Issues in Computer Science This course covers various ethical issues that arise as a result of increasing use of computers in contemporary society. Topics include methodology, tools and frameworks for analysis of ethical issues in Computer Science, social and ethical context of computing, professional and ethical responsibilities, risks and liabilities of safety-critical systems, privacy and civil liberties, social implications of the internet and cyber-security.
Software Engineering This course examines main features of software life cycle. It covers the main issues in design creation, principles of programs verification, system testing and evaluation criteria. This course provides students with an opportunity to obtain practical experience in software design using CASE tools. Students work in project teams and apply principles of software design, verification, testing and coding toward the solutions of assigned problems.
Game Programming This course covers main game programming techniques and related algorithms. Topics may include game program architecture, game engine design patterns, game library, rapid prototyping and game testing, bitmap handling through programming, sound and music in game programming, pathfinding algorithms, and 3D programming.  Game programming tools will be implemented using Object-Oriented paradigm and students will be able to choose any appropriate programming language for their main project.
Computer Graphics Programming Students will write programs that create digital representations of geometric objects and render them on a computer screen. Topics covered in this course are: the graphics processing pipeline, graphics primitives, vertex specification, rendering, color theory, geometric transformations, illumination, perspectives and the virtual camera.
Digital Signal Processing DSP has found its way into a number of applications, including communications and controls, graphics, and speech and image processing. DSP is concerned with real time signal processing where timing is of the utmost importance. This course will help students understand time and frequency domain descriptions of signals and systems. Linear time invariant systems, convolution, difference equations, and various mathematical transforms. Fourier, Fast Fourier and z-transform are introduced to describe and design both recursive and non-recursive digital filters. DSP processor fundamentals, architectures and special features will be introduced using a particular processor in a lab environment.

Academic Writing and Reading Introduces students to principles of effective written communication and critical reading. Stresses invention, drafting, revising, editing, and self-assessment, along with effective critiquing and collaborating.
Technical Communications for Engineers and Computer Scientists A modular approach to oral and written communication of complex technical information to an expert audience. Includes describing technical mechanisms and processes; designing and using tables, graphs, charts, and figures; producing technical proposals, progress reports, feasibility reports, and formal reports; and doing technical briefings.
Calculus I Examines limits, the derivative, differentiation, applications of the derivative, antiderivatives, Riemann sums, the definite integral, and the fundamental theorem of calculus.
Technology and Society Examines and evaluates the consequences of technology on individuals, organizations and society to recognize its benefits, potential, and limitations. Explores current social, ethical, legal and philosophical topics to understand how the Digital Revolution impacts society. Integrated Writing course.
General Chemistry I Structure and properties of atoms and molecules and their chemical behavior and reactivity.
General Chemistry Lab I General Chemistry Lab I
General Chemistry II Properties of liquids, solids and solutions, phase changes, chemical kinetics and equilibrium, acid/base chemistry and its applications, thermodynamics and electrochemistry.
General Chemistry Lab II General Chemistry Lab II
Cells and Genes Introduction to basic concepts of biology. Topics include genetics and the molecular and cellular basis for the unity of life.
Organisms and Ecosystems ntroduction to basic concepts of biology. Topics include evolution, ecology, and the diversity of life
General Physics I Introductory survey of mechanics for science and engineering students. Uses of interpreting physical phenomena. Topics include vectors, kinematics, dynamics, energy, momentum, rotation, oscillation and thermodynamics.
General Physics I Laboratory General Physics I Laboratory
General Physics II Introductory survey of electricity and magnetism. Uses calculus in interpreting physical phenomena. Topics include electric field and potential, currents, DC circuits, magnetic fields, Faradays law, and optics.
General Physics II Laboratory General Physics II Laboratory
Earth Systems Comprehensive treatment of earth materials and the external and internal geologic processes that shape the earth. Water systems are also discussed.
Earth History Comprehensive treatment of the earths past as interpreted through the study of rocks and fossils. Basic concepts include geologic time and age dating, and the physical, chemical, and organic evolution during geologic time periods. The history of plate movements and mountain building events, especially in North America
Calculus II Integration techniques, applications of the definite integral, first-order differential equations, vectors and vector operations, parametric equations and polar coordinates, infinite series.
Computer Science I Basic concepts of programming and programming languages. Structured programming, stepwise refinement, and object-oriented development.
Computer Science II Advanced concepts of computer programming. Use of data structures and tools that facilitate programming
Data Structures and Algorithms Study of the implementation of data structures and control structures in professional computer programs. Introduction to the fundamentals of complexity and analysis. Study of common standard problems and solutions
Comparative Languages Fundamental concepts and paradigms underlying modern programming languages to enable better appreciation, comparison and evaluation of languages. Covers an object-oriented language, a functional language, a logic language, and a multi-paradigm scripting language. Basics of interpreters and compilers are explored through programming assignments.
Logic for Computer Scientists Fundamental material in foundations of logic most relevant to Computer Science. Propositional logic, predicate logic, modeling of knowledge, and algorithms for logical reasoning.
Theoretical Foundations of Computing Introduction to the theory of formal languages and automata with an emphasis on the classes of languages commonly encountered by computer scientists. Computability examines the solution of decision problems; the Church-Turing thesis; the undecidability of the Halting Problem; and problem reduction and undecidability.
Operating System Concepts and Usage Provides introduction to Linux and Windows operating systems and system administration. Covers files and directories, ownership and sharing, programs and processes, system calls, libraries, dynamic linking, command line shells, scripting, regular expressions and secure network protocols.
Computer Organization Organization and sequential operation of digital computers. Binary and hexadecimal number systems, 2s complement arithmetic, program control, memory organization and hierarchy, addressing modes, stacks and parameter passing, interrupts and traps, I/O devices, DMA, cache, and virtual memory.
Introduction to Software Engineering Introduction to the concepts of Software Engineering. Software qualities, development life-cycle models, requirements analysis, semi-formal and formal systems modeling, system design, testing, and project management techniques. Case studies and a course project serve as examples illustrating the software engineering process
Operating System Internals and Design Overview of operating systems internals. File-system usage and design, process usage and control, virtual memory, multi user systems, access control. Course projects use C++ language.
Team Projects I Team Projects I
Team Projects II Team Projects II
Elementary Linear Algebra Matrices and their operations, linear systems of equations, Gaussian elimination, determinants, geometry of Euclidean space, vector spaces and subspaces, linear independence, basis, dimension and rank, orthogonality and the Gram-Schmidt process, linear transformations, eigenvalues and eigenvectors, and diagonalization.
Discrete Mathematics for Computing Discrete mathematics useful in computing. Emphasis on mathematical induction, recurrence relations, asymptotic behavior of functions, and algorithm analysis.
Discrete Structures and Their Algorithms Discrete structures and their algorithms for computer science. Emphasis on rigorous proof and formal argumentation
Applied Statistics I Introduction to probability, random variables and their expectations, some commonly used discrete and continuous distributions, concept of random sampling and sampling distributions. Use of computer software packages for simulating, summarizing, and displaying data.
Algorithm Analysis with Advanced Data Structures. Advanced data structures topics including multiple linked lists, height-balanced trees, B-trees, hashing and graph representation; incorporating data structures into object-oriented design. Analysis of various searching and sorting algorithms. Algorithm design topics include divide-and-conquer, dynamic programming and greedy methods.
Programming Languages. Survey of representative modern programming languages. Formal definition of programming languages including specifications of syntax and semantics. Precedence, infix, prefix and postfix notation. Global properties of algorithmic languages. Sub-routines, co-routines and tasks. List processing, string manipulation, data description and simulation languages. Run-time representation of program and data structure
Compiler Construction A first course in compiler theory and construction. Formal description of languages, underlying theory and design techniques for compilers, lexical analysis, syntax analysis, syntax-directed translation, intermediate languages, run-time system management, code generation, code optimization, compiler-building tools.
Artificial Intelligence Covers problem spaces, problem-solving methods, game playing, knowledge representatives, expert systems, natural language understanding.
Introduction to Quantum Computing Introduction to quantum information processing: state vectors and density operators, tensor product space, unitary evolution, no-go theorems, measurement, qubit, gate model of quantum computing, quantum complexity theory, quantum error correction, quantum algorithms, and quantum machine learning.
Computer Graphics Presents mathematical techniques for graphic development and transformation, curve and surface approximation and projections, graphical languages and data structures and their implementation, graphic modeling.
Social Network Analysis and Cybersecurity Risks Covers network models, link prediction and analysis, centrality measures, random networks, power-laws and preferential attachment, small world phenomenon and decentralized search, community structure, information propagation in networks, and security and privacy issues in OSNs.
Introduction to Cybersecurity This course provides introduction and basic concepts of computer security, cyber attacks, cyber defense, cyber forensics and cyber ethics.
Computer and Network Security This course covers the best practices of computer systems and network security. Key topics include security architecture, cryptographic systems and security management tools.
Introduction to Cryptography This course provides a rigorous and theoretical introduction to modern cryptography. Key topics include symmetric key encryption and authentication, public key encryption, and digital signatures.
Introduction to Natural Language Processing Covers rule-based and statistical methods for creating computer programs that analyze, generate and understand human language. Topics include regular expressions and automata, context-free grammars, probabilistic classifiers, and machine learning. Word-level, syntactic and semantic processing are all considered. Application to real-world problems such as spell-checking, Web search, automatic question answering, authorship identification and developing conversational interfaces.
Mobile Programming This course covers the fundamentals of Swift, Xcode and iOS for programming and design of iOS applications. Background in object-oriented programming and access to a computer with Xcode platform is required
Introduction to Data Science This course covers understanding, representation, storage, retrieval, preprocessing and analysis of data. Specific topics include data quality and preprocessing, database management systems, data warehouses, selected methods for scalable unsupervised and supervised data analysis, and assessment of results generated by these methods. Students will be engaged in analysis of real-life data from data preprocessing, through data analysis, to the assessment of a knowledge product.
Data Communication and Networking. This course explores computer networking, focusing on the applications and protocols that run on the Internet. Students will take a top-down approach to the layered network architecture, studying applications first and then proceeding down the network stack toward the physical link. Students will examine the operation of applications such as the web, FTP, e-mail and DNS. At the transport layer, students will study both connectionless UDP and connection-oriented TCP, with an in-depth study of TCP operation, specifically flow control and congestion control. Data communications are explored through various data routing protocols. Additional topics include network security and wireless/mobile networking.
Topics in Computer Science Topics in Computer Science
Computer Science Internship Computer Science Internship
Introduction to Computer Science: Java Continuation of the Java language and of programming techniques. More on Inheritance. Exception handling.
Introduction to Computer Science and Object-Oriented Programming: Java Introduction to computer science and programming using the Java language. Basic UNIX. Modularity and abstraction. Documentation, testing and verification techniques. Basic object-oriented programming including inheritance and dynamic binding. Exception handling. Event driven programming. Experience with AWT library or other similar library.
Basic Data Structures and Object-Oriented Design Use and implementation of basic data structures including linked lists, stacks, and queues. Use of advanced structures such as binary trees and hash tables. Object-oriented design including interfaces, polymorphism, encapsulation, abstract data types, pre-/post-conditions. Recursion. Uses Java and Java Collections.
Software Tools and Techniques Laboratory Hands on exploration of software development tools and techniques.  Investigation of the scientific process as applied to the development and debugging of programs. Introduction to and practice with specific software tools and techniques to aid in coherent software development processes. Emphasis is on weekly hands-on laboratory experiences including pre- and post-lab work, development of laboratory notebooking techniques as applied to software design.
Introduction to Discrete Mathematics Basic discrete mathematical structures: sets, relations, functions, sequences, equivalence relations, partial orders, number systems. Methods of reasoning and proofs: prepositional logic, predicate logic, induction, recursion, pigeonhold principle. Infinite sets and diagonalization. Basic counting techniques; permutation and combinations. Applications will be given to digital logic design, elementary number theory, design of programs, and proofs of program correctness.
Mathematics for Algorithm and Systems This course will provide an introduction to the discrete mathematical tools needed to analyze algorithms and systems. Enumerative combinatorics: basic counting principles, inclusion-exclusion, and generating functions. Matrix notation. Applied discrete probability. Finite automata.
Computer Organization and Systems Programming Introduction to organization of modern digital computers - understanding the various components of a computer and their interrelationships. Study of a specific architecture/machine with emphasis on systems programming in C and Assembly languages in a UNIX environment.
Introduction to Discrete Mathematics Basic discrete mathematical structure: sets, relations, functions, sequences, equivalence relations, partial orders, and number systems. Methods of reasoning and proofs: propositional logic, predicate logic, induction, recursion, and pigeonhole principle. Infinite sets and diagonalization. Basic counting techniques; permutation and combinations. Applications will be given to digital logic design, elementary number theory, design of programs, and proofs of program correctness
Fluency in Information Technology Introduces the concepts and skills necessary to effectively use information technology. Includes basic concepts and some practical skills with computers and networks.
Mathematical Beauty in Rome Exploration of topics in computing, engineering, and mathematics, applied to classical architecture in Rome, Italy. In-depth geometrical analysis and computer modeling of basic structures (arches, vaults, domes), and on-site studies of the Colosseum, Pantheon, Roman Forum, and St. Peter's Basilica. Concurrent enrollment required in 4GS and 6GS.
Introduction to Programming I Introduction to algorithms and top-down problem solving. Introduction to the C language, including functions, arrays, and standard libraries. Basic skills for using a PC graphical user interface operating system environment. File maintenance utilities are covered.
Mathematical Beauty in Rome Lab Companion course to CSE 4GS where theory is applied and lab experiments are carried out "in the field" in Rome, Italy. For final projects, students will select a complex structure (e.g., the Colosseum, the Pantheon, St. Peter's, etc.) to analyze and model, in detail, using computer-based tools. Concurrent enrollment required in 4GS and 6GS.
Matlab Programming for Engineering Analysis Computer programming in Matlab with elementary numerical analysis of engineering problems. Arithmetic and logical operations, arrays, graphical presentation of computations, symbolic mathematics, solutions of equations, and introduction to data structures.
Thermodynamics Fundamentals of engineering thermodynamics: energy, work, heat, properties of pure substances, first and second laws for closed systems and control volumes, gas mixtures. Application to engineering systems, power and refrigeration cycles, combustion
Cognitive Consequences of Technology This course examines the interrelationships of cognition and technology from the perspective of cognitive science. We address questions of importance for our increasingly technological society: How does technology shape our minds? How should what we know about our minds shape technology?
Introduction to Python  This class will teach fundamental Python programming skills and practices, including the “Zen of Python.” Students will focus on scientific computing and learn to write functions and tests, as well as how to debug code using the Jupyter Notebook programming environment.
Engineering Computation Students learn the C programming language with an emphasis on high-performance numerical computation. The commonality across programming languages of control structures, data structures, and I/O is also covered. Techniques for using Matlab to graph the results of C computations are developed.
UNIX Lab The objective of the course is to help the programmer create a productive UNIX environment. Topics include customizing the shell, file system, shell programming, process management, and UNIX tools
C++ for Java Programmers Helps the Java programmer to be productive in the C++ programming environment. Topics include the similarities and differences between Java and C++ with special attention to pointers, operator overloading, templates, the STL, the preprocessor, and the C++ Runtime Environment.
Undergraduate Seminar A seminar providing an overview of a topic of current research interest to the instructor. The goal is to present a specialized topic in computer science and engineering students. May be taken for credit three times when topics vary.
Perspectives in Computer Science and Engineering A seminar format discussion led by CSE faculty on topics in central areas of computer science, concentrating on the relation among them, recent developments, and future directions.
Independent Study in Computer Science and Engineering Independent reading or research by special arrangement with a faculty member.
Calculus for Science and Engineering I Foundations of differential and integral calculus of one variable. Functions, graphs, continuity, limits, derivative, tangent line. Applications with algebraic, exponential, logarithmic, and trigonometric functions. Introduction to the integral.
Calculus for Science and Engineering II Integral calculus of one variable and its applications, with exponential, logarithmic, hyperbolic, and trigonometric functions. Methods of integration. Infinite series. Polar coordinates in the plane and complex exponentials.
Calculus and Analytic Geometry for Science and Engineering Vector geometry, vector functions and their derivatives. Partial differentiation. Maxima and minima. Double integration.
Introduction to Differential Equations Ordinary differential equations: exact, separable, and linear; constant coefficients, undetermined coefficients, variations of parameters. Systems. Series solutions. Laplace transforms. Techniques for engineering sciences. Computing symbolic and graphical solutions using Matlab
Linear Algebra Matrix algebra, Gaussian elimination, determinants. Linear and affine subspaces, bases of Euclidean spaces. Eigenvalues and eigenvectors, quadratic forms, orthogonal matrices, diagonalization of symmetric matrices. Applications. Computing symbolic and graphical solutions using Matlab.
Physics—Mechanics A calculus-based science-engineering general physics course covering vectors, motion in one and two dimensions, Newton’s first and second laws, work and energy, conservation of energy, linear momentum, collisions, rotational kinematics, rotational dynamics, equilibrium of rigid bodies, oscillations, gravitation.
Physics—Electricity and Magnetism Continuation of Physics 2A covering charge and matter, the electric field, Gauss’s law, electric potential, capacitors and dielectrics, current and resistance, electromotive force and circuits, the magnetic field, Ampere’s law, Faraday’s law, inductance, electromagnetic oscillations, alternating currents and Maxwell’s equations.
Physics for Physics Majors—Mechanics The first quarter of a five-quarter calculus-based physics sequence for physics majors and students with a serious interest in physics. The topics covered are vectors, particle kinematics and dynamics, work and energy, conservation of energy, conservation of momentum, collisions, rotational kinematics and dynamics, equilibrium of rigid bodies.
Physics for Physics Majors—Fluids, Waves, and Heat Continuation of Physics 4A covering oscillations, gravity, fluid statics and dynamics, waves in elastic media, sound waves, heat and the first law of thermodynamics, kinetic theory of gases, second law of thermodynamics, gaseous mixtures and chemical reactions.
General Chemistry I First quarter of a three-quarter sequence intended for science and engineering majors. Topics include: atomic theory, bonding, molecular geometry, stoichiometry, types of reactions, and thermochemistry.
Honors General Chemistry I First quarter of a three-quarter honors sequence intended for well-prepared science and engineering majors. Topics include quantum mechanics, molecular orbital theory, and bonding. An understanding of nomenclature, stoichiometry, and other fundamentals is assumed
General Chemistry II Second quarter of a three-quarter sequence intended for science and engineering majors. Topics include: covalent bonding, gases, liquids, and solids, colligative properties, physical and chemical equilibria, acids and bases, solubility.
Honors General Chemistry II Second quarter of a three-quarter honors sequence intended for well-prepared science and engineering majors. Topics include: colligative properties, bulk material properties, chemical equilibrium, acids and bases, and thermodynamics.
The Cell An introduction to cellular structure and function, to biological molecules, bioenergetics, to the genetics of both prokaryotic and eukaryotic organisms, and to the elements of molecular biology.
Multicellular Life An introduction to the development and the physiological processes of plants and animals. Included are treatments of reproduction, nutrition, respiration, transport systems, regulation of the internal environment, the nervous system, and behavior
Organismic and Evolutionary Biology The first principles of evolutionary theory, classification, ecology, and behavior; a phylogenetic synopsis of the major groups of organisms from viruses to primates.
Statistical Methods Introduction to probability. Discrete and continuous random variables–binomial, Poisson and Gaussian distributions. Central limit theorem. Data analysis and inferential statistics: graphical techniques, confidence intervals, hypothesis tests, curve fitting.
Econometrics A Probability and statistics used in economics. Probability and sampling theory, statistical inference, and use of spreadsheets.
Engineering Probability and Statistics Axioms of probability, conditional probability, theorem of total probability, random variables, densities, expected values, characteristic functions, transformation of random variables, central limit theorem. Random number generation, engineering reliability, elements of estimation, random sampling, sampling distributions, tests for hypothesis.
A Practical Introduction to Probability and Statistics Distributions over the real line. Independence, expectation, conditional expectation, mean, variance. Hypothesis testing. Learning classifiers. Distributions over R^n, covariance matrix. Binomial, Poisson distributions. Chernoff bound. Entropy. Compression. Arithmetic coding. Maximal likelihood estimation. Bayesian estimation
Advanced Data Structures High-performance data structures and supporting algorithms. Use and implementation of data structures like (un)balanced trees, graphs, priority queues, and hash tables. Also memory management, pointers, recursion. Theoretical and practical performance analysis, both average case and amortized. Uses C++ and STL
Design and Analysis of Algorithms  Design and analysis of efficient algorithms with emphasis of nonnumerical algorithms such as sorting, searching, pattern matching, and graph and network algorithms. Measuring complexity of algorithms, time and storage. NP-complete problems
Theory of Computability An introduction to the mathematical theory of computability. Formal languages. Finite automata and regular expression. Push-down automata and context-free languages. Computable or recursive functions: Turing machines, the halting problem
Software Engineering Introduction to software development and engineering methods, including specification, design, implementation, testing, and process. An emphasis on team development, agile methods, and use of tools such as IDE’s, version control, and test harnesses.
Principles of Computer Operating Systems Basic functions of operating systems; basic kernel structure, concurrency, memory management, virtual memory, file systems, process scheduling, security and protection
Computer Networks Introduction to concepts, principles, and practice of computer communication networks with examples from existing architectures, protocols, and standards with special emphasis on the internet protocols. Layering and the OSI model; physical and data link layers; local and wide area networks; datagrams and virtual circuits; routing and congestion control; internetworking. Transport protocols.
Networked Services The architecture of modern networked services, including data center design, enterprise storage, fault tolerance, and load balancing. Protocol software structuring, the Transmission Control Protocol (TCP), remote procedure calls, protocols for digital audio and video communication, overlay and peer-to-peer systems, secure communication.
Programming Languages: Principles and Paradigms Introduction to programming languages and paradigms, the components that comprise them, and the principles of language design, all through the analysis and comparison of a variety of languages (e.g., Pascal, Ada, C++, PROLOG, ML.) Will involve programming in most languages studied.
Database System Principles Basic concepts of databases, including data modeling, relational databases, query languages, optimization, dependencies, schema design, and concurrency control. Exposure to one or several commercial database systems. Advanced topics such as deductive and object-oriented databases, time allowing.
Introduction to Modern Cryptography Topics include private and public-key cryptography, block ciphers, data encryption, authentication, key distribution and certification, pseudorandom number generators, design and analysis of protocols, zero-knowledge proofs, and advanced protocols. Emphasizes rigorous mathematical approach including formal definitions of security goals and proofs of protocol security.
Introduction to Computer Security Topics include basic cryptography, security/threat analysis, access control, auditing, security models, distributed systems security, and theory behind common attack and defense techniques. The class will go over formal models as well as the bits and bytes of security exploits.
Introduction to Artificial Intelligence: Probabilistic Reasoning and Decision-Making Introduction to probabilistic models at the heart of modern artificial intelligence. Specific topics to be covered include probabilistic methods for reasoning and decision-making under uncertainty; inference and learning in Bayesian networks; prediction and planning in Markov decision processes; applications to intelligent systems, speech and natural language processing, information retrieval, and robotics.
Introduction to Artificial Intelligence: Search and Reasoning The course will introduce important ideas and algorithms in search and reasoning, and demonstrate how they are used in practical AI applications. Topics include A* search, adversarial search, Monte Carlo tree search, reinforcement learning, constraint solving and optimization, propositional and first-order reasoning.
Introduction to Artificial Intelligence: Statistical Approaches Reasoning with probabilities, reasoning and learning with Bayesian networks, decision making under uncertainty, sequential decision making, statistical learning methods, and reinforcement learning
Introduction to Computer Vision The goal of computer vision is to compute scene and object properties from images and video. This introductory course includes feature detection, image segmentation, motion estimation, object recognition, and 3-D shape reconstruction through stereo, photometric stereo, and structure from motion
Deep Learning This course covers the fundamentals of neural networks: we introduce linear regression, logistic regression, perceptrons, multilayer networks and back-propagation, convolutional neural networks, recurrent networks, and deep networks trained by reinforcement learning.
Statistical Natural Language Processing Natural language processing (NLP) is a field of AI which aims to equip computers with the ability to intelligently process natural (human) language. This course will explore statistical techniques for the automatic analysis of natural language data. Specific topics covered include probabilistic language models, which define probability distributions over text passages; text classification; sequence models; parsing sentences into syntactic representations; and machine translation.
Computer Graphics Representation and manipulation of pictorial data. Two-dimensional and three-dimensional transformations, curves, surfaces. Projection, illumination, and shading models. Raster and vector graphic I/O devices; retained-mode and immediate-mode graphics software systems and applications
Components and Design Techniques for Digital Systems Design of Boolean logic and finite state machines; two-level, multilevel combinational logic design, combinational modules and modular networks, Mealy and Moore machines, analysis and synthesis of canonical forms, sequential modules.
Digital Systems Laboratory Implementation with computer-aided design tools for combinational logic minimization and state machine synthesis. Hardware construction of a small digital system
Introduction to Computer Architecture Introduction to computer architecture. Computer system design. Processor design. Control design. Memory systems.
Project in Computer Architecture Hands-on computer architecture project aiming to familiarize students with instruction set architecture, and design of process. Control and memory systems.
Seminar in CSE A seminar course on topics of current interest. Students, as well as, the instructor will be actively involved in running the course/class.
Senior Seminar in Computer Science and Engineering The Senior Seminar Program is designed to allow senior undergraduates to meet with faculty members in a small group setting to explore an intellectual topic in CSE (at the upper-division level).
Introduction to Computer Science Research Introduction to research in computer science. Topics include defining a CS research problem, finding and reading technical papers, oral communication, technical writing, and independent learning.
Teaching (4) Teaching and tutorial assistance in a CSE course under the supervision of the instructor. / Field Study in Computer Science and Engineering Directed study and research at laboratories away from the campus.
Directed Group Study Computer science and engineering topics whose study involves reading and discussion by a small group of students under the supervision of a faculty member.

Academic Writing and Reading Introduces students to principles of effective written communication and critical reading. Stresses invention, drafting, revising, editing, and self-assessment, along with effective critiquing and collaborating
Technical Communications for Engineers and Computer Scientists A modular approach to oral and written communication of complex technical information to an expert audience. Includes describing technical mechanisms and processes; designing and using tables, graphs, charts, and figures; producing technical proposals, progress reports, feasibility reports, and formal reports; and doing technical briefings.
Calculus I Examines limits, the derivative, differentiation, applications of the derivative, antiderivatives, Riemann sums, the definite integral, and the fundamental theorem of calculus.
Technology and Society Examines and evaluates the consequences of technology on individuals, organizations and society to recognize its benefits, potential, and limitations. Explores current social, ethical, legal and philosophical topics to understand how the Digital Revolution impacts society.
HUMANITIES I HUMANITIES I
Social I Social I
General Physics I Introductory survey of mechanics for science and engineering students. Uses of interpreting physical phenomena. Topics include vectors, kinematics, dynamics, energy, momentum, rotation, oscillation and thermodynamics.
General Physics II Introductory survey of electricity and magnetism. Uses calculus in interpreting physical phenomena. Topics include electric field and potential, currents, DC circuits, magnetic fields, Faradays law, and optics.
Calculus II Integration techniques, applications of the definite integral, first-order differential equations, vectors and vector operations, parametric equations and polar coordinates, infinite series.
Computer Science I Basic concepts of programming and programming languages. Structured programming, stepwise refinement, and object-oriented development.
Computer Science II Advanced concepts of computer programming. Use of data structures and tools that facilitate programming
Data Structures and Algorithms Study of the implementation of data structures and control structures in professional computer programs. Introduction to the fundamentals of complexity and analysis. Study of common standard problems and solutions (e.g., transitive closure and critical path). Emphasis on high-level language software design.
Comparative Languages Fundamental concepts and paradigms underlying modern programming languages to enable better appreciation, comparison and evaluation of languages. Covers an object-oriented language, a functional language, a logic language, and a multi-paradigm scripting language. Basics of interpreters and compilers are explored through programming assignments.
Logic Fundamental material in foundations of logic most relevant to Computer Science. Propositional logic, predicate logic, modeling of knowledge, and algorithms for logical reasoning.
Theoretical Foundations of Computing Introduction to the theory of formal languages and automata with an emphasis on the classes of languages commonly encountered by computer scientists. Computability examines the solution of decision problems; the Church-Turing thesis; the undecidability of the Halting Problem; and problem reduction and undecidability.
Operating System Concepts and Usage Provides introduction to Linux and Windows operating systems and system administration. Covers files and directories, ownership and sharing, programs and processes, system calls, libraries, dynamic linking, command line shells, scripting, regular expressions and secure network protocols.
Computer Organization Organization and sequential operation of digital computers. Binary and hexadecimal number systems, 2s complement arithmetic, program control, memory organization and hierarchy, addressing modes, stacks and parameter passing, interrupts and traps, I/O devices, DMA, cache, and virtual memory.
Introduction to Software Engineering Introduction to the concepts of Software Engineering. Software qualities, development life-cycle models, requirements analysis, semi-formal and formal systems modeling, system design, testing, and project management techniques. Case studies and a course project serve as examples illustrating the software engineering process
Operating System Internals and Design Overview of operating systems internals. File-system usage and design, process usage and control, virtual memory, multi user systems, access control. Course projects use C++ language.
Team Project I Team Project I
Team Project II Team Project II
Elementary Linear Algebra Matrices and their operations, linear systems of equations, Gaussian elimination, determinants, geometry of Euclidean space, vector spaces and subspaces, linear independence, basis, dimension and rank, orthogonality and the Gram-Schmidt process, linear transformations, eigenvalues and eigenvectors, and diagonalization.
Discrete Mathematics for Computing Discrete mathematics useful in computing. Emphasis on mathematical induction, recurrence relations, asymptotic behavior of functions, and algorithm analysis.
Applied Statistics I Introduction to probability, random variables and their expectations, some commonly used discrete and continuous distributions, concept of random sampling and sampling distributions. Use of computer software packages for simulating, summarizing, and displaying data.
Special Topics in Computer Science Special Topics in Computer Science
Machine Learning Reviews the development of machine learning paradigms. Introductory topics include parameter adjustment methods, signature tables, and the application of genetic algorithms to artificial intelligence problem domains
Numerical Analysis I Solutions of systems of linear and nonlinear equations, numerical solution of matrix eigenvalue problems, interpolation and numerical integration, numerical solution of initial and boundary value problems for differential equations.
Intro Machine Learning This course offers an introduction to the field of probabilistic machine learning. Examples are drawn from sensor signal exploitation, biology, text processing, computer vision, and robotics.
Introduction to Data Mining Introduction to the fundamentals of data mining. Emphasis is on data preparation/evaluation/exploration, association rules, classification, clustering, OLAP/OLAM, pattern/model evaluation, anomaly detection. Students will develop and use data mining software
Parallel Programming for Many-Core GPUs This course will introduce an important trend in high-performance computing, the use of many-core graphics processing units (GPUs) to solve computation-intensive problems. Students will learn about new many-core GPU architecture, CUDA programming model, memory hierarchy design, parallel programming concepts, and compiling techniques to improve parallelism
Introduction to Data Mining Introduction to the fundamentals of data mining. Emphasis is on data preparation/evaluation/exploration, association rules, classification, clustering, OLAP/OLAM, pattern/model evaluation, anomaly detection. Students will develop and use data mining software.
Web Development I Introduction to basic web design and development using HTML and CSS. Topics include page structure, responsive design, and use of multimedia. Client-side programming using scripting languages such as JavaScript and jQuery will be introduced.
Numerical Methods for Computational Science Numerical methods for the sciences using modern programming languages. Solution of linear and nonlinear equations, symmetric matrix eigenvalue problems, interpolation, and least squares. Initial value and boundary value problems for representative systems governed by ordinary and partial differential equations are also solved numerically.
Principles of Programming with Java Concepts of problem solving using an object-oriented programming language, algorithm design, structured programming, fundamental algorithms and techniques.
Calculus for Engineers I Limits and continuity, differential calculus of functions of one variable, introduction to integration.
The ASU Experience Students will learn about ASU's mission as the New American University, the importance and benefits of an entrepreneurial approach to problem solving, solutions to sustainability challenges, and the importance of social embeddedness. Additionally, through various course discussions and assignments, students will examine the concept of academic integrity and its potential impact on their future, gain awareness of the value of engaging in research activities, and learn about taking an interdisciplinary perspective.
First-Year Composition Critical reading and writing; emphasizes strategies of academic discourse. Research paper required.
Introduction to Engineering Introduces the engineering design process; working in engineering teams; the profession of engineering; engineering models, written and oral technical communication skills.
Introduction to Africana Studies Introduces the study of African and African-descended peoples; theory, themes, and perspectives.
Object-Oriented Programming and Data Structures Problem solving by programming with an object-oriented programming language. Introduces data structures. Overview of computer science topics.
Calculus for Engineers II Methods of integration, applications of calculus, elements of analytic geometry, improper integrals, Taylor series.
Advanced First-Year Composition Concentrated composition course for students with superior writing skills; intensive reading; research papers; logical and rhetorical effectiveness.
African American Literature: Beginnings through the Harlem Renaissance Focuses on the history of African American literature through the Harlem Renaissance, as exemplified in selected slave narratives, poems, and fiction.
Introduction to Environmental Science Introduces the interconnected nature of Earth's hydrosphere, lithosphere (soils and rocks), atmosphere, and biosphere.
Digital Design Fundamentals Number systems, conversion methods, binary and complement arithmetic, Boolean algebra, circuit minimization, ROMs, PLAs, flipflops, synchronous sequential circuits.
Discrete Mathematical Structures Logic, sets, functions, elementary number theory and combinatorics, recursive algorithms, and mathematical reasoning, including induction. Emphasizes connections to computer science.
Calculus for Engineers III Vector-valued functions of several variables, partial derivatives, multiple integration.
Introduction to Environmental Science Introduces the interconnected nature of Earth's hydrosphere, lithosphere (soils and rocks), atmosphere, and biosphere.
Computer Organization and Assembly Language Programming Register-level computer organization. Instruction set architecture. Assembly language. Processor organization and design. Memory organization. IO programming. Exception/interrupt handling.
Introduction to Programming Languages Introduces the procedural, object-oriented, functional and declarative languages.
Applied Linear Algebra Solving linear systems, matrices, determinants, vector spaces, bases, linear transformations, eigenvectors, norms, inner products, decompositions, applications.
Bob Marley and Reggae: Lyrics of Resistance Studies political content, influence, and impact of Caribbean popular music, in particular the music of Bob Marley.
Introduction to Environmental Science Introduces the interconnected nature of Earth's hydrosphere, lithosphere (soils and rocks), atmosphere, and biosphere.
Data Structures and Algorithms Advanced data structures and algorithms, including stacks, queues, trees (B, B+, AVL), and graphs. Searching for graphs, hashing, external sorting.
Computing Ethics Ethics for computing majors: history of computing, intellectual property, privacy, ethical frameworks, professional ethical responsibilities, and risks of computer-based systems
Introduction to Software Engineering Software life cycle models; project management, team development environments and methodologies; software architectures; quality assurance and standards; legal, ethical issues.
Information Assurance Concepts of information assurance (IA); basic IA techniques, policies, risk management, administration, legal and ethics issues
Probability and Statistics for Engineering Problem Solving Applications-oriented course with computer-based experience using statistical software for formulating and solving engineering problems.
Principles of Programming Languages Formal syntactic and semantic descriptions, compilation and implementation issues, and theoretical foundations for several programming paradigms.
Operating Systems Operating system structure and services, processor scheduling, concurrent processes, synchronization techniques, memory management, virtual memory, input/output, storage management, and file systems.
Introduction to Theoretical Computer Science Introduces formal language theory and automata, Turing machines, decidability/undecidability, recursive function theory, and complexity theory.
Computer Networks Network architecture and protocols, principles of network applications, socket programming, flow and congestion control, switching and routing, link-layer technologies, traffic capture and analysis, security.
African and African Diaspora Women Writers Intersection of race, class, gender, and ethnicity in black women's fiction from the United States, the Caribbean, and Africa.
Computer Science Capstone Project I Computer Science Capstone Project I
Multimedia Information Systems Design, use, and applications of multimedia systems. Introduces acquisition, compression, storage, retrieval, and presentation of data from different media such as images, text, voice, and alphanumeric.
Computer Science Capstone Project II Computer Science Capstone Project II
Multimedia Information Systems Design, use, and applications of multimedia systems. Introduces acquisition, compression, storage, retrieval, and presentation of data from different media such as images, text, voice, and alphanumeric.
Intelligent Interactive Instructional Systems Intelligent interactive instructional systems serve as tutors, as learning companions or both. Covers their design, the technology that powers them, the learning theories that motivate them and results from experimental evaluations. Emphasizes intelligent tutoring systems, as they are a more mature technology.
Graphics for Games Examines real-time rendering of high-quality interactive graphics. Studies advances in graphics hardware and algorithms that make this possible. Examples of techniques and topics include nonphotorealistic rendering, occlusion culling, level of detail, terrain rendering, shadow generation, image-based rendering, and physical simulation
Introduction to the University Experience Examination of the values that inform academic progress in the College; discussion of strategies for taking full advantage of academic opportunities and integrating formal and experiential learning.
Creative Media Application Multidisciplinary, project-driven learning process courses that encourages students to develop problem solving and teamwork skills while fostering creativity and logic. The goal is not only to provide students with some programming maturity, but to also engage them through working in small teams on existing projects related to their discipline and interest. Projects may include creative animations and games, mobile app developments, or avatars.
Analytic Geometry & Calculus Introduction to the differential and integral calculus; differentiation and integration of algebraic and transcendental functions with applications to science and engineering. Prerequisite(s): MTH 116 or equivalent.
Science w/lab Science w/lab
Writing Seminar I Introductory level course focused on writing as a mode of inquiry. Emphasis on developing college-level reading, writing, research, and critical thinking skills. Contributes to the Humanities Commons of CAP by introducing students to the shared academic practices of inquiry and discovery through writing.
Introduction to Religious and Theological Studies This course introduces students to two academic disciplines: the study of religions as historical and embodied realities, and theology as faith seeking understanding. By learning about these two disciplines, students will gain a critical self-awareness of the ways in which the modern context shapes their engagement with religion. The course emphasizes learning how to read Scripture and other primary religious sources, and to learning how the Catholic intellectual tradition addresses the question of God, the meaning of human life, and the significance of human diversity.
Algorithms & Programming I Introduction to computers and programming using a high-level, structured language. Topics include problem solving, algorithms, programming constructs, data representation, stepwise refinement, and debugging.
Analytic Geometry & Calculus II Continuation of MTH 168. Conic sections, techniques of integration with applications to science and engineering, infinite series, indeterminate forms, Taylor's theorem
Introduction to Religious and Theological Studies This course introduces students to two academic disciplines: the study of religions as historical and embodied realities, and theology as faith seeking understanding. By learning about these two disciplines, students will gain a critical self-awareness of the ways in which the modern context shapes their engagement with religion. The course emphasizes learning how to read Scripture and other primary religious sources, and to learning how the Catholic intellectual tradition addresses the question of God, the meaning of human life, and the significance of human diversity.
Introduction to Philosophy Introduction to philosophical reflection and study of some central philosophical questions in the Western intellectual tradition, including questions of ethics, human knowledge, and metaphysics. Readings from major figures in the history of philosophy such as Plato, Aristotle, Augustine, Aquinas, Descartes, Hume, and Kant.
Algorithms & Programming II Algorithms and Programming II covers object-oriented design and development, data abstraction, exception handling, linked lists, stacks, queues, binary trees, and recursion using a high level, structured language.
Discrete Structures Propositional logic, Boolean algebra, predicate logic, logical deductions, proof techniques, sets, combinatorics, recurrences, functions, relations, discrete structures such as graphs, digraphs, and associated algorithms
Analytic Geometry & Calculus III Solid analytic geometry, vectors and vector functions, multivariable calculus, partial derivatives, multiple integrals.
Writing Seminar II Variable topic composition course focused on academic discourse, research, and argumentation. Instruction and practice in developing reading, writing, and research skills introduced in ENG 100 and employed across the curriculum. Emphasis on rhetorical analysis and a process approach to writing effective academic arguments.
Social Science Integrated A theme-based course that varies across sections but shares common learning outcomes. Application of social science methods and social theory to critically examine human issues and problems from the perspective of at least three social science disciplines (anthropology, economics, political science, psychology and sociology). The course will emphasize outcomes related to scholarship, critical evaluation of our times, and the diversity of the human world.
Computer Organization and Architecture Machine and assembly language instructions, and writing assembly programs. Design of basic logic circuits needed in constructing a computer. Design of circuits for information encoding, arithmetic units, and transferring and storing information. Data path and control unit for a simple processor. Multiprocessing and alternative parallel systems.
Data Structures & Algorithms. Dynamic nonlinear data structures including trees, binary trees, search trees, balanced search trees, priority queues, and graphs, with an emphasis on their implementation, uses, and associated algorithms. Analysis of the computational complexity of algorithms related to these structures.
Matrix Theory and Applications Matrix Theory and Applications
Principles of Oral Communication Introduces the relationship between communication and democratic life in contemporary and historical context
Concepts and Implementation of Programming Languages Study of programming language concepts through the implementation of interpreters and assessment of the conceptual differences in the resulting languages. Concepts covered include syntax and semantics, regular and context-free grammars, parsing, binding, scope, parameter passing, lazy evaluation, types, currying, and continuations. A comparative survey of the imperative, functional, logical, and object-oriented paradigms of programming is presented.
Statistical Methods I Probability distributions including binomial, hypergeometric, Poisson, and normal. Estimation of population mean and standard deviation: Confidence intervals and tests of hypotheses using t-, Chi-square, and F-statistics.
Design and Analysis of Algorithms Introduction to order notation and algorithm analysis. Emphasis will be on learning algorithm design techniques such as divide and conquer, greedy approach, and dynamic programming through exposition of classical algorithms from domains such as sorting, string matching, and graph algorithms. Hardness of problems and introduction to the complexity classes P, NP, and NP-complete. Topics also include impact of computing techniques to the improvement or welfare of society as a whole
perating Systems Introduces the theoretical and practical concepts underlying an operating system's structure and operation. Topics include process and thread creation and management, scheduling, concurrent, multi-threaded programming and synchronization, deadlock, memory management, virtual memory, and computer security
Information Ethics Examination of ethical principles, codes, cases, incidents, and issues in the creation, use and distribution of information in and through various media. This includes issues in the ethical design, implementation, and use of computerized information systems.
Capstone I Capstone I
Capstone II Capstone II
Artificial Intelligence Fundamentals concepts and techniques of intelligent systems. Topics includes knowledge representation, search strategies, predicate logic, and expert systems.
Automata Theory Formal languages (regular, context-free, recursive, and recursively enumerable), machine models (deterministic and non-deterministic finite automata, push down automata, Turing machines), grammars (regular, context-free, and unrestricted), interplay among these concepts, Church-Turing thesis, and undecidability
Graph Algorithms Design and analysis of algorithms for problems based on graphs. Classical algorithms and efficient algorithms for restricted domains of graphs will be covered. Analysis of algorithms, complexity classes P, NP, and NP-complete, traversals, bi-connectedness, strongly-connectedness, 2-SAT, planarity testing, and algorithms for restricted classes of graphs.
Evolutionary Computation The history and use of Evolutionary Computation (EC) are explored. Popular approaches to EC (genetic algorithms, genetic programming, evolution strategies, evolutionary programming) are defined and discussed. Coursework includes implementation of evolutionary techniques and review and analysis of literature in the field
Problems in Computer Science. By arrangement. May be taken more than once for additional credit
Computer Graphics Introduction to primitives and interactive graphics software development. Topics include transforms, clipping, modeling, rendering, texture, animation, and ray tracing.
Scientific Foundations of Health Students will learn how genetics, the environment and human behavior influence well-being. Topics include health fitness, immunity, nutrition, stress management and chronic disease prevention.
The Science of Physical Activity and Health Students will learn the importance of health fitness, good nutrition, stress management and chronic disease prevention. Activity portion of course will focus on training to improve fitness.
English Composition I Develops analytical reading and writing skills through the investigation of methods used in cultural and literary studies and the application of those methods to specific texts.
English Composition II Develops communication skills in networked electronic environments, emphasizes interpretation and evaluation of cultural texts, and incorporates research methods in print and on the Internet.
Humanities Elective Humanities Elective
The United States to 1877 Colonial settlement, the American Revolution and the Constitution, antebellum expansion, slavery and plantation economy, sectional conflict and Civil War, Reconstruction.
The United States since 1877 The social, political, and economic history of the United States since Reconstruction. Topics include American industrialization, two world wars, New Deal, and the Civil Rights movement.
Government of the United States.  The purposes, structure, and functions of national and state governments, focusing on participation, institutions, and the policy process. Foundations of law, civil rights and civil liberties, role of the media, parties and elections, and policy processes
American Constitutional Issues. Examines the American social and political system through the prism of Constitutional issues decided by the U.S. Supreme Court.
American Government in Comparative Perspective. Examines American government in relation to other political and economic systems in countries around the world.
Transfer Non-Calc Phys I. Transfer Non-Calc Phys I.
Introductory Physics I. A calculus-based course with a laboratory covering classical mechanics, applications of classical mechanics, oscillations, and waves.
Introductory Physics II. A calculus-based course with laboratory covering electromagnetism, applications of electromagnetism, light, and modern physics.
Introduction to Environmental Science Introduction to environmental field science. Case study approach. Exposure to basic field equipment and techniques, analysis of data.
Habitable Planet Introduction to the origin and evolution of Planet Earth, creation of the universe and the elements, early history of Earth, radioisotope geochemistry and the timing of events in the universe, the galaxy, and on Earth. Formation of the atmosphere and oceans. Climate.
Earth Processes. An introduction to earth materials and processes.
General Chemistry Fundamental laws and theories of chemical reactions. Topics include atomic structure; bonding theory; stoichiometry; properties of solids, liquids and gases; chemical thermodynamics; electrochemistry; and kinetics
Chemical Principles I Topics to be covered include atomic structure, bonding, properties of matter, thermodynamics and physical equilibria. Laboratory exercises supplement the lecture material
Chemical Principles II Topics to be covered include chemical equilibria, acids and bases, aqueous equilibria, electrochemistry, kinetics, main group and transition elements
Biology of Sex & Death Students learn biology through the lens of the formation and collapse of biological systems, organized around questions pertaining to life, sex, and death.
Biological Principles An introduction to the basic principles of modern biology, including biomacromolecules, bioenergetics, cell structure, genetics, homeostasis, evolution, and ecological relationships.
Introduction to Organismal Biology. An introduction to biology at the organ and organismal levels, with emphasis on physiological processes and integration of growth and development.
Differential Calculus Differential calculus including applications and the underlying theory of limits for functions and sequences
Integral Calculus Integral calculus: Definite and indefinite integrals, techniques of integration, improper integrals, infinite series, applications.
Linear Algebra Linear algebra eigenvalues, eigenvectors, applications to linear systems, least squares, diagnolization, quadratic forms.
Introduction to Multivariable Calculus Vectors in three dimensions, curves in space, functions of several variables, partial derivatives, optimization, integration of functions of several variables.
Applied Combinatorics Elementary combinatorial techniques used in discrete problem solving: counting methods, solving linear recurrences, graph and network models, related algorithms, and combinatorial designs.
Introduction to Probability and Statistics This course is a problem-oriented introduction to the basic concepts of probability and statistics, providing a foundation for applications and further study.
Probability and Statistics with Applications Introduction to probability, probability distributions, point estimation, confidence intervals, hypothesis testing, linear regression and analysis of variance.
Statistics and Applications. Introduction to probability, probability distributions, point estimation, confidence intervals, hypothesis testing, linear regression, and analysis of variance.
Probability with Applications Topics include conditional probability, density and distribution functions from engineering, expectation, conditional expectation, laws of large numbers, central limit theorem, and introduction to Poisson Processes.
Basic Statistical Methods Point and interval estimation of systems parameters, statistical decision making about differences in system parameters, analysis and modeling of relationships between variables.
Computing, Society, and Professionalism Examines the role and impact of information and communication technology in society, with emphasis on ethical, professional, and public policy issues.
Robots and Society Examines the role and impact of robotics, distributed sensing and actuation, ubiquitous computing and related technology in society, emphasizing ethical, professional and public policy issues
Privacy, Technology, Policy, and Law This course takes a multi-disciplinary approach to privacy, a topic of great interest in the technology, policy, ethics, law, and business realms.
Technology and Sustainable Community Development This course will explore the role of technology in the development of sustainable communities, locally and internationally.
Part 1 of a 2 semester project design and implementation sequence conjoined with Tech Communications Part 1 of a 2 semester project design and implementation sequence conjoined with Technical Communications. Prepare requirements, design and project plans. Develop a basic prototype of the desired system.
Part 2 of a semester project design and implementation sequence conjoined with Tech Communications. The second part of a 2 semester project design and implementation sequence conjoined with Technical Communications
Technical Communication Approaches Part of a multi-semester sequence that students take in tandem with major-specific classes to develop professional written, visual, oral, and analytic strategies.
Technical Communication Strategies Part of a multi-semester sequence that students take in tandem with major-specific classes to develop professional written, visual, oral, and analytic strategies.
Technical Communication, Theory and Practice This course introduces students to workplace document genres to develop visual and verbal skills in critical analysis and document development.
Undergraduate Research Proposal Writing This course is intended to guide undergraduate students from all disciplines through the stages of writing a proposal for their research option project and thesis.
Undergraduate Research Thesis Writing This course is intended to guide undergraduate students from all disciplines through the stages of writing their undergraduate thesis.
Freshman Leap Seminar Small group discussions with first year students are led by one or more faculty members and include a variety of foundational, motivational, and topical subjects for computationalist.
Introductory Computing in MATLAB For students with a solid introductory computing background needing to demonstrate proficiency in the MATLAB language.
Introduction to Computing Introduction to computing principles and programming practices with an emphasis on the design, construction and implementation of problem solutions use of software tools.
Introduction to Media Computation Introduction to computation (algorithmic thinking, data structures, data transformation and processing, and programming) in a media and communication context.
Representing Structure and Behavior Modeling the structure of media (e.g., music, graphical scenes) using dynamic data structures. Designing objects as encapsulations of structure and behavior. Algorithms for simulating objects.
Introduction to Object Oriented Programming Introduction to techniques and methods of object-oriented programming such an encapsulation, inheritance, and polymorphism. Emphasis on software development and individual programming skills.
Data Structures and Algorithms for Applications Computer data structures and algorithms in the context of object-oriented programming. Focus on software development towards applications.
Computing for Engineers Foundations of computing with an introduction to design and analysis of algorithms and an introduction to design and construction of programs for engineering problem-solving.
Introduction to Discrete Mathematics for Computer Science Proof methods, strategy, correctness of algorithms over discrete structures. Induction and recursion. Complexity and order of growth. Number theoretic principles and algorithms. Counting and computability
Honors - Induction to Discrete Mathematics for Computer Science Proof methods, strategy, correctness of algorithms over discrete structures. Induction and recursion. Complexity and order of growth. Number theoretic principles and algorithms. Counting and computability
Computer Organization and Programming An introduction to basic computer hardware, machine language, assembly language, and C programming.
Computer Systems and Networks. A broad exposure to computer system structure and networking including software abstractions in operating systems for orchestrating the usage of the computing resources.
Media Device Architectures. Controlling the interface between hardware and software in media devices. Machine-level programming (e.g., in C) to create graphics, generate sound, and support user interaction.
Data Manipulation for Science and Industry. Reading, manipulating, and exporting data for engineering, business, and scientific applications. Covers GUI's, File I/O, basic SQL, and web scraping. Emphasis on software development.
Objects and Design Object-oriented programming methods for dealing with large programs. Focus on quality processes, effective debugging techniques, and testing to assure a quality product.
Computer Science Ventures Students will learn how computer-science-based ventures are developed. The course is project-based. Students propose, analylze, pitch, design, implement, package and market web-2.0 and virtual-world-based products and services.
Design of Operating Systems Operating systems concepts, including multi-threading, scheduling, synchronization, communication, and access control. Projects will cover design and implementation of several operating systems components.
Computer Structures: Hardware/Software Codesign of a Processor.  Principles in pipelined processor design, with emphasis on the need for a close interaction between code generation and architecture.
Languages and Computation. Interpreters as abstract machines and the tools used to construct them, such as scanners and parsers. An introduction to models of computation as embodied by different programming languages. Limits of and relationships between these models.
Computer Networking I Introduction to problems in computer networking, including error recovery, medium access, routing, flow control, and transport. Emphasis on current best practice. Includes programming of networked applications.
Introduction to Software Engineering Team-based project class to introduce and apply software engineering principles and practices.
Computer Graphics. Geometric constuctions; transformations; perception; reflection models; photorealistic; non-photorealistic, and image-based rendering; rendering software and API's; triangle-mesh processing; graphic acceleration; user-interaction, design and animation.
Design and Analysis of Algorithms Basic techniques of design and analysis of efficient algorithms for standard computational problems. NP-Completeness.
Introduction to Perception and Robotics Covers fundamental problems and leading solutions for computer and robot perception and action from the point of view of autonomous robot navigation.
Prototyping Intelligence Appliances. Hands-on course teaching the fundamentals of electronics of electrical and mechanical prototyping.
Analysis of Emerging Technologies Analysis of emerging technologies and their impacts for firm practice, market practice, policy, and society.
Human Computer Interface Design and Evaluation Human computer interface is considered in terms of user-system compatibility. Concepts in human factors and interface design are covered in relation to capabilities of both humans and computers.
Introduction to Cognitive Science. Multidisciplinary perspectives on cognitive science. Interdisciplinary approaches to issues in cognition, including memory, language, problem solving, learning, perception, and action
Advanced Operating Systems Operating system abstractions and their implementations, multi-threading, efficient inter-address communication, high-level synchronization, introduction to multi-processor and distributed operating systems, real-time systems.
Programming Embedded Systems Design principles, programming techniques, and case studies of embedded real-time systems. Interface techniques and devices. Representations and reasoning about physical processes.
Introduction to Information Security Terms/concepts, threats, controls; problem definition; comprehensive information security model; security for operating systems, databases, network/distributed systems; administering security; legal/ethical/policy issues.
Computer and Network Security Fundamental concepts and principles of computer security, operating system and database security, secret key and public key cryptographic algorithms, hash functions, authentication, firewalls and intrusion detection systems, IPSec ad VPN, and wireless security.
Compilers, Interpreters, and Program Analyzers Study of techniques for the design and implementation of compilers, interpreters, and program analyzers, with consideration of the particular characteristics of widely used programming languages.
Computer Networking II Principles of computer networks, including medium access, ARQ protocols, routing, congestion avoidance, and control. Emphasis on design options and tradeoffs. Includes significant network application programming.
Introduction to Network Management Introduction to SNMP-based network management. Practical application to network and system management including hands-on lab practice.
Mobile Applications and Services for Converged Networks This course provides an introduction to mobile applications and services with an emphasis on voice and data service integration in modern commercial networks.
Data Communications Laboratory Detailed study of the principles of data transmission systems and their performance, reinforced by laboratory exercises.
Advanced Computer Organization Topics concerning the hardware design of computer systems. Advanced techniques in high-performance pipelined central processing units. Memory and I/O systems. Parallel processors including shared-memory multiprocessors and cluster computers.
Introduction to Database Systems Comprehensive coverage of mainstream database concepts such as the entity-relationship model, relational databases, query languages, and database design methodology. Includes a project.
Database System Implementation Study of fundamental software components/algorithms of a database system, including the file manager, query engine, lock manager, and recovery manager. Includes a project component.
Emerging Database Technologies and Applications The course will cover current developments including distributed, object-oriented, temporal-spatial, Web-based, mobile, and active database technologies, and data warehousing and mining applications.
Video Game Design and Programming Techniques for electronic game design and programming, including graphics game engines, motion generation, behavioral control for autonomous characters, interaction structure, social and interface issues of multi-user play, and the business aspects of game development
Introduction to Information Visualization Introduction to principles and techniques of infomation visualization, the presentation of primarily abstract data to help people understand, analyze and make sense of data.
Computational Journalism A study of computational and technological advancements in journalism with emphasis on technologies for developing new tools and their potential impact on news and information.
Introduction to User Interface Software. Concepts, techniques, structures, and strategies for implementation of interactive software.
Design of Online Communities Introduction to the design of online communities. Students study an existing community in depth
Computational Photography. An introductory course on the scientific, technical, perceptual, and aesthetic principles of pictures. Emphasis is on the techniques of image formation, analysis, merging, modification and their use for depiction of reality on a 2D medium of photographs.
Introduction to Computer Vision. Introduction to computer vision including fundamentals of image formation, camera imaging geometry, feature detection and matching, stereo, motion estimation and tracking, image classification and scene understanding
Digital Video Special Effects A study of digital multimedia and the analysis and synthesis of digital video. Special attention paid to techniques for generating video special effects.
Computer Animation Motion techniques for computer animation and interactive games (keyframing, procedural methods, motion capture, and simulation) and principles for storytelling, composition, lighting, and interactivity.
Automata and Complexity Theory Computational machine models and their language classes. Undecidability. Resource-bounded computations. Central complexity-theoretic concepts such as complexity classes, reducibility and completeness
Advanced Algorithms Advanced techniques for designing and analyzing efficient algorithms for combinatorial, algebraic, and number theoretic problems.
Principles and Applications of Computer Audio A well-rounded exploration of digital audio and its importance in current research and applications. Exposes students to the principles, technology, and current research of computer audio.
Mobile and Ubiquitous Computing Investigates the infrastructure required to develop mobile and ubiquitous computing applications and establishes major research themes and experimental practices.
Knowledge-Based Modeling and Design nformation-processing theories of modeling and design; topics include design decision-making, problem-solving and learning, and knowledge-based modeling and design.
Advanced Intelligent Robotics Hands-on course in which students program autonomous mobile robots and solve complex tasks for robot teams.
Knowledge-Based Artificial Intelligence Structured knowledge representation; knowledge-based methods of reasoning and learning; problem-solving, modeling and design.
Machine Learning Machine learning techniques and applications. Topics include foundational issues; inductive, analytical, numerical, and theoretical approaches; and real-world applications.
Robot Intelli Planning We investigate algorithms for robots and complex systems that make intelligent decisions. Emphasis on the theoretical and empirical properties of classical, geometric, stochastic/dynamic planning.
Natural Language Understanding Methodologies for designing systems that comprehend natural language. Topics include lexical analysis, parsing, interpretation of sentences, semantic representation, organization of knowledge, and inference mechanisms.
Introduction to Educational Technology Introduction to the theory and practice of educational technology. Covers learning theory applicable to educational technology, explains major research findings.
Computer-Supported Collaborative Learning Research and practice in computer-supported collaborative learning. Review of existing systems and research, as well as evaluation and design methods.
Internet Computing Systems, Services and Applications. Focusing on fundamental issues, concepts, techniques, and technical challenges that are critical for designing and developing Internet systems, services and applications.
Empirical Methods for User Interface Design and Evaluation Introduction to empirical methods for gathering requirements and evaluating the end-user and usability of software systems.
Information Security Strategies and Policies Information security vulnerabilities and risks; legal, cost, privacy, and technology constraints; derivation of strategies; technical and procedural means of achieving desired results.
Privacy, Technology, Policy, and Law. This course takes a multi-disciplinary approach to privacy, a topic of great interest in the technology, policy, ethics, law, and business realms
Game AI Examines the expressive possibilities of artificial intelligence techniques in computer games. Students learn AI programming techniques, and how they strongly interface with game design.
Philosophical Issues in Computation Metaphysical and epistemological issues in the foundations, methods, and implications of computing. Issues include: minds, brains, and machines; representation and language; simulating nature.
Mixed Reality Experience Design Focuses on informal design, integration of media theory, HCI and technology issues. Significant group design projects.
Computational Problem Solving for Scientists and Engineers Computing principles, computer archietecture, algorithms and data structures; software development, parallelism.
Computational Modeling Algorithms Design, analysis and implementation of algorithms for modeling natural and engineered systems; algorithm experimentation, and optimization.
Introduction to High Performance Computing Design of algorithms and software for high performance computing platforms used in computational science and engineering. Topics include parallelism, locality, machine architectures, and programming.
Computer Simulation Algorithms and techniques for creating computer simulations and their realization in software
Simulation and Military Gaming Creation and use of modeling and simulation tools to analyze and train students regarding strategic events in international relations.
Introduction to Computing for Data Analysis Computational techniques needed for data analysis; programming, accessing databases, multidimensional arrays, basic numerical computing, and visualization; hands-on applications and case studies.
Numerical Analysis I Introduction to numerical algorithms for some basic problems in computational mathematics. Discussion of both implementation issues and error analysis.

Algorithms and Data Structures I  Object-oriented design: objects, classes, methods, encapsulation; programming fundamentals: data, variables, selection, loops, arrays, input/output; basic graphics and exceptions.
Enrichment Seminar  Skills for success in computing: research questions and methodologies, oral and written presentation techniques, argumentation and critical thinking, time and project management strategies, study skills.
Knowledge, Reality, Self Philosophical responses to the questions of how we can know, what is real, and what is the nature of human existence that explore the dialogue between Catholic, Christian, secular and skeptical perspectives on these questions.
Calculus I  Limits, transcendental functions (logarithms, exponential functions, inverse trigonometric functions), differentiation (definition, tangent lines, rates of change, techniques, implicit differentiation, related rates), applications of differentiation (graphing, optimization), indeterminate forms and L'Hopital's Rule. Use of a computer algebra system, eg. MAPLE.
Ancients  A Humanities seminar based principally on texts and readings drawn from primary sources up to 1650. Extensive written work and seminar discussions. Required readings: Hebrew and Christian scriptures, selections from the works of Augustine, Greek and Renaissance works. Readings from different genres and disciplines. Themes developed by the instructor in accordance with the selected readings.
Algorithms and Data Structures II Object-oriented design: inheritance, interfaces, polymorphism; problem analysis; recursion; abstract data types; dynamically linked structures; data structures: stacks, queues, lists, collections, trees.
Discrete Structures  Mathematical structures that support computer science: sets, matrices, trees, graphs, logic and proof, mathematical induction, relations, functions, sequences, summations, and elementary combinatorics.
Faith, Reason, Culture Study of Christianity with a particular focus on Roman Catholicism, animated by Augustine's concern to relate Christian faith, reason and human culture, using various disciplinary approaches within the fields of theology and religious studies.
Moderns  A Humanities seminar based principally on texts and readings drawn from primary sources 1650 to the present. Extensive written work and seminar discussions. Readings from each of the following five historical eras: Early Modern, Enlightenment, Romantic, Modernist, Contemporary. Readings will also reflect different genres and disciplines. Themes developed by the instructor in accordance with the selected readings, including a specific Augustinian theme.
Computing Systems I  Architecture of computer systems: representation of data; processor, memory and I/O organization. Assembly language programming. C programming language constructs and their relationship to the underlying architecture. Basics of operating systems: interrupts, concurrency, process scheduling, security, networking.
Platform Based Computing  Topics include maps, hash tables, graphs, concurrency/ interference/synchronization, internet programming and security.
Ethics  Major Western ethical traditions as they apply to selected contemporary ethical problems, with special consideration to Jewish and Christian perspectives.
The United States to 1877 For AP and transfer credit only. Does not fulfill Arts and Sciences core history requirement.
Computing Systems II  Processes, threads and concurrent programming. Scheduling and dispatching. Linking and relocation. Memory management. Virtual memory. System-level I/O Device management. File systems. Security and protection in depth. Real-time and embedded systems. System performance evaluation. Scripting.
Design and Analysis of Algorithms  Efficiency classifications and mathematical analysis of recursive and nonrecursive algorithms; design techniques: brute force, greedy, divide-and-conquer, dynamic programming, backtracking, branch-and-bound, space and time tradeoffs; NP-completeness; approximation algorithms; computational problems: sorting, searching, string processing, graphs, arithmetic, linear algebra.
Sophomore Writing seminar
Programming Languages  High level language features: data types, control structures; formal lexical and syntactical analysis; operational semantics; language translation.
Theory of Computation  Finite automata and regular expressions; push down automata and context-free grammars; Turing machines; Church's thesis; computability; NP-completeness.
Database Systems Concepts and technology of database management systems; data modeling with an emphasis on the relational model; database querying and normalization; physical data organization.
Genesis to Judges Critical analysis of Genesis through Judges. Historical and archaeological focus with topics including Creation, Flood, Abraham and Sarah, Isaac and Rebekah, Moses, Exodus, Covenant, Joshua, the judge Deborah, Samson and Delilah and others with social, political and religious life situations of these.
Software Engineering  Management and production of software systems; the software life cycle; software design techniques and methodologies; participation in a team software development project.
Network Management & Performance  Monitoring and management of computer networks and network devices; SNMP, CMIS CMIP network management protocols and services; Management Information Base (MIB) development; performance analysis including queuing models; comparison of channel access protocols; other related topics as selected by the class. This is frequently run as a seminar requiring a significant paper or project, consistent class preparation and participation. Prerequisites: statistics, probability.
Linear Algebra for Computing  Fields, vectors, matrices. Structures and computations in a high-level language for these mathematical objects. Computational applications including image morphing, page rankings, compression, search in images, graph manipulation.
Ethical Issues in Computing  Codes of professional ethics, unauthorized access, ownership of software, and the social responsibility of computing professionals.
Senior Project  Capstone course centered around a semester long sofware development or research project; project planning; requirements elicitation and specification; teamwork; oral presentations required of all students.
User/System Interface The design and measurement of human-computer interfaces, with the objectives of developing models of user communities, summarizing current research in user-oriented design, defining design criteria for the user/system interface, and constructing test strategies for interactive software systems.
Advance Systems Program The UNIX kernel: architecture, inodes, process control, memory management, I/O subsystem. System calls in C: execution environment, memory management, terminal control, locking, file management, process management, interprocess communication. C libraries. Program development and debugging tools.
Expert Systems Knowledge representation and reasoning techniques; forward and backward chaining; semantic net and frame systems; uncertainty, automated knowledge acquisition; practical guidelines for implementing expert systems.
Engineering Graphics and CAD An introduction to the techniques for creating solid models of engineering designs. Topics include three-dimensional modeling of parts and assemblies, visualization, orthographic project views and layouts, auxiliary, sectional, and cutout views, exploded views, dimensioning and tolerancing, bill of materials, and computer-generated design documentation
Calculus I A detailed study of limits, continuity, derivatives of algebraic and transcendental functions, applications of derivatives, numerical techniques, integrals and the Fundamental Theorem of Calculus.
Computer Problem Solving in Engineering and Computer Science General methods of problem solving and principles of algorithmic design using a high-level language such as Visual C#. Introduction to MATLAB. Applications will be drawn from problems in mechanical, electrical and computer engineering and computer science.
Chemical Principles States of matter, atomic structure, bonding and molecular structure, chemical reactions
Introduction to Electrical and Computer Engineering An introduction to the fundamentals of electrical and computer engineering; DC and AC circuits, digital logic circuits; combinational logic design; sequential circuits, introduction to electronics, operational amplifiers, DC electromechanical machines.
Calculus II A detailed study of methods of integration, applications of the integrals, improper integrals, sequences, series and power series, polar coordinates, and parametric curves.
Fundamentals of Physics I Classical mechanics and thermodynamic
Introduction to Thermal Engineering Introduction to the fundamentals of classical thermodynamics and heat transfer; first and second laws of thermodynamics; thermodynamic property relationships; application to engineering systems and processes; introduction to conduction, convection and radiation; steady 1-D conduction and extended surfaces; lumped capacitance method
Introduction to Data Structures in C C programming including arrays, structures, and pointers. Basic data structures such as stacks, queues, and lists. Implementation and analysis of fundamental sorting and searching algorithms.
Introduction to Differential Equations with Matrix Algebra Introduction to ordinary differential equations, Laplace transforms, linear systems, matrices, vectors, independence, Eigenvalues and eigenvectors, and applications
Fundamentals of Physics II Sound, light, electricity and magnetism. This course has common lectures with PHY 1520. Satisfies the university general education requirement in the knowledge applications integration area. Prerequisite for knowledge applications integration: completion of the general education requirement in the natural science and technology knowledge exploration area.
Digital Logic Design Boolean algebra; number systems and arithmetic, combinational logic circuits; synchronous sequential circuits; asynchronous sequential circuits; introduction to a hardware description language (HDL). With laboratory.
Introduction to Industrial and Systems Engineering Overview of industrial and systems engineering: perspectives, tools and models. In depth coverage of probability and statistics in engineering: density and distribution functions, population and sampling distributions, confidence intervals, hypothesis testing and introduction to discrete-event simulation.
Design and Analysis of Electromechanical Systems Design, analysis, and testing of electromechanical systems; static equilibrium of particles and rigid bodies; introduction to microprocessors; team design project dealing with technical, economic, safety, environmental, and social aspects of a real-world engineering problem; written, oral, and visual communication
Electric Circuits Modeling and analysis of circuits with dependent sources; non-ideal operational amplifiers. Transient and forced responses in RC, RL and RLC circuits. Series and parallel resonant circuits. AC power, three-phase circuits, magnetically coupled circuits. Wye-delta transforms. Introduction to frequency response. Use of PSPICE. With laboratory.
Microprocessors Application of microprocessors and microcomputers to the solution of typical problems, interfacing microprocessors with external systems such as sensors, displays and keyboards; programming considerations, microcomputer system and memory system design.  A laboratory, design course; several short design projects and one large design project
Computer Hardware Design Development of components and techniques needed to design digital circuits and systems for controllers, computers, communication and related applications. Design and analysis of combinational and sequential logic circuits using a hardware description language such as VHDL, timing simulations, test benches, embedded cores. Design of special-purpose processors and their implementation in an FPGA
Discrete Mathematics Concepts and methods of discrete mathematics with an emphasis on their application to computer science. Logic and proofs, sets and relations, algorithms, induction and recursion, combinatorics, graphs and trees.
Electronic Circuits and Devices I Characteristics and models of nonlinear circuit elements, such as diodes, BJTs and MOSFETs. Analysis and design of circuits employing these devices, including power supplies, voltage regulators, and amplifiers; Biasing and circuit stability issues. Use of Operational amplifiers, discrete circuit elements; and PSPICE software for circuit design is emphasized in the lab.
Embedded Systems Design This course deals with advanced concepts in the programming and the interfacing of modern microprocessors/microcontrollers to the outside world as demonstrated by a variety of application examples. It covers the advanced architecture of modern processors and the many I/O peripherals now commonly found on-board. Laboratory activities provide the student with experience in developing the hardware and software required to incorporate microprocessors into systems that solve real-world interfacing problems.
Design and Analysis of Algorithm Computer algorithms, their design and analysis. Strategies constructing algorithmic solutions, including divide-and- conquer, dynamic programming and greedy algorithms. Development of algorithms for parallel and distributed architectures. Computational complexity as it pertains to time and space is used to evaluate the algorithms
Signals and Systems Basic signals, average value, average power, and energy. Laplace transform and inverse Laplace transform, and transfer function concept and approach in the analysis of electrical and mechanical lumped-parameter linear systems. Systems modeling and analysis in Laplace and differential equation domains. Natural and forced responses of linear time-invariant systems, and concept of convolution. Fourier analysis of signals and systems: Fourier series and Fourier transform, power spectral density, energy spectral density, band width, and filters.
Senior Design Capstone design projects selected from a wide variety of areas related to electrical and computer engineering. Develops system approach to design: preparation of specifications, scheduling, modeling, simulations, and technological, financial and environmental aspects. Multi-disciplinary teamwork is emphasized. Prototyping, testing and completion of the project are required. Presentation of results required.
Design and Analysis of Algorithm Computer algorithms, their design and analysis. Strategies constructing algorithmic solutions, including divide-and- conquer, dynamic programming and greedy algorithms. Development of algorithms for parallel and distributed architectures
Electromagnetics I This is an introductory course in electromagnetics. A thorough review of waves, phasors, and vector calculus is provided to lay the mathematical foundation to cover the key topics in this course. The key topics include transmission lines, electrostatics, magnetostatics, and touches upon time-varying fields.
Integrated Electronics Modern microelectronics processes and fabrication of integrated circuits. Crystal growth, wafer preparation, photo lithography, dielectric and polysilicon film deposition, epitaxial growth, oxidation, diffusion, ion implementation, etching, metallization and integrated circuits layout principles. Introduction to MOS-based and bipolar transistor-based microcircuits design and fabrication. Fabrication processing simulation using SUPREM. With laboratory and projects.
Automotive Mechatronics I Overview of mechatronics, modeling, simulation, characterization and model validation of electromechanical devices; introduction to computer-aided software; basic automotive sensors; basic actuators and power train devices; principles of automotive and industrial electronic circuits and control systems (analog and digital); principles of produce design; mechatronics case studies.
﻿
APPLIED COMMUNICATIONS SYSTEMS Analysis with design problems of electronic communications circuits. Emphasis on the nonlinear effects of large-signal operation of active devices. Complete design of r.f. oscillator, amplifier, and mixer circuits.
ELECTRIC POWER PROCESSING FOR ALTERNATIVE ENERGY SYSTEMS Introduction to electrical power processing technologies that are necessary to convert energy from alternative sources into useful electrical forms. Several specific alternative energy sources are examined, providing platforms for introducing basic concepts in power electronics, electric machines, and adjustable-speed drives.
Educational Psychology: Educational Specialist in School Psychology Educational Psychology: Educational Specialist in School Psychology
FEEDBACK CONTROL SYSTEMS Modeling of continuous systems; computer-aided solutions to systems problems; feedback control systems; stability, frequency response and transient response using root locus, frequency domain and state variable methods.
SCIENCE AND STORYTELLING Fundamentals of effective written and spoken communication. Develops skills in gathering and evaluating information, writing research papers and other documents, and preparing and delivering oral presentations.
GENERAL PHYSICS Recommended for those majoring in science or mathematics. Also suitable for others who have the math prerequisite. Mechanics, heat and sound. Two lectures, two discussions and one three-hour lab per week.
CALCULUS AND ANALYTIC GEOMETRY 2 Techniques of integration, improper integrals, first order ordinary differential equations, sequences and series, Taylor series, vector geometry in two and three dimensions.
CALCULUS WITH ALGEBRA AND TRIGONOMETRY II Topics in algebra, trigonometry and precalculus are integrated with elementary differential calculus.
DIGITAL SYSTEM DESIGN AND SYNTHESIS Introduction to the use of hardware description langages and automated synthesis in design. Advanced design principles. Verilog and VHDL description languages. Synthesis from hardware description  languages. Timing-oriented synthesis. Relation of integrated circuit layout to timing-oriented design. Design for reuse.
INTRODUCTION TO OPERATING SYSTEMS Input-output hardware, interrupt handling, properties of magnetic tapes, discs and drums, associative memories and virtual address translation techniques. Batch processing, time sharing and real-time systems, scheduling resource allocation, modular software systems, performance measurement and system evaluation.
CIRCUITS LABORATORY I Experiments cover Kirchhoff's laws, inductors, basic operational amplifier circuits, and frequency response.
SPECIAL TOPICS Specialized subject matter of current interest to undergraduate students.
Electrical Engineering Electrical Engineering
GENERAL PHYSICS Primarily for engineering students. Mechanics and heat. Two lectures, two discussions and one three-hour lab per week.
INTRODUCTION TO COMPUTER ENGINEERING Logic components built with transistors, rudimentary Boolean algebra, basic combinational logic design, basic synchronous sequential logic design, basic computer organization and design, introductory machine- and assembly-language programming.
INTRODUCTION TO RANDOM SIGNAL ANALYSIS AND STATISTICS Introduction to probability, random variables, and random processes. Confidence intervals, introduction to experimental design and hypothesis testing. Statistical averages, correlation, and spectral analysis for wide sense stationary processes. Random signals and noise in linear systems.
MICROELECTRONIC DEVICES Characteristics of semiconductors; study of physical mechanisms and circuit modeling of solid state electronic and photonic devices; principles of microelectronic processing and examples of integrated circuits.
GENERAL CHEMISTRY II Principles and application of chemical equilibrium, coordination chemistry, oxidation-reduction and electrochemistry, kinetics, nuclear chemistry, introduction to organic chemistry. Lecture, lab, and discussion.
PROGRAMMING III The third course in our programming fundamentals sequence. It presumes that students understand and use functional and object-oriented design and abstract data types as needed. This course introduces balanced search trees, graphs, graph traversal algorithms, hash tables and sets, and complexity analysis and about classes of problems that require each data type. Students are required to design and implement using high quality professional code, a medium sized program, that demonstrates knowledge and use of latest language features, tools, and conventions. Additional topics introduced will include as needed for projects: inheritance and polymorphism; anonymous inner classes, lambda functions, performance analysis to discover and optimize critical code blocks. Students learn about industry standards for code development. Students will design and implement a medium size project with a more advanced user-interface design, such as a web or mobile application with a GUI and event- driven implementation; use of version-control software.
SIGNALS AND SYSTEMS Time-domain response and convolution; frequency-domain response using Fourier series, Fourier transform, Laplace transform; discrete Fourier series and transform; sampling; z-transform; relationships between time and frequency descriptions of discrete and continuous signals and systems.
DATABASE MANAGEMENT SYSTEMS: DESIGN AND IMPLEMENTATION What a database management system is; different data models currently used to structure the logical view of the database: relational, hierarchical, and network. Hands-on experience with relational and network-based database systems. Implementation techniques for database systems. File organization, query processing, concurrency control, rollback and recovery, integrity and consistency, and view implementation.
COMMUNICATION NETWORKS Study of communication networks with focus on performance analysis. Layered network structure. Basic protocol functions such as addressing, multiplexing, routing, forwarding, flow control, error control, and congestion response.  Overview of transport, network, and link layer protocol standards.  Introduction to wireless and mobile networks.
Mathematics,  B.A.http://guide.wisc.edu/undergraduate/letters-science/mathematics/mathematics-ba/Mathematics is classified with both the humanities and the sciences. Its position among the humanities is based on the study of mathematics as one of the liberal arts for more than two thousand years. Still an expanding subject, mathematics offers more new and challenging frontiers than at any time in its long history—with many new fields, requiring new techniques and ideas for exploration.
GENERAL PHYSICS Electricity, magnetism, light, and modern physics.
Biology, B.A. Biology, B.A.
CALCULUS AND ANALYTIC GEOMETRY 1 Introduction to differential and integral calculus and plane analytic geometry; applications; transcendental functions.
ELECTRONIC CIRCUITS II A second course in modeling and application of semiconductor devices and integrated circuits. Advanced transistor amplifier analysis, including feedback effects. Design for power amplifiers, op-amps, analog filters, oscillators, A/D and D/A converters, and power converters. Introduction to transistor level design of CMOS digital circuits.
INTRODUCTION TO PROGRAMMING LANGUAGES AND COMPILERS Introduction to the theory and practice of compiler design. Comparison of features of several programming languages and their implications for implementation techniques. Several programming projects required.
DESIGN AUTOMATION OF DIGITAL SYSTEMS Use of digital computers to simulate, partition, place and interconnect digital electronic systems.
Landscape and Urban Studies Landscape and Urban Studies
ELECTRODYNAMICS I Potential theory; static and dynamic electric and magnetic fields; macroscopic theory of dielectric and magnetic materials; Maxwell's equations; boundary conditions; wave equation; introduction to transmission lines.
DIGITAL CIRCUITS AND COMPONENTS Principles and characterization of logic circuits. Design and analysis techniques for applied logic circuits. Transmission lines in digital applications. Families of circuit logic currently in use and their characteristics.
Neurobiology Neurobiology
MOBILE COMPUTING LABORATORY End-to-end project management; teamwork; fundamentals of disciplined development practices; introduction to mobile computing platforms and systems; design, implementation, and deployment of mobile systems and applications.
ELEMENTS OF SPEECH-HONORS COURSE The process of oral communication; principles of effective speaking; application of principles in selected speaking and reading projects.
APPLIED MATHEMATICAL ANALYSIS Sturm-Liouville theory; Fourier series, including mean convergence; boundary value problems for linear second order partial differential equations, including separation of variables and eigenfunction expansions.
INTRODUCTION TO SOLID STATE ELECTRONICS An introduction to the physical principles underlying solid-state electronic and photonic devices, including elements of quantum mechanics, crystal structure, semiconductor band theory, carrier statistics, and band diagrams. Offers examples of modern semiconductor structures.
GENERAL CHEMISTRY I Introduction. Stoichiometry and the mole concept, the behavior of gases, liquids and solids, thermochemistry, electronic structure of atoms and chemical bonding, descriptive chemistry of selected elements and compounds, intermolecular forces. For students taking one year or more of college chemistry; serves as a prereq for CHEM 104; lecture, lab and discussion.
A MODERN INTRODUCTION TO PHYSICS Introduction to physics recommended for students who are considering majoring in physics, astronomy-physics, or AMEP. Also suitable for those majoring in other sciences or mathematics who desire a rigorous physics course. Mechanics, relativity, cosmology. Three lectures, one discussion, and one three-hour lab per week.
INTRODUCTION TO COMPUTER ARCHITECTURE The design of computer systems and components. Processor design, instruction set design, and addressing; control structures and microprogramming; memory management, caches, and memory hierarchies; and interrupts and I/O structures.
Electrical Engineering  Electrical Engineering
ACADEMIC WRITING II Academic writing, critical reading and argumentation, documentation, and style and organization of research papers; oral communication skills for effective class participation and presentations.
APPLIED MATHEMATICAL ANALYSIS Vector analysis: algebra and geometry of vectors, vector differential and integral calculus, theorems of Green, Gauss, and Stokes; complex analysis: analytic functions, complex integrals and residues, Taylor and Laurent series.
LINEAR ALGEBRA Emphasizes the understanding of concepts in linear algebra and teaches to write and understand proofs in mathematics in general and in linear algebra in particular.
ADVANCED GENERAL CHEMISTRY A modern introduction to chemical principles that draws on current research themes. For students with good chemistry and mathematics background preparation who desire a one-semester coverage of general chemistry.
CURRENT TOPICS IN DANCE: WORKSHOP
ANALYTICAL METHODS FOR ELECTROMAGNETICS ENGINEERING Reviews basic calculations in electromagnetic engineering upon which all higher level concepts and physical model construction are based.  It emphasizes quantitative calculation mastery in three spatial dimensions and/or time-frequency analysis.  Applies analysis tools from vector calculus and complex exponentials to the calculation and prediction of electrical system properties.  Examples include calculating electric and magnetic fields, electric potentials, or electric flux from change or current sources, and calculating the amplitudes and phases of electric or magnetic fields due to time-oscillating sources.
TECHNIQUES IN ORDINARY DIFFERENTIAL EQUATIONS Review of linear differential equations; series solution of linear differential equations; boundary value problems; Laplace transforms; possibly numerical methods and two dimensional autonomous systems.
LINEAR ALGEBRA AND DIFFERENTIAL EQUATIONS Introduction to linear algebra, including matrices, linear transformations, eigenvalues and eigenvectors. Linear systems of differential equations. Numerical aspects of linear problems.
SPECIAL TOPICS IN ELECTRICAL AND COMPUTER ENGINEERING Topics of special interest to undergrads in electrical and computer engineering.
ELECTRODYNAMICS II Static and dynamic electromagnetic fields; forces and work in electromechanical systems; magnetic circuits; plane wave propagation; reflection of plane waves; generalized transmission line equations; current and voltage on transmission lines; impedance transformation and matching; Smith charts.
GENERAL PHYSICS Primarily for engineering students. Electricity, magnetism, light, and sound. Two lectures, two discussions and one three-hour lab per week.
PROGRAMMING II Introduces students to Object-Oriented Programming using classes and objects to solve more complex problems. Introduces array-based and linked data structures: including lists, stacks, and queues. Programming assignments require writing and developing multi-class (file) programs using interfaces, generics, and exception handling to solve challenging real world problems. Topics reviewed include reading/writing data and objects from/to files and exception handling, and command line arguments. Topics introduced: object-oriented design; class vs. object; create and define interfaces and iterators; searching and sorting; abstract data types (List,Stack,Queue,PriorityQueue(Heap),Binary Search Tree); generic interfaces (parametric polymorphism); how to design and write test methods and classes; array based vs. linked node implementations; introduction to complexity analysis; recursion.
Biological Systems Engineering  Biological Systems Engineering
DIGITAL ENGINEERING LABORATORY Practical aspects of computer system design. Design, construction, and testing of significant digital subsystems. Design, construction, and programming of pipelined digital computers.
DIGITAL SYSTEM FUNDAMENTALS Logic components, Boolean algebra, combinational logic analysis and synthesis, synchronous and asynchronous sequential logic analysis and design, digital subsystems, computer organization and design.
Mechanical Engineering Mechanical Engineering
INTRODUCTION TO THEORY AND METHODS OF MATHEMATICAL STATISTICS I Elements of probability, important discrete distributions, acceptance sampling by attributes, sample characteristics, probability distributions and population characteristics, the normal distribution, acceptance sampling plans based on sample means and variances, sampling from the normal, the central limit theorem, point and interval estimation.
STATE SPACE SYSTEMS ANALYSIS Analysis of systems using matrix methods to write and solve state-variable differential equations. Additional topics include stability, controllability, observability, state feedback, observers, and dynamic output feedback.
INTRODUCTION TO COLLEGE COMPOSITION Focuses on development of rhetorical reading, listening, and writing abilities; provides practice in written and spoken communication (emphasis on writing); develops information literacy; provides a foundation for a variety of college course work and post-college careers.
INTEGRATED CIRCUIT DESIGN Bipolar and MOS devices in monolithic circuits. Device physics, fabrication technology. IC-design for linear and nonlinear circuitry.
A MODERN INTRODUCTION TO PHYSICS Electricity, magnetism, and topics from thermodynamics, radiation, plasma physics, and statistical mechanics.
ELECTROMECHANICAL ENERGY CONVERSION Energy storage and conversion, force and emf production, coupled circuit analysis of systems with both electrical and mechanical inputs. Applications to electric motors and generators and other electromechanical transducers.
SIGNALS, INFORMATION, AND COMPUTATION Introduction to the signals, information, and computational techniques in electrical engineering.
Landscape and Urban Studies Landscape and Urban Studies
INTRODUCTORY MICROPROCESSOR LABORATORY Software and hardware experiments with a microcomputer system. Assembly language programming, simple input/output interfacing, and interrupt processing in microcomputer systems.
INTRODUCTION TO MICROELECTROMECHANICAL SYSTEMS Introduction to MEMS technology, devices and systems. Fundamentals of MEMS in fabrication, process integration, material mechanics of MEMS structures, sensors and actuators. Main topics in MEMS - microfluidics, optical MEMS, RF MEMS, BioMEMS, packaging, and CAD.
INTRODUCTION TO SPEECH COMPOSITION Teaches students to give effective oral presentations in a variety of public speaking situations and to become better consumers of written and oral discourse.
TECHNICAL COMMUNICATION Communication for engineering, science, and technology; theory and practice in planning, preparing, and critiquing reports, proposals, instructions, and business correspondence; research strategies, collaborative work; oral presentations.
TOPICS IN CALCULUS I TOPICS IN CALCULUS I
INTRODUCTION TO MICROPROCESSOR SYSTEMS Introduction to architecture, operation, and application of microprocessors; microprocessor programming; address decoding; system timing; parallel, serial, and analog I/O; interrupts and direct memory access; interfacing to static and dynamic RAM; microcontrollers.
TESTING AND TESTABLE DESIGN OF DIGITAL SYSTEMS Faults and fault modeling, test equipment, test generation for combinational and sequential circuits, fault simulation, memory and microprocessor testing, design for testability, built-in self-test techniques, and fault location.
TOPICS IN CALCULUS II TOPICS IN CALCULUS II
ELEMENTARY MATRIX AND LINEAR ALGEBRA Matrix algebra, linear systems of equations, vector spaces, sub-spaces, linear dependence, rank of matrices, determinants, linear transformations, eigenvalues and eigenvectors, diagonalization, inner products and orthogonal vectors, symmetric matrices.
EMBEDDED MICROPROCESSOR SYSTEM DESIGN Hardware and software design for modern microprocessor-based embedded systems; study of the design process; emphasis on major team design project.
CALCULUS--FUNCTIONS OF SEVERAL VARIABLES Introduction to calculus of functions of several variables; calculus on parameterized curves, derivatives of functions of several variables, multiple integrals, vector calculus.
﻿
Statistical Digital Signal Processing.  Stochastic signal models, LMS identification, identification of signals from noise, Wiener filtering, blind separation of mixed signal, discrete Wavelet Transforms, compression and denoising, ceptral analysis.
Introduction to Logic Design.  Number Systems; Binary arithmetic; Boolean/Logic functions; Boolean Algebra; logic gates, their CMOS design; function minimization, analysis and synthesis of combinational and sequential circuits.
Introduction to Filter Synthesis.   Fundamentals of network synthesis, filter approximations and frequency transformations. Active filter synthesis using bi-linear and bi-quad circuits. Topics in computer-aided design.
Digital Systems Design.  Switching algebra, combinational circuits, Mux, ROM, DCD, PLA-based designs, advanced combinational circuit minimization techniques, sychronous and asynchronous squential circuit synthesis (minimization, hazards, races, state assignment) testing.
Advanced Computer Architecture.   Design and analysis of high performance uniprocessors. Topics include arithmetic: multiplication, division, shifting; processor: pipelining, multiple function units. instruction sets; memory: caches, modules; virtual machines.
General Physics II (Electricity and Magnetism). Electrostatics; electric currents; d-c circuits; magnetic fields; magnetic media; electromagnetic induction; a-c circuits; Maxwell’s equations; electromagnetic waves; reflection and refraction; interference; geometrical optics.
Systems Programming. Study of computer systems emphasizing impact on application level programming. Virtual memory and memory management; code optimization; system-level I/O; concurrency:  processes, threads, synchronization; introduction to network programming.
Calculus III. Vectors in space, functions of several variables, partial differential and optimization, multiple integrals, vector fields, Green?s Theorem, Stokes Theorem.
Applied Linear Algebra.   Matrices, row reduction algorithm, vector spaces, LU-decomposition, orthogonality, Gram-Schmidt process, determinants, inner products, eigenvalue problems, applications to differential equations and Markov processes.
Introduction to Electromagnetics and Applications.  Transmission lines. Plane waves in various media. Polarization and Stoke's parameters. Scalar and vector potentials. Guided wave propagation. Radiation. Linear antennas and antenna parameters.
Robotics: Algorithms and Control.  Kinematic and dynamic modeling of robots; configuration space; motion planning algorithms; control of robots; sensors and perception; reasoning; mobile robots.
Analog Communication Circuits.  Introduction to radio frequency circuit design: narrowband transistor amplifiers, impedance matching networks, oscillators, mixers, amplitude and frequency modulation/demodulation, phase-lock loop circuits, amplifier noise and stability analysis. Laboratory.
General Chemistry I Lecture.  A first-semester course in general chemistry, including stoichiometry, periodicity, reaction types, the gaseous state, solution, chemical equilibria, acid-base equilibria, dissolution-precipitation equilibria.
Codes and Cryptography.   Mathematics of communications theory, basic information theory necessary to understand both coding theory and cryptography, basic ideas and highlights for both coding theory and cryptography, including public-key cryptosystems.
Microdevices and Micromachining Technology.   Microfabrication techniques for microsensors, microstructures, and microdevices. Selected examples of physical/chemical sensors and actuators. Simulation experiments.
Control Engineering.   State-space representation of systems; realization theory; stability; performance; modern control design techniques, including: fuzzy, learning, adaptive and nonlinear control.
Digital Communications.   Source coding, quantization, signal representation, channel noise, optimum signal reception, digital modulation: ASK, PSK, FSK, MSK, M-ary modulation. Probability of error. Inter-symbol interference.
Linear and Non-Linear Programming.  Linear programming, simplex algorithm, degeneracy, duality theorem sensitivity analysis, convexity, network simplex methods, assignment problems. Constrained and unconstrained minima. Quasi-Newton methods. Ellipsoidal methods of Kachian.  Continuous-time signals and spectra; amplitude and angle modulation, sampling and quantization theory; digital pulse modulation, error probability, commercial broadcasting practices.
Analysis and Design of Power Electronic Circuits.  Analysis of different isolated and non-isolated power-converter topologies, understanding of power-converter components, switching schemes.
Academic Writing I: Writing in Academic and Public Contexts.   Students write in a variety of genres with an emphasis on argument and sentence-level grammar.
Introduction to Embedded Systems.  Introduction to embedded systems and microcontroller; instruction set; data representations; assembly programming; mixed C/assembly programming; memory organization; interrupt processing; I/O devices and interfacing; programming laboratory.
Probability and Random Processes for Engineers. Probability, random variables, discrete and continuous distributions, transformation of random variables, expectation, generating functions, statistical inference, hypothesis testing, estimation, random processes, stationarity, applications.
Computer Organization.   Software/hardware interaction in a computer. Compiler, assembler and linker, machine code. Clocking, datapath, control unit, ALU and memory design, cache memory, pipelining.
Senior Design I.  Introduction to the principles and practice of product design: specifications, evaluation of design alternatives, technical reports, and oral presentations. Independent design projects.
Solid State Device Theory.  Introduction to semiconductors, Energy bands, Electron and hole transport mechanisms in semiconductor devices, recombination and generation, P-N Junctions.  Intro to metal-oxide-semiconductor field effect transistors.
Multimedia Systems.   Multimedia systems; compression standards; asynchronous transfer mode; Internet; wireless networks; television; videoconferencing; telephony; applications.
Analog and Mixed - Signal Integrated Circuits. Review of basic analog concepts; Sampling and mixed-signal interface circuits; analytical analysis and CAD-based design/simulation; emphasis on compact modeling, design tradeoffs, and intuitive design approaches.
RF and Microwave Guided Propagation.  Maxwell's equations, transmission lines, Smith chart, strip lines, rectangular and circular waveguides, TE and TM waves, wave impedance, resonators, two-portal parameters, power and energy considerations.
Introduction to Thermal Physics.  Calculus-based introduction to thermal physics. The first and second laws of thermodynamics, entropy, free energy, statistical physics, and their applications.
Digital Signal Processing I.   Sampling theorem; discrete signals and systems; discrete time Fourier transform; DFT; FFT; IIR and FIR digital filter design; stability; DSP applications.
Professional Development Seminar.. Graduating seniors will be provided with information regarding future career paths and will provide information regarding the program to be used for assessment purposes.
Fundamentals of Modern Quantum Theory.  Modern introduction to the quantum theory including discrete systems (qubits, etc.), quantum measurement theory, entanglement, Bell?s Theorem, the Uncertainty Principle, one-dimensional potential models, and the Schrodinger-von Neumann equation.
Introduction to Differential Equations.   Techniques and applications of differential equations, first and second order equations, Laplace transforms, series solutions, graphical and numerical methods, and partial differential equations.
Engineering Orientation.   A general orientation course on careers in the engineering profession. Discussion of college advising procedures. Required of all engineering students.
Image Analysis and Computer Vision I.   Image formation, geometry and stereo. Two-dimensional image analysis by fourier and other 2-D transforms. Image enhancement, color, image segmentation, compression, feature extraction, object recognition.
Introduction to Computing and Programming.  Access and use of computing resources. Programming and program design. Problem solving. Data types, control structures, modularity, information hiding.
Pattern Recognition I.  The design of automated systems for detection, recognition, classification and diagnosis. Parametric and nonparametric decision-making techniques. Applications in computerized medical and industrial image and waveform analysis.
Computer Communication Networks II.  Explores integrated network architecture of service, control signaling and management, examples of high-speed LAN/WAN, next generation Internet and mobile wireless network.
Nanoelectronics.  Wave-particle duality, Schrodinger equation, atomic orbitals, band theory of solids. Semiconductor and carbon nanoelectronic materials. Nanostructure device fabrication. Nanoelectromechanical systems.
Hardware Description Language Based Digital and Computer System Design. Hardware description language (HDL) introduction; digital system design including arithmetic circuit, datapath and control; basic processor architecture and design; use of CAD tools for simulation, synthesis, and verification.
Introduction to VLSI Design.   MOS, CMOS circuits VLSI technology, CMOS circuit characterization and evaluation. Static and dynamic MOS circuits, system design, faults, testing, and symbolic layout.
Academic Writing II: Writing for Inquiry and Research.  Students learn about academic inquiry and complete several writing projects including a documented research paper. Topics vary by section.
Data Structures.   Design, usage and analysis of data structures:  review of lists, stacks and  queues; hash tables, priority queues, search trees, introduction  to graphs;  searching and sorting; runtime analysis; programming projects and lab exercises.
Introduction to Electrical and Computer Engineering.   Concepts of electrical and computer engineering including: ciruit analysis, fundamental electromagnetics, electronic devices, sensors, communication, digital logic, programming, numerous practical applicaitons; laboratory.
Principles of Automatic Control.   Transfer function; block diagrams; flow graphs; state space canonic forms; stability analysis; steady state and transient analysis; feedback control; continuous to discrete conversion; digital control.
MATH 180.  Calculus I.  4 hours. Differentiation, curve sketching, maximum-minimum problems, related rates, mean-value theorem, antiderivative, Riemann integral, logarithm, and exponential functions.
General Physics I (Mechanics).   Kinematics, vectors, Newton?s laws of motion; linear momentum, collisions; work and kinetic energy; potential energy, conservation of energy; rotational kinematics and energy; rotational dynamics, static equilibrium; simple harmonic motion.
Introduction to Antennas and Wireless Propagation.   Potential, antenna parameters, radiation from linear wires and loops, impedance, arrays, communication links and path loss, tropospheric propagation, fading and diversity.
Network Analysis.   Matrix algebra for network analysis, network parameters, macromodeling, high-frequency measurements, network functions and theorems. Topics in computer-aided analysis.
General Chemistry Laboratory I.  Laboratory in general chemistry, including stoichiometry, periodicity, reaction types, the gaseous state, solution, stoichiometry, chemical equilibria, acid-base equilibria, dissolution-precipitation equilibria.
Discrete and Continuous Signals and Systems.   Signals; systems; convolution; discrete and continuous Fourier series and transforms; Z-transforms; Laplace transforms; sampling; frequency response; applications; computer simulations.
Digital Signal Processing II.   Computer-aided design of digital filters; quantization and round-off effects; FFT algorithms; number-theoretic algorithms; multirate signal processing; DSP architectures and programming.
Computer Communication Networks I.  A balanced presentation focuses on the internet as a specific motivating example of a network and also introduces internet protocols in a more theoretical context.
Mathematical Foundations of Computing.  Discrete mathematics concepts fundamental to computing:  propositional logic, predicates and quantifiers; proofs; sets; recursive definitions and  induction; functions, relations and graphs; combinatorics and discrete probability; applications.
Electronics I.   Operational amplifiers. Semiconductor junctions. Bipolar and field-effect transistors. Simple transistor amplifier and switching applications. Introduction to digital logic circuits.
Integrated Circuit Engineering.   Introduction to processing technology of integrated circuits: thin film deposition, doping, oxidation, epitaxy and lithography. Design, layout, assembly, testing and yield. Design project.
Transistors.   Bipolar junction transistors, electronic processes in surface-controlled semiconductor and dielectric devices. Metal oxide semiconductor filed effect  transistors, surface and interface effects, diode lasers, integrated optoelectronic devices.
Circuit Analysis.  Electric circuit elements; Ohm's Law; Kirchhoff's laws; transient and steady-state analysis of circuits; Laplace transform methods; network theorems. Laboratory.
Senior Design II.   Application of engineering principles and optimization to the solution of the design problem initiated in Electrical and Computer Engineering 396. Implementation and testing of the design.
Computer Algorithms I.   Design and analysis of computer algorithms. Divide-and-conquer, dynamic programming, greedy method, backtracking. Algorithms for sorting, searching, graph computations, pattern matching, NP-complete problems.
Electronics II.  Differential amplifiers. Feedback amplifiers. Frequency response, stability and compensation of amplifiers. Circuit implementation of logic gates in various logic families. Bistable and memory circuits.
Power Semiconductor Devices and Integrated Circuits. Encompasses fundamentals of primarily silicon based power semiconductors with regard to basic physical principles, breakdown mechanisms, high voltage bipolar and insulated gate devices, and basic packaging issues.
Wireless Communications.   Cellular concept, frequency reuse, mobile radio propagation, channel fading, noise in analog communications, mobile radio channel equalization, multiple access techniques (FDMA, TDMA, CDMA), wireless networking.
Modern Linear Optics. Geometrical optics, wave optics, two-dimensional Fourier analysis, scalar diffraction theory, Fourier transforming properties of lenses, coherent and incoherent images, holography, electromagnetic optics, polarization and crystal optics, resonators.
Electromechanical Energy Conversion.   Electromagnetic forces and torque; magnetic circuits and transformers; DC machines; three-phase AC synchronous and induction machines; laboratory-demonstrations. Projects are required.
Electromagnetic Compatibility.   EMC requirements for electronic systems. Nonideal behavior of components. Radiated and conducted emissions. Susceptibility. Coupling and shielding. Electrostatic discharge. System design for EMS.
Numerical Analysis. Introduction to numerical analysis; floating point arithmetic, computational linear algebra, iterative solution to nonlinear equations, interpolation, numerical integration, numerical solution of ODEs, computer subroutine packages.
Calculus II.  Techniques of integration, arc length, solids of revolution, applications, polar coordinates, parametric equations, infinite sequences and series, power series.
General Chemistry I Basic concepts of chemistry covering the following topics: stoichiometry, redox reactions; properties of gases; thermochemistry; descriptive presentation of atomic orbitals; molecular structure and bonding; chemical trends in the periodic table; properties of bulk matter; colligative properties of solutions.
Ancients A Humanities seminar based principally on texts and readings drawn from primary sources up to 1650. Extensive written work and seminar discussions. Required readings: Hebrew and Christian scriptures, selections from the works of Augustine, Greek and Renaissance works. Readings from different genres and disciplines. Themes developed by the instructor in accordance with the selected readings.
Egr. Interdisciplinary Proj. I Core engineering concepts and project-based introduction to engineering course for freshmen engineering majors. First half of semester is lecture/project format emphasizing core concepts and math. Second half consists of an elective interdisciplinary project. Students choose from among several of these
Calculus I Limits, transcendental functions (logarithms, exponential functions, inverse trigonometric functions), differentiation (definition, tangent lines, rates of change, techniques, implicit differentiation, related rates), applications of differentiation (graphing, optimization), indeterminate forms and LHopitals Rule. Use of a computer algebra system, eg. MAPLE.
Faith, Reason, and Culture Study of Christianity with a particular focus on Roman Catholicism, animated by Augustine's concern to relate Christian faith, reason and human culture, using various disciplinary approaches within the fields of theology and religious studies.
Moderns A Humanities seminar based principally on texts and readings drawn from primary sources 1650 to the present. Extensive written work and seminar discussions. Readings from each of the following five historical eras: Early Modern, Enlightenment, Romantic, Modernist, Contemporary. Readings will also reflect different genres and disciplines. Themes developed by the instructor in accordance with the selected readings, including a specific Augustinian theme.
ECE Freshman Projects Project-based introduction to engineering course for freshman electrical and computer engineering majors
Egr Prog & Applic Engineering problem solving using the C programming language, C control structures, data files, debugging, functions, arrays, elementary data structures, and pointers. Two lecture hours per week and 1 lab period per week.
Calculus II Integration (indefinite, definite), applications of integration (area, volume, applications to physics and economics, etc.), methods of integration, approximate integration (trapezoidal and Simpson's rules), improper integrals, differential equations, infinite sequences and series. Continued use of a computer algebra system.
Physics I Mechanics Introduction to Mechanics. Designed for students in the College of Engineering.
Fund Computer Engineering I Introduction to logic design and digital computer fundamentals. Topics include computer arithmetic, Boolean algebra and logical design, assembly language programming basics, and basic concepts of computer architecture
Fundamentals of MATLAB Use of MATLAB, a matrix oriented, high level programming language, for the simulation and modeling of physical systems. Matrix operations, extensive 2-dimensional and 3-dimensional graphing, introduction to MATLAB toolboxes. Lectures are conducted in parallel with hands-on programming and computer simulations. One lecture hour and one laboratory period per week.
C++, Algorithms & Data Struct C++ classes, access rules, inheritance, friends, abstract classes, passing parameters by value, by reference, polymorphism in functions and operators, static and dynamic binding, templates; searching, sorting; pointer implementation of lists, stacks, queues, trees, hashing; P and NP classes; analysis of algorithms.
Career Compass Second Yr A First part of the professional development program for second year engineering students focused on four areas: The Engineering Profession, Setting the Stage for Personal Success, Post-Graduation Planning, and Communicating in the 21st Century.
Diff Equation with Linear Alg First order and linear second order differential equations, matrices and linear equation systems, eigenvalues and eigenvectors, and linear systems of differential equations.
Physics II Elec & Magnet Electrostatics, DC Circuits, magnetism, and AC circuits.
Discrete Structures Mathematical structures that support computer science: sets, matrices, trees, graphs, logic and proof, mathematical induction, relations, functions, sequences, summations, and elementary combinatorics.
Fund Comp Engineering II Continuation of ECE 2041. Topics include the PIC Microprocessor, VHDL, Quine-McCuskey method, fault detection and localization, state machine minimization, state machine testing, and codes.
Fund Electrical Engineering I Basic concepts, steady-state dc circuit analysis, network theorems, ideal op-amp circuit analysis, energy storage elements, complete response of first-order circuits, steady-state sinusoidal circuit analysis and the phasor diagram.
Prof. Dev. Seminar Various professional development activities including: initiation into mentoring program, introduction to engineering ethics and professional responsibilities, field trips and other events on contemporary issues, peer evaluation process, development of oral and written communication skills, workshops on a variety of professional skills.
Career Compass Second Yr B Second part of the professional development program for second year engineering students focused on four areas: The Engineering Profession, Setting the Stage for Personal Success, Post-Graduation Planning, and Communicating in the 21st Century.
Operating Systems System software design and implementation; process and resource management; concurrency, scheduling, and deadlock; memory management; file systems and security.
Java Bootcamp Fast-paced coverage of object-oriented programming using Java and the Java API, including packages for creating graphics and applets; Java syntax and control structures; arrays; designing objects, classes, and methods; graphical user interfaces; input streams, exception handling and threads.
Computer Architecture Fundamentals of instruction sets and their efficient execution - e.g., pipelines, caches, out-of-order execution, and branch prediction mechanisms. Performance analysis, superscalar, VLIW, multithreading, and multiprocessing are among the topics studied. Trace-driven simulators are used in practicums to explore concepts learned in class
Digital Electronics Digital logic families with primary emphasis on external electrical characteristics of the logic devices. Applications and designs at the board-level, involving topics such as series/parallel conversion and analog/digital conversion
Eng Probability & Statistics Basic set theory, axioms of probability, probability relationships. Concepts of a random variable. Joint random variables. Selected topics in statistics from: estimation, hypotheseis testing and regression. Selected topics from: functions of a random variable, random processes, Markov chains, applications (e.g. reliability, queuing, microprocessor control, digital communications, detection).
Career Compass First part of the professional development program for third year engineering students focused on four areas: The Engineering Profession, Setting the Stage for Personal Success, Post-Graduation Planning, and Communicating in the 21st Century.
Compiler Construction Lexical and syntactical analysis; code generation; error recovery; recursive descent compilation; handling of run-time environment.
Design Seminar - CPE Design Seminar - CPE
Computer Networks ISO/OSI, TCP/IP reference models; data transmission, encoding, framing, error detection, stop-and-wait, sliding windows; CSMA/CD, Ethernet; bridges, spanning tree protocol; connectionless, connection-oriented and source routing, IP addressing, forwarding, VPNs; switching fabrics; ARP, DHCP, DV, OSPF, BGP, DNS.
Design Project - CPE Design Project - CPE
Multimedia Algorithms and standards that make possible multimedia communication and storage over the internet, including baseline JPEG, JPEG 2000, video compression (MPEG-1, 2, 4), audio compression and MP3, DVD, video conferencing and streaming, multimedia over broadband (DSL and cable), multimedia database search and retrieval and digital watermarking for multimedia content ownership and intellectual property rights protection
Biomedical Instrumentation Introductory course in Biomedical Engineering emphasizing human physiology & medical measurement tools & techniques. Topics include the nervous system, the cardiovascular system & the respiratory system.
Environmental Ethics The relation of the physical and biological environment to ethical values. Priorities among environmental, economic and political values as a basis for ethical decisions.
Introduction to Computer Programming Introduction to object-oriented program design and development. Principles of algorithm formulation and implementation.
Data Structures and Algorithms Fundamental data structures and algorithms of computer science; basic algorithm analysis; recursion; sorting and searching; lists, stacks, queues, trees, hashing; object-oriented data abstraction.
Discrete Structures Introduction to grammars and parsing; predicate and propositional logic; proof techniques; sets, functions, relations, relational data model; graphs and graph algorithms.
Advanced Programming Concepts Advanced software development with an object-oriented focus. Design, implementation, and testing of several large programs in a Java and Linux environment using current technologies.
New Student Seminar Overview of electrical and computer engineering with group and individual design projects.
Fundamentals of Digital Systems Digital logic: theory, design, and implementation of combinational and sequential logic. Laboratory experience in construction of digital logic circuits.
Circuit Analysis and Laboratory Analysis of electric circuits including transients, sinusoidal steady-state, and power. Includes labs.
Computer Organization Architecture, organization and design of computer systems, including assembly language programming, computer arithmetic, instruction execution, performance analysis, pipelining, memory hierarchy, and the design of datapath and control logic.
Introduction to Embedded System Programming Understanding the hardware-software interface in an embedded system. Using C and assembly language in device-driver design. Software interfacing to peripherals. Performance and memory issues. Hardware interrupt programming.
Electronic Circuit Design 1 Analysis and design of electronic circuits with an emphasis on amplifier gain and frequency response.
Signals and Systems Time and frequency domain analysis of discrete or continuous systems subjected to periodic or nonperiodic input signals.
Junior Team Design Project Culminating design experience based on skills learned in junior-level courses. Students works in teams to plan, design, and test a project based on the integration of components built in other classes.
Junior Seminar Seminars and colloquia on current topics in electrical and computer engineering, as well as ethics, contemporary issues, and life-long learning.
Capstone Design 1 First semester of a two-semester design experience from conception to manufacturing planning and prototype. Product development process. Economic and manufacturing considerations. Intellectual property agreement required.
Capstone Design 2 Second semester of a two-semester design experience from conception to manufacturing planning and prototype. Product development process. Economic and manufacturing considerations. Intellectual property agreement required.
Calculus 1 Differential and integral calculus: limits; continuity; the derivative and applications; extrema; the definite integral; fundamental theorem of calculus; L'Hopital's rule.
Calculus 2 Techniques and applications of integration; sequences, series, convergence tests, power series; parametric equations; polar coordinates.
Elementary Linear Algebra Linear systems, matrices, vectors and vector spaces, linear transformations, determinants, inner product spaces, eigenvalues, and eigenvectors.
Ordinary Differential Equations Methods and theory of ordinary differential equations.
Introduction to Newtonian Mechanics Linear, circular, and projectile motion; their prediction from forces and torques. Conservation of energy and momentum. Weekly lab.
Introduction to Electricity and Magnetism Electricity and magnetism. Weekly lab.
Statistics for Engineers and Scientists The scientific method; probability, random variables, common discrete and continuous random variables, central limit theorem; confidence intervals and hypothesis testing; completely randomized experiments; factorial experiments.
General College Chemistry 1 with Lab (Integrated) Atomic and molecular structure including bonding and periodic properties of the elements; reaction energetics, electrochemistry, acids and bases, inorganic and organic chemistry. Includes an exploratory laboratory component.
Principles of Chemistry 1 Stoichiometry, kinetic-molecular theory, thermodynamics, states of matter, solutions and equilibria, electrochemistry, structure and bonding, chemical reactions, kinetics.
Persuasive Writing Expository and persuasive writing focusing on practical reasons for evaluating audiences, generating and structuring an argument, and making stylistic decisions. Library research paper.
Technical Communication Effective processes of written, oral, and visual technical communication, including collaborative processes. Writing for academic and professional audiences.
Computer Systems Machine-level representations of programs and data, processor architecture, program performance optimizaton, memory hierarchies, virtual memory, linking, exceptions.
Real-Time Operating Systems Hardware/software interface, real-time kernel internals, implementation of high-level language constructs, issues in real-time application software development.
Embedded Systems Interfacing digital hardware components to an embedded system processor. Developing the hardware-software interface. Developing application software. Using C and assembly language in device-driver design, monitor-debugger, and real-time kernel. Lab.
Software Design and Testing Principles of software design, design patterns, design representation, refactoring. Principles of software quality assurance and testing. Development and testing tools.
Operating Systems Design Principles and concepts of operating systems design and the implementation of an operating system.
Software Engineering Analysis, design, implementation, and testing of significant software systems.
Algorithmic Languages and Compilers Formal description of algorithmic languages and techniques used in their compilation: semantics, ambiguities, procedures, replication, iteration, recursion.
Database Modeling Concepts Database models: relational, deductive, object-oriented. Integrity constraints, query languages, database design.
Computer Graphics Interactive computer graphics systems programming and architecture.
Introduction to User Interface Software Introduction to software architectures and techniques for graphical user interfaces. Input devices, windowing systems, event-driven programming, interactive geometry.
Computer Communications and Networking Introduction to data communications and computer networking. Communications fundamentals, computer networks, software, architecture, telecommunications, regulation, standards.
Large-Scale Distributed System Design Principles and concepts of designing and building distributed systems. Introduction to architectures for distributed computation. Reliability, availability, and scalability of large applications. Cloud computing and APIs.
Computer Security Introduction to computer security fundamentals: confidentiality, integrity, authentication, and access control. Secret key and public key cryptography, network security protocols, viruses, and fire walls.
Introduction to Artificial Intelligence Introduction to core areas of artifical intelligence; intelligent agents, problem solving and search, knowledge-based systems and inference, planning, uncertainty, learning, and perception.
Tools for Machine Learning Machine learning models and other mechanisms allowing computers to learn and find knowledge from data.
Parallel Processing Theoretical and practical study of parallel processing including multi-core, fine-grained, and clustered architectures, parallel programming languages, and parallel algorithms.
Electromagnetic Fields and Waves Analysis of transmission lines and electromagnetic waves including the development and application of Maxwell's equations.
Computer Systems Machine-level representations of programs and data, processor architecture, program performance optimizaton, memory hierarchies, virtual memory, linking, exceptions.
Real-Time Operating Systems Hardware/software interface, real-time kernel internals, implementation of high-level language constructs, issues in real-time application software development.
Embedded Systems Interfacing digital hardware components to an embedded system processor. Developing the hardware-software interface. Developing application software. Using C and assembly language in device-driver design, monitor-debugger, and real-time kernel. Lab.
Introduction to Mixed-Signal VLSI VLSI circuit design emphasizing mixed-signal circuits such as D/A and A/D converters, phase-locked loops, S/H circuits. Associated laboratory provides layout-design experience.
Power Electronics Introduces power electronic converters including ac/dc rectifiers, dc/dc converters and dc/ac inverters. Electronic motors including DC motors and induction motors. The application of power electronic to solar and wind power generation.
Introduction to Semiconductor Devices Physics of electronic and optical solid state devices; includes semiconductor materials, bipolar and FET device physics and modeling, optical properties of semiconductors, and lasers.
Experiments in Integrated Circuit Development Measurements of key silicon properties and fabrication of integrated circuits.
Electromagnetic Radiation and Propagation Electromagnetic and optical theory including guided wave theory, modes, propagation in materials, radiation analysis, antenna analysis, and aperture diffraction.
Wireless Communication Circuits Analysis, design, and fabrication of RF/microwave passive circuit structures, amplifiers, oscillators, and mixers. System concepts, including stability, gain, and noise figure.
Introduction to Optical Engineering Introduces principles and practices of optical engineering including optical communications system and components.
(Me En-EC En 483) Design of Control Systems Classical frequency response and time domain design of control systems. State variable control and computer simulation of control systems.
Introduction to Digital Communication Theory Analysis and design of digital communications systems in AWGN: signal space concepts, modulation, matched filter and correlation detection, synchronization, performance. Computer-based design exercises.
Introduction to Discrete-Time Signal Processing Digital signal processing, fast Fourier transforms, digital filter design, spectrum analysis. Applications in speech processing, SONAR, communications, etc.
Calculus of Several Variables Partial differentiation, the Jacobian matrix, and integral theorems of vector calculus.
Digital Logic 1 This course introduces combinational logic analysis and design. The topics include digital signals, binary numbers, logic gates, logic families, combinational building blocks, Boolean algebra, combinational circuit analysis, and combinational circuit design techniques. Emphasis is placed on the VHDL hardware description language as a vehicle for circuit description and simulation. Laboratory exercises require the student to design, simulate, implement, and test a wide range of digital circuits using standard logic families and programmable logic devices
Software Development I This course provides an introduction to object-oriented software development using the Java programming language. Emphasis is placed on translating written problem descriptions into robust software solutions. Topics covered include Java program structure, algorithmic problem solving and modularization, I/O statements, control constructs, looping techniques, class libraries, user-defined classes and methods, arrays, and ArrayLists
Freshman Studies I This course emphasizes close reading of texts, including not only printed materials but also art, photographs, maps, film, music, and other documents. At the same time, this course requires students to shift focus from the micro level of a text to the macro level of its context in a way that allows them to understand a problem in terms of the larger system(s) of which it is part. Critical thinking skills are developed as students interpret and synthesize these micro and macro elements of text and context. Similarly, personal growth is encouraged as students make connections between course material and their own experiences, beliefs, and values. A primary course focus will be rhetorical strategies for communicating ideas clearly, concisely, and correctly. Students will engage in some form of civic activity in the form of experiential learning that involves the larger community and society outside of MSOE.
Calculus I This course begins with a short review of topics in algebra and trigonometry before introducing the student to differential calculus. Topics include algebra of functions, limits, continuity, differentiation of algebraic, trigonometric, exponential and logarithmic functions and application of the derivative to curve sketching and optimization problems
Digital Logic 2 This course introduces sequential logic analysis and design. The topics include flip-flops, registers, counters, shift-registers, algorithmic state machines, basic algebraic data paths, register files, and memories. Emphasis is placed on the VHDL hardware description language as a vehicle for circuit description and simulation. Laboratory exercises require the student to design, simulate, implement, and test a wide range of sequential digital circuits using standard logic families and programmable logic devices.
Software Development II This course continues the study of objected-oriented software development using the Java programming language. Students design, document and implement software classes and incorporate these classes into larger applications. Topics covered include abstraction, encapsulation, declaring and implementing abstract data types, interfaces, inheritance, polymorphism, graphical user interfaces, simple event-driven programming, exception handling, and file I/O.
Freshman Studies II Freshman Studies II
Calculus II and an introduction to integral calculus. Topics include Newtons method, differentials, basic integrals involving algebraic, trigonometric, exponential, logarithmic, and inverse trig functions. Topics also include rectilinear motion, work, areas and volumes of revolution, integration techniques such as integration by parts and partial fractions, and numerical integration methods
Computer Architecture This course introduces the concepts of computer architecture and performance trade-offs that must be made in the design of computer systems. Topics covered include reduced instruction set computers, instruction set design options, processor implementation, pipelining, and memory hierarchy. The lectures are reinforced through laboratory projects that require students to design and simulate the data path and control circuitry of a reduced instruction set microprocessor
Data Structures This course covers the organization of data and the algorithms that act upon them. The topics of arrays, linked lists, stacks, queues, trees, sets, and hash tables are introduced. Fundamentals of algorithm performance are also introduced, with an emphasis placed on time complexity analysis. Laboratory activities include implementation of data structures as well as the application of data structures from standard libraries.
Freshman Studies III Freshman Studies III
Calculus III Topics include LHopital rule, improper integrals, parametric equations, polar coordinates, vector algebra, infinite series with tests for convergence, power series, Taylor and Maclaurin series, and operations with series.
Embedded Systems I This course presents a typical embedded microcontroller and assembly language programming as an efficient and direct means of programmatically controlling an embedded system. Topics covered include the addressing modes, register file, and instruction set of a microcontroller; subsystems such as timers and analog to digital conversion; and interrupts. Software control of hardware is stressed. In the laboratory, students design software to demonstrate proficiency in these areas.
Linear Circuits - Steady State I This course introduces the basic laws used in the analysis of electrical circuits. Specific topics covered include Kirchhoffs Laws, resistors in series and parallel, circuit analysis methods, op amps, Thevenin/Norton equivalent circuits, and superposition. The course is limited to DC circuit analysis. Circuit simulation software is introduced as a computer analysis tool
Differential Equations This course discusses the solution of first-order differential equations, the solution of higher-order differential equations with constant coefficients, applications of differential equations, and an introduction to the method of Laplace transforms applied to the solution of certain differential equations
Physics I - Mechanics This course is a calculus-based introduction to mechanics. Topics include: linear and rotational kinematics and dynamics, work, energy, and momentum. The mathematical level of this course includes the use of vector algebra and elementary applications of differential and integral calculus. The laboratory part of the course emphasizes measurement precision, experimental technique,
Embedded Systems II and introduces C as a portable high-level language for embedded systems programming. Topics include C language syntax, variables, and pointers. C functions are covered with special attention to passing by value versus passing by reference. Specialized embedded topics included using pointers to interact with microcontroller subsystems, creating interrupts in C, and the C/assembly interface. Designing modular application by use of multiple files is emphasized throughout the course. Laboratory exercises employ peripheral subsystems as well as reinforce other key topics
Linear Circuits - Steady State II After a brief review of DC circuit concepts and methods, AC circuit analysis and frequency as a variable are introduced and developed. Specific topics covered include phasors, impedance, complex AC power, mutual inductance and transformers, RL and RC filters, and Bode plots. The use of computer circuit simulation software is continued to include the AC analysis of circuits. The associated laboratory reinforces the lecture material
Calculus IV and an introduction to multivariate calculus. Topics include surfaces in three dimensions, partial derivatives, double and triple integrals with applications to areas, volumes, and moments.
Physics II - ElectroMagnetism The purpose of this subject is to acquaint the students with the fundamental laws of electricity and magnetism. Particular topics include electrostatic vector fields, scalar potential, capacitance and dielectrics, energy and force in electrostatic systems, current, resistance and electromotive force, magnetic fields and forces and electromagnetic waves. PH 2021 is taught in an integrated lecture-lab format.
Embedded Systems III This course is the third in the embedded system sequence. In this course students will carry out a complete design and implementation of an embedded system over the course of the term with weekly milestones. Topics include a review of C programming, a review of interrupt driven I/O and review of typical microcontroller peripherals such as the UART, timer-counters and others. The I2C and SPI serial protocols will be introduced along with peripherals that implement these protocols. Interface timing will be discussed, and calculations performed to determine the timing compatibility between external devices and the microcontroller based on data sheet information.  System-on-chip concepts will be introduced along with techniques for developing custom peripherals in a hardware description language
Linear Circuits - Transients After a brief review of DC and AC circuit concepts and methods, the course introduces and develops series and parallel resonance and the transient analysis of circuits, using both classical and Laplace transform techniques.  In addition, the analysis of circuits with step-function and sinusoidal sources leads to a general consideration of transfer functions.  Multisim is used to simulate system responses.
Probability and Statistics This course provides a basic introduction to the laws of probability needed to perform statistical analyses. Both descriptive and inferential statistics are considered. Probability distributions, the Central Limit Theorem, confidence intervals, hypothesis testing, and analysis of variance are considered in depth.
Waves, Optics, Thermodynamics, and Quantum Physics This course is a continuation of Physics I and Physics II. This course begins with a brief review of traveling wave theory, and then applies this theory to multiple waves traveling in the same medium, standing waves, resonance, and interference effects involving both light and sound. Polarization, reflection, and refraction of light is also discussed
Software Engineering Tools and Practices This course provides an introduction to the software engineering tools and practices - a look at typical approaches software engineers use to create applications in practice. Topics include requirements analysis, high-level design, detail-level design, UML modeling, code generation, basic unit testing, application building, continuous integration, and revision management.
Leading Project Teams This course focuses on the sociocultural dimensions of project management and explores how to identify, build, lead, and motivate project teams to achieve organizational objectives. Special attention is paid to processes to build and develop teams; students will learn to recognize and leverage different personalities and perspectives, resolve conflict, negotiate with stakeholders, and plan and facilitate problem solving, decision making and planning meetings through the use of effective communication strategies. Another critical aspect of project leadership is knowing how to advocate on behalf of your project to champion organizational change
Design of Operating Systems This course introduces the design and implementation of modern operating systems, as well as the implementation of C programs in a hosted environment. Topics covered include the multiprocess programming, multithreaded programming, synchronization and scheduling, deadlock detection and avoidance, memory management, file systems, and input/output systems. Laboratory projects provide experience in using operating system facilities available on a Linux virtual machine
Signals and Systems This course introduces fundamental engineering signals and systems analysis. Important signal and system topics include signal and system properties, impulse and step responses, convolution, Fourier series, Fourier transform, power and energy, frequency response, and sampling. Applications such as signal filtering, radar systems, music, and communication systems will be covered during in-class application modules
Discrete Mathematics I This course provides an introduction to discrete mathematics as it applies to computer science. Topics include sets, logic, relations, functions, recursion, Boolean algebra, and graph theory
Digital Signal Processing This course is an introduction to the digital processing of signals. It begins with the examination of sampling and reconstruction of continuous-time signals, which then motivates the study of fundamental DSP topics. Discrete time signal and system interaction is examined in both the time and frequency domains.  The course then examines DSP topics and techniques including the discrete Fourier transform, fast Fourier transform, FIR and IIR filtering, and design of digital filters using various techniques. Lecture topics are supported and extended by laboratory experiments that integrate DSP theory, MATLAB simulation, and implementation on actual real-time DSP hardware.
Linear Algebra Topics include the use of elementary row operations to solve systems of linear equations, linear dependence, linear transformations, matrix operations, inverse of a matrix, determinants, subspaces, null spaces, column spaces, dimension and rank, eigenvalues and eigenvectors, diagonalization of matrices, and similarity
Professional Guidance Professional Guidance
Physics of Semiconductor Materials and Devices This subject is intended to provide students with the fundamentals of semiconductor physics and its application to common semiconductor devices. The course starts with an in-depth look at the theory of semiconductors including energy gap, Fermi-Dirac statistics, mobility of electrons and holes, influence of temperature on conductivity, doping, photoconductivity, drift and diffusion of charge carriers and the (Shockley) ideal diode equation. Then, properties of the abrupt p-n junction are studied and applied to various practical devices including the signal diode, zener diode, varactor diode, photo-diode, light-emitting diode, solar cell, bipolar junction transistor, and finally field effect transistors
Digital Electronics and Computer Interfacing Digital electronics are diode and transistor circuits that operate on digital signals. This course introduces the design and analysis of diode circuits, BJT circuits, and MOSFET circuits with a focus on digital logic families. It also examines electronic circuits commonly used to interface sensors or actuators to the computer. Interfacing topics include analog-to-digital signal conditioning using operational amplifiers, digital-to-analog conversion using standard solid-state components, and large-signal biasing of BJT and MOSFET drivers
Computer Graphics This course introduces computer graphics with implementation in C++ on the Linux platform, reinforcing the object-oriented programming concepts of inheritance and polymorphism. Algorithms, data structures, graphics primitives, and graphics standards are discussed in addition to hardware aspects of computer graphics. Topics such as 2-D and 3-D transformations, graphics libraries, and clipping algorithms are presented. Laboratory exercises provide opportunities for students to develop graphics algorithms and interactive applications.
Ethics for Professional Managers and Engineers This course examines and evaluates the meaning of ethics and professional conduct. A guiding theme is the human search or quest for values and ethical direction in terms of professional and/or personal conduct and our daily life relationships with others. We will articulate and evaluate our own ethical principles and values and their foundations.
Innovation and Business Markets This course explores the foundation, functions and models of businesses based on innovation, creativity and value production. Course topics include (a) generation of commercializable new ideas in both new ventures and existing organizations; (b) challenges to organizations based on creativity and innovation; (c) trade-offs in making resource allocation decisions innovative ideas; and (d) strategies for businesses based on fast-changing creative and innovative products. The course features guest speakers and includes assignments involving entrepreneurship and business development. Students will develop an understanding for the steps and strategies needed to move innovative ideas to commercial success.
Senior Design Project I Senior Design Project I
Networking I This course presents principles of data communication and computer networks, with emphasis on the physical and data link layers of communication networks. Topics include: network topology, the principles of signaling on physical links, transmission media, modulation, error control, flow control, LANs, and Ethernet protocols. The laboratory includes experiments on data communication signaling and error control. The laboratory also includes a course project involving both hardware and software aspects of network systems.
Foundations of Business Economics This course presents fundamental concepts of economics and expects a student will demonstrate understanding of the interactive nature of global, national and local economic systems. The course explores how individuals, households, businesses and governments use scarce resources to satisfy unlimited wants and needs. Emphasis is placed on how economics serves as the basis for business decisions.
Senior Design Project II Senior Design Project II
Networking II This course introduces the data transfer and software aspects of networks common in computing. The layered architecture of the modern Internet is studied with a focus on many of the common protocols used to transfer information and to provide services. The laboratory projects provide an opportunity for teams of students to implement servers and clients using various protocol
Senior Design Project III This is the third course in the senior design sequence, in which each student team works on a design project from conception through implementation and testing. Teams meet regularly with the instructor to track technical and project management issues. Written reports and oral presentations are required.
Information Security This course provides a survey of computer security, consisting of the business case for security, principles of security, classes of vulnerabilities (e.g., buffer overrun), and the principles of cryptography. Cryptography topics are covered in depth, including secret and public key methods, stream ciphers, and related tools and standards such as Kerberos and PGP
English Composition Emphasizes reading and writing skills appropriate to academic discourse. Integrates the writing process, rhetorical modes and library skills into writing assignments related primarily to nonfiction readings.
College English I General education foundation course. Focuses on developing reading and writing skills appropriate to academic discourse. Integrates the writing process, rhetorical modes and library skills into writing assignments related primarily to nonfiction readings.
Public Speaking General education foundation course. Studies basic concepts of speech communication as applied to public speaking and critical analysis. For students wishing to enhance leadership potential by improvement in traditional public speaking situations.
College English II General education foundation course. Emphasizes critical reading, research and argumentation.
Art History Art History
Dance Dance
Musicology/Composition Musicology/Composition
Studio Arts Studio Arts
Theatre Theatre
Ethics and Computers General education humanities course. Ethics with application to the ethical issues which may arise from the use of computers, including the moral responsibility of computer professionals for the effect their work has on persons and society; the moral obligations of a computer professional to clients, employer and society; the conceptual and ethical issues surrounding the control and ownership of software; and the justifiability of regulation of the design, use and marketing of computer technology
Calculus I General education math and natural sciences course. Analytic geometry and the calculus in an interrelated form
Calculus II General education math and natural sciences course.
Discrete Structures I Provides a mathematical foundation essential to the entire computer science curriculum. Includes propositional and predicate logic, induction, recursion and counting techniques.
Linear Algebra An elementary study of linear algebra, including an examination of linear transformations and matrices over finite dimensional spaces.
Differential Equations I A study of first order equations including separation of variables and exact equations, second order equations including the general theory of initial value problems, constant coefficients, undetermined coefficients, variation of parameters and special methods of solution using power series and the Laplace transform methods. A standard course in differential equation for students in the sciences and engineering
A study of first order equations including separation of variables and exact equations, second order equations including the general theory of initial value problems, constant coefficients, undetermined coefficients, variation of parameters and special methods of solution using power series and the Laplace transform methods. A standard course in differential equation for students in the sciences and engineering General education math and natural sciences course. The first semester of a calculus-based physics sequence. Topics include motion, forces, energy, fluids, oscillations, waves and thermodynamics.
Physics for Scientists II General education math and natural sciences course. The second semester of a calculus-based physics sequence. Topics include electricity, magnetism, circuits, EM waves, light and selections from modern physics.
University Physics Lab II General education math and natural sciences course. Lab experiments in electricity, magnetism and optics.
Engineering Probability and Statistics I Studies the concepts of probability theory, random variables, distributions, moments, sample statistics and hypothesis testing.
Senior Design Project I Senior Design Project I
Senior Design Project II Senior Design Project II
Microprocessor-Based System Design Presents knowledge and skills required to design and program microprocessor-based systems. Introduces vendor-supplied special-purpose chips such as interrupt controllers and programmable input/output devices.
Operating Systems Fundamental principles of modern operating systems. CPU management including processes, threads, scheduling, synchronization, resource allocation and deadlocks. Memory management including paging and virtual memory. Storage management and file systems
Electronic Circuits I Introduces semiconductor devices and applications in discrete and integrated circuit design. Applications include, but are not limited to, op-amp circuits, rectification and transistor amplifiers
Computer Networks First course on computer networking. Introduces OSI layers, direct link networks, packet switching, routing, end-to-end protocols and network applications
Data Structures Introduces basic data structures and covers their implementations using classes in C++. Includes lists, stacks, queues, binary trees and hash tables.
Thermodynamics I An introduction to the terminology and analysis techniques specific to thermodynamics centered around a study of the first and second laws of thermodynamics
Introduction to Computer Architecture Introduces multilevel approach to computer systems, with an emphasis on micro architecture and instruction set architecture levels. Also introduces techniques to improve performance such as cache memory and instruction level parallelism.
FPGA-Based System Design Introduces digital design concepts using field programmable gate arrays (FPGAs). Includes programmable logic devices, FPGA architecture, interconnect, digital design challenges, digital design process, and integrated circuit fabrication process. Presents digital design flow using FPGAs, and other technologies associated with field programmable gate arrays. Introduces the concept of Verilog programming. Uses CAD tool for circuit simulation.
Object-Oriented Programming Concepts of object-oriented programming. Covers data abstractions, classes and objects, methods, inheritance, polymorphism, dynamically-bound method calls and data encapsulation. Includes programming assignments in C++.
Programming with MATLAB for Electrical and Computer Engineers Develops a deeper understanding of electrical and computer engineering related programming and analysis. MATLAB is a strong high-level programming language which is popular in science and engineering fields. Once a student learns to develop solutions to electrical and computer engineering problems using MATLAB, the programming skills can be easily extended to other programming languages. These skills are critical for both industry and graduate studies. Course covers visualization, developing and solving equations for electrical and computer engineering, symbolic toolboxes, and advanced programming methods for electrical and computer engineering applications.
Circuits II Includes circuits with mutually coupled elements, transfer functions emphasizing frequency response, two-port networks, Laplace transforms and application to transient circuit analysis, and the application of computer-aided analysis software toward circuit analysis and design
Circuits I Electric circuit principles and methods of analysis. Includes DC circuits, network theorems, capacitance and inductance, AC circuit analysis, phasor plane techniques, complex power and balanced three-phase circuits.
Engineering Economy Economic comparisons of engineering alternatives considering the time value of money, taxes and depreciation; accounting and its relationship to economic analysis; replacement decisions.
Assembly Language Programming Introduces basic concepts of computer organization and operation. Studies machine and assembly language programming concepts that illustrate basic principles and techniques. Laboratory exercises given for experience using personal computers.
Introduction to Programming First course in computer programming in a high-level language. Emphasizes analyzing problems, designing solutions and expressing them in the form of a well-structured program using the procedural aspects of C++.
Introduction to Digital Design Introduces digital design concepts. Includes number systems, Boolean algebra, Karnaugh maps, combinational circuit design, adders, multiplexers, decoders, sequential circuit design, state diagram, flip flops, sequence detectors and test different combinational and sequential circuits. Uses CAD tools for circuit simulation.

What is a Good Society Pacific Seminar 1 introduces students to the intellectual life of the university by exploring the intersection of who we are as individuals and who we are as communities.
Topical Seminar on a Good Society Topical Seminar on a Good Society
What is an Ethical Life? In their senior year, students take Pacific Seminar 3: What is an Ethical Life? This course is a culminating general education experience and the final component of the university writing requirement. What is an Ethical Life? 3 Units.
Introduction to Interpersonal Communication Introduction to the study of human interaction that occurs in relatively informal, everyday social contexts. Using models, theories, and skills of communication as takeoff points, the course introduces students to dimensions related to trust, openness, listening, perception, language, nonverbal communication, conflict, social influence, and communication competence.
Political Advocacy Principles of persuasion in political contexts in the U.S. (types and characteristics of political audiences, official and unofficial advocacy campaigns, media framing of political news & commentary) from historical and theoretical perspectives.
Engineering and Computing Ethics in Society Topics include societal needs, personal rights, whistle blowing, conflicts of interest, professional autonomy, risk assessment, sustainable development and the application of engineering codes of ethics.
English 25  Students are expected to write about and discuss various topics that arise in the study of literary works.
History Goes To Hollywood This course examines how films shape our understanding of certain historical events. It will provide students with the tools to watch films critically and to place them in the context of a broader historical time period.
United States History I This is an introductory level course in U.S. history. It begins with Native American societies at the time of European contact and examines major social, political, and cultural issues in U.S. history through colonial settlement, the American Revolution, the early national period, the antebellum era, the Civil War, and Reconstruction. The course considers dominant cultural traditions and perspectives as well as minority cultures and dissent.
Calculus I Students study differential calculus of algebraic and elementary transcendental functions, anti-derivatives, introductory definite integrals, and the Fundamental Theorem of Calculus. Applications, include the first and second derivative tests and optimization.
Calculus II This course covers techniques and applications of integration, sequences and series, convergence of series, and Taylor Polynomials.
Calculus III This course introduces multivariable calculus. Topics covered include vector geometry of the plane and Euclidean 3-space; differential calculus of real-valued functions of several variables, as well as partial derivatives, gradient, max-min theory, quadratic surfaces, and multiple integrals.
Applied Differential Equations I: ODEs Students study ordinary differential equations, first-order equations, separable and linear equations. Also covered are direction fields, second order linear equations with constant coefficients, method of undetermined coefficients, laplace transforms, and unit impulse response and convolutions. Homogeneous systems of first order linear equations and matrix algebra determinants, eigenvalues, eigenvectors are also studied. Existence and uniqueness theorems are discussed and calculators or computers are used to display solutions and applications.
Principles of Physics I Students investigate kinematics, dynamics, oscillations, wave motion and fluids.
Principles of Physics II Students study thermodynamics, electricity, magnetism, light and optics, atomic and nuclear physics, particle physics and cosmology.
General Biology with Applications for Engineers I This course focuses primarily on evolution, plant and animal diversity and ecology. Laboratory activities are integrated into the lecture and are used to reinforce course content with experiential activities and the application of biological principles to an engineering context.
Discrete Math for Computer Science This course is designed to develop skills in deductive reasoning and to apply concepts of discrete mathematics to computer science. Topics include logic, deductive reasoning, mathematical induction, set theory, functions, recurrence relations, combinatorics and probability, graphs, trees, and Boolean Algebra.
Discrete and Combinatorial Mathematics The fundamental principles of discrete and combinatorial mathematics are covered. Topics include the fundamental principles of counting, the Binomial Theorem, generating functions, recurrence relations and introductory graph theory, that includes trees and connectivity.
Dean's Seminar. This course is a survey of the profession and practice of engineering and computer science. It is an overview of the programs and methodologies of the School of Engineering and Computer Science that includes educational requirements, professional and career opportunities, introduction to the history of engineering and computing, and entrepreneurship. Hands-on activities and guest lecturers are included to complement the discussion sessions. The course provides basic skills, tools, and techniques applied to problem solving, teamwork and communication necessary for academic and professional success.
Introduction to Electrical and Computer Engineering This course introduces students to various sub-disciplines of Electrical and Computer Engineering and to the tools, both hardware and software, that are used in Electrical & Computer Engineering.
Circuits Students study concepts of voltage, current, power, energy. Topics include ideal circuit elements and their I/V characteristics, Kirchhoff's laws, circuit analysis using node voltage and mesh current methods Thevenin's and Norton's theorems, maximum power transfer, and operational amplifier circuits.
Circuits Laboratory Students study the use of standard test equipment to make DC and AC measurements and characterize electric circuits.
Digital Design Digital Design
Digital Design Lab Digital Design Lab
Introduction to Computer Science The course emphasizes program design and problem solving techniques that use a high-level programming language. The course introduces basic concepts such as assignment, control flow, iteration, and basic data structures in addition to a supervised lab.
Data Structures The course continues the development of program design and problem solving techniques. Topics include development of fundamental data structures and their associated algorithms as well as array-based algorithms, recursion, lists, generics, dynamic memory, binary trees, and associative structures.
Digital Signal Processing Students analyze discrete-time signals and systems using z transforms and Fourier transforms, the fast Fourier transform and its applications, digital filters and their applications and implementation of DSP algorithms using Matlab and Simulink.
Random Signals This course is an introduction to probability and statistics in engineering applications. Students will become familiar with discrete and continuous random variables and their probability models.
Electronics This course introduces students to semiconductor physics. Topics include modeling, analysis, and simulation of analog and digital circuits containing diodes, bipolar junction transistors, and MOSFETs. Other topics include analysis and design of single stage amplifiers, frequency response of amplifiers, gain, bandwidth, DC biasing, and small signal analysis of amplifiers.
Electronics Lab Students examine the use of standard electronic test equipment and simulation tools to analyze, design, and test electronic circuits. Emphasis on analog circuits.
Computer Systems and Networks This course is a comprehensive and holistic examination of the modern computing environment. Students gain an understanding of the various hardware and software components that enable computers and networks to process information and execute applications. Students learn to apply this knowledge in the development of efficient and robust software applications.
Microcontrollers Students study the design and implementation of digital monitoring and control systems that use micro-controllers. Topics include hardware and software development, interfacing input and output devices, assembly and C programming as well as representative applications.
Computer Organization and Arch The objective of this course is to give students an understanding of how a complete modern computer system operates. Students learn about design of control, datapath and arithmetic-logic units. Other topics include pipelining, memory hierarchy and assembly language programming.
Advanced Digital Design Students learn how to analysis, design, and implement synchronous state machines using programmable logic devices. Topics include CAD-based simulation and development that use schematic capture and hardware description languages, and representative applications.
Senior Project I Senior Project I
Senior Project II Senior Project II
Professional Practice Seminar This course is designed to prepare students for the Cooperative Education experience. Presentations are from representatives of industry, government, education and former Co-op students. Topics include engineering ethics, professionalism, time management and mock interviewing.
Programming Languages Topics in evaluation, design, and development of programming languages. Topics include type systems, variables and scope, functions, parameter passing, data hiding and abstractions, recursion, memory allocation, grammars and parsing, compiler architecture, programming paradigms, and comparison of programming languages and environments.
Power Electronics Switch-Mode DC-DC converters, Feedback control of converters, Rectifiers and power factor correction circuits, switch mode DC power supplies, applications to motor control and renewable energy integration to the grid. Includes laboratory.
Computer Networking Students study computer networks and the Internet. Topics include LAN and WAN architectures, packet switched networks and routing, the 7-layer OSI model and Internet protocol stack, socket programming and client/server systems as well as wireless security.
Independent Study Special individual projects are undertaken under the direction of one or more faculty members knowledgeable in the particular field of study. Permission of department chairperson and faculty members involved.
Operating Systems Students are introduced to the fundamental concepts of modern operating systems. Topics include an overview of the computer hardware that supports the operating system, process management, threads, and CPU scheduling.
Professional Practice This course offers cooperative employment in a professional engineering environment.
Professional Practice This course offers cooperative employment in a professional engineering environment. Students may register for a variable number of credits that depend upon the length of the work period.
Professional Practice This course offers cooperative employment in a professional engineering environment. he course requires a satisfactory completion of the work assignment and a written report.

Calculus I for Engineers Library of Functions, functions of one variable. Limits, derivatives of functions defined by graphs, tables and formulas, differentiation rules for power, polynomial, exponential and logarithmic functions, derivatives of trigonometric functions, the product and quotient rules, the chain rule, applications of the chain rule, maxima and minima, optimization. The definite integral, the Fundamental Theorem of Calculus and interpretations, theorems about definite integrals, anti-derivatives
Introduction to Engineering and Design This course introduces selected aspects of the history, philosophy, methodology, tools and contemporary topics in engineering. Also included are basic engineering experimentation and data analysis, a team design project and analysis and presentation of engineering data and designs.
Engineering and Technology Forum In this course the notion of invention, innovation and entrepreneurship (i2e) is introduced to the students educational experience. Students will be exposed to elements of a research-intensive institution and diverse research performed by leading engineers, scientists, inventors and entrepreneurs.
Introduction to Programming & Problem Solving This course introduces problem solving and computer programming and is for undergraduate Computer Science and Computer Engineering majors who have limited prior experience in programming in any language. The course covers fundamentals of computer programming and its underlying principles using the Python programming language.
Writing the Essay Writing the Essay
Calculus II for Engineers This course covers techniques of integration, introduction to ordinary differential equations, improper integrals, numerical methods of integration, applications of integration, sequences, series, power series, approximations of functions via Taylor polynomials, Taylor series, functions of two variables, graphs of functions of two variables, contour diagrams, linear functions, functions of three variables.
Mechanics This course is the first of a three-semester lecture sequence in general physics for science and engineering students. Motion of particles and systems of particles. One-dimensional motion. Vectors and two-dimensional motions. Forces and acceleration. Conservation of energy and momentum. Rotations. The free and driven harmonic oscillator. Gravitation.
Data Structures and Algorithms This course covers abstract data types and the implementation and use of standard data structures along with fundamental algorithms and the basics of algorithm analysis. Not open to students who have taken CS-UY 2134.
The Advanced College Essay The course follows Writing the Essay (EW 1013) and provides advanced instruction in analyzing and interpreting written texts from a variety of academic disciplines, using written texts as evidence, developing ideas, and writing argumentative essays. It stresses analysis, argument, reflection, revision, and collaborative learning.
Introduction to Computer Engineering This course helps students to understand computer engineering as a balance among hardware, software, applications and theory, the notion of abstraction, computer layers and how they relate to various aspects of computer engineering, implementation of abstract and physical computer layers: Number systems, digital logic, basic processor structure, instruction set architecture, machine languages, assembly languages and high-level programming in C. Other computer concepts, including compilers, operating systems and algorithms, are presented, along with the simulator concept and its usage for understanding computer design, testing and analysis. Experts present special topics in the area
Linear Algebra and Differential Equations is an introduction to ordinary differential equations and linear algebra. The course develops the techniques for the analytic and numeric solutions of ordinary differential equations (and systems) that are widely used in modern engineering and science. Linear algebra is used as a tool for solving systems of linear equations as well as for understanding the structure of solutions to linear (systems) of differential equations. Topics covered include the fundamental concepts of linear algebra such as Gaussian elimination, matrix theory, linear transformations, vector spaces, subspaces, basis, eigenvectors, eigenvalues and the diagonalization of matrices, as well as the techniques for the analytic and numeric solutions of ordinary differential equations (and systems) that commonly appear in modern engineering and science.
Electricity, Magnetism, & Fluids This is the second course of a three-semester lecture sequence in general physics for science and engineering students. Fluids at rest and in motion. An introduction to electric and magnetic forces and fields. Electric charge density. Electric fields from simple charge distributions. Electric potential. Capacitance. Magnetic forces. Magnetic field from a current loop. Inductance. Magnetism in matter. Current and resistance.
General Physics Laboratory I An introductory level experimental course. Fundamental laboratory experiments in classical mechanics and electrostatics. Stresses basic experimental techniques, error analysis, and written presentation of experiment results. Experiments require progressively more detailed and sophisticated analysis. This laboratory class meets for three hours on alternate weeks.
Object Oriented Programming This intermediate-level programming course teaches object-oriented programming in C++. Topics: Pointers, dynamic memory allocation and recursion. Classes and objects including constructors, destructors, methods (member functions) and data members. Access and the interface to relationships of classes including composition, association and inheritance. Polymorphism through function overloading operators. Inheritance and templates. Use of the standard template library containers and algorithms
Fund. of Electric Circuits Fundamentals of Circuits includes circuit modeling and analysis techniques for AC, DC and transient responses. Independent and dependent sources, resistors, inductors and capacitors are modeled. Analysis techniques include Kirchhoffs current and voltage laws, current and voltage division. Thevenin and Norton theorems, nodal and mesh analysis, and superposition. Natural and forced responses for RLC circuits, sinusoidal steady-state response and complex voltage and current (phasors) are analyzed. Alternate-week laboratory. A minimum of C- is required for students majoring in EE. Objective: fundamental knowledge of DC and AC circuit analysis.
Discrete Mathematics Logic, proofs, set theory, functions, relations, asymptotic notation, recurrences, modeling computation, graph theory.
Waves, Optics, & Thermodynamics This is the third course of a three-semester lecture sequence in general physics for science and engineering students. Water, sound and electromagnetic waves. Reflection, scattering and absorption. Standing waves and spectra. Superposition, diffraction and beats. Geometrical optics. Introduction to thermodynamics; temperature, heat, and entropy.
General Physics Laboratory II The second part of the introductory physics laboratory program. Fundamental laboratory experiments in E&M, waves, optics, and thermodynamics. Stresses experimental models and design, error and data analysis.
Digital Logic and State Machine Design This course covers combinational and sequential digital circuits. Topics: Introduction to digital systems. Number systems and binary arithmetic. Switching algebra and logic design. Error detection and correction. Combinational integrated circuits, including adders. Timing hazards. Sequential circuits, flipflops, state diagrams and synchronous machine synthesis
Fundamentals of Electronics I This course focuses on circuit models and amplifier frequency response, op-amps, difference amplifier, voltage-to-current converter, slew rate, full-power bandwidth, common-mode rejection, frequency response of closed-loop amplifier, gain-bandwidth product rule, diodes, limiters, clamps and semiconductor physics. Other topics include Bipolar Junction Transistors; small-signal models, cut-off, saturation and active regions; common emitter, common base and emitter-follower amplifier configurations; Field-Effect Transistors (MOSFET and JFET); biasing; small-signal models; common-source and common gate amplifiers; and integrated circuit MOS amplifiers. The alternate-week laboratory experiments on OP-AMP applications, BJT biasing, large signal operation and FET characteristics. The course studies design and analysis of operational amplifiers; small-signal bipolar junction transistor and field-effect transistor amplifiers; diode circuits; differential pair amplifiers and semiconductor device- physics fundamentals.
Calculus III: Multi-dimensional Calculus Vectors in the plane and space. Partial derivatives with applications, especially Lagrange multipliers. Double and triple integrals. Spherical and cylindrical coordinates. Surface and line integrals. Divergence, gradient, and curl. Theorems of Gauss and Stokes.
General Chemistry for Engineers This is a one-semester introductory course in general chemistry. It covers chemical equations, stoichiometry, thermodynamics, gases, atomic and molecular structure, periodic table, chemical bonding, states of matter, chemical equilibrium, organic, inorganic and polymeric materials and electrochemistry.
Computer Architecture and Organization This course covers a top-down approach to computer design. Topics: Computer architecture, introduction to assembly language programming and machine language set design. Computer organization, logical modules; CPU, memory and I/O units. Instruction cycles, the datapath and control unit. Hardwiring and microprogramming. The memory subsystem and timing. I/O interface, interrupts, programmed I/O and DMA. Introduction to pipelining and memory hierarchies. Fundamentals of computer networks.
Professional Development & Presentation This course provides electrical and computer engineering students with concepts, theory, principles and experience in project management and project presentation. Students learn how to apply skills learned in engineering coursework to team projects in a professional environment.
Data Analysis An introductory course to probability and statistics. It affords the student some acquaintance with both probability and statistics in a single term. Topics in Probability include mathematical treatment of chance; combinatorics; binomial, Poisson, and Gaussian distributions; the Central Limit Theorem and the normal approximation. Topics in Statistics include sampling distributions of sample mean and sample variance; normal, t-, and Chi-square distributions; confidence intervals; testing of hypotheses; least squares regression model. Applications to scientific, industrial, and financial data are integrated into the course.
Design Project I  Design Project I
Design Project II Design Project II
Design & Analysis of Algorithms This course covers fundamental principles of the design and analysis of algorithms. Topics include asymptotic notation, recurrences, randomized algorithms, sorting and selection, balanced binary search trees, augmented data structures, advanced data structures, algorithms on strings, graph algorithms, geometric algorithms, greedy algorithms, dynamic programming and NP completeness. Prerequisites for Brooklyn Engineering Students
Introduction to Databases This course introduces database systems and their approach as a mechanism to model the real world. The course covers data models (relational, object-oriented), physical database design, query languages, query processing and optimization, as well as transaction management techniques. Implementation issues, object oriented and distributed databases also are introduced.
Introduction to Operating Systm This course studies the fundamental concepts and principles of operating systems. Batch, spooling and multiprogramming systems are introduced. The parts of an operating system are described in terms of their functions, structure and implementation. Basic policies for allocating resources are discussed.
Introduction to Parallel and Distributed Systems This course offers a solid grounding in the basic issues and techniques of parallel and distributed computing. The material covers the spectrum from theoretical models of parallel and distributed systems to actual programming assignments.
Design and Implementation of Programming Language This course covers issues underlying the design of high-level programming languages, along with elements of the compiler technology used to translate those languages into executable code. Topics covered include formal description of language syntax, parsing, memory management, attributes of variables and their binding times, control and data-abstraction mechanisms and object-oriented language features. The focus is on imperative and object-oriented languages, with brief introduction to functional and logic-programming paradigms. Substantial programming projects are required.
Computer Security This course covers cryptographic systems. Topics: Capability and access control mechanisms, authentication models, protection models. Database and operating system security issues, mobile code, security kernels. Malicious code, Trojan horses and computer viruses. Security policy formation and enforcement enforcement, legal aspects and ethical aspects.
Software Engineering Focusing on software engineering, the course introduces techniques to specify, design, test and document medium and large software systems. Design techniques include information engineering, object orientation and complexity measures. Also covered are testing methods, such as path testing, exhaustive test models and construction of test data. An introduction to software tools and project management techniques is presented. Student projects involve team software development and tracking.
Introduction to Programming in C Introduction to computer programming in C and its use in solving problems. Intended primarily for technical majors. Basic instruction in programming techniques, algorithms and standard Unix software development tools and utilities
Logic and Computing Devices Introduction to Boolean algebra and digital logic. Topics include number systems and representation of information; Boolean operators and algebra; expression minimization; combinational circuits, including adders, comparators, decoders and multiplexors; sequential logic, including flip-flops, shift registers, counters and memory
Electric Circuits I Study of DC resistive circuits, Kirchhoffs Laws, Nodal and Mesh emphasis, sources, Thevenins and Nortons theorems, RC, RL, RCL circuit solutions with initial condition using homogenous or nonhomogenous ordinary differential equations having constant coefficients. Develop sinusoidal steady state solution.
Logic and Computing Devices Laboratory Introduction to designing, building, simulating and testing digital logic circuits. Topics include SSI and MSI ICs; general combinational circuits; adders, decoders and multiplexors; general sequential circuits; shift registers, counters and memory
Electrical Engineering Laboratory I Principles of measurement and instruments used to measure parameters and dynamic variables in electric circuits, steady state and transient measurements in DC and AC circuits, and data analysis methods are included
Calculus of Several Variables Topics include real valued functions of several variables, multiple integration, differential calculus of functions of several variables, vector field theory
Physics with Calculus II Topics include thermodynamics, kinetic theory of gases, electric and magnetic fields, electric currents and circuits, and motions of charged particles in fields
Electrical Engineering Laboratory II Emphasizes measurement techniques in AC steady-state circuits and comparison to theoretical predictions. Two-port network methodology and transfer functions are studied experimentally and related to analysis using transform techniques.
Systems Programming Concepts for Computer Engineering Development of computer systems programming and code reading techniques. Tools, programming languages, libraries, operating systems, and hardware. Code reading is emphasized
Electric Circuits II Continuation of the study of electric circuits, including three-phase circuits, complex frequency and network functions, frequency response, two-port parameters, magnetically-coupled circuits, Laplace transforms, and ideal op amps.
Computer Organization Introductory course in computer organization and architecture. Topics include CPUs, memory, I/O, processor families, buses, peripherals, microarchitectures, and instruction sets.
Computer Organization Laboratory Laboratory enhances students understanding of computer organization via assignments involving assembly language programming. Topics include basic syntax, branching and loops, addressing modes, arrays and pointers, subroutines and stacks.
Introduction to Ordinary Differential Equations Introduction to the study of differential equations and their application to physical problems. Topics include exact, series, and numerical solutions; solutions by means of Laplace transforms; and solutions of systems of differential equations.
Computer Systems Engineering Analysis of implementation techniques for systems software. Applying engineering principles including code reading to the design of data structures and algorithms for low level computer systems, embedded systems, and hardware/software systems. Includes coverage of address translation, memory management, file systems, and process management.
Electrical Engineering Laboratory III Measurements and characteristics of electronic devices and circuits; use of manual and automated instruments to acquire data; oral and written engineering reports.
Electronics I Introduction to electronic materials and devices; principles of design; design of DC and AC circuits using diodes, bipolar junction transistors, field-effect transistors and use of transistors in digital circuits.
Signals, Systems, and Transforms Study of systems models, analysis of signals, Fourier series and transforms, sampling and Z transforms, discrete Fourier transforms.
Microcontroller Interfacing Discusses the programming and interfacing of microcontrollers in order to control their integrated devices and external peripherals. Topics include memory and I/O; interupts, counters and timers; ADCs and DACs; PWMs; and parallel and serial communication
Microcontroller Interfacing Laboratory Emphasizes microcontroller programming and interfacing for controlling various types of hardware. Topics include reading and writing to RAM, applications of a digital latch, keypad interfacing, interrupts, clock pulse generation, pulse width modulation, serial interfaces, and A-to-D and D-to-A conversion.
Linear Algebra Introduction to the algebra of matrices, vector spaces, polynomials, and linear transformations.
Random Signal Analysis Introduction to engineering problems of a probabilistic nature. Systems transformations, statistical averages, simulation, and estimation of system parameters
Introduction to Operating Systems Detailed study of management techniques for the control of computer hardware resources. Topics include interrupt systems, primitive level characteristics of hardware and the management of memory, processor, devices, and data.
Digital Computer Design Design of high-speed ALUs, control and timing circuitry, and asynchronous systems; hands-on system prototyping with HDLs for FPGA devices; current hardware topics related to computer design using modern design methodologies and CAD tools; and principles of system design for testability.
Programming Systems An advanced course in programming languages and systems for computer engineering and computer science majors. The course objective is to enable a more complete understanding of programming topics and related supporting tools, including philosophy, methodology, formal syntax and semantics, and examples of programming paradigms, languages and development approaches.
Discrete Mathematical Structures I Applies theoretical concepts of sets, functions, binary relations, graphs, Boolean algebras, propositional logic, semigroups, groups, homomorphisms, and permutation groups to computer characteristics and design, words over a finite alphabet and concatenation, binary group codes, and other communication or computer problems
Introduction to Human Communication Overview of theoretical approaches to the study of communication, including the theory and practice of interpersonal/small group/intercultural/public communication
Public Speaking Practical instruction in public speaking; practice in the preparation, delivery, and criticism of short speeches. Develops an understanding and knowledge of the process of communication
Introduction to Linear Control Systems Introduction to classical linear control systems. Topics include continuous and discrete descriptions of systems, time and frequency response, stability, system specification, system design of continuous and discrete systems
Integrated System Design I Considers engineering design of systems in a continuous process of project definition, planning, execution, and evaluation. This process includes consideration of both technical and non-technical factors in design. Strong emphasis is placed on the development of effective technical communications skills, particularly oral communications competency.
Technical Writing Intensive, project-based application of principles of audience, context, purpose, and writing strategies of technical writing: proposals, reports, communication deliverables.
Integrated System Design II Project-oriented course which brings together electrical and computer engineering students of dissimilar training in teams or project groups. Group assignments are designed to develop an appreciation for individual and creative thinking, as well as team effort
Arts and Humanities Arts and Humanities
Social Science Social Science
Introduction to Engineering I Fundamentals of engineering problem-solving including skills from mathematics, science, and computing. Introduction to the engineering design process through team-based activities.  /  Calculus I Derivative of functions of one variable, applications of the derivative, introduction of the integral, and applications.
University Physics I  Introduction to the principles of mechanics, wave motion, temperature and heat, with calculus.
University Chemistry I An introductory course for science, engineering or agriculture majors. Atomic structure, electron configurations and periodic properties, nomenclature and bonding in compounds, Lewis structure and resonance forms, molecular geometries and polarity, stoichiometry, solution chemistry and aqueous reactions, thermochemistry, gas laws and kinetic molecular theory.
Composition I  Required of all freshmen unless exempted by the Department of English.
Introduction to Engineering II  Further study of engineering problem-solving including skills from mathematics, science, and computing. Experience with the engineering design process through a major, team-based project. Selecting a major within the College of Engineering.
Calculus II  Integral calculus of one variable and infinite series.
University Physics II  Topics covered include electricity, magnetism, light and geometric optics.
Composition II  Composition II
Programming Foundations I Introductory programming course for students majoring in computer science or computer engineering. Software development process: problem specification, program design, implementation, testing and documentation. Programming topics: data representation, conditional and iterative statements, functions, arrays, strings, file I/O and classes. Using C++ in a UNIX environment.
Digital Design Introduction to the hardware aspects of digital computers, logic gates, flip-flops, reduction, finite state machines, sequential logic design, digital systems, software design tools, hardware description language (VHDL), and implementation technologies.
Calculus III  Differential and integral calculus of several variables, and vector calculus.
Discrete Mathematics Introductory study of sets, relations, logic, proofs, algorithms, counting methods, graph theory, trees, and Boolean algebras.
Programming Foundations II  This course continues developing problem solving techniques by focusing on fundamental data structures and associated algorithms. Topics include: abstract data types, introduction to object-oriented programming, linked lists, stacks, queues, hash tables, binary trees, graphs, recursion, and searching and sorting algorithms. Using C++ in a UNIX environment.
Computer Organization  Presents the relationship between computing hardware and software with a focus on the concepts for current computers. CPU design topics are covered including various techniques for microprocessor design and performance evaluation.
Elementary Differential Equations  First and second order ordinary differential equations, the Laplace transform, and matrix systems of ordinary differential equations.
Programming Paradigms Programming in different paradigms with emphasis on object oriented programming and network programming. Survey of programming languages, event driven programming, and concurrency.
Operating Systems An introduction to operating systems including topics in system structures, process management, storage management, files, distributed systems, and case studies.
System Synthesis and Modeling This course instructs the students in the use of modern synthesis and modeling languages and approaches for design automation. This course will teach students the use of HDLs and modeling languages for representing and implementing digital computer systems.
Engineering Probability and Statistics Applications to engineering problems of data summary and presentation, random variables and probability distributions, point and interval estimation, hypothesis testing, linear regression, and design of experiments.
Software Engineering  A modern approach to the current techniques used in software design and development. This course emphasizes the use of modern software development tools, multi-module programming, and team design and engineering.
Special Topics. Consideration of computer science topics not covered in other courses.
Circuits & Electronics  Basic principles of electric and electronic circuits and devices. For engineering students who are not pursuing a degree in electrical engineering.
Ethics and the Professions After a survey of the standard theories of moral obligation, justice, and rights, the course focuses on specific moral problems that arise within engineering, business, and the professions.
Capstone I CSCE students complete a comprehensive software capstone project during their final year of undergraduate studies. The project is done over 2 semesters in phases: concept, formal proposal, implementation, and presentation. The projects include and may require the integration of software and human factors and hardware elements and are developed to software engineering methodologies.
Embedded Systems The architecture, software, and hardware of embedded systems. Involves a mixture of hardware and software for the control of a system (including electrical, electro-mechanical, and electro-chemical systems). They are found in a variety of products including cars, VCRs, HDTVs, cell phones, pacemakers, spacecraft, missile systems, and robots for factory automation.
RFID Information Systems Security.  Radio frequency identification (RFID) information systems provide information to users about objects with RFID tags. They require the application of information systems security (INFOSEC) to protect the information from tampering, unauthorized information disclosure, and denial of service to authorized users.
Algorithms Provides an introduction to formal techniques for analyzing the complexity of algorithms. The course surveys important classes of algorithms used in computer science and engineering.
Public Speaking  Application of the communication techniques needed to organize and deliver oral messages in a public setting. Emphasis given to theory and practice of message strategies and preparation, audience analysis, presentational skills including multimedia support, speech criticism, and the listening process.
Computer Architecture  The architecture of modern scalar and parallel computing systems. Techniques for dynamic instruction scheduling, branch prediction, instruction level parallelism, shared and distributed memory multiprocessor systems, array processors, and memory hierarchies.
Capstone II  Capstone II
Data Mining. The course focuses on the principles, theory, design, and implementation of data mining algorithms for large-scale data. Topics include foundations of data mining; preprocessing; mining frequent patterns, associations and correlations; supervised learning including decision tree induction, naïve Bayesian classification, support vector machine, logistic regression, Bayesian network, and K-nearest neighbor learning; unsupervised learning including K-means clustering, hierarchical clustering, density-based clustering, and grid-based clustering; outlier analysis; graph mining; scalable and distributed data mining.
Institutions and Ideas of World Civilizations I Introduces the major civilizations of the world in their historical context to 1500.
Fulbright College Career Connections.  This course teaches students how to capitalize on their strengths, skills, experience, professional connections, and academic discipline. Key components of this course are guest lectures from on-campus and off-campus professionals, interactive group activities to practice professional skills, and the creation of an online portfolio
﻿
Network Analysis I.  Modeling and analysis of electrical networks. Basic network theorems. Sinusoidal steady state and transient analysis of RLC networks and the impedance concept.
Discrete-Time Signals and Systems.  Analysis of discrete-time linear-time-invariant (DTLTI) systems in the time domain and using z-transforms.  Introduction to techniques based on Discrete-Time, Discrete, and Fast Fourier Transforms. Examples of their application to digital signal processing and digital communications.
Classical Physics Laboratory.  Electricity and magnetism.
Organization of Digital Computers Laboratory.  Specification and implementation of a processor-based system using a hardware description language such as VHDL. Hands-on experience with design tools including simulation, synthesis, and evaluation using testbenches.
Senior Design Project I. Teaches problem definition, detailed design, integration, and testability with teams of students specifying, designing, building, and testing complex systems. Lectures include engineering values, discussions, and ethical ramifications of engineering decisions.
Communications in the Professional World.  Upper-division technical writing course including the development of presentation skills. Effective communication with a range of audiences. Recognition of ethical and professional responsibilities for engineers.
Introduction to Probability and Statistics for Computer Science.  Introduction to the basic concepts of probability and statistics with discussion of applications to computer science.
Intermediate Programming.  Intermediate-level language features and programming concepts for larger, more complex, higher-quality software. Functional programming, name spaces, modules, class protocols, inheritance, iterators, generators, operator overloading, reflection. Analysis of time and space efficiency.
Systems Engineering and Technical Communications. Introduces systems engineering concepts, including specifications and requirements, hardware and software design, integration, testing, and documentation. Emphasizes organization and writing of reports and effective presentations.
Concepts in Programming Languages I.  In-depth study of several contemporary programming languages stressing variety in data structures, operations, notation, and control. Examination of different programming paradigms, such as logic programming, functional programming and object-oriented programming; implementation strategies, programming environments, and programming style.
Introduction to Linear Algebra.  Systems of linear equations, matrix operations, determinants, eigenvalues and eigenvectors, vector spaces, subspaces, and dimension.
Data Structure Implementation and Analysis.  Focuses on implementation and mathematical analysis of fundamental data structures and algorithms. Covers storage allocation and memory management techniques.
Electronic Devices and Circuits.   A first course in the design of Very Large Scale Integrated (VLSI) systems. Introduction to CMOS technology; MOS transistors and CMOS circuits. Analysis and synthesis of CMOS gates. Layout design techniques for building blocks and systems. Introduction to CAD tools.
Introduction to Programming.  Introduction to fundamental concepts and techniques for writing software in a high-level programming language. Covers the syntax and semantics of data types, expressions, exceptions, control structures, input/output, methods, classes, and pragmatics of programming.
Single-Variable Calculus.   Introduction to derivatives, calculation of derivatives of algebraic and trigonometric functions; applications including curve sketching, related rates, and optimization. Exponential and logarithm functions.
Computer Networks.  Computer network architectures, protocols, and applications.  Internet congestion control, addressing, and routing. Local area networks. Multimedia networking.
Single-Variable Calculus.  Definite integrals; the fundamental theorem of calculus. Applications of integration including finding areas and volumes. Techniques of integration. Infinite sequences and series.
Digital Signal Processing.  Nature of sampled data, sampling theorem, difference equations, data holds, z-transform, w-transform, digital filters, Butterworth and Chebychev filters, quantization effects.
Senior Design Project II.   Teaches problem definition, detailed design, integration, and testability with teams of students specifying, designing, building, and testing complex systems. Lectures include engineering values, discussions, and ethical ramifications of engineering decisions.
System Software.  Multiprogramming, interrupt, processes, kernel, parallelism, critical sections, deadlocks, communication, multiprocessing, multilevel memory management, binding, name management, file systems, protection, resource allocation, scheduling. Experience with concurrent programming, synchronization mechanisms, interprocess communication.
Introduction to Software Engineering.  Concepts, methods, and current practice of software engineering. Large-scale software production, software life cycle models, principles and techniques for each stage of development.
Discrete Mathematics for Computer Science.  Covers essential tools from discrete mathematics used in computer science with an emphasis on the process of abstracting computational problems and analyzing them mathematically. Topics include mathematical induction, combinatorics, and recurrence relations.
Organization of Digital Computers.   Building blocks and organization of digital computers, the arithmetic, control, and memory units, and input/out devices and interfaces. Microprogramming and microprocessors.
Embedded Software.   Principles of embedded computing systems: embedded systems architecture, hardware/software components, system software and interfacing, real-time operating systems, hardware/software co-development, and communication issues. Examples of embedded computing in real-world application domains. Simple programming using an embedded systems development environment.
Introduction to Digital Logic Laboratory.  Introduction to common digital integrated circuits: gates, memory circuits, MSI components. Operating characteristics, specifications, applications. Design of simple combinational and sequential digital systems (arithmetic processors game-playing machines). Construction and debugging techniques using hardware description languages and CAD tools.
Principles of Operating Systems.  Principles and concepts of process and resource management, especially as seen in operating systems. Processes, memory management, protection, scheduling, file systems, and I/O systems are covered. Concepts illustrated in the context of several well-known systems.
Classical Physics Laboratory.   Experiments related to lecture topics in Physics 7C. Materials fee.
Multivariable Calculus.   Differential and integral calculus of real-valued functions of several real variables, including applications. Polar coordinates.
Compilers and Interpreters. Introduction to the theory of programming language processors covering lexical analysis, syntax analysis, semantic analysis, intermediate representations, code generation, optimization, interpretation, and run-time support.
Embedded Software Laboratory.  Embedded Software Laboratory.
Classical Physics. Electricity and magnetism.
Programming with Software Libraries.  Construction of programs for problems and computing environments more varied than in I&C SCI 31. Using library modules for applications such as graphics, sound, GUI, database, Web, and network programming. Language features beyond those in I&C SCI 31 are introduced as needed.
Introduction to Digital Systems.  Digital representation of information. Specification, analysis, design and optimization or combinational and sequential logic, register-transfer components and register-transfer systems with datapaths and controllers. Introduction to high-level and algorithmic state-machines and custom processors.
Digital Signal Processing Design and Laboratory.   Design and implementation of algorithms on a DSP processor and using computer simulation. Applications in signal and image processing, communications, radar, etc.
Classical Physics.   Topics include force, energy, momentum, rotation, and gravity.
Programming in C/C++ as a Second Language.  An introduction to the lexical, syntactic, semantic, and pragmatic characteristics of the C/C++ languages for experienced programmers. Emphasis on object-oriented programming, using standard libraries, and programming with manual garbage collection.
Elementary Differential Equations.   Linear differential equations, variation of parameters, constant coefficient cookbook, systems of equations, Laplace tranforms, series solutions.
Design and Analysis of Algorithms.  Techniques for efficient algorithm design, including divide-and-conquer and dynamic programming, and time/space analysis. Fast algorithms for problems applicable to networks, computer games, and scientific computing, such as sorting, shortest paths, minimum spanning trees, network flow, and pattern matching.
Boolean Logic and Discrete Structures. Relations and their properties; Boolean algebras, formal languages; finite automata.
Python Programming and Libraries (Accelerated). Introduces Python syntax and semantics for fundamental programming concepts.  Constructing programs for varied problems and environments. Using library modules for applications such as graphics, sound, GUI, database, Web, and network programming. Accelerated course for students with previous programming background.
Introduction to Programming A first course in programming, software development, and computer science. Introduces computing fundamentals and an appreciation for computational thinking.
Software Development Methods A second course in computing with an emphasis on modern software development and principles central to computer science. Topics include software requirements, testing, object-oriented design, abstraction, encapsulation, recursion, and time-complexity.
Discrete Mathematics Introduces discrete mathematics and proof techniques involving first order predicate logic and induction. Application areas include finite and infinite sets, elementary combinatorial problems, and graph theory. Development of tools and mechanisms for reasoning about discrete problems
ECE Fundamentals I Electrical circuits with linear applications of passive and active elements; Kirchhoffs voltage and current laws to derive circuit equations; solutions for first- and second-order transient and DC steady-state responses; AC steady-state analysis; frequency and time domain signal representations; Fourier series; phasor methods; complex impedance; transfer functions; Thevenin/Norton equivalent models; controlled sources
ECE Fundamentals II Studies the modeling, analysis, design, computer simulation, and measurement of electrical circuits which contain non-linear devices such as junction diodes, bipolar junction transistors, and field effect transistors. Includes the gain and frequency response of linear amplifiers, power supplies, and other practical electronic circuits. This course is taught in the studio mode with mixed lecture and lab
Program and Data Representation Introduces programs and data representation at the machine level. Data structuring techniques and the representation of data structures during program execution. Operations and control structures and their representation during program execution. Representations of numbers, arithmetic operations, arrays, records, recursion, hashing, stacks, queues, trees, graphs, and related concepts.
Digital Logic Design Includes number systems and conversion; Boolean algebra and logic gates; minimization of switching functions; combinational network design; flip-flops; sequential network design; arithmetic networks. Introduces computer organization and assembly language.
ECE Fundamentals III Develops tools for analyzing signals and systems operating in continuous-time, with applications to control, communications, and signal processing. Primary concepts are representation of signals, linear time-invariant systems, Fourier analysis of signals, frequency response, and frequency-domain input/output analysis, the Laplace transform, and linear feedback principles.
Introduction to Embedded Computer Systems An embedded computer is designed to efficiently and (semi-) autonomously perform a small number of tasks, interacting directly with its physical environment. This lab-based course explores architecture and interface issues relating to the design, evaluation and implementation of embedded systems . Topics include hardware and software organization, power management, digital and analog I/O devices, memory systems, timing and interrupts
Advanced Software Development Techniques Analyzes modern software engineering practice for multi-person projects; methods for requirements specification, design, implementation, verification, and maintenance of large software systems; advanced software development techniques and large project management approaches; project planning, scheduling, resource management, accounting, configuration control, and documentation
Operating Systems Analyzes process communication and synchronization; resource management; virtual memory management algorithms; file systems; and networking and distributed systems.
Computer Architecture & Design Introduces computer architecture and provides a foundation for the design of complex synchronous digital devices, focusing on: 1) Established approaches of computer architecture, 2) Techniques for managing complexity at the register transfer level, and 3) Tools for digital hardware description, simulation, and synthesis.
Embedded System Design Modeling, analysis and design of embedded computer systems. Tradeoff analysis and constraint satisfaction facilitated by the use of appropriate analysis models.
Computer Networks A first course in communication networks for upper-level undergraduate students. Topics include the design of modern communication networks; point-to-point and broadcast network solutions; advanced issues such as Gigabit networks; ATM networks; and real-time communications
Single Variable Calculus II Includes the concepts of differential and integral calculus and applications to problems in geometry and elementary physics, including inverse functions, indeterminate forms, techniques of integration, parametric equations, polar coordinates, infinite series, including Taylor and Maclaurin series
Multivariable Calculus Topics include vectors in three-space and vector valued functions. The multivariate calculus, including partial differentiation, multiple integrals, line and surface integrals, and the vector calculus, including Greens theorem, the divergence theorem, and Stokess theorem.
Probability A calculus-based introduction to probability theory and its applications in engineering and applied science. Includes counting techniques, conditional probability, independence, discrete and continuous random variables, probability distribution functions, expected value and variance, joint distributions, covariance, correlation, the Central Limit theorem, the Poisson process, an introduction to statistical inference
Introductory Chemistry I for Engineers Introduces the principles and applications of chemistry. Topics include stoichiometry, chemical equations and reactions, chemical bonding, states of matter, thermochemistry, chemical kinetics, equilibrium, acids and bases, electrochemistry, nuclear chemistry, and descriptive chemistry of the elements
Introductory Chemistry I for Engineers Laboratory Introduction to experimental chemistry, developing laboratory skills & safety. Students plan & implement chemistry experiments in cooperative 4-person teams using a guided inquiry approach. Process skills include developing procedures, data analysis, oral & written communication. Mathematica as a computational tool. Topics: glassware characterization & accuracy, unknown identification of, & applications of solubility
Introduction to Engineering ENGR 1620 is a cornerstone course for first year engineering students. They are introduced to the philosophy and practice of engineering through hands-on experience in developing solutions for various open-ended, realistic challenges while considering the various contexts in which these challenges occur.
Science, Technology, and Contemporary Issues  Print Course STS 1500 - Science, Technology, and Contemporary Issues This course introduces students to contemporary issues involving science, technology, and engineering as well as the core ideas of STS. Emphasis is on three ideas: a) engineering is a social endeavor; b) technology shapes and is shaped by society; and c) technologies are sociotechnical systems.
STS and Engineering Practice This course engages students with the idea that success in posing and solving engineering problems requires attention to the social dimensions of professional endeavors and practice. STS theories and methods are applied to student thesis projects. Students produce a prospectus for the senior thesis project
The Engineer, Ethics, and Professional Responsibility This course focuses on ethical issues in engineering. The key theme is that ethics is central to engineering practice. The professional responsibilities of engineers are examined. Students produce an STS Research paper linked to their technical thesis project and complete all of the requirements for the senior thesis
General Physics I: Mechanics, Thermodynamics First semester of introductory physics for engineers and scientists. Classical mechanics, including vector algebra, particle kinematics and dynamics, energy and momentum, conservation laws, rotational dynamics, oscillatory motion, gravitation, thermodynamics, and kinetic theory of gases
General Physics I Workshop General Physics I Workshop
General Physics II: Electricity & Magnetism, Optics Second semester of introductory physics for engineers and scientists. Electrostatics, including conductors and insulators; DC circuits; magnetic forces and fields; magnetic effects of moving charges and currents; electromagnetic induction; Maxwells equations; electromagnetic oscillations and waves. Introduces geometrical and physical optics.
General Physics II Workshop General Physics II Workshop
Composition and Rhetoric Through the critical engagement of a variety of texts, including written, oral, and visual, this course prepares students to become careful readers, critical thinkers, and skilled writers. Drawing upon rhetorical theory, it emphasizes the practices of analytical reading, informed reasoning, effective writing, and sound argumentation
Inquiry An introduction to the value of research and to the role of research and scholarship in the life of an undergraduate student, including exposure to the opportunities available to participate in research and scholarship within the Liberty University undergraduate programs
Communications Communications
Information Literacy Information Literacy
Foundational Skills provides students with an introduction to Liberty University and to the academic core competencies that students attain by the point of graduation.
Quantitative Reasoning Applying mathematical tools and analysis to practical context, particularly focusing on using proportions and ratios. Basic statistical tools are developed and employed, including graphs, descriptive statistics, the normal curve, the basics of inferential reasoning and investigating correlation. Financial applications are particularly emphasized, as is the use of spreadsheets.
Introduction to Biblical Worldview An introduction to the biblical worldview and contemporary moral issues. This course will introduce critical thinking skills. Religious and philosophical worldviews will also be explored.
Research A survey of knowledge and skills required for the conduct of research in either the humanities, sciences, or creative arts.
Evangelism and the Christian Life  2 Special attention will be given to the theology of all aspects of evangelism including the follow-up. Various methods of approach and presentation will be considered
Natural Science Elective Natural Science Elective
Social Science Elective Social Science Elective
Old Testament Survey An introduction to the authorship and contents of the Old Testament books. Special attention will be given to important persons, places and events, as well as to key chapters in the Old Testament revelation.
New Testament Survey An introduction to the authorship and contents of the New Testament books. Special attention will be given to important persons, places, events, as well as to key chapters in the New Testament revelation.
Theology Survey I This is a general survey of Bible doctrine designed to synthesize and outline each of ten major areas of systematic theology, including prolegomena, bibliology, theology proper, Christology, angelology, and pneumatology.
Theology Survey II This is a continuation of general survey of Bible doctrine designed to synthesize and outline each of the ten major areas of systematic theology. Survey II includes anthropology, hamartiology, soteriology, ecclesiology and eschatology.
Technical Communication This course will teach students how to write documents representing the three main types of technical writing: operational (instructional), promotional (argumentative and analytical), and reportorial (expository, informational and analytical). Students will also evaluate and edit documents belonging to these categories by examining how well these documents serve their purpose for particular audiences in different cultural and social contexts.
Calculus and Analytic Geometry I Functions and graphs, exponential, logarithmic, inverse trigonometric, limits, the derivative, techniques of differentiation, continuity, applications of differentiation, L'Hopital's Rule, the integral.
Calculus and Analytic Geometry II Techniques of integration, improper integrals, applications of integration, introduction to differential equations, sequences, infinite series, parameterizations of curves.
University Physics I A calculus-based study of mechanics, gravitation, waves, and heat.
Introduction to Programming Introduction to structured programming and algorithms with an object-oriented language. Topics include input/ output, flow of control, functions, and an introduction to software engineering. Programming assignments are required.
Advanced Programming Further development of discipline in program design, especially for larger programs. Introduction of pointers, simple data structures, recursion, internal sort/search methods.
Algorithms and Data Structures Study of data structures such as linked lists, stacks, queues, trees, and graphs. Algorithms for manipulating such structures will be introduced and analyzed. Static and dynamic memory allocation. Access methods for sorting/searching, such as hashing and tree searching
Introduction to Embedded Systems Design of microcontroller-based embedded systems; interfacing from both a hardware and software perspective; and applications, including audio, data acquisition, and communication systems.
Computer Architecture Introduction to architecture and organization of computer systems. Topics include data and instruction representation, arithmetic and logical operations, processor and memory implementations, memory hierarchy (cache, main memory and secondary memory), simple pipelines and hardware applications of OS functions.
Embedded and Real-Time Systems Design This course will provide an introduction to the principles of real-time and embedded systems, the main components and design consideration. This course covers Embedded microcomputer systems; implementation of multitasking, synchronization, protection, and paging; operating systems for embedded microcomputers; design, optimization, evaluation, and simulation of digital and analog interfaces; real-time microcomputer software; applications, including data acquisition and control.
Advanced Embedded Systems Design The course provides an in-depth coverage of systematical development and synthesis of advanced embedded systems with emphasis on Field Programmable Gate Array (FPGA) and SoC technologies. The course will cover digital hardware system design, digital arithmetic, SoC design, high level synthesis and functional verification
Introduction to Computer Networks Emphasis is placed on network transport services and key protocols to include TCP, IP, and UDP. Topics include application of network design and implementation of robust performance based computer networks, and an introduction to wireless and mobile networks.
Introduction to Logic Design Introduction to combinational logic design, Boolean algebra, logic minimization, and Karnaugh maps with an emphasis on applying topics presented to design of registers, counters and finite state machines using CPLD's.
Introduction to Electrical and Electronic Circuits An introduction to lumped-parameter circuit elements in DC circuits. Topics include resistors (R), independent and dependent sources, capacitors (C), inductors (L), equivalent networks. Introduction to fundamental techniques used in DC circuit analysis, including Laplace transforms. Semiconductor electronic devices will also be introduced, with the focus being on the terminal characteristics of such devices. The two-terminal diodes (D) and the three-terminal transistors (Q) are studied in DC circuits.
AC Circuit Analysis Topics include AC steady state analysis, AC power, three phase circuits, and advanced circuit analysis using Fourier analysis. Semiconductor electronic devices will also be introduced, with the focus being on the terminal characteristics of such devices. The two-terminal diodes (D) and the three-terminal transistors (Q) are studied in AC circuits. Laboratory experiments are an essential and integral part of the theory students will learn in this course. Experiments will focus on building, measuring, and calculating the predicted responses of AC circuits.
Signals and Systems Analysis techniques for system and signal modeling using numerical analysis software. Topics include introduction to convolution, Fourier series, Fourier transforms, LaPlace transforms with application to determine system response, filters, sampling, linearity, time invariance and stability.
Electronics Introduction to electronic devices including diodes, transistors and operational amplifiers and their applications in electrical circuits.
Communications Systems Analysis and design of communication systems and transmission of information over various medium. Topics include modulation, sampled signals, conversion (ADC and DAC), random processes and noise.
Engineering Economy Introduction to the principles of time value of money, analysis of investments, break-even concepts, risk analysis, alternatives analysis, tax implications, certainty and uncertainty.
Introduction to Engineering This course will introduce students to the engineering profession and the study skills necessary to succeed in the rigorous course of study to achieve an engineering degree. Students will be taught how to think critically and reason analytically in order to skillfully navigate the course of instruction they have chosen to pursue and to be equipped for success in that profession. This is a required course for all engineering majors.
Introduction to Engineering Fundamentals Introduction to engineering problem solving techniques, the engineering design process, and the engineering profession. This course also introduces students to the various engineering disciplines offered at Liberty University and enables them to chart a path to success in achieving their engineering degree, as well as helping students understand what they must do to excel in their studies. This course also serves non-engineering students by exposing them to an overview of the engineering discipline. This course is mandatory for all engineering majors.
Engineering Design Introduction Introduction to the design process. Topics include system engineering, team dynamics, design specifications, conceptual design, scheduling, developing a business plan, market survey, and budgeting.
Engineering Design I The second course in the design sequence of formal design courses that emphasizes the design process. Student teams carry a project from inception to completion to satisfy the need of a client. In addition to technical design, factors such as safety, economics, and ethical and societal implications are considered.
Engineering Design II Engineering Design II
Calculus with MATLAB This course is intended to be an introductory MATLAB Lab in which the topics of arithmetic, algebra, plotting, preparation of m-files, limits, derivatives, related rates, optimization, integration, and other engineering-related topics will be investigated
Probability and Statistical Methods for Engineering Introduction to applied probability and the principles and methodologies of statistical inference. Topics include methods of data analysis, point and interval estimation; test of hypotheses, correlation, regression and an introduction to analysis of variance methods.
Applied Linear Algebra An elementary introduction to the essentials of linear algebra for SECS majors. Systems of linear equations and matrices, determinants, Euclidean vector spaces, eigenvectors, least-squares data fitting, diagonalization and numerical methods.
Calculus and Analytical Geometry III Geometry of vectors, paths, curvature, functions of several variables, graphs and parametric surfaces, partial derivatives, optimization, multiple integrals, curl, divergence, gradient, line and surface integrals, Theorems of Green, and Stokes, and Gauss.
Introduction to Discrete Mathematics Logic and proofs, set theory, Boolean algebra, functions, sequences, matrices, algorithms, modular arithmetic, mathematical induction and combinatorics.
Differential Equations Differential equations of the first order and first degree, linear equations, variation of parameters, methods of undetermined coefficients, inverse operators, Laplace transforms, systems of differential equations, and applications.
University Physics II Calculus-based study of electromagnetism, optics and select topics in modern physics.

Electrical Engineering Fundamentals I This course covers fundamental concepts and applications for electrical and computer engineers as well as for engineers who need to gain a broad understanding of these disciplines. The course starts by the basic concepts of charge, current, and voltage as well as their expressions with regards to resistors and resistive circuits. Essential concepts, devices, theorems, and applications of direct-current (DC), 1st order, and alternating-current (AC) circuits are subsequently discussed. Besides electrical devices and circuits, basic electronic components including diodes and transistors as well as their primary applications are also discussed.
Electrical Engineering Fundamentals I Lab This is an introduction course in electronic measurement and circuit modeling, simulation and design techniques. These skills are developed through a variety of laboratory experiments ranging from voltage, current, and frequency, to resistors, inductors, capacitors, and operational amplifiers. When possible, the experiments develop practical skills through small design and soldering tasks.
Electrical Engineering Fundamentals II Continuation of Electrical and Computer Engineering Fundamentals I. The course addresses mathematical and computational foundations of circuit analysis (differential equations, Laplace Transform techniques) with a focus on application to linear circuits having variable behavior as a function of frequency, with emphasis on filtering. Variable frequency behavior is further considered for applications of electronic components through single-transistor and operational amplifiers.
Advanced C Programming Continuation of a first programming course. Topics include files, structures, pointers, and the proper use of dynamic data structures. A basic knowledge of the UNIX operating system and an introductory C programming course; C programming knowledge should include basic syntax, control structures, and file I/O, as well as experience in declaring and using functions
Python For Data Science This course will introduce Python programming to students through data science problems. Students will learn Python concepts as well as introductory data science topics, and will use their knowledge of Python
Introduction To Digital System Design An introduction to digital system design and hardware engineering, with an emphasis on practical design techniques and circuit implementation.
Signals And Systems Classification, analysis and design of systems in both the time- and frequency-domains. Continuous-time linear systems: Fourier Series, Fourier Transform, bilateral Laplace Transform. Discrete-time linear systems: difference equations, Discrete-Time Fourier Transform, bilateral Z-Transform. Sampling, quantization, and discrete-time processing of continuous-time signals. Discrete-time nonlinear systems: median-type filters, threshold decomposition. System design examples such as the compact disc player and AM radio
Probabilistic Methods In Electrical And Computer Engineering An introductory treatment of probability theory, including distribution and density functions, moments, and random variables. Applications of normal and exponential distributions. Estimation of means, variances, correlation, and spectral density functions. Random processes and responses of linear systems to random inputs.
Microprocessor Systems And Interfacing An introduction to basic computer organization, microprocessor instruction sets, assembly language programming, and microcontroller peripherals
Data Structures Provides insight into the use of data structures. Topics include stacks, queues and lists, trees, graphs, sorting, searching, and hashing.
Electrical And Computer Engineering Sophomore Seminar An introduction to the School of Electrical and Computer Engineering, the programs objectives, and outcomes, BSEE and BSCmpE degree requirements, professional writing and multicultural and professional development.
Professional Communications And Diversity This course provides ECE students with practice in relevant aspects of communication. Topics include: successfully seeking employment, working effectively in teams, delivering engaging presentations, and leveraging the advantages and challenges of diversity and inclusion.
Professional Communication Capstone This course provides ECE students an opportunity to refine their professional communication skills before launching into the workplace or graduate school. Topics include: ethics in ECE, workplace communication (written and verbal), and plans for professional growth
Digital Systems Senior Project A structured approach to the development and integration of embedded microcontroller hardware and software that provides senior-level students with significant design experience applying microcontrollers to a wide range of embedded systems (e.g., instrumentation, process control, telecommunications, and intelligent devices). The primary objective is to provide practical experience developing integrated hardware and software for embedded microcontroller systems in an environment that models one which students will most likely encounter in industry.
Electrical Engineering Senior Design Projects Lecture sessions provide the student with background information on the design and management of projects. Formal lectures cover, for example, design for manufacturability, design for quality, test and evaluation, reliability and ethics, patents and copyrights, plus case studies. During the laboratory sessions, the students work in teams on challenging open-ended electrical engineering project that draws on previous coursework. Projects routinely involve standard design facets (such as consideration of alternative solutions, feasibility considerations, and detailed system descriptions) and include a number of realistic constraints
Fundamentals Of Computer Graphics Fundamental principles and techniques of computer graphics. The course covers the basics of going from a scene representation to a raster image using OpenGL. Specific topics include coordinate manipulations, perspective, basics of illumination and shading, color models, texture maps, clipping and basic raster algorithms, fundamentals of scene constructions.
Object-Oriented Programming In C++ And Java C++ and Java programming languages, including classes, inheritance, encapsulation, polymorphism, class derivation, abstract classes, interfaces, static class members, object construction and destruction, namespaces, exception handling, function, overloading and overriding, function name overload resolution, container classes, and template classes.
ASIC Design Laboratory Introduction to standard cell design of VLSI (Very Large Scale Integration) digital circuits using the VHDL hardware description language (Very High Speed Integrated Circuits Hardware Description Language). Emphasis on how to write VHDL that will map readily to hardware. Laboratory experiments using commercial grade computer-aided design (CAD) tools for VHDL based design, schematic based logic entry, logic and VHDL simulation, automatic placement and routing, timing analysis, and testing
Introduction To Computer Security Introduction to security issues related to the operation of computers and the workings of computer networks. Topics covered include introduction to cryptography, authentication protocols, digital signature algorithms, internet vulnerabilities, worms and virus propagation, denial of service attacks, etc. The students will also learn how to design firewalls to protect a system against unwanted intrusions
Computer Design And Prototyping An introduction to computer organization and design, including instruction set selection, arithmetic logic unit design, datapath design, control strategies, pipelining, memory hierarchy, and I/O interface design
Software Engineering Introduction to software engineering principles, with special emphasis on the process, methods, and tools needed to develop and test quality software products and systems.
Operating Systems Engineering The design and construction of operating systems for both individual computers and distributed (networked) systems. Basic concepts and methods for managing processor, main memory, block-structured storage, and network resources are covered. Detailed examples are taken from a number of operating systems, emphasizing the techniques used in networked versions of UNIX. These techniques are applied to design improvements of portions of a simplified, networked, UNIX-based operating system; the improvements are implemented and their performance is evaluated in laboratory experiments
Introduction To Computer Communication Networks An introduction to the design and implementation of computer communication networks. The focus is on the concepts and the fundamental design principles that have contributed to the global Internet success. Topics include: digital transmission and multiplexing, protocols, MAC layer design (Ethernet/802.11), LAN interconnects and switching, congestion/flow/error control, routing, addressing, performance evaluation, internetworking (Internet) including TCP/IP, HTTP, DNS etc
Computer Network Systems The goal of this course is to provide students with a proper grounding in the basic concepts and seminal work in computer network protocols and systems, and to introduce students to research in the field. The course will cover classical concepts such as network architecture, switching, routing, congestion control, and quality-of-service, and discuss recent developments in these areas. The course will also cover new developments in networking such as network measurements, network management, overlay networking and peer-to-peer systems, network security, and new network architectures.
Introduction To Compilers And Translation Engineering The design and construction of compilers and other translators. Topics include compilation goals, organization of a translator, grammars and languages, symbol tables, lexical analysis, syntax analysis (parsing), error handling, intermediate and final code generation, assemblers, interpreters, and an introduction to optimization. Emphasis is on engineering a compiler or interpreter for a small programming language - typically a C or Pascal subset
Compilers And Translator Writing Systems This course presents the concepts needed to efficiently design and implement translators. Basic compiler/translation theory and technology are briefly reviewed, after which the course focuses on software tools for the automatic construction of translators, as well as more complex concepts involving the construction of compiler symbol tables, etc. Using C on ECN UNIX, each student will construct a simple lexical-recognizer generator, parser generator, and code-generator generator. Basic understanding of compilers and proficiency in C language required
Software For Embedded Systems This course provides an introduction to software design for embedded computing systems. Major topics covered include the importance of time and timing in embedded systems, embedded software organization (FSM-based program design, polled loop systems, foreground-background systems, event driven architectures, multi-tasking, etc.), real-time scheduling and real-time operating systems, wired/wireless networked embedded systems, debugging techniques for embedded software, and advanced topics such as memory-safe programming, implementing reentrant functions, and minimizing code space, memory usage, and power consumption. The course features a series of integrated assignments using state-of-the-art embedded hardware platforms, embedded software design tools, and real-time operating systems that reinforce the concepts taught in the lectures.
Embedded Systems This course provides an introduction to the design of embedded and ubiquitous computing systems including their hardware and software architectures, design methodologies and tools, and communication protocols. The lectures are organized into three parts namely, (a) basic design principles including specification and modeling, hardware components and platforms, software organization, embedded and real-time operating systems, interfacing with external environments using sensors and actuators, and communication in distributed embedded systems, (b) advanced topics such as energy management, safety and reliability, and security, and (c) case-studies of real-world systems from a variety of embedded application domains such as biomedical devices, smart cards and RFID, networked sensors, personal computing devices, home appliances and electronics, mobile robotics, etc. In addition to hands-on programming assignments using off-the-shelf embedded system development kits, the course will feature a comprehensive project where students will design, implement, and evaluate a prototype embedded system.
Introduction To Artificial Intelligence The course introduces fundamental areas of artificial intelligence: knowledge representation and reasoning; machine learning; planning; game playing; natural language processing; and vision.
Artificial Intelligence Introduction to the basic concepts and various approaches of artificial intelligence. The first part of the course deals with heuristic search and shows how problems involving search can be solved more efficiently by the use of heuristics and how, in some cases, it is possible to discover heuristics automatically. The next part of the course presents ways to represent knowledge about the world and how to reason logically with that knowledge. The third part of the course introduces the student to advanced topics of AI drawn from machine learning, natural language understanding, computer vision, and reasoning under uncertainty. The emphasis of this part is to illustrate that representation and search are fundamental issues in all aspects of artificial intelligence.
C Programming Fundamental principles, concepts, and methods of programming in C, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; and use of programming logic in solving engineering problems.
Aeromechanics I Fundamental concepts and principles of bodies in motion, with applications to aeronautical and astronautical problems. Subjects covered include rectilinear motion, curvilinear motion, rotation, and plane motion. The static equilibrium and quasistatic equilibrium situations are treated as a part of motion in which the acceleration is zero. Problems involving impact, separation, work, and energy are considered
Biomolecules: Structure, Function, And Engineering Applications Classes of molecules (biomolecules) such as sugars, lipids, proteins, and nucleic acids that form the cellular components of living organisms. Explores the chemistry behind the structure and function of these important classes of biological molecules. Hydrogen-bonding, hydrophobic forces, electrostatis interactions along with other weak interactions discussed with reference to their importance in biomolecular systems in an engineering context.
Basic Mechanics I Statics of particles. Rigid bodies: equivalent systems of forces, equilibrium. Centroids and centers of gravity. Static analysis of trusses, frames, and machines. Friction. Area moments of inertia
Introduction To Environmental And Ecological Engineering Introduction to water pollution, air pollution, noise, hazardous and solid wastes, and their control. Environmental impact statements and global pollution issues. Field trips required
Physico-Chemical Principles Of Environmental Engineering This course presents basic physico-chemical aspects of air, water, and wastewater pollution, and pollution control methods. Topics covered in the course include acid/base chemistry, solubility, colloidal chemistry, sorption processes, and oxidation-reduction. Selected physico-chemical processes and analytical procedures are discussed, demonstrated, and applied in the laboratory
Engineering Environmental Sustainability An introduction to the examination of global-scale resource utilization, food, energy and commodity production, population dynamics, and their ecosystem impacts.
Chemical Engineering Calculations Quantitative applications of steady-state mass and energy balances to solve problems involving multi-component systems and multi-unit chemical processes. Single-component and multi-component phase equilibria, single-reaction and multiple-reaction stoichiometry, coupled mass and energy balances, chemical processes involving bypass and recycle streams.
Engineering Environmental Sustainability An introduction to the examination of global-scale resource utilization, food, energy and commodity production, population dynamics, and their ecosystem impacts
Operations Research - Optimization Introduction to deterministic optimization modeling and algorithms in operations research. Emphasis on formulation and solution of linear programs, networks flows, and integer programs.
Operations Research - Stochastic Models Introduction to probabilistic models in operations research. Emphasis on Markov chains, Poisson processes, and their application to queuing systems.
Thermodynamics I First and second laws of thermodynamics, entropy, reversible and irreversible processes, properties of pure substances. Application to engineering problems.
Basic Mechanics I Vector operations, forces and couples, free body diagrams, equilibrium of a particle and of rigid bodies. Friction. Distributed forces. Centers of gravity and centroids. Applications from structural and machine elements, such as bars, trusses, and friction devices. Kinematics and equations of motion of a particle for rectilinear and curvilinear motion.
Noise Control Fundamentals of acoustic waves. Psychoacoustics and theories of hearing. Environmental and building acoustics. Measurement methods and common instrumentation. Noise control methods. Machinery noise. Community reaction. Legal aspects.
Structure And Properties Of Materials The relationship between the structure of materials and the resulting mechanical, thermal, electrical, and optical properties. Atomic structure, bonding, atomic arrangement; crystal symmetry, crystal structure, habit, lattices, defects, and the use of X-ray diffraction. Phase equilibria and microstructural development
Introduction to Nuclear Engineering A course designed to acquaint students with the field of nuclear engineering and design. Concepts of fission, fusion, radioactivity, and neutron physics are introduced. Nodern applications of nuclear technology, including nuclear medicine, food preservation, space reactors and propulsion
Multivariate Calculus Planes, lines, and curves in three dimensions. Differential calculus of several variables; multiple integrals. Introduction to vector calculus
Linear Algebra Introduction to linear algebra. Systems of linear equations, matrix algebra, vector spaces, determinants, eigenvalues and eigenvectors, diagonalization of matrices, applications
Ordinary Differential Equations First order equations, second and nth order linear equations, series solutions, solution by Laplace transform, systems of linear equations.
Discrete Mathematics For Computer Engineering This course introduces discrete mathematical structures and finite-state machines. Students will learn how to use logical and mathematical formalisms to formulate and solve problems in computer engineering. Topics include formal logic, proof techniques, recurrence relations, sets, combinatorics, relations, functions, algebraic structures, and finite-state machines.
Multivariate Calculus Planes, lines, and curves in three dimensions. Differential calculus of several variables; multiple integrals. Introduction to vector calculus.
Linear Algebra And Differential Equations Linear algebra, elements of differential equations.
Discrete Mathematics For Computer Engineering This course introduces discrete mathematical structures and finite-state machines. Students will learn how to use logical and mathematical formalisms to formulate and solve problems in computer engineering. Topics include formal logic, proof techniques, recurrence relations, sets, combinatorics, relations, functions, algebraic structures, and finite-state machines
Differential Equations And Partial Differential Equations For Engineering And The Sciences This is a methods course for juniors in any branch of engineering and science, designed to follow MA 26200. Basic techniques for solving systems of linear ordinary differential equations. Series solutions for second order equations, including Bessel functions, Laplace transform, Fourier series, numerical methods, separation of variables for partial differential equations and Sturm-Liouville theory.
Introduction To Logic Propositional calculus and predicate calculus with applications to mathematical proofs, valid arguments, switching theory, and formal languages.
Elements Of Complex Analysis Complex numbers and complex-valued functions; differentiation of complex functions; power series, uniform convergence; integration, contour integrals; elementary conformal mapping.
Vector Calculus Calculus of functions of several variables and of vector fields in orthogonal coordinate systems. Optimization problems, implicit function theorem, Greens theorem, Stokes theorem, divergence theorems. Applications to engineering and the physical sciences.
Numerical Methods Iterative methods for solving nonlinear equations; direct and iterative methods for solving linear systems; approximations of functions, derivatives, and integrals; error analysis.
Electric And Magnetic Interactions Calculus-based physics course using concepts of electric and magnetic fields and an atomic description of matter to describe polarization, fields produced by charge distributions, potential, electrical circuits, magnetic forces, induction, and related topics, leading to Maxwells equations and electromagnetic radiation and an introduction to waves and interference. 3-D graphical simulations and numerical problem solving by computer are employed throughout
Fundamentals Of Biology I This course is designed primarily to provide an introduction to the principles of biology for students in agriculture and health sciences. Principles of biology, focusing on diversity, ecology, evolution, and the development, structure, and function of organisms
Fundamentals Of Biology II This course is designed primarily to provide an introduction to the principles of biology for students in agriculture and health sciences.Principles of biology, focusing on cell structure and function, molecular biology, and genetics.
Biology I: Diversity, Ecology, And Behavior Creates a framework for ordering biology by examining the unity and diversity of life on earth with an emphasis on ecology, genetics, population biology, evolution, and behavior.
First Year Biology Laboratory Laboratory exercises emphasizing student mastery of basic laboratory skills needed to succeed in the biological sciences; intended for beginning (first-year) biology majors
Biology II: Development, Structure, And Function Of Organisms Principles of development of plants and animals and the relationship between the structure and function of selected systems of these organisms.
General Chemistry Solutions; quantitative equilibria in aqueous solution; introductory thermodynamics; oxidation-reduction and electrochemistry; chemical kinetics; qualitative analysis; further descriptive chemistry of metals and nonmetals
General Chemistry For Engineers II Chemical equilibria; elementary thermodynamics; electrochemistry; phase diagrams; and nuclear chemistry. Examples will be taken from alloys and ceramics; semiconductors; organic chemistry; and polymers.
Intermediate Mechanics For students familiar with calculus. Elements of vector algebra; statics of particles and rigid bodies; theory of couples; principle of virtual work; kinematics; dynamics of particles and rigid bodies; work, power, and energy
Intermediate Optics Wave optics and properties of light, including reflection, refraction interference. Fraunhofer and Fresnel diffraction dispersion, polarization, double refraction, introduction to lasers and holography.
Modern Physics I A survey of basic concepts and phenomena in atomic, nuclear, and solid-state physics.
Modern Physics II Survey of modern physics primarily intended for physics majors. Special relativity; particle properties of electromagnetic radiation; wave properties of particles; uncertainty principle; atomic spectra and X-rays; nuclear structure; elementary particles; statistical distribution laws; physics of atoms, molecules and condensed matter such as solids.

Calculus Functions, limits, continuity. Slope and derivative. Differentiation of algebraic and transcendental functions. Applications to motion, natural growth, graphing, extrema of a function. Differentials. L'Hopital's rule.
Calculus Definition of definite integral, fundamental theorem of calculus, techniques of integration. Application to area, volume, arc length, average of a function, improper integral, surface of revolution.
Calculus Sequences, series, tests for convergence, Taylor expansions. Vector algebra, vector calculus, scalar and vector fields. Partial derivatives, total differentials. Applications to maximum and minimum problems in two or more variables.
Vector Analysis Definite integrals over plane and solid regions in various coordinate systems. Line and surface integrals. Green's theorem, Stoke's theorem, divergence theorem.
Linear Algebra Matrices and linear transformations, determinants, eigenvalues, eigenvectors, diagonalization, factorization. Not open for credit to students who have cMatrices and linear transformations, determinants, eigenvalues, eigenvectors, diagonalization, factorization.
Linear Algebra Computer Laboratory Introduction to MATLAB and its use in linear algebra.
Differential Equations Solutions of elementary differential equations.
Classical Physics  Introduction to general principles and analytical methods used in physics for physical science and engineering majors.
Classical Physics Fluid mechanics, thermodynamics, wave phenomena, optics.
Classical Physics  Electricity and magnetism including circuits and Maxwell's equations.
Discrete Mathematics For Computer Science Discrete mathematics of particular utility to computer science. Proofs by induction. Propositional and first-order logic. Sets, functions, and relations. Big-O and related notations. Recursion and solutions of recurrence relations. Combinatorics. Probability on finite probability spaces. Graph theory.
Programming & Problem Solving Computers and computer programming for students with some prior experience, algorithm design, and debugging. Good programming style. Use of basic UNIX tools.
Software Development & Object-Oriented Programming in C++ Object-oriented programming in C++. Basic data structures and their use. Writing good programs of increased complexity and efficiency. Methods for debugging and verification.
Data Structures, Algorithms, & Programming Design and analysis of data structures for a variety of applications; trees, heaps, searching, sorting, hashing, and graphs. Extensive programming.
Circuits I Basic electric circuit analysis techniques, including electrical quantities and elements, resistive circuits, transient and steady-state responses of RLC circuits, sinusoidal excitation and phasors, and complex frequency and network functions.
Introduction to Electrical & Computer Engineering Introduction to Electrical & Computer Engineering with focus on sub-disciplines of Electrical & Computer Engineering, engineering design, and problem solving. Microcontrollers, analog circuits, signal processing, and communications links. Application of topics to create a functional device.
Introduction to Digital & Analog Systems Consent of Instructor. Interactive and practical introduction to fundamental concepts of electrical and computer engineering by implementing electronic systems, which can be digitally controlled and interrogated, with a programmable microcontroller with the ability to program the electrical connections between analog and digital components.
Digital Systems I Introduction to digital system design including combinational logic design, sequential and asynchronous circuits, computer arithmetic, memory systems and algorithmic state machine design; computer aided design (CAD) methodologies and tools.
Introduction to Literature Introductory study of several genres of English literature, emphasizing both analysis of particular works and the range of forms and styles in English prose and poetry.
Introduction to Public Speaking Practice in the preparation and delivery of speeches based on principles and strategies of informing and persuading audiences drawn from the social sciences and humanities.
Circuits II Theory, application, and design of analog circuits. Methods of analysis including frequency response, SPICE simulation, and Laplace transform. Operational amplifiers and design of active filters.
Digital Electronic Circuits MOS device fundamentals, introduction to the design of CMOS logic gates, layout, circuits, and modeling. Examination of voltage transfer characteristics, and propagation delay.
Probabilistic Analysis of Electrical & Computer Systems Probabilistic and statistical analysis of electrical and computer systems. Discrete and continuous random variables, expectation and moments. Transformation of random variables. Joint and conditional densities. Limit theorems and statistics. Noise models, system reliability and testing.
Introduction to Artificial Intelligence Design and implementation of intelligent computer systems. Knowledge representation and organization. Memory and inference. Problem solving. Natural language processing.
Embedded Systems Introduction to embedded-system hardware and software. Topics include: embedded processor and memory architecture; input/output hardware and software, including interrupts and direct memory access; interfacing with sensors and actuators; wired and wireless embedded networking.
Computer Networks Overview of computer networks, TCP/IP protocol suite, computer-networking applications and protocols, transport-layer protocols, network architectures, Internet Protocol (IP), routing, link-layer protocols, local area and wireless networks, medium access control, physical aspects of data transmission, and network-performance analysis.
Digital Systems II Computer-aided design of digital systems with emphasis on hardware description languages (VHDL), logic synthesis, and field-programmable gate arrays (FPGA). May cover advanced topics in digital system design such as static timing analysis, pipelining, memory system design, testing digital circuits.
Issues in Engineering Design Covers various electrical and computer engineering standards and realistic design constraints including economic, manufacturability, sustainability, ethical, health & safety, environmental, social, and political.
Algorithm Design & Analysis Complexity of algorithms, bounds on complexity, analysis methods. Searching, sorting, pattern matching, graph algorithms. Algorithm design techniques: divide-conquer, greedy, dynamic programming. Approximation methods. NP-complete problems.
Operating Systems & System Programming  Basic concepts of operating systems and system programming. Processes and interprocess communication/synchronization; virtual memory, program loading and linking; file and I/O subsystems; utility programs.
Ethics in an Age of Technology Foundations of ethics. Views of technology. Technology and human values. Costs and benefits of technology. Character of technological change. Social context of work in computer science and engineering.
Scientific Visualization Computer graphics techniques for generating images of various types of measured or computer-simulated data. Typical applications for these graphics techniques include study of air flows around car bodies, medical data, and molecular structures.
Integrated Circuit Design Project Design course involving architecture, circuit design, physical design, and validation through extensive simulation of a digital or mixed-signal integrated circuit of substantial complexity under given design constraints. Team project that includes a final report.
Integrated Circuit Design Project  Design course involving architecture, circuit design, physical design, and validation through extensive simulation of a digital or mixed-signal integrated circuit of substantial complexity under given design constraints.
Lasers  Theory of population inversion, amplification and oscillation using semiclassical oscillator model and rate equations. Description and design of real laser system.
General Chemistry IA An introduction to chemical phenomena and principles with an emphasis on developing both an understanding of chemistry and an appreciation of what chemists do. Students will investigate the fundamentals of chemistry in the context of real-world problems and will utilize systems of biological and environmental importance. Core concepts include stoichiometry, aqueous chemistry, gas laws, thermochemistry, atomic structure, molecular structure and bonding.
Chemistry I Lab Chemistry I Lab
Calculus I Calculus is the study of change and accumulation in continuously variable quantities. This course covers limits and continuity, derivatives and their applications, and integrals, with algebraic, exponential, and trigonometric functions and their inverses.
Introduction to Engineering and Engineering Design The purpose of this course is to provide a general introduction to the engineering profession, to engineering design, and programming using MATLAB. The course introduces the design-build-test-learn cycle through lectures, hands-on based laboratory activities, and a team project.
Introduction to Engineering and Engineering Design Lab Introduction to Engineering and Engineering Design Lab
Introduction to Humanities    An introduction to the visual arts, music, and drama in western and world societies. Through study of individual works, the course teaches appreciation of the arts in their aesthetic and technical qualities, and understanding of the arts as expressions of diverse societies, varied historical conditions, and shared human experiences.
Digital Systems   Introduction to digital logic. Topics include numbers and coding systems; Boolean algebra with applications to logic systems; Karnaugh and Quine-McCluskey minimization; combinatorial logic design; flip-flops; sequential network design; and design of digital logic circuits.
Digital Systems Lab Digital Systems Lab
Calculus II  This course continues the study of Calculus from Math 115, including applications and techniques of integration, improper integrals, parametric equations, polar coordinates, and sequences and series, including Taylor series.
General Physics I Part I of an integrated, two-semester, calculus-based treatment of physics, with emphasis on the solution of physical problems through the understanding of a few basic concepts. Topics are drawn from mechanics.
General Physics I Lab General Physics I Lab
Writing & Rhetoric I  Focuses on the study and practice of writing and rhetoric, with special emphasis on the writing process. Students write and read critically a range of texts, and consider academic and nonacademic genres and conventions.
Calculus III    Vectors in the plane and space, vector-valued functions and curves, functions of several variables including limits, continuity, partial differentiation and the chain rule, multiple integrals and coordinate transformations, integration in vector fields, and Green's and Stokes' theorems.
General Physics II      Topics are drawn from electricity and magnetism, and optics. Three hours lecture, one hour discussion, three hours laboratory.
General Physics II Lab General Physics II Lab
Computer Methods in ECE I   Covers structured and object-oriented computer programming concepts in the context of the C/C++ programming language and engineering applications. Four lecture hours per week with programming assignments.
Circuits     Fundamental laws, electrical elements and sources, energy and power. DC analysis of linear circuits. Node and mesh analysis. Operational amplifiers and op-amp circuits, Thevenin and Norton theorems. Sinusoidal steady-state response and the phasor concept. Introductory concepts on complex frequency, average power in AC circuits.
Circuits Lab Circuits Lab
Differential Equations with Linear Algebra  This course provides an introduction to ordinary differential equations. Emphasis is placed on the development of abstract concepts and applications for first-order and linear higher-order differential equations, systems of differential equations, introductory numerical methods, matrix algebra, and Laplace transform techniques.
Discrete Math in Computer Engr     An introduction to fundamental concepts of discrete mathematics for computer engineering. Topics will be chosen from set theory, partially ordered sets, lattices, Boolean algebra, semi-groups, rings, graphical representation of algebraic systems, graphs, and directed graphs. Applications in various areas of computer engineering will be discussed.
Tech Writing for Engineers    Instruction and practice in designing technical reports. Students study the rhetorical problems facing the professional engineer in industry and learn practical strategies for analyzing and communicating technical information to both technical and non-technical audiences. Topics include audience analysis, technical research methods, report formats (written and oral, formal and informal), argumentation and persuasion, editing.
Prin: Macroeconomics     This course serves to introduce the student to the basic ideas and concepts of modern economic analysis, and applies them to current economic problems, policies and issues. The focus of this course is on macroeconomics: income and wealth, employment, and prices at the national level in the United States economy.
Microprocessors & Embedded Systems  This course is an introduction to the operation, interfacing, and applications of micro processor based systems, and real-time embedded system design. Topics include: microprocessor architecture, embedded C programming, real-time programming.
Microproc & Embedded Sys Lab Microproc & Embedded Sys Lab
Electronic Circuits I    Terminal characteristics and biasing of semiconductor diodes, bipolar and field-effect transistors, operational amplifiers. Rectifiers, amplifiers, and logic.
Electric Circuits I Lab Electric Circuits I Lab
Adv Soft Techn in Comp Engr    Advanced concepts and techniques of modular object oriented and structured programming; representative real-world computer engineering applications including data structures, search and sorting.
Eng Probability and Statistics      Set theory, combinatorial analysis, probability and axioms, random variables, continuous and discrete distribution functions, expectations, Chebychev's inequity, weak law of large numbers, central limit theorem, sampling statistics and distributions, point and interval estimation and linear regression.
Intro to Comp Architecture      Introduction to architecture of mini- and mainframe computers. CPU, memory, and I/O characteristics. Introduction to parallel architectures and hardware design languages. Case studies of popular computer systems and design considerations.
Intr to Comp Archetecture Lab Intr to Comp Archetecture Lab
Embedded System Design     This course studies the issues dealing with real-time embedded system design. Topics include: microprocessor architecture, assembly language, real-time programming, space and time limitations, relations between ANSIC Compiler output and assembly language, compiler linkers and using a system development package for C programming.
Embedded System Design Lab Embedded System Design Lab
Comp Networks/Data Comm    Hardware and software techniques used in interfacing between computers and other computers or devices. Data transmission techniques and protocols. Introduction to popular local area network protocols. Forward Error Control Techniques and Data Compression. Introduction to wireless communications with focus on major challenges and obstacles and the cellular phone infrastructure.
Comp Hardware Org/Design    Design methodology, performance analysis using probability and statistic methods, hardwired and microprogramming in CPU design, hardware design languages and memory design. Advanced concepts in computer architecture.
Operating Systems     Introduction to computer operating systems. Process management, threads, CPU scheduling, memory management, process synchronization, file systems and I/O devices. Selected advanced topics, e.g., distributed systems, deadlock, I/O, job scheduling, and performance analysis using queueing models, will be introduced.
Computer Engineering Des I      This course is conducted as a guided project design course over a two semester period, with the class divided into teams, each assigned a specific design project. Periodic progress reports, a final written report, an oral presentation and project demonstration are required. Cost analysis, societal impact, safety issues, evaluation of design alternatives and application of engineering principles will be emphasized. A series of tutorials will be presented to provide student teams with insight into important system level considerations and trade offs.
Entrepreneurial Thinking&Behav    This course introduces entrepreneurship as an approach to one’s life and career advancement. It explores how entrepreneurial thought can create change and opportunities in many organizations, including large corporations, small business, and communities. The course will focus on how the entrepreneurial mindset is a toolkit that can be taught and how entrepreneurial skills empower individuals to bring about change. Students will be challenged to push the boundaries to identify unmet customer needs that are demanded by various demographics. Important aspects of the course include a careful analysis of the following: opportunity recognition, design thinking, market assessment, effective communication, operational partners, strategic management, and financial planning.
Computer Engin Design II      This course is conducted as a guided project design course over a two semester period, with the class divided into teams, each assigned a specific design project. Periodic progress reports, a final written report, an oral presentation and project demonstration are required. Cost analysis, societal impact, safety issues, evaluation of design alternatives and application of engineering principles will be emphasized.
Calculus I The differential calculus and integral calculus, emphasizing conceptual understanding, computations and applications, for students who have the necessary background from 12th-year high school mathematics. Differentiation of elementary algebraic; trigonometric, exponential, and logarithmic functions; graphing; modelling and maximization; L'Hospital's rule; the Riemann integral; and the Fundamental Theorem of Calculus.
Calculus II Covering symbolic and numeric methods of integration; area under a curve; volume; applications such as work and probability; sequences; series; Taylor series; differential equations; and modelling.
Applied Calculus I A review of functions and their applications; analytic methods of differentiation; interpretations and applications of differentiation; introduction to integration.
Applied Calculus II Analytic and numerical methods of integration; interpretations and applications of integration; differential equations models and elementary solution techniques; phase planes; Taylor series and Fourier series.
Introduction to Linear Algebra Introduction to the theory of linear algebra with some applications; vectors, vector spaces, bases and dimension, applications to geometry, linear transformations and rank, eigenvalues and eigenvectors, determinants and inner products.
Calculus III with Applications Vector algebra in two and three dimensions, multivariate differential and integral calculus, optimization, vector calculus including the theorems of Green, Gauss, and Stokes. Applications to economics, engineering, and all sciences, with emphasis on numerical and graphical solutions; use of graphing calculators or computers.
Calculus IV with Applications Homogeneous and inhomogeneous linear differential equations; systems of linear differential equations; series solutions; Laplace transforms; Fourier series. Applications to economics, engineering, and all sciences with emphasis on numerical and graphical solutions; use of computers.
Fundamentals of Biology: Cellular and Organ Physiology The fundamentals of cell and organ physiology in mammalian and non-mammalian organisms. The structure and function of cell membranes and the physiology of cell to cell signaling, cellular respiration, and homeostasis of organs and organisms are examined with an emphasis on the comparative physiology of vertebrates and invertebrates.
Introduction to Electrical and Computer Engineering Introduces basic electrical and computer engineering concepts in a dual approach that includes: laboratories for hands-on wired and computer simulation experiments in analog and logic circuits, and lectures providing concepts and theory relevant to the laboratories. Emphasizes physical insight and applications rather than theory.
Digital Logic Design  Develops methods of analysis and design of both combinational and sequential systems regarding digital circuits as functional blocks. Utilizes demonstrations and laboratory projects consisting of building hardware on breadboards and simulation of design using CAD tools. Topics include: number systems and codes; switching algebra and switching functions; standard combinational modules and arithmetic circuits; realization of switching functions; latches and flip-flops; standard sequential modules; memory, combinational, and sequential PLDs and their applications; design of system controllers.
Electrical Circuit Analysis The course covers the following topics: passive circuit elements: resistors, capacitors, inductors. Elements of circuit topology. Kirchhoff's and Ohm's law. Nodal and mesh analysis. Equivalent circuits. Steady-state AC circuits.
Electronics This is the first non-linear electronics class that introduces the students to the fundamentals of the circuit design through the architecture of a modern electronics system at the interface with sensors and actuators. Modeling of the non-linear devices, diode and MOS transistors, is presented, along with basic properties of MOS transistors for analog (amplification) and digital (switching) IC circuit design. Operational amplifier ideal and non-ideal models are explored along with the concepts of the feedback and stability. Signal conditioning circuits (fixed-gain, difference and instrumentation amplifiers, active filters), signal shaping circuits (rectifier, clipper, peak detector) and oscillators are presented.
Deterministic Signals and Systems Introduction to signals and systems. Manipulation of simple analog and digital signals. Relationship between frequencies of analog signals and their sampled sequences. Sampling theorem. Concepts of linearity, time-invariance, causality in systems. Convolution integral and summation; FIR and IIR digital filters. Differential and difference equations. Laplace transform, Z-transform, Fourier series and Fourier transform. Stability, frequency response and filtering.
Embedded Microcontroller Systems Design I Fundamental design of microcontroller-based electronic systems. Topics include system level architecture, microcontrollers, memory, configurable ports, peripheral ICs, interrupts, sensors, and actuators, serial data protocols, assembly language programming, debugging, and table driven FSMs. Hardware/software trade-offs in implementing system functions. Hardware and software design are equally emphasized.
Computer Architecture This course focuses on the fundamental techniques of designing and evaluating modern computer architectures and tradeoffs present at the hardware/software boundary. The emphasis is on instruction set design, processor design, memory and parallel processing. Students will get an understanding of the design process in the context of a complex computer system.
Digital Design Using VHDL and PLDs Digital system design using the hardware description language VHDL and system implementation using complex programmable logic devices (CPLDs) and field programmable gate arrays (FPGAs). Topics include design methodology, VHDL syntax, entities, architectures, testbenches, subprograms, packages, and libraries. Architecture and characteristics of PLDs and FPGAs are studied. Laboratory work involves writing the VHDL descriptions and testbenches for designs, compiling, and functionally stimulating the designs, fitting and timing simulation of the fitted designs, and programming the designs into a CPLD or FPGA and bench testing.
Senior Design I The primary objective of the senior design course sequence is to provide a vehicle for students to transition from an academic environment to that of a commercial/professional engineering environment. Students learn to work in teams to complete a project from concept, practical design based on multiple constraints, to creating a deliverable product meeting the design specifications. Students present written, oral and poster presentations of the project. While most of the project work is done outside the classroom, guest speakers provide insight into other related topics from resume preparation, to program management, to team dynamics and to design methodologies used in industry.
Senior Design II The primary objective of the senior design course sequence is to provide a vehicle for students to transition from an academic environment to that of a commercial/professional engineering environment. Students learn to work in teams to complete a project from concept, practical design based on multiple constraints, to creating a deliverable product meeting the design specifications. Students present written, oral and poster presentations of the project. While most of the project work is done outside the classroom, guest speakers provide insight into other related topics from resume preparation, to program management, to team dynamics and to design methodologies used in industry.
Discrete Mathematics for Engineers Introduction to topics in computational mathematics, such as number systems, Boolean algebra, mathematical induction, combinatorics and probability, recursion and graph theory. Algorithm aspects of the topics discussed will be emphasized.
Random Signals and Systems Random experiments and events; random variables and random vectors, probability distribution functions, random processes; Binomial, Bernoulli, Poisson, and Gaussian processes; Markov chains; significance testing, detection of signals, estimation of signal parameters; properties and application of auto-correlation and cross-correlation functions; power spectral density; response of linear systems to random inputs.
Programming Fundamentals The course presents fundamental and more advanced C programming concepts. Lectures discuss the C language constructs and exemplify their using in relevant programming applications. The course also introduces fundamental concepts in electrical and computer engineering, such as bitwise operations, text file scanning, stack-based computation, table-based finite state machine implementation, hash tables, and linked lists. Scheduled lab activities focus on devising, implementing, debugging, and validating C programs for the concepts discussed in class.
Advanced Programming and Data Structures The course presents fundamental data structures and algorithms frequently used in engineering applications. Object oriented programming in C++ is used to teach the concepts. Discussed topics include: programming and applications of data structures; stacks, queues, lists, heaps, priority queues, and introduction to binary trees. Recursive programming is heavily utilized. Fundamental sorting algorithms are examined along with informal efficiency analysis.
Real-time Operating Systems Introduces basic concepts and principles of real-time operating systems. Topics include structure, multiple processes, interprocess communication, real-time process scheduling, memory management, virtual memory, file system design, security, protection, and programming environments for real-time systems.
Software Techniques for Engineers This course covers software techniques for solving electrical and computer engineering problems in the C++ programming language. Design, implementation, and application to engineering problems of non-linear data structures and related advanced algorithms are covered. This includes binary trees, trees, graphs, and networks. OOP features such as Polymorphism, templates, Exception handling, File I/O operations, as well as Standard Template Library are used in the programming projects.
Digital System Specification and Modeling A comprehensive introduction to the field of system level design. This course introduces basic concepts of complex hybrid (software/hardware) system modeling and simulation methodologies. Topics include top-down and bottom-up design methodology, system complexity refinement, SystemC specification language syntax and semantics, behavioral and system-level modeling, channel and interface modeling and implementation, and IP core development. Included are three projects on modeling and simulation.
Computer Vision Introduces fundamental concepts, algorithms, computational techniques, and applications in visual information processing. Covers image formation models and image filtering, binary image analysis, feature detection, contours, image segmentation, 3D image capture and analysis through stereo, motion, structured-light, and LIDAR, medical images, pattern classification, machine learning, and 3D object recognition.
Design using Programmable Mixed-Signal Systems-on-Chip This course focuses on development of mixed-signal embedded applications that utilize systems on chip (SoC) technology. The course discusses design issues such as: implementation of functionality; realizing new interfacing capabilities; and improving performance through programming the embedded microcontroller and customizing the reconfigurable analog and digital hardware of SoC.
Architectures for Digital Signal Processing This course covers various aspects of architectures in digital signal processing and multimedia data processing. The topics include iteration bound analysis, retiming the circuits, unfolding and folding the architectures, algorithmic and numerical strength reduction for low power and low complexity design, introduction to array processor architectures and CORDIC implementation.
Embedded Microprocessor Systems Design II The entire system design cycle, including requirements definition and system specifications, is covered. Topics include real-time requirements, timing, interrupt driven systems, analog data conversion, multi-module and multi-language systems. The interface between high-level language and assembly language is covered. A complete system is designed and prototyped in the laboratory.
Engineering Ethics and Societal Impact The study of ethical issues facing engineers and engineering related organizations and the societal impact of technology. Decisions involving moral conduct, character, ideals and relationships of people and organizations involved in technology. The interaction of engineers, their technology, the society and the environment is examined using case studies. Introduction to patents, copyright, trademarks and infringement using case studies.
Technical Communication for Electrical and Computer Engineers Topics include how technical writing differs from other forms of writing, the components of technical writing, technical style, report writing, technical definitions, proposal writing, writing by group or team, instructions and manuals, transmittal letters, memoranda, abstracts and summaries, proper methods of documentation, presentations and briefings, and analysis of published engineering writing. Also covered are the writing of resumes and cover letters.
CHEM 104   General Chemistry II   credit: 3 Hours. Lecture and discussions. Chemistry of materials, including organic and biological substances, chemical energetics and equilibrium, chemical kinetics, and electrochemistry. Credit is not given for both CHEM 104 and CHEM 204. Prerequisite: CHEM 102 or CHEM 202 or advanced placement credit for one semester of college-level chemistry. This course satisfies the General Education Criteria for:Nat Sci  Tech - Phys Sciences
CS 461   Computer Security I   credit: 4 Hours. Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. Same as ECE 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 241 or ECE 391.
ECE 465   Optical Communications Systems   credit: 3 Hours. Fundamentals of lightwave systems: characterization of lightwave channels, optical transmitters, receivers, and amplifiers; quantum and thermal noise processes; design of optical receivers; multimode and single-mode link analysis. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 313 and ECE 350. Recommended: credit or concurrent registration in ECE 459 and ECE 466.
AE 321   Mechs of Aerospace Structures   credit: 3 Hours. Fundamental concepts in the linear theory of elasticity, including stress, strain, equilibrium, compatibility, material constitution and properties. Failure mechanisms and criteria. Application to plane stress-strain problems, beams in extension and bending, and shafts in torsion. Prerequisite: MATH 285 and TAM 210.
ATMS 410   Radar Remote Sensing   credit: 4 Hours. Basic principles of radar and references to other ground based remote sensing systems, with emphasis on radar. Discusses principles of conventional and Doppler radar, data processing, and use of Doppler radar in meteorology. Emphasizes radar observations of meteorological phenomena, such as severe thunderstorms and wind shear. Students analyze data from national radar facilities. 4 undergraduate hours. 4 graduate hours. Prerequisite: ATMS 201 and MATH 231 and credit or concurrent registration in MATH 241; or consent of instructor.
MATH 444   Elementary Real Analysis   credit: 3 or 4 Hours. Careful treatment of the theoretical aspects of the calculus of functions of a real variable intended for those who do not plan to take graduate courses in Mathematics. Topics include the real number system, limits, continuity, derivatives, and the Riemann integral. 3 or 4 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both MATH 444 and either MATH 424 or MATH 447. 4 hours of credit requires approval of the instructor and department with completion of additional work of substance. Prerequisite: MATH 241; MATH 347 or MATH 348, or equivalent.
IB 482   Insect Pest Management   credit: 3 Hours. The principles underlying the control of important insect pests of agriculture and of human and animal health; emphasis on integrated pest management involving a systems approach which combines biological, cultural, and chemical suppressive factors into ecologically sound and socially and economically acceptable technology. Lecture and laboratory.  Same as CPSC 479. 3 undergraduate hours. 3 graduate hours. Offered in alternate years. Prerequisite: IB 150 or equivalent; or consent of department.
ECE 374   Introduction to Algorithms & Models of Computation   credit: 4 Hours. Same as CS 374. See CS 374.
CHBE 453   Electrochemical Engineering   credit: 2 or 3 Hours. Fundamentals of analysis, design, and optimization of electrochemical systems. 2 or 3 undergraduate hours.  2 or 3 graduate hours. Prerequisite: Senior standing in physical science or engineering.
ME 370   Mechanical Design I   credit: 3 Hours. Kinematics and dynamics of machinery, including introduction to user-centered design and design thinking, analytical and computer-aided design of kinematics, dynamic force analysis, principle of virtual work, cam and gear design, and balancing. Project-based learning of multi-mechanism system design, analysis, fabrication, and evaluation. Prerequisite: ME 270, TAM 212, and TAM 251.
IB 368   Vertebrate Natural History   credit: 4 Hours. Introduction to the classification, life histories, adaptations, and ecology of fishes, amphibians, reptiles, birds, and mammals. Focus is on species of the Midwest region. Laboratory emphasizes identification and distribution of Illinois' vertebrate fauna. Some Saturday field trips are required. Same as NRES 368. Prerequisite: IB 203 or NRES 219 or consent of instructor.
ME 471   Finite Element Analysis   credit: 3 or 4 Hours. The finite element method and its application to engineering problems: truss and frame structures, heat conduction, and linear elasticity; use of application software; overview of advanced topics such as structural dynamics, fluid flow, and nonlinear structural analysis. Same as AE 420 and CSE 451. 3 or 4 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both ME 471 and CEE 470. Prerequisite: CS 101 and ME 371 or TAM 470. Alternatively, AE 370 for AE students.
PHYS 401   Classical Physics Lab   credit: 3 Hours. Experiments and techniques in classical mechanics and electromagnetism. Dynamics of electrical and mechanical oscillators in the linear domain. Fourier analysis of system response. Measurements of electrostatic fields, transmission lines, waves, and radiation. Electromagnetic phenomena in dielectrics, conductors, and magnetic materials. Instruction in data analysis and report writing. 3 undergraduate hours. 3 graduate hours. Prerequisite: Credit or concurrent enrollment in PHYS 325.
MCB 251   Exp Techniqs in Molecular Biol   credit: 2 Hours. Laboratory course emphasizing a range of molecular biology questions, and the experimental approaches and methodologies needed to answer these questions. Lectures will accompany labs to explain theoretical background and experimental rationale. Students who enter the University Fall 2011 or later are responsible for additional course-based tuition of $300 unless they are already paying differential tuition during the term of course enrollment. Additional fees may apply. See Class Schedule. Credit is not given for both MCB 251 and MCB 151. Prerequisite: Concurrent or prior enrollment in MCB 250 or consent of instructor.
CS 426   Compiler Construction   credit: 3 or 4 Hours. Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.
SHS 301   General Speech Science   credit: 4 Hours. Consideration of the physiology of the speaking act, and the acoustical and perceptual aspects of speech. Same as LING 303.
ECE 220   Computer Systems & Programming   credit: 4 Hours. Advanced use of LC-3 assembly language for I
AE 435   Electric Propulsion   credit: 3 or 4 Hours. Elements of electric propulsion as applied to near-earth and deep-space missions; impact on spacecraft design; physics of ionized gases; plasmadynamics; electrothermal, electromagnetic, and electrostatic acceleration of gases to high velocity; high-impulse thruster design and performance; the resistojet, arcjet, ion engine, Hall thruster, MPD arc thruster, and plasma gun. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: AE 433.
permeability, and architectural uses of earth materials; and asbestos. One day field trip is required. Same as ESE 333. Additional fees may apply. See Class Schedule. Credit is not given for both GEOL 333 and GEOL 432. Prerequisite: CHEM 102 and CHEM 103; GEOL 100 and GEOL 110, or one of GEOL 101, GEOL 103, GEOL 104 or GEOL 107; or consent of instructor.
MCB 400   Cancer Cell Biology   credit: 3 Hours. Principles of eukaryotic cell biology with an emphasis on cancer cell biology; consideration of molecular and fine structural components of the cell with an emphasis on experimental analysis of the relationship of structure to function of gene, membrane, cytoskeleton, and extracellular matrix. 3 undergraduate hours. 3 graduate hours. Prerequisite: MCB 250, MCB 251, MCB 252, MCB 253, and credit or concurrent registration in MCB 354 or MCB 450 or consent of instructor.
ME 445   Introduction to Robotics   credit: 4 Hours. Same as AE 482 and ECE 470. See ECE 470.
ECE 483   Analog IC Design   credit: 3 Hours. Basic linear integrated circuit design techniques using bi-polar, JFET, and MOS technologies; operational amplifiers; wide-band feedback amplifiers; sinusoidal and relaxation oscillators; electric circuit noise; application of linear integrated circuits. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 342.
PHYS 213   Univ Physics: Thermal Physics   credit: 2 Hours. First and second laws of thermodynamics including kinetic theory of gases, heat capacity, heat engines, introduction to entropy and statistical mechanics, and introduction to application of free energy and Boltzmann factor. A calculus-based approach for majors in engineering, mathematics, physics and chemistry. Credit is not given for both PHYS 213 and PHYS 101. Prerequisite: PHYS 211; credit or concurrent registration in MATH 241. This course satisfies the General Education Criteria for:Nat Sci  Tech - Phys SciencesQuantitative Reasoning II
CS 418   Interactive Computer Graphics   credit: 3 or 4 Hours. Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. Same as CSE 427. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; MATH 225 or MATH 415; MATH 241.
CS 450   Numerical Analysis   credit: 3 or 4 Hours. Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. Same as CSE 401, ECE 491, and MATH 450. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 450 and CS 457. Prerequisite: CS 101 or CS 125; CS 357 or MATH 415; MATH 285.
CEE 330   Environmental Engineering   credit: 3 Hours. Sources, characteristics, transport, and effects of air and water contaminants; biological, chemical, and physical processes in water; atmospheric structure and composition; unit operations for air and water quality control; solid waste management; environmental quality standards. Prerequisite: CHEM 104.
CS 173   Discrete Structures   credit: 3 Hours. Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. Credit is not given for both CS 173 and MATH 213. Prerequisite: One of CS 125, ECE 220; one of MATH 220, MATH 221.
ECE 461   Digital Communications   credit: 3 Hours. Reliable communication of one bit of information over three types of channels: additive Gaussian noise, wireline, and wireless. Emphasis on the impact of bandwidth and power on the data rate and reliability, using discrete-time models. Technological examples used as case studies. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 210 and ECE 313.
CS 440   Artificial Intelligence   credit: 3 or 4 Hours. Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. Same as ECE 448. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 or ECE 391.
MATH 428   Honors Topics in Mathematics   credit: 3 Hours. A capstone course in the Mathematics Honors Sequences. Topics will vary. As part of the honors sequence, this course will be rigorous and abstract. 3 undergraduate hours. No graduate credit. May be repeated in the same or separate terms to a maximum of 12 hours. Prerequisite: Consent of the department.
PHYS 470   Subatomic Physics   credit: 4 Hours. The nature and properties of nuclei and elementary particles, symmetries, interactions, nuclear models, tools and techniques of experimental subatomic physics, and applications to power generation, astrophysics, chemistry, medicine, and biology. 4 undergraduate hours. 4 graduate hours. Prerequisite: PHYS 485 or PHYS 486.
MCB 252   Cells, Tissues & Development   credit: 3 Hours. Functional organization and physiology of cells and tissues, including cellular signaling, cellular interactions, and developmental processes. Students who enter the University Fall 2011 or later are responsible for additional course-based tuition of $300 unless they are already paying differential tuition during the term of course enrollment.  Additional fees may apply. See Class Schedule. Prerequisite: MCB 250 or equivalent with consent of instructor.
IB 468   Insect Classification and Evol   credit: 4 Hours. Analytical survey of the classification and evolution of the orders and principal families of insects, with practical experience in the identification of insects at these taxonomic levels; field trips required. Lecture and laboratory. 4 undergraduate hours. 4 graduate hours. Offered in alternate years. Prerequisite: IB 401 or consent of instructor.
U grading. May be repeated in separate terms to a maximum of 2 hours. Prerequisite: Consent of instructor.
ALEKS
MATH 286   Intro to Differential Eq Plus   credit: 4 Hours. Techniques and applications of ordinary differential equations, including Fourier series and boundary value problems, linear systems of differential equations, and an introduction to partial differential equations. Covers all the MATH 285 plus linear systems. Intended for engineering majors and other who require a working knowledge of differential equations. Credit is not given for both MATH 286 and any of MATH 284, MATH 285, MATH 441. Prerequisite: MATH 241.This course satisfies the General Education Criteria for:Quantitative Reasoning II
CHEM 105   General Chemistry Lab II   credit: 1 Hour. Laboratory studies to accompany CHEM 104. Additional fees may apply. See Class Schedule. Credit is not given for both CHEM 105 and CHEM 205. Prerequisite: CHEM 102 and CHEM 103; credit or concurrent registration in CHEM 104 is required. This course satisfies the General Education Criteria for:Nat Sci  Tech - Phys Sciences
ECE 453   Wireless Communication Systems   credit: 4 Hours. Design of a radio system for transmission of information; modulation, receivers, impedance matching, oscillators, two-port network analysis, receiver and antenna noise, nonlinear effects, mixers, phase-locked loops. 4 undergraduate hours. 4 graduate hours. Prerequisite: ECE 329, credit or concurrent registration in ECE 342.
MATH 489   Dynamics & Differential Eqns   credit: 3 or 4 Hours. Studies mathematical theory of dynamical systems, emphasizing both discrete-time dynamics and nonlinear systems of differential equations. Topics include: chaos, fractals, attractors, bifurcations, with application to areas such as population biology, fluid dynamics and classical physics. Basic knowledge of matrix theory will be assumed. 3 or 4 undergraduate hours. 3 or 4 graduate hours. 4 hours of credit requires approval of the instructor and completion of additional work of substance. Prerequisite: One of MATH 284, MATH 285, MATH 286, MATH 441.
BIOE 202   Cell & Tissue Engineering Lab   credit: 2 Hours. Principles of cell biology inherent in tissue engineering design. Lab experience in safely and skillfully manipulating cells of the four tissue types and performing various quantitative analyses on products produced by cells that have differentiated. Prerequisite: MCB 150, and credit or concurrent enrollment in BIOE 206.
ECE 448   Artificial Intelligence   credit: 3 or 4 Hours. Same as CS 440. See CS 440.
ECE 416   Biosensors   credit: 3 Hours. Underlying engineering principles used to detect small molecules, DNA, proteins, and cells in the context of applications in diagnostic testing, pharmaceutical research, and environmental monitoring. Biosensor approaches including electrochemistry, fluorescence, acoustics, and optics; aspects of selective surface chemistry including methods for biomolecule attachment to transducer surfaces; characterization of bisensor performance; blood glucose detection; fluorescent DNA microarrays; label-free biochips; bead-based assay methods. Case studies and analysis of commercial biosensor. Same as BIOE 416. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 329.
ECE 432   Advanced Electric Machinery   credit: 3 Hours. Advanced rotating machine theory and practice: dynamic analysis of machines using reference frame transformations; tests for parameter determination; reduced order modeling of machines; mechanical subsystems including governors, prime movers and excitation systems; digital simulation of inter-connected machines. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 431.
SE 411   Reliability Engineering   credit: 3 or 4 Hours. Concepts in engineering design, testing, and management for highly reliable components and systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: IE 300.
LING 406   Intro to Computational Ling   credit: 3 or 4 Hours. Introduces the field of natural language processing and computational linguistics. Topics include finite-state methods, parsing, probabilistic methods, machine learning in NLP, computational semantics and applications of NLP technology. The course is mostly about concepts rather than programming, though some programming assignments will be given. 3 undergraduate hours. 4 graduate hours. Prerequisite: LING 402 or a 100-level computer science programming course, or consent of instructor.
AE 410   Computational Aerodynamics   credit: 3 or 4 Hours. Computational technologies as solution tools for various aerodynamic problems; modeling and solution of one-and two-dimensional, incompressible and compressible, steady and unsteady inviscid external flow fields. Computational laboratory for practical experience. Same as CSE 461. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: AE 311; credit or concurrent enrollment in AE 312.
PHYS 211   University Physics: Mechanics   credit: 4 Hours. Newton's Laws, work and energy, static properties and fluids, oscillations, transverse waves, systems of particles, and rotations. A calculus-based approach for majors in engineering, mathematics, physics and chemistry. Credit is not given for both PHYS 211 and PHYS 101. Prerequisite: Credit or concurrent registration in MATH 231. This course satisfies the General Education Criteria for:Nat Sci  Tech - Phys SciencesQuantitative Reasoning II
O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.
MATH 473   Algorithms   credit: 4 Hours. Same as CS 473 and CSE 414. See CS 473.
CS 425   Distributed Systems   credit: 3 or 4 Hours. Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. Same as ECE 428. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.
ME 412   Numerical Thermo-Fluid Mechs   credit: 2 to 4 Hours. Numerical techniques for solving the equations governing conduction and convective heat transfer in steady and unsteady fluid flows: finite-difference and finite-volume techniques, basic algorithms, and applications to real-world fluid-flow and heat-transfer problems. Same as CSE 412. 2 or 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: ME 310 OR TAM 335; ME 320.
ECE 330   Power Ckts & Electromechanics   credit: 3 Hours. Network equivalents; power and energy fundamentals, resonance, mutual inductance; three-phase power concepts, forces and torques of electric origin in electromagnetic and electrostatic systems; energy conversion cycles; principles of electric machines; transducers; relays; laboratory demonstration. Prerequisite: ECE 210.
CEE 408   Railroad Transportation Engrg   credit: 3 or 4 Hours. Principles and analysis of railroad transportation efficiency, economics, energy, and engineering; effect on production and markets. Railroad infrastructure; locomotive and rolling stock design, function, and operation. Computation of train speed, power, and acceleration requirements; railway traffic control and signaling. Quantitative analytical tools for rail-transportation decision-making and optimization. Field trip to observe railroad infrastructure, equipment and operations. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CEE 310.
ECE 391   Computer Systems Engineering   credit: 4 Hours. Concepts and abstractions central to the development of modern computing systems, with an emphasis on the systems software that controls interaction between devices and other hardware and application programs. Input-output semantics; synchronization; interrupts; multitasking; virtualization of abstractions. Term-based projects. Credit is not given for both ECE 391 and CS 241. Prerequisite: ECE 220 or CS 233.
SHS 470   Neural Bases Spch Lang   credit: 4 Hours. Advanced study of neuroanatomy and neurophysiology with emphasis on current research pertaining to nervous system structures and functions important for speech and language. Critical analyses of current theories of the function of neural mechanisms utilized in speech and language. 4 undergraduate hours. 4 graduate hours. Prerequisite: SHS 300 and SHS 301, or equivalent, or consent of instructor.
CS 475   Formal Models of Computation   credit: 3 or 4 Hours. Finite automata and regular languages; pushdown automata and context-free languages; Turing machines and recursively enumerable sets; linear-bounded automata and context-sensitive languages; computability and the halting problem; undecidable problems; recursive functions; Chomsky hierarchy; computational complexity. Same as MATH 475. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 374.
MATH 417   Intro to Abstract Algebra   credit: 3 or 4 Hours. Fundamental theorem of arithmetic, congruences. Permutations. Groups and subgroups, homomorphisms. Group actions with applications. Polynomials. Rings, subrings, and ideals. Integral domains and fields. Roots of polynomials. Maximal ideals, construction of fields. 3 or 4 undergraduate hours. 3 or 4 graduate hours. 4 hours of credit requires approval of the instructor and department with completion of additional work of substance. Prerequisite: Either MATH 416 or one of ASRM 406, MATH 415 together with one of MATH 347, MATH 348, CS 374; or consent of instructor.
ATMS 406   Tropical Meteorology   credit: 4 Hours. Covers the mesoscale, synoptic scale and planetary scale motions in the tropical circulation. Emphasis will be on delineating the unique characteristics of tropical dynamics. Topics include Hadley circulation, Walker circulation, Madden-Julian oscillation, monsoons, easterly waves, equatorial waves, hurricanes, the quasi-biennial oscillation, El Nino and the Southern Oscillation. 4 undergraduate hours. 4 graduate hours. Prerequisite: ATMS 301 and ATMS 302 and MATH 285; or consent of instructor.
AE 460   Aerodynamics & Propulsion Lab   credit: 2 Hours. Theory and application of experimental techniques in aerospace engineering with emphasis on fluid dynamic, aerodynamic, thermal, combustion, and propulsion phenomena. 2 undergraduate hours. No graduate credit. Prerequisite: AE 311; credit or concurrent registration in AE 433.
U grading. May be repeated in the same or separate terms if topics vary.
IB 302   Evolution   credit: 4 Hours. Broad introduction to evolutionary biology, including natural selection and microevolution, phylogeny, speciation, molecular evolution, macroevolution and the fossil records. The laboratory emphasizes a survey of biodiversity and processes and patterns of evolution. Prerequisite: IB 204 or consent of instructor.
IB 421   Photosynthesis   credit: 3 Hours. Comprehensive description of photosynthesis. Topics include: the photosynthetic membranes, light absorption, electron and proton transfer, photophosphorylation, water oxidation, RUBP carboxylase
AE 302   Aerospace Flight Mechanics II   credit: 3 Hours. Fundamentals of aircraft and spacecraft dynamics and orbital mechanics; aircraft performance in various flight attitudes; aircraft stability and control; spacecraft attitude dynamics and control; the two-body problem of orbital mechanics; orbit transfer. Prerequisite: AE 352.
BIOE 415   Biomedical Instrumentation Lab   credit: 2 Hours. Laboratory to accompany BIOE 414. Use of sensors and medical instrumentation for static and dynamic biological inputs. Measurement of biomedical signals. Same as ECE 415. 2 undergraduate hours. 2 graduate hours. Prerequisite: Credit or concurrent registration in BIOE 414.
TAM 445   Continuum Mechanics   credit: 4 Hours. Tensor algebra and analysis; kinematics of continua; mass, force, stress, and the general balance laws of continuum mechanics; introduction to constitutive equations. 4 undergraduate hours. 4 graduate hours. Prerequisite: TAM 251.
CS 467   Social Visualization   credit: 3 or 4 Hours. Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.
GEOL 460   Geochemistry   credit: 3 Hours. Fundamental chemical and physical concepts applied to geological processes; topics include: origin, distribution, and geochemical behavior of elements; chemical evolution of the Earth; geochemistry of natural waters and sedimentary rocks; isotope geochemistry, crystal chemistry, trace element geochemistry and organic geochemistry. 3 undergraduate hours. 3 graduate hours. Prerequisite: GEOL 101 or GEOL 107; CHEM 104; CHEM 105; MATH 220 or MATH 221; or consent of instructor.
ECE 420   Embedded DSP Laboratory   credit: 2 Hours. Development of real-time digital signal processing (DSP) systems using a DSP microprocessor; several structured laboratory exercises, such as sampling and digital filtering; followed by an extensive DSP project of the student's choice. 2 undergraduate hours. 2 graduate hours. Prerequisite: ECE 310.
ATMS 449   Biogeochemical Cycles   credit: 4 Hours. Presents the key physical, biological, and chemical concepts of biogeochemical cycles central to understanding the causes of global changes in climate and air quality, focusing on an atmospheric sciences view of these cycles and their influences. 4 undergraduate hours. 4 graduate hours. Prerequisite: Consent of instructor.
SHS 320   Development of Spoken Language   credit: 3 Hours. Study of the correlates of language development from the prelinguistic period to adulthood.
ECE 397   Individual Study in ECE   credit: 0 to 4 Hours. Individual Projects. Approved for both letter and S
hardware co-design, and system-on-a-chip. Prerequisite: ECE 110 and ECE 220.
MATH 402   Non Euclidean Geometry   credit: 3 or 4 Hours. Historical development of geometry; includes tacit assumptions made by Euclid; the discovery of non-Euclidean geometries; geometry as a mathematical structure; and an axiomatic development of plane geometry. 3 or 4 undergraduate hours. 3 or 4 graduate hours. 4 hours of credit requires approval of the instructor and department with completion of additional work of substance. Prerequisite: MATH 241; MATH 347 or MATH 348, or equivalent; or consent of instructor.This course satisfies the General Education Criteria for:Quantitative Reasoning II
IE 410   Advanced Topics in Stochastic Processes & Applications   credit: 3 or 4 Hours. Modeling and analysis of stochastic processes. Transient and steady-state behavior of continuous-time Markov chains; renewal processes; models of queuing systems (birth-and-death models, embedded-Markov-chain models, queuing networks); reliability models; inventory models. Familiarity with discrete-time Markov chains, Poisson processes, and birth-and-death processes is assumed. Same as CS 481. 3 undergraduate hours. 4 graduate hours. Prerequisite: IE 310.
LING 407   Logic and Linguistic Analysis   credit: 3 or 4 Hours. Introduction to the theory of logic as applied in linguistic analysis. Same as PHIL 407. 3 undergraduate hours. 4 graduate hours. Prerequisite: For undergraduate students: LING 307 or equivalent background with consent of instructor.
MCB 424   Microbial Biochemistry   credit: 3 Hours. Examines the biochemical ecology of diverse microbial groups with emphasis on anaerobic systems. 3 undergraduate hours. 3 graduate hours. Prerequisite: MCB 250 and MCB 354 or MCB 450, or consent of instructor.
AE 353   Aerospace Control Systems   credit: 3 Hours. Modeling of linear dynamic systems; Laplace transform techniques; linear feedback control systems; stability criteria; design techniques. Credit is not given for both AE 353 and either GE 320 or ME 340. Prerequisite: MATH 225, MATH 285, and TAM 212.
CS 483   Applied Parallel Programming   credit: 4 Hours. Same as CSE 408 and ECE 408. See ECE 408.
BIOE 476   Tissue Engineering   credit: 3 Hours. Tissue engineering therapies for cell-based, material-based, and therapeutic-based solutions. Stem cells, immunology, and clinical applications. 3 undergraduate hours. 3 graduate hours. Prerequisite: MCB 150 and BIOE 206.
MUS 407   Elect Music Techniques I   credit: 3 Hours. Introduces electroacoustic music, including historical background, music literature, techniques of notation and realization, sound synthesis, analog and digital recording, mixing and processing, and compositional application in the areas of musique concrete, electronic music, and Musical Instrument Digital Interface (MIDI) technology as applied to electroacoustic concert art music. Weekly lab times assigned. 3 undergraduate hours. 3 graduate hours. Prerequisite: Junior standing in music, or consent of instructor.
MCB 410   Developmental Biology, Stem Cells and Regenerative Medicine   credit: 3 Hours. Survey of molecular and cellular mechanisms involved in development and growth of animals, as well as recent advancement in stem cell and Regenerative medicine research. Topics to be covered include fertilization and early cell lineage, body axis formation, gastrulation, neural induction and patterning, segmentation, and other aspects of pattern formation including organogenesis and limb development, as well as embryonic stem cells, induced pluripotent stem cells, adult stem cells, regeneration and regenerative medicine. 3 undergraduate hours. 3 graduate hours. Prerequisite: MCB 252 or consent of instructor.
ECE 454   Antennas   credit: 3 Hours. Antenna parameters; polarization of electromagnetic waves; basic antenna types; antenna arrays; broadband antenna design; antenna measurements. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 350.
BIOE 201   Conservation Principles Bioeng   credit: 3 Hours. Material, energy, charge, and momentum balances in biological problems. Steady-state and transient conservation equations for mass, energy, charge, and momentum will be derived and applied to mathematically analyze physiological systems using basic mathematical principles, physical laws, stoichiometry, and thermodynamic properties. Prerequisite: CHEM 104, MCB 150, and PHYS 211.
STOL aerodynamics. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: AE 311.
CEE 447   Atmospheric Chemistry   credit: 4 Hours. Same as ATMS 420. See ATMS 420.
MCB 446   Physical Biochemistry   credit: 3 Hours. Same as CHEM 472 and BIOC 446. See BIOC 446.
).
PHYS 466   Atomic Scale Simulations   credit: 3 or 4 Hours. Same as CSE 485 and MSE 485. See MSE 485.
MATH 423   Differential Geometry   credit: 3 or 4 Hours. Applications of the calculus to the study of the shape and curvature of curves and surfaces; introduction to vector fields, differential forms on Euclidean spaces, and the method of moving frames for low- dimensional differential geometry. 3 or 4 undergraduate hours. 3 or 4 graduate hours. 4 hours of credit requires approval of the instructor and department with completion of additional work of substance. Prerequisite: MATH 241 or equivalent.
PHYS 403   Modern Experimental Physics   credit: 4 or 5 Hours. Techniques and experiments in the physics of atoms, atomic nuclei, molecules, the solid state, and other areas of modern physical research. 5 undergraduate hours. 4 graduate hours. Prerequisite: Credit or concurrent registration in PHYS 486.
ME 403   Internal Combustion Engines   credit: 3 or 4 Hours. Theory and analysis of reciprocating internal-combustion engines; fuels, carburetion, combustion, exhaust emissions, detonation, fuel injection, and factors affecting performance; laboratory work on variables that affect performance. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: Credit or concurrent registration in ME 400 or ABE 466.
BIOE 302   Modeling Human Physiology   credit: 3 Hours. Description, quantification, and modeling of human physiological systems, based on systems fundamentals. Components, relationships, and homeostatic controls of neural, musculoskeletal, respiratory, cardiovascular, endocrine, digestion, and renal-filtration systems. Application of mathematical modeling and MATLAB simulation to further understanding of the systems and relate physiological consequences to changes in environment or component function. Prerequisite: CS 101, BIOE 205, MATH 285, and MCB 252 or BIOE 206.
environmental interactions and their relationship to evolutionary processes. Offered in alternate years. 3 undergraduate hours. 3 graduate hours. Prerequisite: IB 204; or consent of instructor.
IB 453   Community Ecology   credit: 3 Hours. The direct and indirect interactions among species that determine the structure and composition of plant and animal communities. Emphasis will be on the maintenance of species diversity and its consequences at both local and regional scales. Offered in alternate years. Same as NRES 452. 3 undergraduate hours. 3 graduate hours. Prerequisite: IB 203 or consent of instructor.
GEOL 208   History of the Earth System   credit: 4 Hours. Presents systematic analysis of formation and evolution of the Earth and its dynamic systems (lithosphere, hydrosphere, atmosphere, and biosphere). Also introduces methods of reconstructing Earth's history through use of geochronology, paleontology, and the stratigraphic records. Introduces the geological history of life evolution, mountain belts and continents, geochemical systems, climate, sea level, and the Earth's interior. Field trip required. Same as ESE 208. Additional fees may apply. See Class Schedule. Prerequisite: One of GEOL 100, GEOL 101, GEOL 103, GEOL 104 or GEOL 107; or consent of instructor.This course satisfies the General Education Criteria for:Nat Sci  Tech - Phys Sciences
IB 150   Organismal & Evolutionary Biol   credit: 4 Hours. Introduction to physiology, genetics, and evolution of organisms, and their ecology and diversity.This course satisfies the General Education Criteria for:Nat Sci  Tech - Life Sciences
CEE 416   Traffic Capacity Analysis   credit: 3 or 4 Hours. Fundamentals of traffic engineering; analysis of traffic stream characteristics; capacity of urban and rural highways; design and analysis of traffic signals and intersections; traffic control; traffic impact studies; traffic accidents. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CEE 310.
IB 335   Plant Systematics   credit: 4 Hours. Introduces the principles and methods of identifying, naming, and classifying flowering plants; provides an introduction to the natural history of flowering plants (pollination biology, dispersal mechanisms, breeding systems) and the use of phylogeny estimation in producing modern classifications; develops skills in using plant identification keys; and includes a survey of 40 of the most important plant families distributed worldwide.
NPRE 431   Materials in Nuclear Engrg   credit: 3 Hours. Development of a materials engineering background in the context of nuclear systems and radiation applications; relation of structure of materials to their physical and mechanical properties; development of phase formation and reaction kinetics from basic thermodynamics principles; charged particle interactions with surfaces; transport concepts of neutral and charged particles in matter; materials performance in nuclear and radiation applications, including radiation damage and effects. 3 undergraduate hours. 3 graduate hours.
CS 414   Multimedia Systems   credit: 3 or 4 Hours. Organization and structure of modern multimedia systems; audio and video encoding; quality of service concepts; scheduling algorithms for multimedia within OS and networks multimedia protocols over high-speed networks; synchronization schemes, user-interface design; multimedia teleservices. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.
ECE 488   Compound Semicond & Devices   credit: 3 Hours. Advanced semiconductor materials and devices; elementary band theory; heterostructures; transport issues; three-terminal devices; two-terminal devices; including lasers and light modulators. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 340 and ECE 350.
ECE 481   Nanotechnology   credit: 4 Hours. Fundamental physical properties of nanoscale systems. Nanofabrication techniques, semiconductor nanotechnology, molecular and biomolecular nanotechnology, carbon nanotechnology (nanotubes and graphene), nanowires, and nanoscale architectures and systems. 4 undergraduate hours. 4 graduate hours. Prerequisite: One of CHEM 442, CHBE 457, ME 485, MSE 401, PHYS 460.
MATH 482   Linear Programming   credit: 3 or 4 Hours. Rigorous introduction to a wide range of topics in optimization, including a thorough treatment of basic ideas of linear programming, with additional topics drawn from numerical considerations, linear complementarity, integer programming and networks, polyhedral methods. 3 or 4 undergraduate hours. 3 or 4 graduate hours. 4 hours of credit requires approval of the instructor and department with completion of additional work of substance. Prerequisite: ASRM 406, MATH 415, or MATH 416.
ECE 385   Digital Systems Laboratory   credit: 3 Hours. Design, build, and test digital systems using transistor-transistor logic (TTL), SystemVerilog, and field-programmable gate arrays (FPGAs). Topics include combinational and sequential logic, storage elements, input
CHEM 103   General Chemistry Lab I   credit: 1 Hour. Laboratory studies to accompany CHEM 102. Additional fees may apply. See Class Schedule. Credit is not given for both CHEM 103 and CHEM 203. CHEM 102 and CHEM 103 are approved for General Education credit only as a sequence. Both courses must be completed to receive Natural Science and Technology credit. Prerequisite: Credit or concurrent registration in CHEM 102 is required. This course satisfies the General Education Criteria for:Nat Sci  Tech - Phys Sciences
GEOL 107   Physical Geology   credit: 4 Hours. Introduces Earth phenomena and processes. Includes minerals and rocks, continental drift, plate tectonics, rock deformation, igneous and sedimentary processes, geologic time, landscape evolution, internal structure and composition of the earth, groundwater, seismology and earthquakes, and formation of natural resources. Emphasizes the chemical and physical aspects of the Earth, and the basis for geological inference. Field trip required. Additional fees may apply. See Class Schedule. Credit is not given for both GEOL 107 and GEOL 100, GEOL 101 or GEOL 103. Prerequisite: Intended for science and science-oriented students.This course satisfies the General Education Criteria for:Nat Sci  Tech - Phys Sciences
MCB 253   Exp Techniqs in Cellular Biol   credit: 2 Hours. Laboratory course emphasizing experimental techniques in cellular biology, cellular physiology, and developmental biology. Students who enter the University Fall 2011 or later are responsible for additional course-based tuition of $300 unless they are already paying differential tuition during the term of course enrollment. Additional fees may apply. See Class Schedule. Credit is not given for both MCB 253 and MCB 151. Prerequisite: Concurrent or prior enrollment in MCB 252 or consent of instructor.
AE 416   Applied Aerodynamics   credit: 3 or 4 Hours. Two-dimensional and finite wing theory with emphasis on the mechanisms of lift and drag generation; Reynolds number and Mach number effects; drag analysis; high-lift wing systems; propeller and rotor aerodynamics; control surface design; application of V
CS 481   Advanced Topics in Stochastic Processes & Applications   credit: 3 or 4 Hours. Same as IE 410. See IE 410.
ECE 408   Applied Parallel Programming   credit: 4 Hours. Parallel programming with emphasis on developing applications for processors with many computation cores. Computational thinking, forms of parallelism, programming models, mapping computations to parallel hardware, efficient data structures, paradigms for efficient parallel algorithms, and application case studies. Same as CS 483 and CSE 408. 4 undergraduate hours. 4 graduate hours. Prerequisite: ECE 220.
MCB 403   Cell & Membrane Physiology Lab   credit: 1 or 2 Hours. Experimental investigation of cellular functions common to most eukaryotic cells; emphasis on biochemical, electrical, and mechanical recording techniques. Some animal dissection and the use of animal tissues are required in this course. Alternatives are not available. Inquiries concerning the use of or the dissection of animal tissues can be directed to the Instructor or Head of the Department. 2 undergraduate hours. 1 graduate hour. Prerequisite: Credit or concurrent registration in MCB 401 and previous biology laboratory experience.
ECE 451   Adv Microwave Measurements   credit: 3 Hours. Manual- and computer-controlled laboratory analysis of circuits at microwave frequencies. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 350.
ATMS 420   Atmospheric Chemistry   credit: 4 Hours. Biochemical cycles of atmospheric trace gases, their interactions on global and regional scales, and their significance for the chemistry in the atmosphere. Important fundamental concepts central to understanding air pollutants, e.g., the formation of aerosols and the transformation and removal of species in the atmosphere. Same as CEE 447. 4 undergraduate hours. 4 graduate hours. Prerequisite: CHEM 102, PHYS 211, and MATH 241.
NPRE 470   Fuel Cells & Hydrogen Sources   credit: 3 Hours. The role of hydrogen as a global energy form, hydrogen production by nuclear, fossil and renewable energy sources; hydrogen handling, safety; transportation and storage methods including high-pressure, cryogenic, metal hydrides and chemical hydrides; basic science and technology of fuel cells, including electrochemical processes; fuel cell thermodynamics; low- and high-temperature fuel cells; applications including portable electronics, automotive vehicles, distributed and back-up power, and space power. 3 undergraduate hours. 3 graduate hours. Prerequisite: CHEM 102, MATH 285, and PHYS 212.
PHYS 212   University Physics: Elec & Mag   credit: 4 Hours. Coulomb's Law, electric fields, Gauss' Law, electric potential, capacitance, circuits, magnetic forces and fields, Ampere's law, induction, electromagnetic waves, polarization, and geometrical optics. A calculus-based approach for majors in engineering, mathematics, physics, and chemistry. Credit is not given for both PHYS 212 and PHYS 102. Prerequisite: PHYS 211; credit or concurrent registration in MATH 241. This course satisfies the General Education Criteria for:Nat Sci  Tech - Phys SciencesQuantitative Reasoning II
CHBE 440   Process Control and Dynamics   credit: 3 Hours. Techniques used in the analysis of process dynamics and in the design of process control systems. Laplace transforms, stability analysis, and frequency response methods. 3 undergraduate hours. 3 graduate hours. Prerequisite: CHBE 421 and senior standing in Chemical and Biomolecular Engineering; MATH 285; CS 101.
MUS 409   Elec Music Techniques II   credit: 2 Hours. Intermediate level study of Musical Instrument Digital Interface (MIDI) technology, sound design, digital audio engineering techniques, multi-track digital editing and audio processing in music composition, and the study of compositional, technical, and performance considerations as applied to electroacoustic concert art music. Weekly lab times are assigned. 2 undergraduate hours. 2 graduate hours. Prerequisite: MUS 407 or placement by examination.
PHYS 427   Thermal & Statistical Physics   credit: 4 Hours. Equilibrium thermodynamics, statistical mechanics, and kinetic theory of gases. A unified treatment is used in that the principles of heat and thermodynamics are discussed along with statistical postulates and the microscopic approach of introductory quantum mechanics. 4 undergraduate hours. 4 graduate hours. Credit is not given for both PHYS 427 and any of ME 404, CHEM 444, MSE 500. Prerequisite: PHYS 213, PHYS 214, and PHYS 325.
ECE 487   Intro Quantum Electr for EEs   credit: 3 Hours. Application of quantum mechanical concepts to electronics problems; detailed analysis of a calculable two-state laser system; incidental quantum ideas bearing on electronics. 3 undergraduate hours. 3 graduate hours. Prerequisite: PHYS 485.
Matter II   credit: 3 Hours. Continuation of NPRE 446. Quantum theory of ionization of matter by charged particles. Nuclear models and structure. Alpha decay, fission and fusion reactions. Beta and gamma decay. Nuclear reactions. Radiation damage effects. Special topics. Computer assignments to illustrate fundamental concepts. 3 undergraduate hours. 3 graduate hours. Prerequisite: NPRE 446.
SE 424   State Space Design for Control   credit: 3 Hours. Design methods; time domain modeling; trajectories and phase plane analysis; similarity transforms; controllability and observability; pole placement and observers; linear quadratic optimal control; Lyapunov stability and describing functions; simulation. 3 undergraduate hours. 3 graduate hours. Prerequisite: SE 320 and MATH 415.
oxygenase, photorespiration, whole plant photosynthesis, gas exchange and atmospheric interactions, and impacts of global environmental change. Same as BIOP 432 and CPSC 489. 3 undergraduate hours. 3 graduate hours. Prerequisite: IB 420, MCB 354, MCB 450, BIOP 401, or equivalent; or consent of instructor.
NPRE 448   Nuclear Syst Engrg & Design   credit: 4 Hours. Engineering principles underling nuclear systems designed with emphasis on nuclear power reactors. Materials for nuclear systems. Energy generation and removal in single- and two-phase flows. Reactor and component control systems and nuclear fuel reloading patterns. 4 undergraduate hours. 4 graduate hours. Prerequisite: MATH 285, ME 200, and NPRE 455.
IE 413   Simulation   credit: 3 or 4 Hours. Use of discrete-event simulation in modeling and analysis of complex systems. Data structures and event-list management; verification and validation of simulation models; input modeling, including selection of probability distributions and random variate generation; statistical analysis of output data. Same as CS 482. 3 undergraduate hours. 4 graduate hours. Prerequisite: CS 101 and IE 310.
MCB 314   Introduction to Neurobiology   credit: 3 Hours. Introduction to functional and organizational principles of the mammalian nervous system. Topics include the function of nerve cells, neural signaling, sensory and motor systems, learning and memory, attention, motivation, emotions, language, neural development and neurological disorders. A general introduction appropriate for all majors. Same as NEUR 314. Prerequisite: Junior or senior standing.
MATH 357   Numerical Methods I   credit: 3 Hours. Same as CS 357. See CS 357.
IB 202   Physiology   credit: 3 or 4 Hours. How animals function in acquiring, processing, and allocating resources in the face of environmental constraints. The inquiry-based laboratory emphasizes testing of hypotheses related to functioning of physiological components of the basic systems of animals. Lecture only, 3 hours; with laboratory, 4 hours. Students must complete the laboratory portion of the course to receive 4 hours of credit. The laboratory includes vertebrate dissection. Prerequisite: IB 150 and MCB 150.
ECE 380   Biomedical Imaging   credit: 3 Hours. Physics and engineering principles associated with x-ray, computed tomography, nuclear, ultrasound, magnetic resonance, and optical imaging, including human visualization and perception of image data. Same as BIOE 380. Prerequisite: MATH 285 or MATH 286.
IE 431   Design for Six Sigma   credit: 3 Hours. Quality Engineering principles and the Six Sigma Define-Measure-Analyze-Improve-Control (DMAIC) process. Application of concepts and methods of statistical process control, designed experiments, and measurement systems analysis to cases of quality and productivity improvement; application of the fundamentals of quality engineering and the Six Sigma to areas of produce development, service enterprise, and manufacturing processes. 3 undergraduate hours. 3 graduate hours. Prerequisite: IE 300.
MATH 447   Real Variables   credit: 3 or 4 Hours. Careful development of elementary real analysis for those who intend to take graduate courses in Mathematics. Topics include completeness property of the real number system; basic topological properties of n-dimensional space; convergence of numerical sequences and series of functions; properties of continuous functions; and basic theorems concerning differentiation and Riemann integration. 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both MATH 447 and either MATH 424 or MATH 444. 4 hours of credit requires approval of the instructor and completion of additional work of substance. Prerequisite: MATH 241 or equivalent; junior standing; MATH 347 or MATH 348, or equivalent experience; or consent of instructor.
ECE 486   Control Systems   credit: 4 Hours. Analysis and design of control systems with emphasis on modeling, state variable representation, computer solutions, modern design principles, and laboratory techniques. 4 undergraduate hours. 4 graduate hours. Prerequisite: ECE 210.
MCB 433   Virology & Viral Pathogenesis   credit: 3 Hours. Same as PATH 433. See PATH 433.
NPRE 458   Design in NPRE   credit: 4 Hours. Design in nuclear, plasma, and radiological engineering systems; basic principles of definition, organization, constraints, modeling and optimization of system design; case studies; class design projects applying these basic principles. 4 undergraduate hours. 4 graduate hours. Prerequisite: NPRE 448.
ME 401   Refrigeration and Cryogenics   credit: 3 or 4 Hours. Theory of operation and design of equipment for production of low temperatures, from below ambient to near absolute zero; industrial, consumer, aerospace, medical, and research applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: Credit or concurrent registration in ME 320.
IB 203   Ecology   credit: 4 Hours. The links between evolution and ecology, population dynamics, community structure and function, and ecosystem function on local and global scales. Basic ecology needed to understand environmental problems and to conserve biodiversity. Investigations in both field and laboratory included. Prerequisite: IB 150 and MCB 150. This course satisfies the General Education Criteria for:Advanced Composition
CS 101   Intro Computing: Engrg & Sci   credit: 3 Hours. Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. Prerequisite: MATH 220 or MATH 221. This course satisfies the General Education Criteria for:Quantitative Reasoning II
ECE 499   Senior Thesis   credit: 2 Hours. Completion of the research project begun under ECE 496. Preparation and oral presentation of a written thesis that reports the results of the project. 2 undergraduate hours. No graduate credit. To fulfill the Advanced Composition Requirement, credit must be earned for both ECE 496 and ECE 499. Prerequisite: ECE 496 and consent of instructor.This course satisfies the General Education Criteria for:Advanced Composition
MATH 213   Basic Discrete Mathematics   credit: 3 Hours. Beginning course on discrete mathematics, including sets and relations, functions, basic counting techniques, recurrence relations, graphs and trees, and matrix algebra; emphasis throughout is on algorithms and their efficacy. Credit is not given for both MATH 213 and CS 173. Prerequisite: MATH 220 or MATH 221, or equivalent.This course satisfies the General Education Criteria for:Quantitative Reasoning II
AE 434   Rocket Propulsion   credit: 3 or 4 Hours. Basic principles of chemical rocket propulsion and performance, rocket component design, liquid rockets, solid rocket motors, combustion processes, combustion instability. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: AE 312 and AE 433.
ENG 491   Interdisciplinary Design Proj   credit: 1 to 4 Hours. Disciplined, multi-department, team-structured project design experience with an overall (or major phase) end-of-term completion date. Projects involve design specification through a proposal, analyses of cost and other tradeoffs among alternative designs, design review, fabrication and assembly, functional and environmental testing, and demonstrations (as applicable). Reports and presentations at the end of each term. Individual engineering activities as well as team responsibilities. 1 to 4 undergraduate hours. No graduate credit. Senior standing required. May be repeated. Credit toward the degree is determined by the student's major department. Prerequisite: Consent of instructor.
ATMS 447   Climate Change Assessment   credit: 3 Hours. Provides students with first-hand experience with computer models used to study climate change and permits them to test hypotheses, develop scenarios, learn about the implications of various structures of the modeled system, and evaluate the climatic impacts of anthropogenic emissions. Students perform calculations and produce model scenarios using a web interface to our Integrated Science Assessment Model (ISAM). 3 undergraduate hours. 3 graduate hours.
ATMS 411   Satellite Remote Sensing   credit: 4 Hours. Review of the basic techniques used in satellite remote sensing of the Earth's surface and atmosphere, as well as other planets in our solar system. Topics include radiative transfer, scattering and absorption processes, the Sun, mathematics of inversion, atmospheric properties and constituents, surface properties, precipitation, radiation budgets, image classification, satellite technology and orbital configurations. Laboratory work on radiative transfer modeling and satellite data analysis emphasized. All students participate in a team project that has novel and practical applications. 4 undergraduate hours. 4 graduate hours. Prerequisite: MATH 285 and PHYS 212.
CS 446   Machine Learning   credit: 3 or 4 Hours. Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 373 and CS 440.
MCB 404   Sys & Integrative Physiol Lab   credit: 1 to 2 Hours. Experimental investigation of organ systems of vertebrates with emphasis on biochemical, electrical and physical recording techniques. Some animal dissection and the use of animal tissues are required in this course. Alternatives are not available. Inquiries concerning the use of, or the dissection of animal tissues can be directed to the instructor or Head of the Department. 2 undergraduate hours. 1 graduate hour. Prerequisite: Credit or concurrent registration in MCB 402 and previous biology laboratory experience.
ME 404   Intermediate Thermodynamics   credit: 4 Hours. Classical thermodynamics, including the TdS equations and the Maxwell relations; development of thermodynamic property relations, behavior of real gases, thermodynamics of mixtures, phase equilibrium and chemical reactions and equilibrium with an emphasis on combustion reactions; statistical thermodynamics including the effect of molecular and atomic structure, statistical concepts and distributions, calculation of thermodynamic properties of gas-phase atoms and molecules, kinetic theory of gases, and vibrations in crystals and the electron gas in metals; selected applications. 4 undergraduate hours. 4 graduate hours. Credit is not given for both ME 404 and any of PHYS 427, CHEM 442, or CHEM 444. Prerequisite: ME 200.
IB 463   Ichthyology   credit: 4 Hours. Classification, anatomy, ecology, behavior, distribution, and evolution of fishes of the world. Emphasis is on morphological, ecological, and behavioral diversification of fishes in a phylogenetic context. Laboratory devoted to anatomy and identification. Same as NRES 463. 4 undergraduate hours. 4 graduate hours. Offered in alternate years. Prerequisite: IB 302; or consent of instructor.
IB 401   Introduction to Entomology   credit: 3 or 4 Hours. Integrated studies of the principal morphological, physiological, ecological and behavioral relationships among insects. Lecture and laboratory. 3 or 4 undergraduate hours. 3 or 4 graduate hours. An insect collection will be required for 4 hours credit. Prerequisite: IB 150; or consent of instructor.
IE 400   Design & Anlys of Experiments   credit: 3 or 4 Hours. Concepts and methods of design of experiments for quality design, improvement and control. Simple comparative experiments, including concepts of randomization and blocking, and analysis of variance techniques; factorial and fractional factorial designs; Taguchi's concepts and methods; second-order designs; response surface methodology. Engineering applications and case studies. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: IE 300.
IB 432   Genes and Behavior   credit: 3 Hours. Concepts, methods, and problems in the analysis of the relationship between genes and behavior, the complex neurobiological processes that mediate action on behavior, in appropriate ecological and evolutionary contexts. Same as ANTH 432, NEUR 432, and PSYC 432. 3 undergraduate hours. 3 graduate hours. Prerequisite: IB 150 and IB 204; or consent of instructor.
nocturnal). This atmospheric layer is important to our daily lives because it is where humans live and it connects the small-scale fluxes of energy and mass to the large-scale atmospheric circulation. 4 undergraduate hours. 4 graduate hours. Prerequisite: ATMS 301, ATMS 302, and ATMS 304; MATH 285; or consent of instructor.
MCB 301   Experimental Microbiology   credit: 3 Hours. Laboratory emphasizing the fundamentals of microbiology. Topics include growth, isolation, and identification of bacteria; restriction endonuclease analysis of DNA, genetic cloning, and gene transfer. Computer methods are used for the identification of microorganisms and for the analysis of recombinant DNA molecules. Prerequisite: MCB 250 and 251 and credit or concurrent registration in MCB 300, or consent of instructor.
math.illinois.edu
ME 431   Mechanical Component Failure   credit: 3 or 4 Hours. Relationship of materials and mechanics concepts to the design of structures and components: elasticity, plasticity, thermal loading, creep, fatigue, fracture, and residual-life assessments as they relate to materials selection and design. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: ME 330 and ME 371; Recommended: ME 430.
ME 487   MEMS-NEMS Theory & Fabrication   credit: 4 Hours. Physical and chemical theory, design, and hands-on fabrication of micro- and nano-electromechanical systems (MEMS and NEMS); cleanroom fabrication theory, including general cleanroom safety, lithography, additive and subtractive processes, bulk and surface micromachining, deep reactive ion etching (DRIE), lithographic Galvanoformung Abformung (LIGA), packaging, scaling, actuators, and micro-nanofluids; fabrication of two take-home devices, such as piezoresistive sensors and microfluidic logic chips, that demonstrate advanced fabrication processing. 4 undergraduate hours. 4 graduate hours. Prerequisite: PHYS 212.
CEE 430   Ecological Quality Engineering   credit: 2 Hours. Characteristics of rivers and lakes which affect the management of domestic and industrial wastewaters; chemical hazards assessment, surveillance and biomonitoring, and review of regulations governing effluents. 2 undergraduate hours. 2 graduate hours. Prerequisite: CEE 330.
IB 452   Ecosystem Ecology   credit: 3 Hours. Distribution and structure of ecosystems on earth; integration of multiple disciplines to gain a holistic view of ecosystem function; ecosystem concepts as they apply to understand natural and anthropogenic environmental change. Offered in alternate years. Same as ESE 452 and NRES 462. 3 undergraduate hours. 3 graduate hours. Prerequisite: CHEM 102 and CHEM 104; or consent of instructor.
MCB 406   Gene Expression & Regulation   credit: 3 Hours. Provides in-depth and up-to-date coverage of gene expression and regulation. Lectures are centered on the principles of regulating gene expression in eukaryotic cells. The course covers macromolecule structure and function in gene expression; molecular mechanisms of the key gene expression events including transcription, RNA processing, localization and translation. Applications of these principles in medicine and therapeutics such as aging, cancer and drug design are also discussed. Same as BIOC 406. 3 undergraduate hours. 3 graduate hours. Prerequisite: MCB 354 or consent of instructor.
TAM 335   Introductory Fluid Mechanics   credit: 4 Hours. Fluid statics; continuity, momentum, and energy principles via control volumes; ideal and real fluid flow; introduction to the Navier-Stokes equation; similitude; laminar and turbulent boundary layers; closed-conduit flow, open-channel flow, and turbomachinery. Credit is not given for both ME 310 and TAM 335. Prerequisite: TAM 212.
ECE 446   Principles of Experimental Research in Electrical Engineering   credit: 4 Hours. Interdisciplinary approach to learning principles of experimental research. Focuses on: 1) experimental design 2) prevalent experimental techniques 3) data organization, analysis, and presentation and 4) scientific computing. Presentation methods explored include poster session, conference talk, and journal paper. Open-ended labs and a project reinforce concepts discussed in class. 4 undergraduate hours. 4 graduate hours. Prerequisite: ECE 313.
RHET 105   Writing and Research   credit: 4 Hours. Introduction in research-based writing and the construction of academic, argumentative essays that use primary and secondary sources as evidence. This course fulfills the Campus Composition I general education requirement. Credit is not given for both RHET 105 and any of these other Comp I courses: RHET 101, RHET 102, CMN 111 or CMN 112. This course satisfies the General Education Criteria for:Composition I
PHYS 402   Light   credit: 3 or 4 Hours. Wave kinematics; geometrical optics: basic concepts, ray-tracing and matrix formalism, Gaussian imaging by thick lenses, stops, apertures, and intensity relations; interference; interference spectroscopy and coherence; diffraction: Fresnel-Kirchhoff formulation, Fraunhofer case, Fresnel case, and holography; polarized light. 4 undergraduate hours. 3 or 4 graduate hours. (3 hours without lab). Prerequisite: MATH 285; PHYS 102 or PHYS 214.
ECE 311   Digital Signal Processing Lab   credit: 1 Hour. Companion laboratory for ECE 310. Prerequisite: Credit or concurrent registration in ECE 310.
MATH 442   Intro Partial Diff Equations   credit: 3 or 4 Hours. Introduces partial differential equations, emphasizing the wave, diffusion and potential (Laplace) equations. Focuses on understanding the physical meaning and mathematical properties of solutions of partial differential equations. Includes fundamental solutions and transform methods for problems on the line, as well as separation of variables using orthogonal series for problems in regions with boundary. Covers convergence of Fourier series in detail. 3 or 4 undergraduate hours. 3 or 4 graduate hours. 4 hours of credit requires approval of the instructor and completion of additional work of substance. Prerequisite: One of MATH 284, MATH 285, MATH 286, MATH 441.
CS 447   Natural Language Processing   credit: 3 or 4 Hours. Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). 3 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both CS 447 and LING 406. Prerequisite: CS 374.
ECE 424   Computer Security II   credit: 3 or 4 Hours. Same as CS 463. See CS 463.
IE 430   Economic Found of Quality Syst   credit: 3 or 4 Hours. Total quality systems for planning, developing, and manufacturing world-class products. Economic foundations of total quality. Product value, cost, pricing, environmental quality, activity-based costing, design for assembly, organization structure, lead time, innovation, Taguchi methods, simulation-based significance testing, Strategic Quality Deployment, statistical process control, and conjoint analysis. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: IE 300.
MATH 241   Calculus III   credit: 4 Hours. Third course in calculus and analytic geometry including vector analysis: Euclidean space, partial differentiation, multiple integrals, line integrals and surface integrals, the integral theorems of vector calculus. Credit is not given for both MATH 241 and MATH 292. Prerequisite: MATH 231. This course satisfies the General Education Criteria for:Quantitative Reasoning II
CS 484   Parallel Programming   credit: 3 or 4 Hours. Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.
ASTR 414   Astronomical Techniques   credit: 4 Hours. Introduction to techniques used in modern optical and radio astronomy with emphasis on the physical and mathematical understanding of the detection of electromagnetic radiation; includes such topics as fundamental properties of radio and optical telescopes and the detectors that are used with telescopes. Lectures and laboratory. 4 undergraduate hours. 4 graduate hours. Prerequisite: MATH 241 or equivalent; PHYS 212; or consent of instructor. Recommended: ASTR 210, PHYS 213, PHYS 214.
ASTR 405   Planetary Systems   credit: 3 Hours. This course traces, from a physical perspective, the evolution of planetary systems from star formation in molecular clouds to the emergence of habitable worlds. Topics include the properties of HII regions and molecular clouds, gravitational collapse and disk formation, formation of planetesimals and planets, dynamics of the solar system, physics of planetary atmospheres, properties of individual planets and their rings and satellites, detection and characterization of extra-solar planets, and searches for life in the Solar System and beyond. 3 undergraduate hours. 3 graduate hours. Prerequisite: PHYS 212 or consent of instructor. Recommended: ASTR 210, PHYS 213.
IB 467   Principles of Systematics   credit: 4 Hours. Comprehensive survey of the theory and methodology of systematics as they are applied today to all groups of organisms, with a practical experience in the acquisition and analysis of systematic data. 4 undergraduate hours. 4 graduate hours. Offered in alternate years. Prerequisite: IB 302 and IB 335 or IB 468; or consent of instructor.
TAM 451   Intermediate Solid Mechanics   credit: 4 Hours. Analysis of stress and strain (definitions, transformation of axes, equilibrium equations, and symmetry of the stress tensor); linear materials, Hooke's law; strain energy, potential energy, energy principles and methods; two-dimensional problems in elasticity (torsion, axisymmetric problems); the finite-element method for two- and three-dimensional boundary-value problems in linear elasticity; plasticity (introduction, yield criteria, elastic-plastic behavior, and limit-load calculations); linear-elastic fracture mechanics (introduction, Griffith's approach, stress intensity factor, and energy release rate). 4 undergraduate hours. 4 graduate hours. Prerequisite: TAM 251.
ATMS 305   Computing and Data Analysis   credit: 3 Hours. Introduction to the statistical treatment and graphical representation of atmospheric sciences data, both in the space and time domain. Emphasis is placed on applications and real-world examples. Discusses relevant statistics, methods of interpolation and least squares, and linear and nonlinear correlations. Students gain experience using Python for data analysis, develop theoretical skills for analyzing and modeling data, and perform virtual experiments and analyze real-world publicly available data sets. Prerequisite: MATH 241 or consent of instructor.
ATMS 404   Risk Analysis in Earth Science   credit: 3 or 4 Hours. Introduction to concepts and methods of quantitative risk analysis in the Earth system. Key concepts will include probability, impacts, risk, uncertainty, statistical estimation, and decision making. Students will use simple risk analysis methods to apply these concepts to example problems related to drought, flooding, weather extremes, and anthropogenic climate change. The students will learn the R programming language for statistical computing, which will be used to integrate concepts and methods using observational data sets and model output. Same as GEOL 485. 3 undergraduate hours. 4 graduate hours. Prerequisite: MATH 241 or consent of instructor.
MATH 416   Abstract Linear Algebra   credit: 3 or 4 Hours. Rigorous proof-oriented course in linear algebra. Topics include determinants, vector spaces over fields, linear transformations, inner product spaces, eigenvectors and eigenvalues, Hermitian matrices, Jordan Normal Form. 3 or 4 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both MATH 416 and either ASRM 406 or MATH 415. 4 hours of credit requires approval of the instructor and department with completion of additional work of substance. Prerequisite: MATH 241 or consent of instructor; MATH 347 is recommended.
MCB 402   Sys & Integrative Physiology   credit: 3 Hours. Examines human systems physiology. Topics to be covered include the nervous and endocrine systems, muscle physiology, cardiac physiology, respiratory physiology, blood and immune homeostasis, renal physiology, and gastrointestinal physiology and energy homeostasis. Special emphasis is on homeostatic control and integration of body systems in both health and disease. 3 undergraduate hours. 3 graduate hours. Prerequisite: MCB 252 or consent of instructor.
BIOC 455   Technqs Biochem & Biotech   credit: 4 Hours. Introduction to modern methods of experimentation with biochemical experimentation. Lectures and labs on the theory and practices underlying various methods and instrumentation. Includes protein purification and quantitative analyses, immunoassays, enzymology, peptide sequencing, lipid analysis, carbohydrate analysis, and bioinformatics. 4 undergraduate hours. 4 graduate hours. Prerequisite: CHEM 232 or CHEM 236, or equivalent; credit in MCB 251 or equivalent, and MCB 354 or MCB 450 or equivalent, or consent of instructor.
ECE 342   Electronic Circuits   credit: 3 Hours. Analysis and design of analog and digital electronic circuits using MOS field effect transistors and bipolar junction transistors, with emphasis on amplifiers in integrated circuits. Credit is not given for both ECE 342 and PHYS 404. Prerequisite: ECE 210.
ME 400   Energy Conversion Systems   credit: 3 or 4 Hours. Processes and systems for energy conversion, including power and refrigeration cycles, air conditioning, thermoelectrics and fuel cells; ideal-gas mixtures and psychrometrics. 3 undergraduate hours. 4 graduate hours. Prerequisite: ME 200.
SHS 300   Anat & Physiol Spch Mechanism   credit: 4 Hours. Introduction to the anatomic and physiologic characteristics of the normal speech mechanism. Same as LING 300.
ECE 307   Techniques for Engrg Decisions   credit: 3 Hours. Modeling of decisions in engineering work and the analysis of models to develop a systematic approach to making decisions. Fundamental concepts in linear and dynamic programming; probability theory; and statistics. Resource allocation; logistics; scheduling; sequential decision making; siting of facilities; investment decisions; application of financial derivatives; other problems for decision making under uncertainty. Case studies from actual industrial applications illustrate real-world decisions. Prerequisite: ECE 210; credit or concurrent registration in ECE 313.
AE 352   Aerospace Dynamical Systems   credit: 3 Hours. Particle kinematics and dynamics; Lagrange's equations; vibration of multiple degree-of-freedom systems; rotational kinematics and dynamics of rigid bodies. Credit is not given for both AE 352 and TAM 412. Prerequisite: MATH 225, MATH 285, and TAM 212.
NPRE 423   Plasma Laboratory   credit: 2 Hours. Experiments relating to plasma engineering and fusion energy. Topics in ultra-high vacuum technology rf and dc electric plasma probes, measurements of dc and pulsed magnetic fields, dynamics of a theta pinch, and laser interferometry to measure plasma density. 2 undergraduate hours. 2 graduate hours. Prerequisite: NPRE 421 and NPRE 451.
ASTR 330   Extraterrestrial Life   credit: 3 Hours. Scientific discussion of the search for extraterrestrial life. Topics include: cosmic evolution (protons to heavy elements to molecules); terrestrial evolution (chemical, biological, and cultural); high technology searches for extraterrestrial life in the solar system (Mars, Venus, outer planets); and beyond the solar system (Drake equation and current SETI projects).
CHBE 474   Metabolic Engineering   credit: 3 or 4 Hours. Introduction to the principles and methodology of metabolic engineering. Experimental and mathematical techniques for the quantitative description, modeling, control, and design of metabolic pathways. Same as BIOE 474. 3 undergraduate hours. 4 graduate hours. Prerequisite: MATH 225 and MATH 285.
IB 420   Plant Physiology   credit: 3 Hours. General course concerned with plant functions, including water relations, mineral nutrition, metabolism, growth, and reproduction. Same as CPSC 484. 3 undergraduate hours. 3 graduate hours. Prerequisite: IB 103 or IB 150 and MCB 150; CHEM 232; or consent of instructor.
ME 460   Industrial Control Systems   credit: 4 Hours. Industrial control techniques; case studies of industrial systems; design, selection, and maintenance of industrial control systems, including electromechanical, pneumatic, thermal, and hydraulic systems. 4 undergraduate hours. 4 graduate hours. Credit is not given for both ME 460 and ECE 486. Prerequisite: ME 340 and ME 360.
A converters. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 342.
ECE 313   Probability with Engrg Applic   credit: 3 Hours. Probability theory with applications to engineering problems such as the reliability of circuits and systems to statistical methods for hypothesis testing, decision making under uncertainty, and parameter estimation. Same as MATH 362. Credit is not given for both ECE 313 and MATH 461. Prerequisite: MATH 286 or MATH 415.
ATMS 301   Atmospheric Thermodynamics   credit: 3 Hours. Introduction to fundamental thermodynamic processes that occur in Earth's atmosphere. Defines, describes, and derives various thermodynamic concepts including (1) the conservation of energy, (2) laws of thermodynamics, (3) kinetic theory, (4) phase transitions of water, and (5) thermodynamic processes of the atmosphere. Applies thermodynamic concepts to atmospheric structure and stability, water phase transformations, and energy and mass transport within the atmosphere. Prerequisite: ATMS 201, MATH 241, and PHYS 211.
LING 427   Language and the Brain   credit: 3 or 4 Hours. Same as PSYC 427 and SHS 427. See SHS 427.
AE 427   Mechanics of Polymers   credit: 3 Hours. Same as MSE 454 and TAM 427. See TAM 427.
U grading only. Prerequisite: CI 420 or CI 406 as required by the student's curriculum; Satisfactory completion of all requirements of the Council on Teacher Education Undergraduate or Graduate Common Assessment Plan for Initial Certification (http:
ECE 476   Power System Analysis   credit: 3 Hours. Development of power system equivalents by phase network analysis, load flow, symmetrical components, sequence networks, fault analysis, and digital simulation. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 330.
TAM 251   Introductory Solid Mechanics   credit: 3 Hours. Relationship between internal stresses and deformations produced by external forces acting on deformable bodies, and design principles based on mechanics of solids: normal stresses, shear stresses, and deformations produced by tensile, compressive, torsional, and bending loading of members; beam deflections; elastic energy and impact; multi-dimensional stress states; buckling of columns. Prerequisite: TAM 210 or TAM 211.
ME 452   Num Control of Mfg Processes   credit: 3 or 4 Hours. Numerical control systems, manufacturing processes, principles and practices basic to numerical control, and programming methodology for numerical control. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 101 and ME 270.
LING 300   Anat & Physiol Spch Mechanism   credit: 4 Hours. Same as SHS 300. See SHS 300.
ATMS 405   Boundary Layer Processes   credit: 4 Hours. Course will qualitatively and quantitatively describe atmospheric boundary layer characteristics and processes. The course will focus on the turbulent structure of the boundary layer and the factors that influence this structure over a variety of surfaces (e.g., soil, vegetation, marine) and under a variety of atmospheric conditions (e.g., stability, diurnal
SHS 450   Intro Audiol & Hear Disorders   credit: 4 Hours. Review of the history of audiology as a profession; study of symptoms, causes, and treatment of hearing losses; and principles and application of basic audiometry. 4 undergraduate hours. 4 graduate hours. Prerequisite: Consent of Instructor.
ECE 456   Global Nav Satellite Systems   credit: 4 Hours. Engineering aspects of space-based navigation systems, such as the Global Positioning System (GPS). Engineering and physical principles on which GPS operates, including orbital dynamics, electromagnetic wave propagation in a plasma, signal encoding, receiver design, error analysis, and numerical methods for obtaining a navigation solution. GPS as a case study for performing an end-to-end analysis of a complex engineering system. Laboratory exercises focus on understanding receiver design and developing a MATLAB-based GPS receiver. Same as AE 456. 4 undergraduate hours. 4 graduate hours. Prerequisite: ECE 329 and ECE 310 or AE 352 and AE 353.
CS 424   Real-Time Systems   credit: 3 or 4 Hours. Supervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241.
GEOL 432   Mineralogy and Mineral Optics   credit: 4 Hours. Introduction to: crystallography; crystal optics; structure, composition, properties, stability and geological occurrences of minerals; and mineral identification. Additional fees may apply. See Class Schedule. 4 undergraduate hours. 4 graduate hours. Credit is not given for both GEOL 333 and GEOL 432. Prerequisite: GEOL 208 and CHEM 104 and CHEM 105.
TAM 412   Intermediate Dynamics   credit: 4 Hours. Lagrangian mechanics of dynamical systems with an emphasis on vibrations; constraints and generalized coordinates; motion in accelerating frames; conservation laws and invariance of the Lagrangian; particle motion in one dimension, the two-body problem, and central-force motion; free and forced vibration of linearized single-degree-of-freedom and multi-degree-of-freedom discrete systems; weakly nonlinear vibrations; parametric resonance; introduction to Hamiltonian dynamics; rigid-body motions. 4 undergraduate hours. 4 graduate hours. Credit is not given for both TAM 412 and AE 352. Prerequisite: MATH 225 or MATH 415; MATH 285 or MATH 441; TAM 212.
CS 421   Programming Languages & Compilers   credit: 3 or 4 Hours. Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 233 or CS 240; CS 374.
MCB 300   Microbiology   credit: 3 Hours. Emphasizes fundamental concepts of microbiology, including nutrition, physiology, genetics, molecular biology, ecology and evolution of microorganisms, and their role in nature, human health and disease. Credit is not given for both MCB 300 and MCB 100. Prerequisite: MCB 250 and credit or concurrent registration in MCB 252 or consent of instructor.
NPRE 457   Safety Anlys Nucl Reactor Syst   credit: 3 or 4 Hours. Basic safety philosophy in nuclear reactor systems; brief review of nuclear reactor systems; regulatory processes; siting considerations; safety problems related to reactor dynamics; evaluation of postulated accidents; risks associated with nuclear fuel cycle; methods of systems safety analysis. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: NPRE 402 or NPRE 247.
O design; reliability and performance evaluation. Laboratory for computer design implementation, simulation, and layout. 4 undergraduate hours. 4 graduate hours. Prerequisite: ECE 391 or CS 241.
MATH 418   Intro to Abstract Algebra II   credit: 3 or 4 Hours. Rings of quotients of an integral domain. Euclidean domains, principal ideal domains. Unique factorization in polynomial rings. Fields extensions, ruler and compass constructions. Finite fields with applications. Modules. Structure theorem for finitely generated modules over principal ideal domains. Application to finitely generated abelian groups and canonical forms of matrices. Introduction to error-correcting codes. 3 or 4 undergraduate hours. 3 or 4 graduate hours. 4 hours of credit requires approval of the instructor and department with completion of additional work of substance. Prerequisite: MATH 417 or consent of instructor.
TAM 324   Behavior of Materials   credit: 4 Hours. Same as CEE 300. See CEE 300.
NPRE 475   Wind Power Systems   credit: 3 or 4 Hours. Overview of wind energy systems; historical development, safety aspect, environmental considerations, wind properties and measurement, site selection, and wind turbine design; transmission systems considerations; mechanical, electrical, control aerodynamic and environmental engineering of modern wind turbines; fatigue failure; annual power production; economics and environmental aspects and accident prevention and mitigation; computational fluid dynamics (CFD) analysis of wind flow and blade interactions; energy storage options; hydrogen production; electrical power transmission issues; licensing issues; alternative wind energy systems; design project involving a wind farm or the construction of a specific type of wind turbine based on a wind park site visit. 3 undergraduate hours. 4 graduate hours. Prerequisite: CS 101, MATH 241; one of CHBE 421, ECE 110, ECE 205, ME 310, TAM 335.
GEOL 450   Probing the Earth's Interior   credit: 3 Hours. Overview of how seismology, magnetics, gravity, geodesy, and surface geology can help us understand the Earth from its surface to its core as well as its temporal evolution. Topics include the internal composition and dynamics of Earth, generation of Earth's gravitational and geomagnetic fields, driving mechanisms for tectonic plate motion, continental deformation, and surface topography. Students wanting a more quantitative treatment of geophysics should enroll in GEOL 452. 3 undergraduate hours. 3 graduate hours. Credit is not given for both GEOL 450 and GEOL 452. Prerequisite: PHYS 102 or 212, GEOL 107 or 101, or consent of instructor.
MCB 150   Molec & Cellular Basis of Life   credit: 4 Hours. Introductory course focusing on the basic structure, metabolic, and molecular processes (including membranes, energy metabolism, genes) common to all cells. Emphasis on unique properties that differentiate the major sub-groups of organisms (Archaea, Bacteria, plants, and animals), and will discuss how cells are integrated into tissues and organs in multicellular organisms. This course satisfies the General Education Criteria for:Nat Sci  Tech - Life Sciences
BIOC 440   Physical Chemistry Principles   credit: 4 Hours. Same as CHEM 440. See CHEM 440.
ECE 418   Image & Video Processing   credit: 4 Hours. Concepts and applications in image and video processing; introduction to multidimensional signal processing: sampling, Fourier transform, filtering, interpolation, and decimation; human visual perception; scanning and display of images and video; image enhancement, restoration and segmentation; digital image and video compression; image analysis. Laboratory exercises promote experience with topics and development of C and MATLAB programs. 4 undergraduate hours. 4 graduate hours. Prerequisite: ECE 310; credit or concurrent registration in one of ECE 313, STAT 400, IE 300, MATH 461; MATH 415; experience with C programming language.
MCB 419   Brain, Behavior & Info Process   credit: 3 Hours. Exploration of the neural basis of animal behavior. Emphasis on the information processing problems that animals face in complex natural environments and how nervous systems have evolved to solve these problems. Introduction to the use of computer modeling and simulation techniques for exploring principles of nervous system design and function. Current literature in computational neurobiology and neuroethology will be incorporated in readings and class discussion. Same as BIOP 419 and NEUR 419. 3 undergraduate hours. 3 graduate hours. Prerequisite: CS 101; and PHYS 102 or PHYS 212; and MCB 252; or equivalent or consent of instructor.
PHYS 419   Space, Time, and Matter-ACP   credit: 3 or 4 Hours. Identical to PHYS 420 except for the additional writing component including a final term paper. Same as PHIL 419. 3 undergraduate hours. 4 graduate hours. Credit is not given for both PHYS 419 and PHYS 420. Prerequisite: PHIL 101; PHYS 101 or PHYS 211.This course satisfies the General Education Criteria for:Advanced Composition
ECE 460   Optical Imaging   credit: 4 Hours. Scalar fields, geometrical optics, wave optics, Gaussian beams, Fourier optics, spatial and temporal coherence, microscopy, interference chromatic and geometric aberrations, Jones matrices, waveplates, electromagnetic fields, and electro-optic and acousto-optic effects. Laboratory covers numerical signal processing, spectroscopy, ray optics, diffraction, Fourier optics, microscopy, spatial coherence, temporal coherence, polarimetry, fiber optics, electro-optic modulation and acousto-optic modulation. 4 undergraduate hours. 4 graduate hours. Prerequisite: ECE 329; credit or concurrent registration in ECE 313.
AE 419   Aircraft Flight Mechanics   credit: 3 or 4 Hours. Steady and quasi-steady aircraft flight performance; take-off and landing, climbing and diving, cruise, level turn, and energy methods; longitudinal, directional, and lateral static stability and control; longitudinal and lateral motion and dynamic stability. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: AE 202 and AE 353.
CHBE 456   Polymer Science & Engineering   credit: 3 Hours. Fundamentals of polymer science and engineering: polymerization mechanisms, kinetics, and processes; physical chemistry and characterization of polymers; polymer rheology, mechanical properties, and processing. 3 undergraduate hours. 3 graduate hours. Credit is not given for both CHBE 456 and MSE 450. Prerequisite: CHBE 321; credit or concurrent registration in CHBE 421; CHEM 444.
CS 420   Parallel Progrmg: Sci & Engrg   credit: 3 or 4 Hours. Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. Same as CSE 402 and ECE 492. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.
GEOL 380   Environmental Geology   credit: 4 Hours. Increases student understanding of environmental issues of water supply and pollution, waste disposal, energy, environmental health, global change, and land evaluation and use by emphasizing the role of geology and its relationships to human activities. Course requires a one-day field trip. Same as ENVS 380. Additional fees may apply. See Class Schedule. Credit is not given for both GEOL 380 and ESE 445. Prerequisite: CHEM 102 and CHEM 103; and GEOL 100 and GEOL 110, or one of GEOL 101, GEOL 103, GEOL 104 or GEOL 107; or consent of instructor.
SHS 240   Intro Sound & Hearing Science   credit: 3 Hours. Acoustics, anatomy, and physiology of the auditory system; psychophysical methods; and a consideration of auditory theories and mechanics.
TAM 435   Intermediate Fluid Mechanics   credit: 4 Hours. Analytical solution methods for problems involving ideal and real fluids: potential flow theory, boundary-layer theory; surface waves, vortex dynamics, and compressible flows. 4 undergraduate hours. 4 graduate hours. Prerequisite: One of AE 312, ME 310, TAM 335.
ECE 467   Biophotonics   credit: 3 Hours. Overview of the field of biophotonics, in three segments: (1) fundamental principles of light, optics, lasers, biology, and medicine; (2) diagnostic biophotonics including imaging, spectroscopy, and optical biosensors; (3) therapeutic applications of biophotonics including laser ablation and photodynamic therapies. Reviews and presentations of current scientific literature by students. Tours of microscopy facilities. Same as BIOE 467. 3 undergraduate hours. 3 graduate hours. Prerequisite: One of ECE 455, ECE 460, PHYS 402.
ME 420   Intermediate Heat Transfer   credit: 4 Hours. Conduction heat transfer, radiation heat transfer, mass transfer, phase change, heat exchangers; numerical methods. 4 undergraduate hours. 4 graduate hours. Prerequisite: ME 310 OR TAM 335; ME 320.
and either one year of high school calculus or a minimum score of 2 on the AB Calculus AP exam. This course satisfies the General Education Criteria for:Quantitative Reasoning I
ECE 329   Fields and Waves I   credit: 3 Hours. Electromagnetic fields and waves fundamentals and their engineering applications: static electric and magnetic fields; energy storage; Maxwell's equations for time-varying fields; wave solutions in free space, dielectrics and conducting media, transmission line systems; time- and frequency-domain analysis of transmission line circuits and Smith chart applications. Prerequisite: ECE 210.
ECE 455   Optical Electronics   credit: 3 or 4 Hours. Optical beams and cavities; semiclassical theory of gain; characteristics of typical lasers (gas, solid state, and semiconductor); application of optical devices. 3 undergraduate hours. 4 graduate hours. Prerequisite: ECE 350 or PHYS 436.
CS 436   Computer Networking Laboratory   credit: 3 or 4 Hours. Same as ECE 435. See ECE 435.
CS 439   Wireless Networks   credit: 3 or 4 Hours. Same as ECE 439. See ECE 439.
PHYS 406   Acoustical Physics of Music   credit: 4 Hours. Acoustical physics associated with music and musical instruments, propagation of sound waves in and from musical instruments, and the biological physics of human hearing. Investigation of topics via advanced laboratory and data acquisition techniques. 4 undergraduate hours. 4 graduate hours. Prerequisite: PHYS 213 and PHYS 214.
ECE 447   Active Microwave Ckt Design   credit: 3 Hours. Microwave circuit design of amplifiers, oscillators, and mixers. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 350 and ECE 453.
ME 330   Engineering Materials   credit: 4 Hours. Structures of polymers, metals, and ceramics as the basis for their mechanical behavior. Manipulation of structure through such processes as heat treatment and solidification. Mechanisms of material failure in service (yielding, fracture, fatigue, creep, corrosion, and wear) and simple design techniques to avoid these failures. Strategies for materials selection in design. Credit is not given for both ME 330 and either CEE 300 or MSE 280. Prerequisite: CHEM 102 and TAM 251.
ECE 459   Communications Systems   credit: 3 Hours. Analog underpinning of analog and digital communication systems: representation of signals and systems in the time and frequency domains; analog modulation schemes; random processes; prediction and noise analysis using random processes; noise sensitivity and bandwidth requirements of modulation schemes. Brief introduction to digital communications. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 313.
MCB 401   Cell & Membrane Physiology   credit: 3 Hours. Foundational principles of cellular physiology. Topics include solute
ECE 468   Optical Remote Sensing   credit: 3 Hours. Optical sensors including single element and area arrays (CCDs); optical systems including imagers, spectrometers, interferometers, and lidar; optical principles and light gathering power; electromagnetics of atomic and molecular emission and scattering with applications to the atmosphere the prime example; applications to ground and spacecraft platforms. Four laboratory sessions (4.5 hours each) arranged during term in lieu of four lectures. Same as AE 468. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 329, ECE 313.
ECE 414   Biomedical Instrumentation   credit: 3 Hours. Same as BIOE 414. See BIOE 414.
NPRE 442   Radioactive Waste Management   credit: 3 Hours. Radiation and radiological concepts and measurement, the fuel cycle and waste classification, Part 61, state and federal regulations and regulatory agencies, radiochemistry and the environmental fate of radionuclides, uranium-related wastes, low-level wastes, high-level wastes, used fuel reprocessing, private fuel storage, waste package stability, risk assessment, geologic repositories, transporting radioactive wastes, decommissioning wastes, transmutation, an international perspective on radioactive waste management, and the global nuclear energy partnership. 3 undergraduate hours. 3 graduate hours. Prerequisite: MATH 231; PHYS 102 or PHYS 212.
BIOE 461   Cellular Biomechanics   credit: 4 Hours. Same as TAM 461. See TAM 461.
ECE 470   Introduction to Robotics   credit: 4 Hours. Fundamentals of robotics including rigid motions; homogeneous transformations; forward and inverse kinematics; velocity kinematics; motion planning; trajectory generation; sensing, vision; control. Same as AE 482 and ME 445. 4 undergraduate hours. 4 graduate hours. Prerequisite: One of MATH 225, MATH 286, MATH 415, MATH 418.
IB 461   Ornithology   credit: 4 Hours. Structure, function, ecology, behavior, and evolution of the birds of the world; laboratory devoted to anatomy and identification; and field studies devoted to identification and behavior of birds. Independent research project and two optional weekend field trips. Same as NRES 461. 4 undergraduate hours. 4 graduate hours. Prerequisite: IB 203; or consent of instructor.
PHYS 326   Classical Mechanics II   credit: 3 Hours. Continuation of PHYS 325. Central force motion, collisions and scattering, rotational motion, coupled oscillations, continuous media, and fluid dynamics. Prerequisite: PHYS 325.
MATH 481   Vector and Tensor Analysis   credit: 3 or 4 Hours. Introductory course in modern differential geometry focusing on examples, broadly aimed at students in mathematics, the sciences, and engineering. Emphasis on rigorously presented concepts, tools and ideas rather than on proofs. The topics covered include differentiable manifolds, tangent spaces and orientability; vector and tensor fields; differential forms; integration on manifolds and Generalized Stokes Theorem; Riemannian metrics, Riemannian connections and geodesics. Applications to configuration and phase spaces, Maxwell equations and relativity theory will be discussed. 3 or 4 undergraduate hours. 3 or 4 graduate hours. 4 hours of credit requires approval of the instructor and department with completion of additional work of substance. Prerequisite: MATH 241 and one of MATH 415 or MATH 416 or equivalent.
IB 348   Fish and Wildlife Ecology   credit: 3 Hours. Same as NRES 348. See NRES 348.
CHBE 422   Mass Transfer Operations   credit: 4 Hours. Introduction to mass transfer processes and design methods for separation equipment. 4 undergraduate hours. 4 graduate hours. Prerequisite: CHBE 321 and CHBE 421.
PHYS 420   Space, Time, and Matter   credit: 2 Hours. Philosophical examination of some fundamental concepts and theories of the physical world, such as time, matter, space, and geometry; interpretation of quantum theory. Same as PHIL 420. 2 undergraduate hours. 2 graduate hours. Credit is not given for both PHYS 420 and PHYS 419. Prerequisite: PHIL 101; PHYS 101 or PHYS 211.
MATH 448   Complex Variables   credit: 3 or 4 Hours. For students who desire a rigorous introduction to the theory of functions of a complex variable; topics include Cauchy's theorem, the residue theorem, the maximum modulus theorem, Laurent series, the fundamental theorem of algebra, and the argument principle. 3 or 4 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both MATH 448 and MATH 446. 4 hours of credit requires approval of the instructor and department with completion of additional work of substance. Prerequisite: MATH 447.
IB 440   Plants and Global Change   credit: 3 Hours. Same as CPSC 431 and NRES 431. See CPSC 431.
MCB 421   Microbial Genetics   credit: 3 Hours. Prokaryotic microbial genetic systems; emphasis on typical data analyses, together with the basic classes of genetic phenomena. 3 undergraduate hours. 3 graduate hours. Prerequisite: MCB 300 or consent of instructor.
IE 412   OR Models for Mfg Systems   credit: 3 or 4 Hours. Operations research techniques applied to problems in manufacturing and distribution. Single and multi-stage lot sizing problems, scheduling and sequencing problems, and performance evaluation of manufacturing systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: IE 310.
CS 422   Programming Language Design   credit: 3 or 4 Hours. Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 421.
ECE 472   Biomedical Ultrasound Imaging   credit: 3 Hours. Theoretical and engineering foundations of ultrasonic imaging for medical diagnostics. Conventional, Doppler, and advanced ultrasonic imaging techniques; medical applications of different ultrasonic imaging techniques; engineering problems related to characterization of ultrasonic sources and arrays, image production, image quality, the role of contrast agents in ultrasonic imaging, and system design. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 329.
AE 412   Viscous Flow & Heat Transfer   credit: 4 Hours. Momentum and thermal transport in wall boundary-layer and free shear flows, solutions to the Navier-Stokes equations for heat conducting laminar and turbulent shear flows; similarity concepts; thermal boundary layers in ducts and high-speed aerodynamic boundary layers. Same as ME 411. 4 undergraduate hours. 4 graduate hours. Prerequisite: AE 311, ME 310 or TAM 335.
discussions, laboratory and field work. The laboratory includes vertebrate dissection. Same as NRES 442. 4 undergraduate hours. 4 graduate hours. Offered in alternate years. Prerequisite: IB 202 and IB 203; or consent of instructor.
ATMS 303   Synoptic-Dynamic Wea Analysis   credit: 4 Hours. Conceptualizes the structure and dynamics of the atmosphere through interpretation and analysis of weather charts, time and cross sections, soundings, and forecast products. Students develop case studies of weather system structure, and participate in discussions of weather processes as depicted by weather maps. Depiction of atmospheric kinematic and dynamic processes on weather charts is emphasized. Students learn conceptual models of the structure of mid-latitude cyclones and convective weather systems, including cyclogenesis, frontogenesis, the process of storm intensification, occlusion and frontolysis. Prerequisite: ATMS 201 and credit or concurrent registration in MATH 241.
STAT 429   Time Series Analysis   credit: 3 or 4 Hours. Studies theory and data analysis for time series; examines auto-regressive moving average model building and statistical techniques; and discusses spectral model building and statistical analysis using windowed periodograms and Fast Fourier Transformations. 3 undergraduate hours. 4 graduate hours. Prerequisite: STAT 410.
IB 431   Behavioral Ecology   credit: 3 Hours. In-depth examination of areas of current interest at the interface of behavior, ecology, and evolution; focuses on communication, foraging, and social behavior. 3 undergraduate hours. 3 graduate hours. Offered in alternate years. Prerequisite: IB 329; or consent of instructor.
STAT 440   Statistical Data Management   credit: 3 or 4 Hours. The critical elements of data storage, data cleaning, and data extractions that ultimately lead to data analysis are presented. Includes basic theory and methods of databases, auditing and querying databases, as well as data management and data preparation using standard large-scale statistical software. Students will gain competency in the skills required in storing, cleaning, and managing data, all of which are required prior to data analysis. Same as CSE 440. 3 undergraduate hours. 4 graduate hours. Prerequisite: STAT 400 or STAT 409.
IB 486   Pesticide Toxicology   credit: 3 or 4 Hours. Examines the biological effects of major classes of insecticides and herbicides, and of selected individual fungicides, including: toxicity to nontarget organisms, persistence and fate in the environment, biotransformation, and ecological consequences. Current regulations on pesticide testing will also be presented. The mechanism of action on target species will be discussed only in relation to effects on nontarget organisms. Same as CB 434 and ENVS 433. 3 undergraduate hours. 4 graduate hours. Offered in alternate years. Prerequisite: One year of college chemistry and one year of college biology; or consent of instructor.
ASTR 350   The Big Bang, Black Holes, and the End of the Universe   credit: 3 Hours. Studies the origin, evolution, and eventual fate of the universe, and the scientific tools used to study these issues. Topics include aspects of special and general relativity; curved spacetime; the Big Bang; inflation; primordial element synthesis; the cosmic microwave background; dark matter and the formation of galaxies; observational evidence for dark matter, dark energy, and black holes. Credit is not given for ASTR 350 if credit in ASTR 406 has been earned. Prerequisite: ASTR 100, or ASTR 121, or ASTR 122, or ASTR 210, or consent of instructor.
ME 440   Kinem & Dynamics of Mech Syst   credit: 3 or 4 Hours. Kinematics and dynamics of constrained rigid-body mechanical systems; use of modern computer-based analysis software packages. 3 undergraduate hours. 4 graduate hours. Prerequisite: ME 370.
ME 320   Heat Transfer   credit: 4 Hours. Fundamentals of fluid mechanics with coverage of theory and applications of incompressible viscous and inviscid flows, and compressible high speed flows. Prerequisite: MATH 285 or MATH 286 or MATH 441; ME 310 or TAM 335; credit or concurrent registration in ME 200.
IB 444   Insect Ecology   credit: 3 or 4 Hours. Discussion of the practical and theoretical aspects of ecology in relation to insects as individuals, populations, and communities; emphasis on the role of insects in the environment. 3 or 4 undergraduate hours. 3 or 4 graduate hours. Offered in alternate years. Lecture only, 3 hours; with laboratory, 4 hours. Prerequisite: IB 150 and MCB 150 or consent of instructor.
CS 413   Intro to Combinatorics   credit: 3 or 4 Hours. Same as MATH 413. See MATH 413.
CS 427   Software Engineering I   credit: 3 or 4 Hours. Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. Same as CSE 426. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225 and CS 373.
CS 498   Special Topics   credit: 1 to 4 Hours. Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 1 to 4 undergraduate hours. 1 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.
AE 202   Aerospace Flight Mechanics   credit: 3 Hours. Fundamental principles of aerospace flight mechanics applied to spacecraft and aircraft. Orbital mechanics, rocket propulsion, and dynamics and control applied to spacecraft design. Aerodynamics, maneuvering, stability and flight performance applied to aircraft design. MATLAB examples and assignments. Prerequisite: Credit or concurrent registration in TAM 212.
MATH 424   Honors Real Analysis   credit: 3 Hours. A rigorous treatment of basic real analysis via metric spaces recommended for those who intend to pursue programs heavily dependent upon graduate level Mathematics. Metric space topics include continuity, compactness, completeness, connectedness and uniform convergence. Analysis topics include the theory of differentiation, Riemann-Darboux integration, sequences and series of functions, and interchange of limiting operations. As part of the honors sequence, this course will be rigorous and abstract. 3 undergraduate hours. No graduate credit. Credit is not given for both MATH 424 and either MATH 444 or MATH 447. Approved for honors grading. Prerequisite: An honors section of MATH 347 or an honors section of MATH 416, and consent of the department.
MATH 484   Nonlinear Programming   credit: 3 or 4 Hours. Iterative and analytical solutions of constrained and unconstrained problems of optimization; gradient and conjugate gradient solution methods; Newton's method, Lagrange multipliers, duality and the Kuhn-Tucker theorem; and quadratic, convex, and geometric programming. 3 or 4 undergraduate hours. 3 or 4 graduate hours. 4 hours of credit requires approval of the instructor and department with completion of additional work of substance. Prerequisite: MATH 241; MATH 347 or MATH 348; or equivalent; MATH 415 or equivalent; or consent of instructor.
ECE 402   Electronic Music Synthesis   credit: 3 Hours. Historical survey of electronic and computer music technology; parameters of musical expression and their codification; analysis and synthesis of fixed sound spectra; time-variant spectrum analysis
ECE 491   Numerical Analysis   credit: 3 or 4 Hours. Same as CS 450, CSE 401 and MATH 450. See CS 450.
NPRE 441   Radiation Protection   credit: 4 Hours. Sources of nuclear radiation; ionization and energy deposition in matter with an emphasis on biological systems; principles of dosimetry; determination of exposure and limits for internal and external emitters; basic shielding calculations. 4 undergraduate hours. 4 graduate hours. Prerequisite: NPRE 446.
BIOE 480   Magnetic Resonance Imaging   credit: 3 or 4 Hours. Same as ECE 480. See ECE 480.
ECE 297   Individual Study   credit: 1 Hour. Individual projects. Approved written application to department as specified by department or instructors is required. Approved for both letter and S
ECE 444   IC Device Theory & Fabrication   credit: 4 Hours. Fabrication lab emphasizing physical theory and design of devices suitable for integrated circuitry; electrical properties of semiconductors and techniques (epitaxial growth, oxidation, photolithography diffusion, ion implantation, metallization, and characterization) for fabricating integrated circuit devices such as p-n junction diodes, bipolar transistors, and field effect transistors. 4 undergraduate hours. 4 graduate hours. Prerequisite: ECE 340.
O, recursion, simple data structures, linked lists, dynamic memory management, and basic algorithms. Information hiding and object-oriented design as commonly implemented in modern software and computer systems programming. Prerequisite: ECE 120. Restricted to Computer Engineering or Electrical Engineering majors or transfer students with ECE Department consent.
ECE 412   Microcomputer Laboratory   credit: 3 Hours. Design, construction, and use of a small general-purpose computer with a micro-processor CPU; MSI and LSI circuits used extensively; control panel, peripheral controllers, control logic, central processor, and programming experiments. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 385; ECE 391 or CS 233. Recommended: Credit or concurrent registration in ECE 411.
ECE 428   Distributed Systems   credit: 3 or 4 Hours. Same as CS 425. See CS 425.
GEOL 333   Earth Materials and the Env   credit: 4 Hours. Studies the origin, identification, and environmental significance of earth materials (minerals, rocks, and soil). Environmental topics include: mineral resources; acid mine drainage; volcanic hazards; swelling soils; engineering strength, porosity
ENG 100   Engineering Orientation   credit: 0 Hours. Orientation required of new freshmen in the College of Engineering. Approved for S
CI 442   Math, Science, and Techniques in Early Childhood Education   credit: 5 Hours. The principles, place and practice of science and mathematics education in early childhood education and in the lives of young children; stresses the functional nature of science and mathematics and their inter-relatedness; presents methods, techniques, experiences, and materials of value in teaching mathematics and science in early childhood education; and the role of the classroom teacher. Opportunity for experience in field and laboratory work. 5 undergraduate hours. 5 graduate hours. Prerequisite: CI 420, general education requirements in mathematics (MATH 103 or equivalent), 2 years of college science, admission to the Early Childhood Teacher Education Program. Requires concurrent enrollment in EDPR 432.
IB 483   Insect Pathology   credit: 3 Hours. The general principles of pathology as they apply to insects; includes non-infectious and infectious diseases caused by viruses, bacteria, fungi, protozoa, and nematodes. Studies the epizootiology of naturally occurring insect disease and the use of insect pathogens as microbial control agents. Same as CPSC 475. 3 undergraduate hours. 3 graduate hours. Lecture in alternate years. Prerequisite: IB 150 and MCB 150 or consent of instructor.
ECE 398   Special Topics in ECE   credit: 0 to 4 Hours. Subject offerings of new and developing areas of knowledge in electrical and computer engineering intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. Approved for both letter and S
IB 405   Ecological Genetics   credit: 3 Hours. Study of the genetics of natural populations, stressing empirical observations and experiments. Emphasis on recent theories of genotype
ECE 310   Digital Signal Processing   credit: 3 Hours. Introduction to discrete-time systems and discrete-time signal processing with an emphasis on causal systems; discrete-time linear systems, difference equations, z-transforms, discrete convolution, stability, discrete-time Fourier transforms, analog-to-digital and digital-to-analog conversion, digital filter design, discrete Fourier transforms, fast Fourier transforms, spectral analysis, and applications of digital signal processing. Prerequisite: ECE 210.
CS 466   Introduction to Bioinformatics   credit: 3 or 4 Hours. Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.
GEOL 440   Sedimentology and Stratigraphy   credit: 4 Hours. Introduces dynamics of sedimentation, geology of sedimentary basins, the distribution of geologic processes through time, definition and correlation of stratigraphic units, principles of paleogeography, stratigraphy and tectonics. Additional fees may apply. See Class Schedule. 4 undergraduate hours. 4 graduate hours. Prerequisite: GEOL 208 or consent of instructor.
MCB 480   Eukaryotic Cell Signaling   credit: 2 Hours. General principles of molecular signaling regulating membrane, cytoplasmic, and nuclear events in eukaryotic cells with emphasis on mammalian systems. Contemporary methods of investigation and the principles of identifying and solving problems related to signal transduction will be emphasized. 2 undergraduate hours. 2 graduate hours. Prerequisite: MCB 252 or consent of instructor.
ASTR 404   Stellar Astrophysics   credit: 3 Hours. Introduction to astrophysical problems, with emphasis on underlying physical principles; includes the nature of stars, equations of state, stellar energy generation, stellar structure and evolution, astrophysical neutrinos, binary stars, white dwarfs, neutron stars and pulsars, and novae and supernovae. 3 undergraduate hours. 3 graduate hours. Prerequisite: PHYS 212; or consent of instructor. Recommended: ASTR 210, PHYS 213, PHYS 214.
MATH 475   Formal Models of Computation   credit: 3 or 4 Hours. Same as CS 475. See CS 475.
PHYS 460   Condensed Matter Physics   credit: 4 Hours. Bonding and structure of crystals; energy bands in insulators, semiconductors, and metals; electrical conductivity; optical properties; lattice vibrations; elasticity; point defects; dislocations. 4 undergraduate hours. 4 graduate hours. Credit is not given for both PHYS 460 and MSE 304. Prerequisite: PHYS 435; PHYS 485 or PHYS 486.
CEE 310   Transportation Engineering   credit: 3 Hours. Design, planning, operation, management, and maintenance of transportation systems; integrated multi-modal transportation systems (highways, air, rail, etc.); layout of highways, airports, and railroads with traffic flow models, capacity analysis, and safety. Design of facilities and systems with life cycle costing procedures and criteria for optimization. Prerequisite: TAM 251; credit or concurrent registration in CEE 202.
ME 450   Modeling Materials Processing   credit: 3 Hours. Manufacturing processes for metals and polymers; creation of process models based on momentum, heat, and mass transfer; model simplification by estimation and scaling; applications to casting, microstructure evolution, polymer molding and extrusion, and welding. 3 undergraduate hours. 3 graduate hours. Prerequisite: ME 320 and ME 330.
CHBE 457   Microelectronics Processing   credit: 3 Hours. Introductory survey of chemical processing principles applied to microelectronic fabrication. Key concepts originate from chemical kinetics; thermodynamics; mass and energy balances; transport of mass, momentum and heat; and process synthesis and integration. 3 undergraduate hours. 3 graduate hours. Prerequisite: Junior or senior standing in Chemical and Biomolecular Engineering, Electrical and Computer Engineering, or Materials Science and Computer Engineering.
ECE 120   Introduction to Computing   credit: 4 Hours. Introduction to digital logic, computer systems, and computer languages. Topics include representation of information, combinational and sequential logic analysis and design, finite state machines, the von Neumann model, basic computer organization, and machine language programming. Laboratory assignments provide hands-on experience with design, simulation, implementation, and programming of digital systems. Prerequisite: Restricted to Computer Engineering or Electrical Engineering majors or transfer students with ECE Department consent.
cote.illinois.edu
ECE 395   Advanced Digital Projects Lab   credit: 2 or 3 Hours. Planning, designing, executing, and documenting a microcomputer-based project. Emphasis on hardware but special projects may require an equal emphasis on software. May be repeated in separate terms. Prerequisite: ECE 385.
IB 462   Mammalogy   credit: 4 Hours. Classification, distribution, structure, function, life history, evolution and identification of mammals. Lecture
NPRE 455   Neutron Diffusion & Transport   credit: 4 Hours. Neutron migration, neutron slowing down and thermalization; neutron continuity equation, multigroup diffusion theory, homogeneous and heterogeneous medium, thermal and fast assemblies; numerical methods for multigroup diffusion equations; reactor dynamics perturbation theory; reactivity coefficients; introductory transport theory. 4 undergraduate hours. 4 graduate hours. Prerequisite: NPRE 247.
CHBE 321   Thermodynamics   credit: 4 Hours. Fundamental concepts and the laws of thermodynamics; the first and second law applications to phase equilibrium and chemical equilibrium and other applications in the Chemical and Biomolecular Engineering profession. Prerequisite: CHBE 221.
TAM 212   Introductory Dynamics   credit: 3 Hours. Kinematics and dynamics of the three-dimensional motion of particles; kinematics and dynamics of the plane motion of rigid bodies; methods of work energy and impulse momentum; moving reference frames. Prerequisite: TAM 210 or TAM 211.
ECE 431   Electric Machinery   credit: 4 Hours. Theory and laboratory experimentation with three-phase power, power-factor correction, single- and three-phase transformers, induction machines, DC machines, and synchronous machines; project work on energy control systems; digital simulation of machine dynamics. 4 undergraduate hours. 4 graduate hours. Prerequisite: ECE 330.
MCB 431   Microbial Physiology   credit: 3 Hours. Examines bacterial physiology, including discussions of energetics, regulation of metabolism, and cell structure. 3 undergraduate hours. 3 graduate hours. Prerequisite: MCB 300 or equivalent; credit or concurrent registration in a biochemistry course.
AE 402   Orbital Mechanics   credit: 3 or 4 Hours. Analysis of orbits in an inverse-square gravitational field; elementary rocket dynamics, impulsive orbit transfer and rendezvous, and Lambert's Theorem with applications; patched-conic trajectories, planetary gravity-assist maneuvers, and linearized orbit theory with application to simplified analytical models; perturbations. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: AE 202.
ME 402   Design of Thermal Systems   credit: 3 or 4 Hours. Selection of components in fluid- and energy-processing systems to meet system-performance requirements; computer-aided design; system simulation; optimization techniques; investment economics and statistical combinations of operating conditions. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: Credit or concurrent registration in ME 320.
CS 473   Algorithms   credit: 4 Hours. Design and analysis techniques, approximation algorithms, randomized algorithms and amortized analysis, and advanced topics such as network flow, linear programming, and dynamic data structures, among others. Same as CSE 414 and MATH 473. 4 undergraduate hours. 4 graduate hours. Prerequisite: CS 374, and one of CS 361, MATH 461, or STAT 400.
EDPR 432   Ed Prac in EC & ELED   credit: 2 to 12 Hours. Course in practice teaching to meet licensure requirements for teaching in the elementary school. 2 to 12 undergraduate hours. 2 to 12 graduate hours. Approved for S
output and display, timing analysis, design tradeoffs, synchronous and asynchronous design methods, datapath and controller, microprocessor design, software
ECE 464   Power Electronics   credit: 3 Hours. Switching functions and methods of control such as pulse-width modulation, phase control, and phase modulation; dc-dc, ac-dc, dc-ac, and ac-ac power converters; power components, including magnetic components and power semiconductor switching devices. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 342.
U grading only.
ECE 415   Biomedical Instrumentation Lab   credit: 2 Hours. Same as BIOE 415. See BIOE 415.
ME 200   Thermodynamics   credit: 3 Hours. Classical thermodynamics through the second law; system and control-volume analyses of thermodynamic processes; irreversibility and availability; relations for ideal gas mixtures. Prerequisite: MATH 241.
CS 477   Formal Software Devel Methods   credit: 3 or 4 Hours. Mathematical models, languages, and methods for software specification, development, and verification. Same as ECE 478. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 373 or MATH 414.
ME 451   Computer-Aided Mfg Systems   credit: 3 or 4 Hours. The application of computer technology and operations research to manufacturing systems. Use of microprocessors for direct numeric control of machine tools, adaptive control and optimization, and integrated manufacturing systems. Applications of industrial robots. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: ME 270.
CHBE 424   Chemical Reaction Engineering   credit: 3 Hours. Chemical kinetics; chemical reactor design; the interrelationship between transport, thermodynamics, and chemical reaction in open and closed systems. 3 undergraduate hours. 3 graduate hours. Prerequisite: Credit or registration in CHBE 422.
NPRE 432   Nuclear Engrg Materials Lab   credit: 2 Hours. Experiments relating to materials applications in nuclear engineering and energy systems. Examination of topics in room and elevated temperature mechanical properties of structural materials, corrosion, physical properties, radiation damage and effects, and materials selection in design. 2 undergraduate hours. 2 graduate hours. Prerequisite: Credit or concurrent registration in NPRE 431.
CHBE 471   Biochemical Engineering   credit: 3 or 4 Hours. Applications of chemical engineering principles to biological processes. Topics include enzyme mechanisms and kinetics, bioreactor design, cellular growth and metabolism, fermentation, and bioseparations. 3 undergraduate hours. 4 graduate hours. Prerequisite: Junior, senior, or graduate standing, or consent of instructor.
ME 310   Fundamentals of Fluid Dynamics   credit: 4 Hours. Fundamentals of fluid mechanics with coverage of theory and applications of incompressible viscous and inviscid flows, and compressible high speed flows. Credit is not given for both ME 310 and TAM 335. Prerequisite: MATH 285 OR MATH 286 OR MATH 441; credit or concurrent registration in ME 200.
IB 427   Insect Physiology   credit: 4 Hours. The principal physiological and biochemical functions of insects. Lecture and laboratory. Offered in alternate years. 4 undergraduate hours. 4 graduate hours. Prerequisite: IB 202 and IB 401; or consent of instructor.
ECE 314   Probability in Engineering Lab   credit: 1 Hour. Designed to be taken concurrently with ECE 313, Probability in Engineering Systems, to strengthen the students' understanding of the concepts in ECE 313 and their applications, through computer simulation and computation using the Python programming language. Topics include sequential hypothesis testing, parameter estimation, confidence intervals, Bloom filters, min hashing, load balancing, inference for Markov chains, PageRank algorithm, vector Gaussian distribution, contagion in networks, principle component method and linear regression for data analysis, investment portfolio analysis. Prerequisite: Concurrent enrollment in ECE 313 or credit in one of: ECE 313, IE 300, STAT 410.
ECE 340   Semiconductor Electronics   credit: 3 Hours. Modern device electronics: semiconductor fundamentals including crystals and energy bands, charge carriers (electrons and holes), doping, and transport, (drift and diffusion); unipolar devices with the MOS field effect transistor as a logic device and circuit considerations; basic concepts of generation-recombination and the P-N junction as capacitors and current rectifier with applications in photonics; bipolar transistors as amplifiers and switching three-terminal devices. Prerequisite: ECE 210; PHYS 214; credit or concurrent registration in ECE 329.
CS 445   Computational Photography   credit: 3 or 4 Hours. Computer vision techniques to enhance, manipulate, and create media from photo collections, such as panoramic stitching, face morphing, texture synthesis, blending, and 3D reconstruction. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225, MATH 225, and MATH 231.
ECE 469   Power Electronics Laboratory   credit: 2 Hours. Circuits and devices used for switching power converters, solid-state motor drives, and power controllers; dc-dc, ac-dc, and dc-ac converters and applications; high-power transistors and magnetic components; design considerations including heat transfer. 2 undergraduate hours. 2 graduate hours. Prerequisite: ECE 343; credit or concurrent registration in ECE 464.
ANSC 448   Math Modeling in Life Sciences   credit: 3 or 4 Hours. Introduction to deterministic and stochastic mathematical models for the life sciences, statistical methods for fitting and testing models, and computer simulation programs. Applications to populations, processes, and products of animals, plants, and humans. Same as IB 487 and STAT 458. 3 or 4 undergraduate hours. 3 or 4 graduate hours. Students desiring 4 hours credit do additional work in some area of mathematical modeling in the life sciences. Prerequisite: IB 104; a course in calculus, and a course in computer sciences; or consent of instructor.
MATH 487   Advanced Engineering Math   credit: 3 or 4 Hours. Complex linear algebra, inner product spaces, Fourier transforms and analysis of boundary value problems, Sturm-Liouville theory. Same as ECE 493. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: One of MATH 284, MATH 285, MATH 286, MATH 441.
MATH 414   Mathematical Logic   credit: 3 or 4 Hours. Introduction to the formalization of mathematics and the study of axiomatic systems; expressive power of logical formulas; detailed treatment of propositional logical and predicate logic; compactness theorem and Godel completeness theorem, with applications to specific mathematical theories; algorithmic aspects of logical formulas. Proofs are emphasized in this course, which can serve as an introduction to abstract mathematics and rigorous proof; some ability to do mathematical reasoning required. 3 or 4 undergraduate hours. 3 or 4 graduate hours. 4 hours of credit requires approval of the instructor and department with completion of additional work of substance. Prerequisite: MATH 347 or MATH 348 or equivalent experience.This course satisfies the General Education Criteria for:Quantitative Reasoning II
GEOL 436   Petrology and Petrography   credit: 4 Hours. Study of the minerals, compositions, textures, structures, classifications, and origins of igneous and metamorphic rocks; lectures emphasize rock forming processes (petrology), and laboratories emphasize use of the petrographic microscope (petrography). Additional fees may apply. See Class Schedule. 4 undergraduate hours. 4 graduate hours. Prerequisite: GEOL 432.
analyzed upon to arrive at appropriate and meaningful interpretation. Foundations of machine learning are developed and then applied in the context of two specific application areas, such as social network analytics, biological data analysis, and auto and video analytics. Prerequisite: ECE 313.
ME 411   Viscous Flow & Heat Transfer   credit: 4 Hours. Same as AE 412. See AE 412.
ECE 458   Applic of Radio Wave Propag   credit: 3 Hours. Terrestrial atmosphere, radio wave propagation, and applications to radio sensing and radio communication. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 350.
NPRE 435   Radiological Imaging   credit: 3 Hours. Physical, mathematical and experimental foundations of radiological imaging techniques, such as typical sources of ionizing radiation, the interactions of radiation with matter, image formation techniques, linear systems theory applied to radiological imaging, and the techniques for tomographic image reconstruction. Includes diagnostic radiological imaging modalities, such as X-ray computed tomography (CT), single photon computed emission tomography (SPECT), positron emission tomography (PET), as well as modern X-ray imaging techniques, such as phase contrast imaging and diffraction-enhanced X-ray imaging. Provides a solid foundation for understanding of modern radiological imaging techniques, and in-depth discussions on the strengths and limitations of various modalities in application to medical, physical, security and environmental imaging. 3 undergraduate hours. 3 graduate hours. Prerequisite: NPRE 446.
MCB 354   Biochem & Phys Basis of Life   credit: 3 Hours. Introduction to biochemistry and structural biology emphasizing the physical and chemical properties of macromolecules. Credit is not given for both MCB 354 and MCB 450. Prerequisite: CHEM 232 or CHEM 236, and MCB 250 and MCB 252, or consent of instructor.
NPRE 447   Radiation Interact w
CHEM 102   General Chemistry I   credit: 3 Hours. For students who have some prior knowledge of chemistry. Principles governing atomic structure, bonding, states of matter, stoichiometry, and chemical equilibrium. Credit is not given for both CHEM 102 and CHEM 202. CHEM 102 and CHEM 103 are approved for General Education credit only as a sequence. Both courses must be completed to receive Natural Science and Technology credit. Prerequisite: Credit in or exemption from MATH 112; one year of high school chemistry or equivalent. All students enrolled in CHEM 102 should also enroll in CHEM 103. This course satisfies the General Education Criteria for:Nat Sci  Tech - Phys Sciences
U grading. May be repeated. Prerequisite: Consent of instructor. Approved written application to department as specified by department or instructor is required.
CS 476   Program Verification   credit: 3 or 4 Hours. Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225; CS 374 or MATH 414.
ECE 343   Electronic Circuits Laboratory   credit: 1 Hour. Companion laboratory for ECE 342. Credit is not given for both ECE 343 and PHYS 404. Prerequisite: Credit or concurrent registration in ECE 342.
MATH 221   Calculus I   credit: 4 Hours. First course in calculus and analytic geometry for students with some calculus background; basic techniques of differentiation and integration with applications including curve sketching; antidifferentation, the Riemann integral, fundamental theorem, exponential and trigonometric functions. Credit is not given for both MATH 221 and either MATH 220 or MATH 234. Prerequisite: An adequate ALEKS placement score as described at http:
ECE 425   Intro to VLSI System Design   credit: 3 Hours. Complementary Metal-Oxide Semiconductor (CMOS) technology and theory; CMOS circuit and logic design; layout rules and techniques; circuit characterization and performance estimation; CMOS subsystem design; Very-Large-Scale Integrated (VLSI) systems design methods; VLSI Computer Aided Design (CAD) tools; workstation-based custom VLSI chip design using concepts of cell hierarchy; final project involving specification, design, and evaluation of a VLSI chip or VLSI CAD program; written report and oral presentation on the final project. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 385 and ECE 411; or CS 233.
SE 423   Mechatronics   credit: 3 Hours. Mechatronics concepts and practice: computer interfacing of physical devices (sensors, actuators); data acquisition; real time programming and real time control; human-machine interfaces; design principles of mechatronics in manufacturing systems and in consumer systems. 3 undergraduate hours. 3 graduate hours. Prerequisite: SE 320.
ECE 396   Honors Project   credit: 1 to 4 Hours. Special project or reading course for James Scholars in engineering. May be repeated. Prerequisite: Consent of instructor.
ECE 435   Computer Networking Laboratory   credit: 3 or 4 Hours. Design, application, analysis, and evalution of communication network protocols under both Linux and Windows NT operating systems. Emphasis on identifying problems, proposing alternative solutions, implementing prototypes using available network protocols and evaluating results. Multiple programming team projects. Same as CS 436. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 438.
NPRE 421   Plasma and Fusion Science   credit: 3 Hours. Physics of plasmas, including particle and fluid descriptions, waves, collisions, stability, and confinement, with applications to controlled thermonuclear fusion reactors, problems in fusion engineering, and astrophysics. 3 undergraduate hours. 3 graduate hours. Prerequisite: For engineering or physical science majors with junior standing.
Matter I   credit: 3 Hours. Experimental and theoretical foundations of interaction of neutrons, photons, and charged particles with matter. Emphasis on topics that underlie the following applications: radiation detection, biological effects and radiation dosimetry, radiation damage and nuclear materials, neutron activation analysis, and fission and fusion energy systems. Classical theory of charged particle cross sections. Introductory quantum mechanics. Exact and numerical solutions of the Schroedinger equation. Quantum theory of cross sections. Photon interactions with atomic electrons and nuclei. Radioactive-series decay. Computer assignments illustrate fundamental concepts. 3 undergraduate hours. 3 graduate hours. Credit is not given to NPRE majors for graduate hours. Prerequisite: MATH 285 and ME 200.
CS 460   Security Laboratory   credit: 3 or 4 Hours. Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack
ATMS 421   Earth Systems Modeling   credit: 4 Hours. Introduction to systems modeling with applications to the earth and environmental sciences. Basic systems concepts and systems thinking in the contexts of hydrological, climatic, geochemical, and other environmentally relevant systems. Students identify key processes and relationships in systems, represent these elements quantitatively in models, test the models, use them to predict system behavior, and assess the validity of the predictions. No special mathematical or computing background is required. Same as ESE 421, GEOG 421, GEOL 481, and NRES 422. 4 undergraduate hours. 4 graduate hours. Prerequisite: Junior, senior, or graduate standing in a natural science, geography, natural resources and environmental studies, or engineering.
MCB 408   Immunology   credit: 3 Hours. Introduction to fundamentals of immunology with emphasis on biological application; basic background for understanding immunological responses and techniques applicable to biological research. 3 undergraduate hours. 3 graduate hours. Prerequisite: MCB 250, MCB 251, MCB 252, MCB 253, and MCB 354; or consent of instructor.
MATH 231   Calculus II   credit: 3 Hours. Second course in calculus and analytic geometry: techniques of integration, conic sections, polar coordinates, and infinite series. Prerequisite: MATH 220 or MATH 221. This course satisfies the General Education Criteria for:Quantitative Reasoning I
ECE 482   Digital IC Design   credit: 3 Hours. Bipolar and MOS field effect transistor characteristics; VLSI fabrication techniques for MOS and bipolar circuits; calculation of circuit parameters from the process parameters; design of VLSI circuits such as logic, memories, charge-coupled devices, and A
ECE 350   Fields and Waves II   credit: 3 Hours. Continuation of ECE 329: radiation theory; antennas, radiation fields, radiation resistance and gain; transmitting arrays; plane-wave approximation of radiation fields; plane-wave propagation, reflection, and transmission; Doppler effect, evanescent waves and tunneling, dispersion, phase and group velocities; waveguides and resonant cavities; antenna reception and link budgets. Prerequisite: ECE 329.
MCB 430   Molecular Microbiology   credit: 3 Hours. Modern contributions to the science of microbiology; emphasizes the structure, function, and synthesis of informational macromolecules and on the role microorganisms have played in molecular biology. 3 undergraduate hours. 3 graduate hours. Prerequisite: MCB 300 and credit or concurrent registration in MCB 354, or consent of instructor.
AE 403   Spacecraft Attitude Control   credit: 3 or 4 Hours. Theory and applications of spacecraft attitude dynamics and control; Euler angles, direction cosines, quaternions, and Gibbs-Rodrigues parameters; attitude sensors and control actuators; spin, three-axis active, reaction wheel, control moment gyro, and gravity gradient control systems; environmental effects. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: AE 352 and AE 353.
CS 412   Introduction to Data Mining   credit: 3 or 4 Hours. Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.
water transport, membrane bio electricity, action potentials, ion channel physiology, neuromuscular transmission, muscle physiology, and central neurophysiology and plasticity. 3 undergraduate hours. 3 graduate hours. Prerequisite: MCB 252 or consent of instructor.
PHYS 325   Classical Mechanics I   credit: 3 Hours. Kinematics and dynamics of classical systems, including a review of Newtonian kinematics and dynamics. Three dimensional motion, variable mass, and conservation laws; damped and periodically driven oscillations; gravitational potential of extended objects and motion in rotating frames of reference; Lagrangian and Hamiltonian mechanics. Prerequisite: PHYS 225; credit or concurrent registration in MATH 285.
SHS 200   General Phonetics   credit: 3 Hours. Basic principles of phonetic study; includes observation and representation of pronunciation, ear training, and practice in transcription.
MATH 432   Set Theory and Topology   credit: 3 or 4 Hours. Informal set theory, cardinal and ordinal numbers, and the axiom of choice; topology of metric spaces and introduction to general topological spaces. 3 or 4 undergraduate hours. 3 or 4 graduate hours. 4 hours of credit requires approval of the instructor and department with completion of additional work of substance. Prerequisite: MATH 347 or MATH 348 or consent of instructor.
MATH 453   Elementary Theory of Numbers   credit: 3 or 4 Hours. Basic introduction to the theory of numbers. Core topics include divisibility, primes and factorization, congruences, arithmetic functions, quadratic residues and quadratic reciprocity, primitive roots and orders. Additional topics covered at the discretion of the instructor include sums of squares, Diophantine equations, continued fractions, Farey fractions, recurrences, and applications to primality testing and cryptopgraphy. 3 or 4 undergraduate hours. 3 or 4 graduate hours. 4 hours of credit requires approval of the instructor and department with completion of additional work of substance. Prerequisite: MATH 241 or equivalent.This course satisfies the General Education Criteria for:Quantitative Reasoning II
ECE 493   Advanced Engineering Math   credit: 3 or 4 Hours. Same as MATH 487. See MATH 487.
NPRE 446   Radiation Interact w
MATH 427   Honors Abstract Algebra   credit: 3 Hours. Group theory, counting formulae, factorization, modules with applications to Abelian groups and linear operators. As part of the honors sequence, this course will be rigorous and abstract. 3 undergraduate hours. No graduate credit. Approved for honors grading. Credit is not given for both MATH 427 and MATH 417. Prerequisite: Consent of the department is required. Prerequisite courses are either an honors section of MATH 416, or MATH 415 together with an honors section of MATH 347.
CHBE 452   Chemical Kinetics & Catalysis   credit: 3 Hours. Problems in chemical kinetics; techniques for the prediction and measurement of rates of reactions; homogeneous and heterogeneous catalysis chain reactions. 3 undergraduate hours. 3 graduate hours. Prerequisite: CHEM 442 or CHBE 321.
CS 465   User Interface Design   credit: 3 or 4 Hours. A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.
NPRE 412   Nuclear Power Econ & Fuel Mgmt   credit: 3 or 4 Hours. Quantitative analysis of the impact of the nuclear power industry; nuclear fuel cycle and capital costs for thermal and fast reactors; optimization of the use of nuclear fuels to provide the lowest energy costs and highest system performance; comparison between fossil fuel systems, fission systems, and controlled thermonuclear fusion systems. 3 undergraduate hours. 4 graduate hours. Prerequisite: NPRE 402 or NPRE 247. Junior standing is required.
CS 438   Communication Networks   credit: 3 or 4 Hours. Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. Same as ECE 438. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of ECE 313, MATH 461, MATH 463.
ECE 422   Computer Security I   credit: 4 Hours. Same as CS 461. See CS 461.
MCB 426   Bacterial Pathogenesis   credit: 3 Hours. Emphasizes prokaryotes that cause important diseases in humans and other animals; host-parasite bacteriology; and chemistry and genetics of mechanisms of pathogenesis. 3 undergraduate hours. 3 graduate hours. Prerequisite: MCB 300 and MCB 354, or consent of instructor.
IB 472   Plant Molecular Biology   credit: 1 Hour. The basic concepts and methodologies of measuring plant gene expression and gene product activity and constructing transgenic plants are presented and discussed. Same as CPSC 462. 1 undergraduate hour. 1 graduate hour. Prerequisite: MCB 150 and IB 204; or consent of instructor.
NPRE 451   NPRE Laboratory   credit: 3 Hours. Radiation detection and instrumentation; radiation dosimetry and shielding; basic measurements in nuclear engineering; engineering applications; micro computer data acquisition and experimental control. 3 undergraduate hours. 3 graduate hours. Prerequisite: NPRE 446.
NPRE 429   Plasma Engineering   credit: 3 Hours. Basic principles and examples for adapting and applying the plasma state to solve a number of modern engineering problems. Plasma processing of materials for microelectronics and other uses, lighting, plasma displays, and other technologies. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 329 or PHYS 435.
STAT 420   Methods of Applied Statistics   credit: 3 or 4 Hours. Systematic, calculus-based coverage of the more widely used methods of applied statistics, including simple and multiple regression, correlation, analysis of variance and covariance, multiple comparisons, goodness of fit tests, contingency tables, nonparametric procedures, and power of tests; emphasizes when and why various tests are appropriate and how they are used. Same as ASRM 450. 3 undergraduate hours. 4 graduate hours. Prerequisite: STAT 408 or STAT 400; MATH 231 or equivalent; knowledge of basic matrix manipulations; or consent of instructor.
ECE 365   Data Science and Engineering   credit: 3 Hours. Project-based course focused on exploring and understanding how data are collected, represented and stored, and computed
GEOL 411   Structural Geol and Tectonics   credit: 4 Hours. Introduction to principles of rock deformation, stress, and strain; description and interpretation of geologic structures; study of methods for structural analysis; outline of geotectonic processes; three hours of lecture and a three-hour lab per week. Required four-day field trip. Additional fees may apply. See Class Schedule. 4 undergraduate hours. 4 graduate hours. Prerequisite: GEOL 107 or consent of instructor.
MATH 413   Intro to Combinatorics   credit: 3 or 4 Hours. Permutations and combinations, generating functions, recurrence relations, inclusion and exclusion, Polya's theory of counting, and block designs. Same as CS 413. 3 undergraduate hours. 3 or 4 graduate hours. 4 hours of credit requires approval of the instructor and completion of additional work of substance. Prerequisite: MATH 347 or MATH 348 or equivalent experience.
STAT 424   Analysis of Variance   credit: 3 or 4 Hours. Estimation and hypotheses testing in linear models; one-, two-, and higher-way layouts; incomplete layouts; analysis of covariance; and random effects models and mixed models. 3 undergraduate hours. 4 graduate hours. Prerequisite: Credit or concurrent registration in MATH 415 and STAT 410.
ECE 438   Communication Networks   credit: 3 or 4 Hours. Same as CS 438. See CS 438.
IB 464   Herpetology   credit: 4 Hours. Classification, diversity, structure, function, ecology, behavior and evolution of amphibians and reptiles. Laboratory devoted to anatomy and identification. Offered in alternate years. Same as NRES 464. 4 undergraduate hours. 4 graduate hours. Prerequisite: IB 302; or consent of instructor.
IB 426   Env and Evol Physl of Animals   credit: 3 Hours. Physiological adaptations of invertebrate and vertebrate animals to diverse aquatic and terrestrial environments and the extreme habitats embodied therein. 3 undergraduate hours. 3 graduate hours. Prerequisite: MCB 150; IB 202; CHEM 232; or consent of instructor.
defend exercises. Complements CS 461 via hands-on project. Same as ECE 419. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461.
CHBE 473   Biomolecular Engineering   credit: 3 or 4 Hours. Fundamental principles of biomolecular engineering and its applications in pharmaceutical, agriculture, chemical and food industries. Topics include gene discovery, rational design, directed evolution, pathway engineering, and functional genomics and proteomics. 3 undergraduate hours. 4 graduate hours.
BIOE 414   Biomedical Instrumentation   credit: 3 Hours. Engineering aspects of the detection, acquisition, processing, and display of signals from living systems; biomedical sensors for measurements of biopotentials, ions and gases in aqueous solution, force, displacement, blood pressure, blood flow, heart sounds, respiration, and temperature; therapeutic and prosthetic devices; medical imaging instrumentation. Same as ECE 414. 3 undergraduate hours. 3 graduate hours. Prerequisite: BIOE 205, ECE 205 or ECE 210.
CS 410   Text Information Systems   credit: 3 or 4 Hours. Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.
CS 419   Production Computer Graphics   credit: 3 or 4 Hours. Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 418.
ATMS 304   Radiative Transfer-Remote Sens   credit: 3 Hours. Introduction to the laws governing the propagation of electromagnetic radiation in the Earth's atmosphere. Topics include absorption, emission, and scattering of radiation, absorption and scattering properties of atmospheric constituents, the Sun as a source of radiation, the radiative transfer equation, and simple radiative balance models. Emphasis will be placed on the role of radiation in weather and climate, the description of atmospheric optical phenomena, and the application to remote sensing. Prerequisite: MATH 241 and PHYS 212.
AE 451   Aeroelasticity   credit: 3 or 4 Hours. In-depth examination of aerodynamic and dynamic structural phenomena associated with flexible airplanes and missiles; divergence of linear and nonlinear elastic lifting surfaces; effect of elastic and inelastic deformations on lift distributions and stability; elastic flutter of straight and swept wings; equations of disturbed motion of elastic and inelastic aircraft; dynamic response to forces, gusts, and continuous atmospheric turbulence; creep divergence of lifting surfaces; flutter in the presence of creep; effect of temperature on inelastic divergence and flutter. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: AE 352 or TAM 412; TAM 251.
ATMS 425   Air Quality Modeling   credit: 4 Hours. Same as CEE 445. See CEE 445.
MATH 415   Applied Linear Algebra   credit: 3 or 4 Hours. Introductory course emphasizing techniques of linear algebra with applications to engineering; topics include matrix operations, determinants, linear equations, vector spaces, linear transformations, eigenvalues, and eigenvectors, inner products and norms, orthogonality, equilibrium, and linear dynamical systems. 3 or 4 undergraduate hours. 3 or 4 graduate hours. Credit is not given for both MATH 415 and any of MATH 125, MATH 225, ASRM 406, or MATH 416. 4 hours of credit requires approval of the instructor and department with completion of additional work of substance. Prerequisite: MATH 241 or consent of instructor.
IB 487   Math Modeling in Life Sciences   credit: 3 or 4 Hours. Same as ANSC 448 and STAT 458. See ANSC 448.
ASTR 310   Computing in Astronomy   credit: 3 Hours. An introduction to the use of computers in astrophysics research. Topics covered include a basic introduction to computing hardware concepts, Unix shell commands, programming in Python, data structures, astronomical libraries, modern software engineering concepts and tools, plotting and visualization of data, and fundamental numerical algorithms. Applications and examples drawn from astrophysics are stressed throughout. Prerequisite: PHYS 211; MATH 220; Credit or concurrent registration in ASTR 210.
IB 473   Plant Genomics   credit: 1 Hour. Provides broad overview of structural and functional genomics, including genetic and physical mapping, whole genome sequencing, comparative genomic analysis, evolution of gene families and repetitive sequences, genome-wide expression analysis. Emphasis on structural and comparative genomics with brief introduction to functional genomics and bioinformatics. Same as CPSC 467. 1 undergraduate hour. 1 graduate hour. Prerequisite: MCB 250; IB 472; or consent of instructor.
CS 433   Computer System Organization   credit: 3 or 4 Hours. Computer hardware design and analysis and interface with software. Advanced processor design, including superscalar, out-of-order issue, branch prediction, and speculation. Memory hierarchy design, including advanced cache optimizations, main memory, and virtual memory. Principles of multiprocessor design, including shared-memory, cache coherence, synchronization, and consistency. Other advanced topics depending on time; e.g., GPUs and accelerators, warehouse computers and data centers, security. Same as CSE 422. 3 undergraduate hours. 4 graduate hours. Prerequisite: CS 233.
ECE 473   Fund of Engrg Acoustics   credit: 3 or 4 Hours. Development of the basic theoretical concepts of acoustical systems; mechanical vibration, plane and spherical wave phenomena in fluid media, lumped and distributed resonant systems, and absorption phenomena and hearing. Same as TAM 413. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: MATH 285 or MATH 286.
BIOC 446   Physical Biochemistry   credit: 3 Hours. Physical properties of biological macromolecules, with the emphasis on spectroscopic methods, including UV, visible and FTTR spectroscopies, magnetic resonance techniques as well as X-ray diffraction methods. Same as CHEM 472 and MCB 446. 3 undergraduate hours. 3 graduate hours. Prerequisite: It is strongly recommended to take CHEM 440 (section B) prior to this course. MCB 354 or MCB 450 or equivalent background in biochemistry is also recommended.
IE 360   Facilities Planning and Design   credit: 3 Hours. Facility planning, plant layout design, and materials handling analysis; determination of facilities requirements, site selection, materials flow, use of analytical and computerized techniques including simulation, and applications to areas such as manufacturing, warehousing, and office planning. Prerequisite: Credit or concurrent enrollment in IE 310.
MCB 413   Endocrinology   credit: 3 Hours. Physiology and biochemistry of the endocrine system and its hormones with special reference to vertebrates and to human endocrine disorders. 3 undergraduate hours. 3 graduate hours. Prerequisite: MCB 252 or consent of instructor. One semester of biochemistry is recommended.
ECE 485   MEMS Devices & Systems   credit: 3 Hours. Introduction to principles, fabrication techniques, and applications of microelectromechanical systems (MEMS). In-depth analysis of sensors, actuator principles, and integrated microfabrication techniques for MEMS. Comprehensive investigation of state-of-the-art MEMS devices and systems. Same as ME 485. 3 undergraduate hours. 3 graduate hours.
NPRE 201   Energy Systems   credit: 2 or 3 Hours. Patterns of energy production and utilization and technical aspects of renewable energy resources, advanced fossil fuel systems, and advanced nuclear systems. Same as GLBL 201. Prerequisite: MATH 220 or MATH 221; one of PHYS 101, PHYS 211, CHEM 104, CHEM 204, ME 200.
ECE 452   Electromagnetic Fields   credit: 3 Hours. Plane waves at oblique incidence; wave polarization; anisotropic media; radiation; space communications; waveguides. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 350.
CS 463   Computer Security II   credit: 3 or 4 Hours. Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. Same as ECE 424. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 461. Recommended: CS 475.
ECE 457   Microwave Devices & Circuits   credit: 3 Hours. Electromagnetic wave propagation, microwave transmission systems, passive components, microwave tubes, solid state microwave devices, microwave integrated circuits, S-parameter analysis, and microstrip transmission lines. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 340 and ECE 350.
IE 310   Deterministic Models in Optimization   credit: 3 Hours. Linear Optimization - Simplex method, duality, and sensitivity analysis, Transportation and Assignment Problems, Network Optimization Models, Dynamic Programming, Nonlinear optimization, and Discrete optimization. Credit is not given for both IE 310 and CEE 201. Prerequisite: Credit or concurrent registration in MATH 415.
ASTR 210   Introduction to Astrophysics   credit: 3 Hours. Survey of modern astronomy for students with background in physics. Topics include: the solar system; nature and evolution of stars; white dwarfs, neutron stars, and black holes; galaxies, quasars and dark matter; large scale structure of the universe; the Big Bang; and Inflation. Emphasis will be on the physical principles underlying the astronomical phenomena. Prerequisite: PHYS 211.This course satisfies the General Education Criteria for:Nat Sci  Tech - Phys Sciences
GEOL 417   Geol Field Methods, Western US   credit: 6 Hours. Field course based in the mountains of the western United States. Provides intensive practical experience in geologic mapping, as well as instruction in field structural, stratigraphic, geomorphologic, and petrologic analysis. Offered during summer session only. Additional fees may apply. See Class Schedule. 6 undergraduate hours. 6 graduate hours. Prerequisite: Eight hours of 400-level credit in geology, or consent of instructor; GEOL 411, GEOL 432, and GEOL 440 are recommended.
ECE 492   Parallel Progrmg: Sci & Engrg   credit: 3 or 4 Hours. Same as CS 420 and CSE 402. See CS 420.
MSE 280   Engineering Materials   credit: 3 Hours. Materials science and engineering of ceramics, electronic materials, metals and polymers. Bonding; crystallography; imperfections; processing and properties of semiconductors, polymers, metals, ceramics and composites; phase diagrams. Case studies. Credit is not given for both MSE 280 and any of CEE 300, ME 330, MSE 201. Prerequisite: CHEM 102 and PHYS 211.
ECE 466   Optical Communications Lab   credit: 1 Hour. Fiber components and measurements, transmitters and detectors, fiber amplifiers, multimode fiber links, and wavelength division multiplexing. 1 undergraduate hour. 1 graduate hour. Prerequisite: Credit or concurrent registration in ECE 465.
CHBE 451   Transport Phenomena   credit: 3 Hours. Unifying treatment of physical rate processes with particular emphasis on the formulation and solution of typical boundary value problems associated with heat, mass, and momentum transport. 3 undergraduate hours. 3 graduate hours. Prerequisite: CHBE 421; MATH 285.
ECE 110   Introduction to Electronics   credit: 1 to 3 Hours. Introduction to selected fundamental concepts and principles in electrical engineering. Emphasis on measurement, modeling, and analysis of circuits and electronics while introducing numerous applications. Includes sub-discipline topics of electrical and computer engineering, for example, electromagnetics, control, signal processing, microelectronics, communications, and scientific computing basics. Lab work incorporates sensors and motors into an autonomous moving vehicle, designed and constructed to perform tasks jointly determined by the instructors and students.
D and D
ECE 419   Security Laboratory   credit: 3 or 4 Hours. Same as CS 460. See CS 460.
ECE 480   Magnetic Resonance Imaging   credit: 3 or 4 Hours. Fundamental physical, mathematical, and computational principles governing the data acquisition and image reconstruction of magnetic resonance imaging. Same as BIOE 480. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: Recommended: ECE 310.
CS 398   Special Topics   credit: 1 to 4 Hours. Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. May be repeated in the same or separate terms if topics vary.
ASTR 406   Galaxies and the Universe   credit: 3 Hours. Nature of the Milky Way galaxy: stellar statistics and distributions, stellar populations, spiral structure, the nucleus and halo. Nature of ordinary galaxies; galaxies in our Local Group, structure of voids and superclusters. Nature of peculiar objects: Seyfert galaxies, starburst galaxies, and quasars. Elementary aspects of physical cosmology. 3 undergraduate hours. 3 graduate hours. Prerequisite: PHYS 212; or consent of instructor. Recommended: ASTR 210, PHYS 213, PHYS 214.
ECE 304   Photonic Devices   credit: 3 Hours. Introduction to active and passive photonic devices and applications; optical processes in semiconductor and dielectric materials including electrical junctions, light emission and absorption, and waveguide confinement; photonic components such as light emitting diodes, lasers, photodetectors, solar cells, liquid crystals, and optical fiber; optical information distribution networks and display applications. Prerequisite: PHYS 214.
CHBE 221   Principles of CHE   credit: 3 Hours. Lectures and problems on material and energy balances.  Prerequisite: CHEM 104 or CHEM 204; credit or concurrent registration in CS 101.
IE 420   Financial Engineering   credit: 3 or 4 Hours. Introduction to the theory and practice of financial engineering: basics of derivative securities and risk management; Markowitz portfolio theory and capital asset pricing model; interest rate and bonds; forward and futures contracts, hedging using futures contracts; option contracts and arbitrage relationship; binomial model, no-arbitrage pricing, risk-neutral pricing, and American options pricing; Brownian motion, Black-Scholes-Merton model, delta hedging, Greek letters, implied volatility, and volatility smile. 3 undergraduate hours. 4 graduate hours. Prerequisite: IE 300.
PHYS 486   Quantum Physics I   credit: 4 Hours. Atomic phenomena integrated with an introduction to quantum theory; evidence for the atomic nature of matter and the properties of the Schrodinger equation, single particle solutions in one dimension, the hydrogen atom, perturbation theory, external fields, and atomic spectroscopy of outer electrons. 4 undergraduate hours. 4 graduate hours. Prerequisite: MATH 285; PHYS 214; credit or concurrent registration in MATH 415.
PHYS 485   Atomic Phys & Quantum Theory   credit: 3 Hours. Basic concepts of quantum theory which underlie modern theories of the properties of materials; elements of atomic and nuclear theory; kinetic theory and statistical mechanics; quantum theory and simple applications; atomic spectra and atomic structure; molecular structure and chemical binding. 3 undergraduate hours. 3 graduate hours. Credit is not given for both PHYS 485 and CHEM 442. Prerequisite: MATH 285 and PHYS 214.
ECE 210   Analog Signal Processing   credit: 4 Hours. Analog signal processing, with an emphasis on underlying concepts from circuit and system analysis: linear systems; review of elementary circuit analysis; differential equation models of linear circuits and systems; Laplace transform; convolution; stability; phasors; frequency response; Fourier series; Fourier transform; active filters; AM radio. Credit is not given for both ECE 210 and ECE 211. Prerequisite: ECE 110 and PHYS 212; credit or concurrent registration in MATH 285 or MATH 286.
ECE 445   Senior Design Project Lab   credit: 4 Hours. Individual design projects in various areas of electrical and computer engineering; projects are chosen by students with approval of instructor. A professionally kept lab notebook, a written report, prepared to journal publication standards, and an oral presentation required. 4 undergraduate hours. No graduate credit. This course satisfies the General Education Criteria for:Advanced Composition
IE 361   Production Planning & Control   credit: 3 Hours. Scope of production systems and activities involved in their design, establishment, management, operation, and maintenance; mathematical and computer models for planning and control of facilities, human resources, projects, products, material, and information in production systems. Prerequisite: IE 310.
CS 242   Programming Studio   credit: 3 Hours. Intensive programming lab intended to strengthen skills in programming. Prerequisite: CS 241.
MATH 348   Fundamental Mathematics-ACP   credit: 4 Hours. Course is identical to MATH 347 except for the additional writing component. Credit is not given for both MATH 348 and MATH 347. Prerequisite: MATH 231 and completion of the campus Composition I general education requirement.This course satisfies the General Education Criteria for:Advanced CompositionQuantitative Reasoning II
ME 371   Mechanical Design II   credit: 3 Hours. Design and analysis of machinery for load-bearing and power transmission. Consideration of material failure modes, including yielding, fracture, and fatigue. Design and selection of machine elements: threaded fasteners, springs, rolling-element bearings, fluid film lubrication, gears and friction drives. Prerequisite: ME 330 OR CEE 300; ME 370.
BIOE 473   Biomaterials Laboratory   credit: 3 Hours. Same as MSE 472. See MSE 472.
MATH 450   Numerical Analysis   credit: 3 or 4 Hours. Same as CS 450, CSE 401 and ECE 491. See CS 450.
AE 312   Compressible Flow   credit: 3 Hours. Dynamics of compressible fluid; conservation of mass, momentum, and energy; one-dimensional and quasi-one-dimensional flow; oblique shock waves & Parandtl-Meyer expansion fans; unsteady wave motion; linearized theory. Application to nozzles, diffusers, airfoils, shock tubes and other geometries. Prerequisite: AE 202 and MATH 285. Credit or concurrent registration in ME 200.
CHBE 430   Unit Operations Laboratory   credit: 4 Hours. Experiments and computation in fluid mechanics, heat transfer, mass transfer, and chemical reaction engineering. Exercises in effective Chemical and Biomolecular Engineering communications. 4 undergraduate hours. 4 graduate hours. Prerequisite: CHBE 422; credit or concurrent registration in CHBE 424; senior standing in Chemical and Biomolecular Engineering. This course satisfies the General Education Criteria for:Advanced Composition
CHBE 472   Techniques in Biomolecular Eng   credit: 3 or 4 Hours. Engineering principles that underlie many of the powerful tools in biotechnology and how scientific discoveries and engineering approaches are used in current industrial applications. Physical principles that govern self-organization and repair in biological systems; tools developed to characterize, manipulate, and quantify biomolecules; use of analytical tools and genetic manipulation in modern bioengineering and biotechnology applications. 3 undergraduate hours. 4 graduate hours. Prerequisite: CHEM 202, CHEM 203, CHEM 204 or equivalent; MATH 220 or MATH 221; PHYS 211, PHYS 214 or equivalent; MCB 450.
CS 225   Data Structures   credit: 4 Hours. Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. Prerequisite: CS 125 or ECE 220; CS 173 or MATH 213. This course satisfies the General Education Criteria for:Quantitative Reasoning II
IB 485   Environ Toxicology & Health   credit: 3 Hours. Explores toxicological, environmental, public health, occupational and ecological aspects of the use and release of toxic substances in the environment; features case histories of environmental contamination that illustrate ecological, health, and social aspects of pollution; emphasizes biochemical mechanisms and ecosystem consequences. Same as CHLH 461 and ENVS 431. 3 undergraduate hours. 3 graduate hours. Prerequisite: A college chemistry course and a college biology course; or consent of instructor.
ECE 333   Green Electric Energy   credit: 3 Hours. Electric power grid structure and policy; analysis of wind, solar, and fuels as raw resources; wind turbines and parks; solar cells, modules, arrays and systems; fuel cell power plants; energy and financial performance of green energy projects; integration of green energy into power grid; energy project report and presentation. Prerequisite: ECE 205 or ECE 210.
ECE 496   Senior Research Project   credit: 2 Hours. Individual research project under the guidance of a faculty member: for example, mathematical analysis, laboratory experiments, computer simulations, software development, circuit design, or device fabrication. Preparation of a written research proposal, including preliminary results. 2 undergraduate hours. No graduate credit. May be repeated. ECE 496 and ECE 499 taken in sequence fulfill the Advanced Composition Requirement. Prerequisite: RHET 105; consent of instructor. This course satisfies the General Education Criteria for:Advanced Composition
IE 411   Optimization of Large Systems   credit: 3 or 4 Hours. Practical methods of optimization of large-scale linear systems including extreme point algorithms, duality theory, parametric linear programming, generalized upper bounding technique, price-directive and resource-directive decomposition techniques, Lagrangian duality, Karmarkar's algorithm, applications in engineering systems, and use of state-of-the-art computer codes. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: IE 310 and MATH 415.
CS 428   Software Engineering II   credit: 3 or 4 Hours. Continuation of CS 427. Software development, management, and maintenance. Project and configuration management, collaborative development models, software quality assurance, interoperability domain engineering and software reuse, and software re-engineering. Same as CSE 429. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 427.
ECE 411   Computer Organization & Design   credit: 4 Hours. Basic computer organization and design: integer and floating-point computer arithmetic; control unit design; pipelining; system interconnect; memory organization; I
IB 451   Conservation Biology   credit: 4 Hours. Synthesis of conservation biology with an emphasis on the preservation of biological diversity and its evolutionary potential. Laboratory includes an introduction to the use of modern molecular techniques in conservation biology, computer simulation modeling, and field conservation problem solving. Same as CPSC 436 and ENVS 420. 4 undergraduate hours. 4 graduate hours. Offered in alternate years. Prerequisite: IB 203 or consent of instructor.
MCB 250   Molecular Genetics   credit: 3 Hours. Fundamentals of molecular biology including structure of DNA, RNA and proteins, mechanisms of DNA replication, transcription and translation, gene organization, genetic variation and repair, and regulation of gene expression in Bacteria, and Eukarya. Students who enter the University Fall 2011 or later are responsible for additional course-based tuition of $300 unless they are already paying differential tuition during the term of course enrollment. Additional fees may apply. See Class Schedule. Prerequisite: MCB 150, CHEM 102 and CHEM 104, or equivalents or consent of instructor.
CS 411   Database Systems   credit: 3 or 4 Hours. Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 225.
NPRE 402   Nuclear Power Engineering   credit: 3 or 4 Hours. Principles of utilization of fission energy in nuclear power engineering; includes such topics as fission processes and controlled chain reactions; nuclear reactor types, design principles, and operational characteristics; power reactor design criteria; radiation hazards and radioactive waste treatment; economics; other applications such as propulsion and research reactors. 3 undergraduate hours. 4 graduate hours. Credit is not given for both NPRE 402 and NPRE 247.
ME 410   Intermediate Gas Dynamics   credit: 3 or 4 Hours. Solution of internal compressible-flow problems by one-dimensional techniques, both steady and unsteady; flows with smooth and abrupt area change, with friction, with heat addition, and with mass addition; flows with weak and strong waves, multiple confined streams, and shock waves. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: ME 200; ME 310, TAM 335 or AE 311.
CEE 491   Decision and Risk Analysis   credit: 3 or 4 Hours. Development of modern statistical decision theory and risk analysis, and application of these concepts in civil engineering design and decision making; Bayesian statistical decision theory, decision tree, utility concepts, and multi-objective decision problems; modeling and analysis of uncertainties, practical risk evaluation, and formulation of risk-based design criteria, risk benefit trade-offs, and optimal decisions. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CEE 202.
ECE 439   Wireless Networks   credit: 3 or 4 Hours. Overview of wireless network architectures including cellular networks, local area networks, multi-hop wireless networks such as ad hoc networks, mesh networks, and sensor networks; capacity of wireless networks; medium access control, routing protocols, and transport protocols for wireless networks; mechanisms to improve performance and security in wireless networks; energy-efficient protocols for sensor networks. Same as CS 439. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391; one of MATH 461, MATH 463, ECE 313.
IB 204   Genetics   credit: 3 or 4 Hours. The fundamentals of inheritance, with an emphasis on eukaryotes. Major topics include transmission genetics, quantitative genetics, cytogenetics, genomics, genetics of development and behavior, and population genetics. Laboratory emphasizes an experimental, inquiry-based approach to modern and classical genetics. Lecture only, 3 hours; with laboratory, 4 hours. Students must complete the laboratory portion of the course to receive 4 hours of credit. Prerequisite: IB 150 and MCB 150.
ECE 443   LEDs and Solar Cells   credit: 4 Hours. This course explores the energy conversion devices from fundamentals to system-levels including electronic structure of semiconductors; quantum physics; compound semiconductors; semiconductor heterostructures and low dimensional quantum structures; energy transfer between photons and electron-hole pairs; photon emission and capture processes; radiative and non-radiative processes; light extraction and trapping; emission and absorption engineering; electrical and optical modelling via numerical and TCAD simulation tools; hands-on characterization of modern light emitting diodes and solar cells. 4 undergraduate hours. 4 graduate hours. Prerequisite: ECE 340.
ECE 490   Introduction to Optimization   credit: 3 or 4 Hours. Basic theory and methods for the solution of optimization problems; iterative techniques for unconstrained minimization; linear and nonlinear programming with engineering applications. Same as CSE 441. 3 undergraduate hours. 4 graduate hours. Prerequisite: ECE 220 and MATH 415.
ASTR 450   Astrochemistry   credit: 4 Hours. Same as CHEM 450. See CHEM 450.
MATH 347   Fundamental Mathematics   credit: 3 Hours. Fundamental ideas used in many areas of mathematics. Topics will include: techniques of proof, mathematical induction, binomial coefficients, rational and irrational numbers, the least upper bound axiom for real numbers, and a rigorous treatment of convergence of sequences and series. This will be supplemented by the instructor from topics available in the various texts. Students will regularly write proofs emphasizing precise reasoning and clear exposition. Credit is not given for both MATH 347 and MATH 348. Prerequisite: MATH 231.This course satisfies the General Education Criteria for:Quantitative Reasoning II
ME 461   Computer Cntrl of Mech Systems   credit: 3 or 4 Hours. Microcomputer control of thermal and mechanical systems: sensors and transducers, signal transmission and conversion, and regulator actuation. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: ME 360 or ABE 425.
BIOC 406   Gene Expression & Regulation   credit: 3 Hours. Same as MCB 406. See MCB 406.
AE 420   Finite Element Analysis   credit: 3 or 4 Hours. Same as CSE 451 and ME 471. See ME 471.
ECE 437   Sensors and Instrumentation   credit: 3 Hours. Hands-on exposure to fundamental technology and practical application of sensors. Capacitive, inductive, optical, electromagnetic, and other sensing methods are examined. Instrumentation techniques incorporating computer control, sampling, and data collection and analysis are reviewed in the context of real-world scenarios. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 329.
CS 431   Embedded Systems   credit: 3 or 4 Hours. A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I
CHBE 431   Process Design   credit: 4 Hours. Capstone design course where students apply principles from previous courses to the design of complete chemical process systems. Topics include: techniques used in the synthesis and analysis of chemical processes, process simulation and optimization, effective communication in a chemical process engineering environment. 4 undergraduate hours. 4 graduate hours. Prerequisite: CHBE 422; credit or concurrent registration in CHBE 424. This course satisfies the General Education Criteria for:Advanced Composition
IB 481   Vector-borne Diseases   credit: 4 Hours. Study of the major groups of arthropods and associated pathogens that affect the health and well-being of humans and other animals. Training will include ecology, evolutionary biology, and epidemiology of vector-borne diseases; taxonomy and identification of vector arthropods; practical skills in molecular and mathematical biology, spatial analysis and field research. Lecture will make use of technology-enhanced classroom for group-based active learning exercises to address critical challenges in vector-borne disease control. 4 undergraduate hours. 4 graduate hours. Offered in alternate years. Prerequisite: IB 361 or IB 401 or consent of instructor.
PHYS 225   Relativity & Math Applications   credit: 2 Hours. Theory of Special Relativity, with applications to kinematics and dynamics. Key mathematical methods as they apply to aspects of electromagnetic theory and classical mechanics, including vector analysis, series expansions, matrices, Fourier analysis, partial differentiation, three-dimensional calculus, and simple differential equations. Prerequisite: Credit or concurrent registration in PHYS 212.
IE 330   Industrial Quality Control   credit: 3 Hours. Contemporary concepts and methods for quality and productivity design and improvement; philosophies of Deming, Taguchi, and others leading the quality management and engineering movement; Shewhart's methods for statistical process control; process capability analysis; statistical methods for tolerance assessment; process control methods employing attribute data; design of experiments, concepts, and methods. Prerequisite: IE 300.
ECE 417   Multimedia Signal Processing   credit: 4 Hours. Characteristics of speech and image signals; important analysis and synthesis tools for multimedia signal processing including subspace methods, Bayesian networks, hidden Markov models, and factor graphs; applications to biometrics (person identification), human-computer interaction (face and gesture recognition and synthesis), and audio-visual databases (indexing and retrieval). Emphasis on a set of MATLAB machine problems providing hands-on experience. 4 undergraduate hours. 4 graduate hours. Prerequisite: ECE 310 and ECE 313.
AE 311   Incompressible Flow   credit: 3 Hours. Equations of motion for incompressible flow, both inviscid and viscous; potential flow theory, inviscid airfoil theory: two- and three-dimensional, Navier-Stokes equations, laminar boundary layer and transition to turbulence. Prerequisite: Credit or concurrent registration in AE 202 and MATH 241.
O and function calling convention. C programming, covering basic programming concepts, functions, arrays, pointers, I
MCB 435   Evolution of Infectious Disease   credit: 3 Hours. Understanding the evolution and ecology of the microbial world is of great importance to human health and the health of our planet. Students will explore the ecology and evolution principles that apply to viruses, microbial eukaryotes, archaea and bacteria. The primary literature on historical and emerging infectious diseases will be used to illustrate critical applications of these basic principles. Examples include applying genomics tools to understand the evolutionary basis for antibiotic resistance, the spread of emerging pathogens, and the ecology of probiotics and the human microbiome. The objective of this class is to better understand how humans shape the diversity and dynamics of the microbial world living in and around us every day. Same as IB 442. 3 undergraduate hours. 3 graduate hours. Prerequisite: MCB 300 or consent of instructor.
TAM 211   Statics   credit: 3 Hours. Forces, moments, and couples; resultants of force systems; equilibrium analysis and free-body diagrams; analysis of forces acting on members of trusses, frames, etc.; shear-force and bending-moment distributions; Coulomb friction; centroids, center of mass, moment of inertia, polar moment of inertia, and product of inertia; virtual work; hydrostatic pressure; applications of statics in design. Credit is not given for both TAM 211 and TAM 210. Prerequisite: PHYS 211; credit or concurrent registration in MATH 241.
MCB 316   Genetics and Disease   credit: 4 Hours. Introduction of the structure, expression, and regulation of genes of higher eukaryotes with an emphasis upon animal cells. Specific topics will include chromatin structure and its relation to gene expression, regulation of gene expression during development, recombination, molecular genetic technologies, gene replacement therapy, and the molecular genetics of cancers. Credit is not given for both MCB 316 and MCB 317. Prerequisite: MCB 150 and credit or concurrent registration in MCB 250 or consent of instructor.
CS 429   Software Engineering II, ACP   credit: 3 Hours. Continuation of CS 427. Identical to CS 428 except for the additional writing component. See CS 428. 3 undergraduate hours. 3 graduate hours. Prerequisite: CS 427.This course satisfies the General Education Criteria for:Advanced Composition
CS 423   Operating Systems Design   credit: 3 or 4 Hours. Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. Same as CSE 423. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CS 241 or ECE 391.
AE 428   Mechanics of Composites   credit: 3 Hours. Same as MSE 456 and TAM 428. See MSE 456.
ECE 463   Digital Communications Lab   credit: 2 Hours. Hands-on experience in the configuration and performance evaluation of digital communication systems employing both radio and optical signals. 2 undergraduate hours. 2 graduate hours. Prerequisite: ECE 361 or ECE 459.
ECE 495   Photonic Device Laboratory   credit: 3 Hours. Active photonic devices and lightwave technology. Hands-on experience with several classes of lasers (HeNe laser, semiconductor edge emitting lasers, vertical cavity surface emitting lasers), photodetectors, and photonic systems. Familiarization with experimental optical characterization techniques and equipment. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 487 recommended.
NPRE 444   Nuclear Analytical Methods Lab   credit: 2 or 3 Hours. Experiments relating to nuclear analytical methods and techniques. Emphasis on neutron activation analysis, energy dispersive x-ray fluorescence and particle spectroscopy. Use of radiation for medical and materials imaging. 2 or 3 undergraduate hours.  2 or 3 graduate hours. Credit of 2 hours is given if NPRE 451 or equivalent has been taken. Prerequisite: CHEM 102 and NPRE 446.
ECE 489   Robot Dynamics and Control   credit: 4 Hours. Same as ME 446 and SE 422. See SE 422.
MATH 446   Applied Complex Variables   credit: 3 or 4 Hours. For students who desire a working knowledge of complex variables; covers the standard topics and gives an introduction to integration by residues, the argument principle, conformal maps, and potential fields. Students desiring a systematic development of the foundations of the subject should take MATH 448. 3 or 4 undergraduate hours. 3 or 4 graduate hours.  Credit is not given for both MATH 446 and MATH 448. 4 hours of credit requires approval of the instructor and department with completion of additional work of substance. Prerequisite: MATH 241.
IB 471   General Mycology   credit: 4 Hours. Structure, classification, and identification of fungi, including those of economic importance. Offered in alternate years. 4 undergraduate hours. 4 graduate hours. Prerequisite: IB 150 and MCB 150; IB 302 recommended; or consent of instructor.
SE 420   Digital Control Systems   credit: 4 Hours. Theory and techniques for control of dynamic processes by digital computer; linear discrete systems, digital filters, sampling signal reconstruction, digital design, state space methods, computers, state estimators, and laboratory techniques. 4 undergraduate hours. 4 graduate hours. Prerequisite: SE 320.
MATH 412   Graph Theory   credit: 3 or 4 Hours. Examines basic concepts and applications of graph theory, where graph refers to a set of vertices and edges that join some pairs of vertices; topics include subgraphs, connectivity, trees, cycles, vertex and edge coloring, planar graphs and their colorings. Draws applications from computer science, operations research, chemistry, the social sciences, and other branches of mathematics, but emphasis is placed on theoretical aspects of graphs. 3 or 4 undergraduate hours. 3 or 4 graduate hours. 4 hours of credit requires approval of the instructor and department with completion of additional work of substance. Prerequisite: MATH 347 or MATH 348 or equivalent experience or CS 374.
ME 485   MEMS Devices & Systems   credit: 3 Hours. Same as ECE 485. See ECE 485.
ME 430   Failure of Engrg Materials   credit: 3 or 4 Hours. Material anisotropy and elasto-plastic properties at the crystal level; microstructural basis for fatigue, fracture, and creep in metals, polymers, and ceramics; failure mechanisms and toughening in composites; structure and behavior of metal-matrix composites, ceramic-matrix composites, and polymer composites. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: ME 330 OR TAM 324.
CHBE 421   Momentum and Heat Transfer   credit: 4 Hours. Introduction to fluid statics and dynamics; dimensional analysis; design of flow systems; introduction to heat transfer; conduction, convection, and radiation. 4 undergraduate hours. 4 graduate hours. Credit is not given for both CHBE 421 AND ABE 341. Prerequisite: CHBE 221.
ECE 498   Special Topics in ECE   credit: 0 to 4 Hours. Subject offerings of new and developing areas of knowledge in electrical and computer engineering intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. 0 to 4 undergraduate hours. 0 to 4 graduate hours. May be repeated in the same or separate terms if topics vary.
ECE 441   Physcs & Modeling Semicond Dev   credit: 3 Hours. Advanced concepts including generation-recombination, hot electron effects, and breakdown mechanisms; essential features of small ac characteristics, switching and transient behavior of p-n junctions, and bipolar and MOS transistors; fundamental issues for device modeling; perspective and limitations of Si-devices. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 340.
STAT 428   Statistical Computing   credit: 3 or 4 Hours. Examines statistical packages, numerical analysis for linear and nonlinear models, graphics, and random number generation and Monte Carlo methods. Same as CSE 428. 3 undergraduate hours. 4 graduate hours. Prerequisite: STAT 410 or equivalent; knowledge of a programming language.
IB 443   Evolutionary Ecology   credit: 3 Hours. Emphasizes the evolution of life-history strategies in plants and animals (reproductive rates, life cycles, sex ratios, breeding and mating systems) and the coevolution of animals and plants (pollination, dispersal, and herbivory). 3 undergraduate hours. 3 graduate hours. Offered in alternate years. Prerequisite: IB 203 or equivalent; IB 302; or consent of instructor.
ECE 478   Formal Software Devel Methods   credit: 3 or 4 Hours. Same as CS 477. See CS 477.
synthesis of musical sounds; algorithms for dynamic sound synthesis. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 310.
ATMS 302   Atmospheric Dynamics I   credit: 3 Hours. Introduction to fundamental dynamical processes in the atmosphere through a descriptive and quantitative analysis of dynamical meteorology at the synoptic and global scale. Covers basic laws of fluid mechanics as applied to the atmospheric sciences, vorticity and circulation in 2-D and 3-D flows, boundary layer dynamics and friction, basic concepts of geophysical waves, and baroclinic instability. These topics will be covered both descriptively and mathematically with emphasis on computer representation of the fundamental processes governing atmospheric motion and application of theory to real-world examples. Same as PHYS 329. Prerequisite: ATMS 201, MATH 241 and PHYS 211.
MATH 403   Euclidean Geometry   credit: 3 or 4 Hours. Selected topics from geometry, including the nine-point circle, theorems of Cera and Menelaus, regular figures, isometries in the plane, ordered and affine geometries, and the inversive plane. 3 or 4 undergraduate hours. 3 or 4 graduate hours. 4 hours of credit requires approval of the instructor and department with completion of additional work of substance. Prerequisite: MATH 241; MATH 347 or 348, or equivalent; or consent of instructor.
ME 340   Dynamics of Mechanical Systems   credit: 3.5 Hours. Dynamic modeling of mechanical components and systems; time-domain and frequency-domain analyses of linear time-invariant systems; multi-degree-of-freedom systems; linearization of nonlinear systems. Credit is not given for both ME 340 and either GE 320 or AE 353. Prerequisite: MATH 285 OR MATH 286 OR MATH 441; TAM 212; credit or concurrent registration in ECE 205 and MATH 415.
ECE 462   Logic Synthesis   credit: 3 Hours. Unate function theory, unate recursive paradigm, synthesis of two-level logic, synthesis of incompletely specified combinational logic, multi-level logic synthesis, binary decision diagrams, finite state machine synthesis, automatic test pattern generation and design for test, equivalence checking and reachability analysis of finite machines, and technology mapping. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 220 or CS 233.
AE 433   Aerospace Propulsion   credit: 3 or 4 Hours. Fundamentals of rocket and airbreathing jet propulsion devices electric propulsion; prediction of thrust, combustion reactions, specific fuel consumption, and operating performance; ramjets; turbojets; turbofans; turboprops; aerothermodynamics of inlets, combustors, and nozzles; compressors, turbines; component matching, fundamentals of electrothermal, electromagnetic elastostatis thrusters, and solar sails. 3 undergraduate hours. 4 graduate hours. Prerequisite: AE 312 and PHYS 212.
PHYS 214   Univ Physics: Quantum Physics   credit: 2 Hours. Interference and diffraction, photons and matter waves, the Bohr atom, uncertainty principle, and wave mechanics. A calculus-based course for majors in engineering, mathematics, physics, and chemistry. Credit is not given for both PHYS 214 and PHYS 102. Prerequisite: PHYS 212. This course satisfies the General Education Criteria for:Nat Sci  Tech - Phys SciencesQuantitative Reasoning II
GEOL 452   Introduction to Geophysics   credit: 4 Hours. Provides a broad overview of basic concepts and fundamental knowledge of the physics of the Earth. Topics include seismology, gravity, geomagnetism, Earth's thermal state, and geodynamics. Intended for undergraduates in the geophysics concentration and other students who want a more quantitative treatment of the subject than GEOL 450. 4 undergraduate hours. 4 graduate hours. Credit is not given for both GEOL 452 and GEOL 450. Prerequisite: MATH 241 and PHYS 211; or consent of instructor.
ME 472   Introduction to Tribology   credit: 3 or 4 Hours. Friction, wear, and lubrication; engineering surfaces; surface properties and surface topography; Hertzian contacts and contact of rough surfaces; friction of surfaces in contact; wear and surface failures; boundary lubrication; fluid properties; hydrodynamic lubrication; elastohydrodynamic lubrication; bearing selection; introductory micro- and nanotribology. 3 undergraduate hours. 3 or 4 graduate hours.
ECE 403   Audio Engineering   credit: 3 Hours. Resonance and wave phenomena; Acoustics of rooms and transmission lines (e.g., horns); How loudspeakers work: A lab component has been added to measure and model real loudspeakers and enclosures; Topics in digital audio, including AD and DA (Sigma-Delta) audio converters. 3 undergraduate hours. 3 graduate hours. Prerequisite: ECE 210 and ECE 310.
CS 357   Numerical Methods I   credit: 3 Hours. Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. Same as MATH 357. Credit is not given for CS 357 if credit for CS 450 has been earned. (Counts for advanced hours in LAS). Prerequisite: One of CS 101, CS 105 or CS 125; MATH 241; one of MATH 225, MATH 415, MATH 416 or ASRM 406.
NPRE 247   Modeling Nuclear Energy System   credit: 3 Hours. Applications of elementary nuclear physics in nuclear engineering. Nuclear reactor materials and components. Steady-state and transient operation of nuclear reactors. Nuclear energy removal and conversion. Radiation shielding. Prerequisite: PHYS 212; credit or concurrent registration in MATH 285.
MATH 425   Honors Advanced Analysis   credit: 3 Hours. A theoretical treatment of differential and integral calculus in higher dimensions. Topics include inverse and implicit function theorems, submanifolds, the theorems of Green, Gauss and Stokes, differential forms, and applications. As part of the honors sequence, this course will be rigorous and abstract. 3 undergraduate hours. No graduate credit. Approved for honors grading. Prerequisite: MATH 424 and either MATH 415 or MATH 416, and consent of the department.
PHYS 487   Quantum Physics II   credit: 4 Hours. Continuation of PHYS 486. Identical particles, spectral hyperfine structure, magnetic properties of matter, atomic spectroscopy of inner electrons, high-energy photon effects, molecular binding and spectra, emission and absorption of light, and symmetry principles. 4 undergraduate hours. 4 graduate hours. Prerequisite: PHYS 486.
BIOE 467   Biophotonics   credit: 3 Hours. Same as ECE 467. See ECE 467.
CEE 410   Railway Signaling & Control   credit: 3 or 4 Hours. Railway traffic control and signaling systems; train performance and scheduling tools; analysis of temporal and spatial separation of trains for safety and efficiency; train movement authority and operating rules, track circuit and wireless train position monitoring technology; interlocking design; railroad capacity modeling tools; economic analysis of traffic control system design, optimization, and selection. Field trip to observe signal system infrastructure and railway traffic operations control center. 3 undergraduate hours. 3 or 4 graduate hours. Prerequisite: CEE 310.
Introduction to Contemporary Operating Systems and Hardware I Students study the basics of computer architecture and learn to use a contemporary operating system. Hardware requirements, hardware components, software compatibility, and system installation topics are covered along with post-installation, storage, security and system diagnosis, and repair. Topics also include discussion of current and future technology industry trends.
Introduction to Software Development A broad introduction to object-oriented programming and the related knowledge necessary to program in a contemporary programming language. This would include coverage of an Application Development Kit, a standard integrated Development environment, and the use of GUI components.
Calculus I Analytic geometry. Functions and their graphs. Limits and continuity. Derivatives of algebraic and trigonometric functions. Applications of the derivative. Introduction to integrals and their applications.
Calculus II Transcendental functions and their calculus. Integration techniques. Applications of the integral. Indeterminate forms and improper integrals. Polar coordinates. Numerical series and power series expansions.
Introduction to Information Technology as a Profession Introduces students to the profession of information technology, beginning with concepts of systems, systems theory and modeling, information systems, and system integration. Examines the steps necessary to analyze a business problem and identify and define the computing and information requirements appropriate to its solution, with a focus on how to design, implement, and evaluate a technology-based system to meet desired needs. Students learn to analyze the local and global impact of computing on individuals, organizations, and society. Leads students to recognize of the need for continuing professional development, and imparts an understanding of professional, ethical, legal, security and social issues and responsibilities in information technology.
Human-Computer Interaction and Web Design Students in this course will learn the importance of human-computer interaction design and the effectiveness of user-centered design. The course will cover a survey of methods frequently used by the HCI profession, such as usability testing and prototyping, as well as general design principles and how to use design guidelines. A particular emphasis will be placed on usability for Web site engineering, and students will apply knowledge from the field in the design and construction of user-centered Web sites.
Introduction to Open Source Application Development Introduces basic concepts of systems programming using a modern open source language. Students learn to apply basic programming concepts toward solving problems, writing pseudocode, working with and effectively using basic data types, abstract data types, control structures, code modularization and arrays. They will learn to detect errors, work with variables and loops, and discover how functions, methods, and operators work with different data types. Students will be introduced to the object paradigm including classes, inheritance , and polymorphism.
Intermediate Software Development This course covers a broad spectrum of object-oriented programming concepts and application programming interfaces. The student considers the details of object-orientated development in topics of multi-threading, data structure collections, stream I/O and client interfaces. Software engineering topics of packaging and deployment are covered as well.
Fundamentals of Web Development This course will cover the creation of Web pages and sites using HTML, CSS, Javascript, jQuery, and graphical applications as well as the client and server architecture of the Internet and related web technologies. The creation and deployment of modern, standards-compliant web pages are addressed. Students create and deploy a Web site with multiple pages and cross-linked structures.
Multivariate and Vector Calculus Analytic geometry in three-dimensional space. Partial derivatives. Multiple integrals. Vector analysis. Applications.
Cyber Security Management In-depth examination of topics in the management of information technology security including access control systems and methodology, business continuity and disaster recovery planning, legal issues in information system security, ethics, computer operations security, physical security and security architecture & models using current standards and models.
Introduction to Discrete Math Sets, statements, and elementary symbolic logic; relations and digraphs; functions and sequences; mathematical induction; basic counting techniques and recurrence.
Project Management for Information Technology and Management Basic principles of project management are taught with a particular focus on project planning for information technology hardware, software and networking project implementation. Management of application development and major Web development projects will also be addressed.
Cyber Forensics This course will address methods to properly conduct a computer and/or network forensics investigation including digital evidence collection and evaluation and legal issues involved in network forensics. Technical issues in acquiring court admissible chains-of-evidence using various forensic tools that reconstruct criminally liable actions at the physical and logical levels are also addressed. Technical topics covered include detailed analysis of hard disks, files systems (including FAT, NTFS, and EXT) and removable storage media; mechanisms for hiding and detecting hidden information; and the hands-on use of powerful forensic analysis tools. /Coding Security This course examines security architecture elements within modern object oriented programming languages that create the framework for secure programming. Analysis of components and services with their inherent strength and weaknesses give rise to common coding security challenges. An exploration of identity management, encryption services and common hacking techniques will enable the student’s ability to develop secure code. Homework assignments and projects will reinforce theories taught.
Vulnerability Analysis and Control This course addresses hands-on ethical hacking, penetration testing, and detection of malicious probes and their prevention. It provides students with in-depth theoretical and practical knowledge of the vulnerabilities of networks of computers including the networks themselves, operating systems, and important applications. Integrated with the lectures are laboratories focusing on the use of open source and freeware tools; students will learn in a closed environment to probe, penetrate, and hack other networks.
Cyber Security Technologies Prepares students for a role as a network security analyst and administrator. Topics include viruses, worms, and other attack mechanisms, vulnerabilities, and countermeasures; network security protocols, encryption, identity and authentication, scanning, firewalls, security tools, and organizations addressing security.
Operating System Security This course will address theoretical concepts of operating system security, security architectures of current operating systems, and details of security implementation using best practices to configure operating systems to industry security standards. Server configuration, system-level firewalls, file system security, logging, anti-virus and anti-spyware measures and other operating system security strategies will be examined.
Probability and Statistics Elementary probability theory including discrete and continuous distributions, sampling, estimation, confidence intervals, hypothesis testing, and linear regression.
Legal and Ethical Issues in Information Technology Current legal issues in information technology are addressed including elements of contracting, payment systems and digital signatures, privacy concerns, intellectual property, business torts, and criminal liability including hacking, computer trespass and fraud. Examination of ethical issues including privacy, system abuse, and ethical practices in information technology equip students to make sound ethical choices and resolve legal and moral issues that arise in information technology.
System Integration In this capstone course, students will identify, gather, analyze, and write requirements based on user needs and will then design, construct, integrate, and implement an information system as a solution to a business problem. Students will document integration requirements using business process models and will learn and apply key systems integration architecture, methodologies, and technologies using industry best practices. User needs and user centered design will be applied in the selection, creation, evaluation, and administration of the resulting system. The system design process will take into account professional, ethical, legal, security, and social issues and responsibilities and stress the local and global impact of computing on individuals, organizations, and society. Discussion will also cover the need to engage in continuing professional development.
Digital Evidence In this course, students learn the fundamental principles and concepts in the conduct of investigations in the digital realm. Students will learn the process and methods of obtaining, preserving and presenting digital information for use as evidence in civil, criminal, or administrative cases. Topics include legal concepts and terminology, ethics, computer crime, investigative procedures, chain of custody, digital evidence controls, processing crime and incident scenes, data acquisition, e-mail Investigations, applicable case law, and appearance as an expert witness in a judicial or administrative proceeding.
Coding Security This course examines security architecture elements within modern object oriented programming languages that create the framework for secure programming. Analysis of components and services with their inherent strength and weaknesses give rise to common coding security challenges. An exploration of identity management, encryption services and common hacking techniques will enable the student’s ability to develop secure code.
Database Security Students will engage in an in-depth examination of topics in data security including security considerations in applications and systems development, encryption methods, cryptography law and security architecture and models.
Introduction to Psychological Science Psychologists use the scientific method to understand the behavior and mental processes of individuals. Their investigations into understanding the behavior of individuals span multiple areas including perception, learning, cognition, language, development, motivation, personality, psychological disorders, social, health, and industrial/organization. In addition to the variety of fields, psychology examines behavior at multiple levels such as biological, behavioral, and cultural.
Age of Darwin An introduction to the humanities through an investigation of important changes in our culture associated with Darwin's theory of evolution.
Introduction to Energy, Waves, Materials, and Forces This course will address the basic physical principles and concepts associated with energy, power, heat, light, sound, circuits, materials, fluids, and forces. Although quantitative at times, the course will stress conceptual understanding and practical applications.
Engineering Graphics for Non-Engineers Designed for students in business, liberal arts and non-technical programs. Basic drafting techniques and applications, lettering, geometric constructions, charts and graphs, technical sketching, multiview projection, pictorial drawings, dimensioning, blueprint reading and working drawings. Introduction to computer graphics. Credit for this course is not applicable to an engineering degree.
Professional Skills Didactic and applied approach to professional skill development in the areas of oral communication, conflict management and interpersonal dimensions of the work setting.
Fundamentals of Information Technology  This course is an introduction to the field of Information Technology including technology concepts, terminology, hardware components and software applications. Students will be introduced to and asked to apply basic skills in the core areas of information technology such as programming, database management, networking, systems administration, and web development and the basic research, problem solving and decision making skills required to be successful in this field.
Computer Networking  The Computer Networking course explains, in a theoretical and practical framework, how communication occurs across a network. Students study such topics as computer/network hardware, network media, topologies, protocols, security, network architectures, IP addressing, and the Transmission Control Protocol/Internet Protocol (TCP/IP) model.
Computer Programming I The course introduces students to procedural computer programming and problem solving. Students will learn about the basic elements of a computer program such as programming logic, data types, basic control structures, and program debugging.
English Composition This course emphasizes critical reading, writing, and textual analysis with particular focus on argument and research-based writing.
Pre-Calculus Study of functions, equations and systems of equations, sequences and series, trigonometry, and vectors, and assumes prior exposure to these topics.
Intermediate Composition This course emphasizes critical reading and writing, advanced research and argument skills, and rhetorical understanding of language as it is used in different discourse communities.
Professional Development for BSIT This course is designed to introduce CECH students to the cooperative education (co-op) learning model and how it is executed through the Professional Practice Program. It will prepare students to maximize learning through and develop the strategies and necessary skills for effective participation in the Professional Practice Program.
System Administration This course will provide the knowledge and hands-on skills necessary to manage a Local Area Network and its resources. Topics covered include directory services, server management, file and print services, and user/client administration in a heterogeneous operating system environment.
Fundamentals of Web Development  The course covers modern Web standards, well-formed and valid documents, Semantic HTML5, User-Centered Responsive design of static Web sites, Styling and layout of Web documents with CSS3, and common software tools for Web Site development. Emphasis is on coding syntactically correct Web documents using an engineering design perspective focused on functionality and basic visual design principles. Additionally, the course covers a variety of basic XML technologies for data representation and transformation.
Database Management I  This is an introductory course to the technology used for database development. Topics include the key database concepts, writing queries to retrieve, insert, update, and delete data from databases, and additional database features. Enterprise database management system will be used.
Introduction to Interpersonal Communication Introduction to theory and practice in interpersonal communication. Topics include verbal and nonverbal communication, perception, listening, emotions, relationship development, conflict and power. Focus is on the development of an understanding of fundamental interpersonal dynamics and basic skills.
Fundamentals of Digital Media This course provides an introduction and overview of software tools and techniques for creating digital media including text, images, sound, video, and interactive media. The focus is on using multimedia to communicate technical information effectively to technical and non-technical audiences.
Implications of Information Technology This course focuses on the impact brought upon our society by computers and its related technologies.Issues related to privacy, ethics, law, encryption, copyright, computer crimes, professional ethics and responsibilities will be critically examined.
Applied Statistics for Human Services I An introduction to statistics for students in human services and other related fields of study. Topics include sampling techniques, graphical and numeric descriptive statistics, basic quality improvement tools and an introduction to probability. Human services applications are emphasized. Coverage of topics supplemented by use of laboratory exercises that include hands-on activities and data analysis using computer software.
Human Computer Interaction Concerned with the design of interfaces that facilitate the use of computers and other personal electronic devices such as handheld devices.
System Analysis & Design  A broad study of systems development life-cycle, from the initial stages of systems requirement analysis to the implementation of the system. Different techniques and methodologies in different development stages will be studied.
Management in Information Technology This course covers general management techniques and specific tools for Project Management (PM) within information technology (IT) disciplines. The course focuses on the application of project management techniques in industry via cases study analysis and journal readings in addition to the course text. Emphasis is placed on managing IT personalities, the triple constraint conundrum, PM documentation, and PM software tools.
Senior Design Project Management I This course focuses on the knowledge and skills required to select a project and a product prototype. The purpose of this phase is to analyze the problem domain, design the solution and implement core functionalities in a prototype that demonstrates and proofs the design concept.
Senior Design Project Management II Senior Design Project Management II
Applied Statistics for Human Services I Applied Statistics for Human Services I
Introduction to Discrete Mathematics Introduction to Discrete Mathematics
COOP for CECH (First Semester Experience) An individualized, progressive course of study utilizing cooperative education to facilitate and focus the process of integrating theory and practice through faculty-guided, discipline-related learning experiences. In addition the course develops and applies students' observation, reflection, and evaluation skills related to specific learning objectives.
COOP for CECH (Second Semester Experience) An individualized, progressive course of study utilizing cooperative education to facilitate and focus the process of integrating theory and practice through faculty-guided, discipline-related learning experiences. In addition the course develops and applies students'observation, reflection, and evaluation skills related to specific learning objectives. Cooperative education learning objectives include topics and assignments designed to support increasing levels of professional knowledge and skills in the workplace, and enhance students' ability to critically analyze the learning gained through workplace experiences.
COOP for CECH (Third Semester Experience) Cooperative education learning objectives include topics and assignments designed to support increasing levels of professional knowledge and skills in the workplace, and enhance students' ability to critically analyze the learning gained through workplace experiences. The student will build a body of work that will be assessed from the student, employer and faculty perspective and that gives evidence of successful accomplishment of the learning outcomes. Focused learning objectives topics will include project management,task management and social responsibility.
COOP for CECH (Fourth Semester Experience) Cooperative education learning objectives include topics and assignments designed to support increasing levels of professional knowledge and skills in the workplace, and enhance students' ability to critically analyze the learning gained through workplace experiences. The student will build a body of work that will be assessed from the student, employer and faculty perspective and that gives evidence of successful accomplishment of the learning outcomes. Focused learning objectives topics will include project management,task management and social responsibility.
COOP for CECH (Fifth Semester Experience) Cooperative education learning objectives include topics and assignments designed to support increasing levels of professional knowledge and skills in the workplace, and enhance students' ability to critically analyze the learning gained through workplace experiences. The student will build a body of work that will be assessed from the student, employer and faculty perspective and that gives evidence of successful accomplishment of the learning outcomes. Focused learning objectives topics will include project management,task management and social responsibility.
Database Management II The course covers database design and advanced database development. Topics include, but are not limited to, logical and physical database design, stored procedures, triggers, back up, security, transaction management, concurrency control, etc.
Information Security and Assurance An introduction to the various technical and administrative aspects of information security and assurance. This course provides the foundation for understanding the key issues associated with protecting information assets, determining the levels of protection and response to security incidents, and designing a consistent, reasonable information security system, with appropriate intrusion detection and reporting features.
Introduction to Information Science Explores the definition, impact, and history of information and information transmission. Introduces technology used to create, read, store, retrieve and transmit information. Analyzes societal institutions, techniques, and processes for the creation, distribution and management of information.
Fundamentals of Information Technology Students will learn the fundamentals of information technology concepts and applications, understand and utilize emerging technologies to meet society's rapidly changing information needs, and apply these in solving various information problems.
Introduction to Data Analytics Introduces foundational concepts for data analytics. Topics include basic computer programming, statistical understanding and application, data structure, data types, data retrieval from various sources and forms, data cleaning/processing, data visualization, and group manipulations.
Database Design for Information Organizations Introduction to the theory and application of database design including information storage and retrieval, data modeling, record structure, data normalization, data security, relational database models, query language, client-server systems, data warehousing and data mining. The social, technological and organizational needs in database design will be examined.
Internship in Information Studies Provides an opportunity for student synthesis of principles and theories acquired in coursework and application of these principles and theories in a working environment.
Information Studies Capstone Introduces project management terms, techniques, and effect on the success of information technology projects.
Introduction to Information Visualization Information visualization is becoming key to LIS, due to the growing need for visual literacy and to the growing demand for data resources in almost all disciplines. Covers basics of developing and evaluating information visualizations and the importance of data accuracy.
Advanced Data Analytics Application of data analytic theories and models to solve real world problems using various unsupervised and supervised models. Topics include cluster analysis, association rule mining, random forest classifier, neural networks, and naive Bayesian classifiers.
Design and Implementation of Web-based Information Services Design fundamentals for web-based information services; information services; implementation of storage, access, and distribution systems; knowledge representation methods; metadata and information structures; connectivity infrastructure; characteristics and behavior of networked audiences; systems use and usability.
Dynamic Web Development The interactive web design server interaction with special emphasis on database connectivity and application development on the internet.
Information and Digital Literacy This course is intended to make students more knowledgeable consumers of information, particularly when using internet resources and social media. Exercises in the use and evaluation of information resources, online searching, information ethics, visual literacy, and copyright/fair use are emphasized.
Online Information Retrieval Structure, content, and application of online databases for education, research, business, and public use. Principles and techniques for the evaluation of online databases and services. Document representation, information need specification and query formulation for online information retrieval.
Competitive Intelligence An introduction to competitive intelligence in various contexts, appropriate for non-profit and for-profit environments. Topics will include developing and implementing the competitive intelligence process, accessing and validating sources, information gathering, auditing, and decision making with special emphasis on strategies, systems, and ethics in competitive intelligence.
Government Information Introduces students to current policy, technology, and social factors that drive government resource and information production, distribution, and access. Topics include transformation of government information; information discovery skill sets, models, and techniques; evaluation of information use and value; and government information issues (e.g. access, authentication, privatization, preservation).
Technical Writing Focuses on the forms of report writing most frequently encountered in research and industry.
Principles of Economics-Macro The functioning and current problems of the aggregate economy: determination and analysis of national income, employment, inflation and stabilization; money and banking, monetary and fiscal policy; and aspects of international interdependence.
Principles of Economics-Micro Goals, incentives and allocation of resources resulting from economic behavior with applications and illustrations from current issues: operation of markets for goods, services and factors of production; the behavior of firms and industries in different types of competition and income distribution.
Functions and Modeling for Business, Life and Social Sciences Study of equations and functions (linear, polynomial, rational, exponential, logarithmic) from various perspectives (symbolic, verbal, numerical, graphical); digital techniques for graphing functions, solving equations, and modeling data using regressions.
Calculus I for Business, Life and Social Sciences Topics in differentiation and integration of polynomial, exponential and logarithmic functions. Applications to the business, life and social sciences.
Public Speaking Develops skill in the composition and delivery of speeches suitable to various common speech situations and criteria for judging speeches heard or read. Topics include: nature of public speaking; choosing and presenting a topic; analyzing an audience; organizing and outlining.
Programming for Non-Majors with C Introduction to the design and implementation of computer programs. Emphasis on problem solving. Topics include: variables and constants, arithmetic and Boolean expressions, conditional statements, loops, procedures and functions, arrays, standard libraries, input and output, structures, and program documentation.
Statistical Concepts in Anthropology An introduction to anthropological statistics. Emphasis will be placed on anthropological research design and analysis of anthropological data.
Econometric Analysis Classical statistical inference; means, proportions, variances, analysis of variance and covariance; regression and correlation analysis; normal, binomial, chi-square, t, F, Poisson, exponential distributions.
INFORMATION AND TECHNOLOGY FOR BUSINESS Retrieve, process, classify, sort and evaluate data and information. Problem solving techniques, creative thinking skills, communication skills, team building, and professional ethics. Laboratories covering the Internet, spreadsheets, and databases.
PRE-CALCULUS The concept of function, exponential, logarithmic, circular and trigonometric functions, systems of linear equations, vectors in two space, lines, conic sections and polar coordinates.
FUNDAMENTALS OF INFORMATION SYSTEMS & TECHNOLOGY  An introduction to information systems and technology in today's organizations. Topics include hardware, software and communications fundamentals, systems development, information management, work force considerations, and related societal, legal, and ethical issues.
INTRODUCTION TO COMPUTER SCIENCE I Introduction to structured problem solving, algorithm development and computer programming.
CALCULUS FOR APPLICATIONS Intended primarily for students in biology, business, economics, psychology and the social sciences. Elements of differential and integral calculus from an intuitive standpoint with emphasis on the use of calculus in the above fields. Exponential and logarithmic functions, partial derivatives included.
DISCRETE MATHEMATICS  Sets, logic, induction, functions, relations, sequences, recursion, combinatorics, graphs and trees, matrices with an emphasis on applications in computer science.
ENTERPRISE SYSTEMS AND ARCHITECTURE Key concepts of ERP systems and approaches to business process improvement through the use of Information Technology (IT) infrastructures including IT infrastructure frameworks, information architecture, the design, implementation, and management of enterprise IT Solutions, and related theoretical and practical issues.
INTRODUCTION TO COMPUTER SCIENCE II Development of programming and problem-solving skills, with a focus on object-oriented programming and design. Students will design and develop programs using encapsulation and information hiding, inheritance, polymorphism, and generics. Introduction to data structures and their implementations (lists, stacks, queues, and trees), recursion, and searching and sorting algorithms.
WRITING FOR BUSINESS AND INDUSTRY Standard written formats used in business and industry, including correspondence, memoranda, and reports. Projects individualized to meet student needs and career interests.
FUNDAMENTALS OF WEB TECHNOLOGIES Introduction to web systems and technologies, including the fundamentals of design, implementation, and evaluation of web-based applications including related software, databases, interfaces, and digital media. Social, ethical, and security issues related to web-based systems are also explored.
SYSTEMS ANALYSIS AND DESIGN Guides students through the stages of the evolution of data processing systems, including analyses of present information flow, system specifications, equipment selection, and implementation of the system to provide an understanding of the skills and knowledge needed for effective use of data processing equipment in meeting information needs.
DATA STRUCTURES AND ALGORITHM ANALYSIS Fundamental data structures used in programming and the basic techniques used to design and analyze algorithms. Topics include: complexity analysis of elementary algorithms, linear data structures, trees, heaps, graphs, search algorithms (balanced binary trees, B-trees, hashing), sorting algorithms, basic graph algorithms (graph traversal, topological sorting, shortest path, minimum spanning trees), and paradigms in the design of algorithms (divide and conquer, dynamic programming, greedy).
BASIC STATISTICS A non-calculus based introduction to statistics with emphasis on applications. Topics include categorical and quantitative data collection through sampling and experimental design, data description and displays, confidence intervals and hypothesis tests for one- and two-samples, and matched-pairs design; normal and t-distributions; correlation and simple linear regression. Emphasis on interpretations of results throughout. Substantial use of a computer package as a learning and computational tool.
TELECOMMUNICATIONS  Addresses telecommunications from the perspectives of technology, systems, and management.
HUMAN-COMPUTER INTERACTION Effective, productive information systems, including interactive computer systems, input and output devices, screen layouts, machine design, health issues, organizational impacts, and computers and the disabled.
ORGANIZATIONAL DATABASE MANAGEMENT The database environment in an organization. Database development, analysis, design, implementation, and administration. Applications of database programs for organizational information processing.
SOFTWARE ENGINEERING Methodology of designing and programming for a wide area of applications with a high degree of modifiability, efficiency, reliability, and understanding.
SOFTWARE PROJECT MNGT Technical and behavioral aspects of project management: concepts, needs identification, software project manager, software teams, software project organizations, project communications, software project planning, scheduling, control, associated costs, using management software tools.
OBJECT-ORIENTED DESIGN & PROGRAMMING Introduction to object-oriented design and programming technology (OOD/OOP). Main phases in object-oriented design and techniques in object-oriented programming. Programming language design and implementation issues for object-oriented languages.
WEB-BASED PROGRAM Applications executing on a client-server system, emphasizing client side. Technologies include HTTP protocol, dynamic HTML, common gateway interface (CGI) programming and Java applets.
SYSTEM DEVELOPMENT / E-COMMERCE Developing an organization's electronic commerce technical infrastructure, hardware and software specification issues, strategic development of computer-mediated business and tools, policy and societal impact issues as well as future directions in electronic commerce.
INFORMATION SYSTEMS SECURITY Information systems security threats, technologies and business requirements, emphasizing human and technological aspects of IT security problems.
INFORMATION SYSTEMS CAPSTONE This senior level course integrates all core IS related competencies by allowing students working in teams to design and implement an information system with consideration of real-world issues including cost, safety, efficiency, and suitability for the intended user. Students will display the ability to integrate and apply critical technical skills with a variety of management concepts, principles, techniques, and practices while effectively managing people, information, information and communication technologies, and business processes for organizational strategic goals. In addition, students will learn about and apply specific modern information systems development methods (ISDM), such as Agile approaches, as a guiding process framework for developing an IS solution.
ETHICAL AND SOCIETAL CONCERNS OF COMPUTER SCIENTISTS Ethical questions and societal concerns related to the widespread use of computers and the resulting responsibilities of computer scientists
GAMING INTERFACE DESIGN Focuses on game design and the computer gaming industry. Designed to introduce the fundamental elements, frameworks and standards related to computer gaming. Instruction will be a combination of lectures, group/individual projects and class assignments aimed at the dissemination of conceptual elements with practical application.
SCRIPTING LANGUAGES  Provides students with a solid foundation in the concepts which underlie many scripting languages and environments without focusing exclusively on any on elanguage. The emphasis will be on the underlying concepts behind the development of small programs in various scripting languages commonly found in industry.  /----------------------------------------------------CORE------------- INTRO TO BUSINESS PROGRAMMING A study of computer programming for business applications using a language such as COBOL. Students will design, implement, test and document programs in application areas such as payroll, accounting, inventory and file maintenance.
VISUAL BASIC PROGRAMMING Concepts, tools and techniques of software development using an event-driven language that supports a graphical user interface and an object-oriented environment.
INTERNSHIP IN CIS Students work in a local computing facility under on-site and faculty supervision.
DECISION SUPPORT SYSTEMS Computer-based information systems for managerial decision-making. Includes mathematical modeling and decision support systems, systems architecture, DDS development tools, organization issues of decision support, multiparticipant DSS, and integration with other information systems.
SELECT TOPICS INFO SYST Studies in selected areas of computer information systems.
APPLIED DATA MINING AND VISUAL ANALYTICS Provides students with a background in traditional data mining approaches using computational models as well as visual analytic approaches which map data onto a visual model enabling knowledge discovery through human perception.
INDEPENDENT STUDY IN COMPUTER INFORMATION SYSTEMS  Directed study in selected areas of Computer Information Systems for which there is no regular course offered. The use of a proposal and well-defined objectives as well as a formal paper or project report are required.
EMERGING INTERNET TECHNOLOGIES Focuses on emerging technologies that are essential in current trends and techniques related to Internet-based applications and their role in the IT field. Surveys the framework and essential elements in emerging Internet technology. Innovative technologies and related topics will be introduced along with the basic foundations required for their implementation and use.
CLOUD COMPUTING FOR ENTERPRISES Focuses on cloud computing and its role in the IT field. Introduces the fundamental elements, frameworks and standards of cloud computing.
College Composition I Building on your existing writing strengths will help develop a foundation for a successful education and career. You will learn strategies to express yourself with confidence and communicate your ideas effectively in personal, academic, and professional situations.
College Composition II This course will help you apply research and critical thinking skills to develop effective persuasive, problem-solving arguments. You will learn to create logical thesis statements, integrate research to support ideas in an academic essay, craft a digital media presentation, and work constructively with peers to enhance your ideas.
Professionalism - Theory and Practice in the Global Workplace This course focuses on the theory and practice of professionalism for lifelong career success in the global workplace. In this course you will explore multidisciplinary techniques and concepts pertinent to varied contexts of professional behavior and skill development. Concepts include communication skills, such as oral presentation and written communication skills, interpersonal relationship management, financial decision making, marketability, and managing professional identities through technology. Additionally, you will examine professionalism as a method for pursuing employment interests and career goals and develop a critical appreciation for organizational structures based on values and skills needed in your career.
College Algebra This course covers topics of algebra, including linear functions, equations and inequalities, systems of equations with two variables, polynomial functions, rational and radical equations and inequalities, exponential and logarithmic functions, ratios, proportions, variation, and graphing.
Arts and Humanities - Modern Creative Expressions As a human, you have the unique ability to appreciate beauty. This course will help you to discover human potential as expressed through the arts and humanities. In this course, you will evaluate the impact of creative expression on cultures by studying examples from the humanities disciplines. You will investigate how creative expressions broaden perspective. As an arts and humanities student, you will analyze forms of creative expression, and discover how to apply this new found insight to your career goals, community, and daily experience.
Discovering Science - Current Issues in a Changing World This course is designed to introduce students to some of the most important concepts in science including inheritance, energy, randomness, and measurement. In addition, the course will give students a chance to explore the human aspects of science: how people put science into practice, how societies think about scientific findings, and why science depends on ethical practices. Knowledge gained in the course will help inform further study in many disciplines and will help students better understand how science affects their personal and professional lives.
The 1960s - Reshaping the American Dream This course will take an in-depth look at the 1960s as a significant era in American history. Adopting multiple perspectives, we will explore the societal impact of such issues as the assassination of John F. Kennedy, the Vietnam War, the Countercultural, Civil Rights, and Feminist Movements, the advent of the birth control pill, and many others. Through exploring the music, political climate, and advancements in technology and medicine of this historical era, we will discover how our individual lives and society as a whole were forever changed.
Foundations of Technical Communication This course will examine fundamental components of technical communication, which include analyzing audience, defining objectives, designing documents, testing usability, and editing content. Students will use digital media tools to create a formal technical document tailored to meet the needs of an identified audience.
Website Development In this course, you investigate Internet technologies. You learn the concepts of web development along with web page design. By creating an individual online portfolio or biography using HTML, HTML5, and CSS (Cascading Style Sheets), you develop skills for today and tomorrow. This course will enable you to self-promote and demonstrate your skills to an audience via the web.
Microsoft Office Applications on Demand This course teaches you to use the current Microsoft Office suite of applications. Topics include an introduction to Word, Excel, PowerPoint, and cloud-based file management systems. You will also learn how to analyze appropriate software applications to address solutions within a profession.
Database Concepts Using Microsoft Access This course is an introduction to relational database management systems. You will use a relational database management system to create, maintain, and secure a database in order to analyze data. You will create filters, sorts, queries, forms, and reports.
Information Technology Concepts You will explore concepts of information technology including hardware, software, and networks. You will also gain a practical understanding of how computer hardware and operating systems work. Topics include personal computer configuration and maintenance, along with the essentials of system software installation and administration.
Software Development Concepts This course introduces the fundamentals of software engineering, demonstrating how the fundamentals are the same across multiple programming languages. The core principles found in every programming language are investigated. You will design, develop, debug, and test simple applications using your choice from the programming language options.
Software Design and Development Concepts This is an intermediate course in the design and development of programs offering you a choice of implementation and demonstrating how design and programming concepts are universal. You will apply software design techniques, software process models, object-oriented programming concepts, and secure data-handling techniques. In addition, you will design, develop, debug, and test intermediate-level applications using your choice from the programming language options.
Database Concepts This course prepares you to learn database programming. You will be exposed to the essential concepts of database management systems and SQL programming language. This course will provide you with the business context in which data is used and how it is transformed into information. You will identify the information needs and general usage of data within the modern business context and link the use of relational database management systems to the data needs of the organization.
Networking Concepts This course introduces the concepts behind today's networks. It outlines current network design, explaining the OSI Model and the methods of carrying data over wired and wireless media. Other topics include network design components, such as topologies and access methods, administration of network operating systems, and troubleshooting methods for data transmission and recovery.
Network Security Concepts This course introduces you to the essential knowledge required to secure today's networks. You will learn to identify threats and vulnerabilities and to apply effective strategies to prevent data breaches. The course discusses topics such as risk assessment; compliance and operational security; access control and authorization management; intrusion detection; application hardening; malicious attacks; and cryptography. It outlines a security professional's responsibilities and discusses the skills needed to protect an organization's data and network infrastructure.
Discrete Mathematics This course is designed to provide information technology and computer science students with an overview and appreciation of mathematical concepts, highlighting applications of mathematics to information technology and computer science. Topics include set theory, logic, matrices, sequences and series, graph theory, and algorithm analysis. The student will complete assignments in each of these areas and be able to identify and apply the core concepts in each of these areas to related problems.
Introduction to Management This course provides an introductory overview of management theory, management functions, organizational structure, daily management responsibilities, ethics, and current management tools and resources. Theoretical concepts will be illustrated with practical application to real-world management problems and scenarios. Implications for managing change within the context of a global economy and other dynamic environmental forces are also examined.
Project Management I This course introduces you to the principles of project management. You will gain knowledge of the project management skills and processes needed to select, initiate, and plan a project. You will explore the project management knowledge areas. Topics include creating the project charter, developing project scope statements, creating the project schedule and budget, and risk planning.
Human Computer Interaction This course introduces you to the field of human computer interaction (HCI). You will survey HCI history and theory, and examine standard principles that are necessary to produce effective interface designs for the consumer. You will also learn about development methodologies, evaluation techniques, task analysis, and prototyping. Activities include observation and analysis of various types of interfaces, plus the use of professional tools to create a new interface design.
Technology Infrastructure This course explores the concepts and purpose of information technology infrastructure. Emphasis is placed on expanding your knowledge of computer networks and data transmissions and applying those concepts to an organization's technology requirements.
Principles of Information Systems Architecture This course introduces you to the background of information systems architecture. You will learn a holistic approach to both hardware and software architecture design from a broad systems perspective. Both a business and technical focus will be covered with concrete examples of current technologies and related managerial issues
Advanced Database Concepts This course incorporates advanced concepts of the database language Transact-SQL (T-SQL) for creating efficient database implementations. You will use the T-SQL programming language and connect to an MS SQL Server database for displaying organized information to users. You will explore the various fundamental features of the T-SQL language such as DataTypes, Sets, and Builtin functions. You will explore the programmability of SQL by creating stored procedures; learn how to format a result set by sorting, filtering, and grouping; apply advanced SQL query techniques such as subqueries and common table expressions; use Report Builder to generate analytical reports from your data; and examine the use of non-SQL relational databases.
IT Consulting Skills This course will introduce you to the theory and practice of IT consulting. You examine the processes and techniques associated with the consulting field. Business aptitude skills will be taught including communication, ethics, presentation, and leadership skills. Additionally, project definition and analysis, project planning, gathering user and project requirements, executing projects, time management, and the history of consulting will be examined. Through case studies, you prepare a project proposal and a persuasive presentation for an organization.
Systems Analysis and Design This course provides an overview of the system development life cycle (SDLC), including the modification and design process. You will learn to choose a system development methodology and evaluate the impact on the organization's strategic plan. It emphasizes the factors for effective communication with users and team members and all those associated with development and maintenance of the system.
Bachelor's-Level Information Technology Internship This course gives you practical job experience in the information technology field. The internship provides you with an opportunity to learn about the IT career field through practical, real-world experiences and mentoring from an IT professional. This experience will enrich your technology skills and provide a better understanding of the level of expertise needed to be successful in your career. Internships must be preapproved by the Dean prior to the start of the term. Students who fail this course on the first attempt may not reenroll in this course without the Dean's approval.
Network Administration In many organizations, the network administrator is the wizard behind the curtain. Network connections between users and computers seem to magically perform the transmissions required for daily operations. In this course, you are introduced to basic network administration. You install and configure a network operating system in a virtualized environment and practice administrative tasks. You perform hands-on exercises demonstrating server management, user account creation, file access, storage backup, and security settings.
Networking with TCP/IP This course provides a thorough examination of the protocols and services in the TCP/IP protocol suite. Students gain an understanding of how network traffic is encapsulated and transported by TCP/IP on local area networks and on wide area networks, including the Internet. Students learn about message addressing and forwarding, and how network errors are resolved.
Computer Forensics This course explores the pervasive nature of illegal and unauthorized activity occurring in cyberspace: computer crime. You will learn about the many types of computer crime and the structured procedures deployed in its investigation. This will include a systematic investigative approach of both corporate and criminal-related offenses. You will learn data-retrieval principles including onsite data collection, laboratory data retrieval, and live network data retrieval. You will learn how current computer forensics tools are used for data acquisitions to data analysis. This course will also discuss how computer crimes present unique vulnerabilities to computer systems due to the global nature of the Internet.
Intrusion Detection and Incident Response This course provides an introduction to intrusion detection systems available to protect networks from cybercriminals. You will explore various security concepts and the basics of security attacks. You will install and configure various intrusion detection system tools. Topics include principles and classifications of intrusion detection systems, incident response process, and response types. Additionally, the course presents insight into intrusion detection and forensics and incident response strategies required to protect critical assets.
Digital Forensics In this course, students learn about computer forensics and techniques used to perform computer forensics examinations. Students learn how to gather and protect evidence used in prosecuting computer crimes. Topics in this course include acquiring digital evidence, bookmarking data, file signature analysis, hash analysis, and other forensic techniques. This course is designed, among other things, to provide the student with the requisite knowledge to sit for the EnCase Certified Examiner (EnCE) exam. While the course may provide the student with the knowledge necessary to sit for the examination, the University cannot guarantee the student's eligibility either to take this exam or become certified.
Information Systems Security Businesses must be able to protect their networks and infrastructures from security attacks. In this course, you learn to investigate system vulnerabilities and implement security solutions. Topics in this course include access control, application security, business continuity and disaster recovery planning, cryptography, information security and risk management, compliance and investigations, operations security, physical security, security architecture and design, telecommunications, and network security. This course is designed, among other things, to provide you with the requisite knowledge to sit for the Certified Information Systems Security Professional exam. While the course may provide the knowledge necessary to sit for the examination, the University cannot guarantee your eligibility either to take this exam or become certified.
Certified Ethical Hacking I This course covers the tools and procedures needed to perform ethical hacking. Ethical hacking, which is also known as penetration testing, is a procedure employed by organizations where the tester attempts to penetrate or compromise a computer or network. In so doing, organizational vulnerabilities are brought to light, which allows the organization to mitigate the vulnerabilities uncovered. This course is designed, among other things, to provide you with the foundational knowledge necessary to continue your studies for the EC-Council Certified Ethical Hacker certification. While the course may provide you with the knowledge necessary to sit for the examination, the University cannot guarantee your eligibility either to take this exam or become certified.
Linux Security This course introduces Kali Linux as a penetration testing and security auditing platform with advanced tools to identify, detect, and exploit any vulnerabilities uncovered in the target network environment. You will explore several security assessment tools necessary to conduct penetration testing in their respective categories, such as target scoping, information gathering, discovery, enumeration, and vulnerability. You will develop practical penetration testing skills by demonstrating hacker tools and techniques that reflect real-world attack scenarios from a business perspective in today's digital age.
INTRODUCTION TO AERONAUTICS Introduces students to the applied science of air-breathing atmospheric flight. The course describes airplanes and how they fly from a design and application perspective. Included are topics in fluid dynamics, airfoil and wing theory, aircraft performance, stability, structures, and aircraft design.
APPLICATIONS OF CYBER ENGINEERING This course focuses on the engineering aspects of cyber operations, cyber defense, and cyber attacks, as a follow-on to SY110. There are three main areas of study, including the host section (a single computer terminal), the network section, and the wireless communication section. Each area of study culminates in a detailed description of a common type of cyber attack and the defenses against it. Lecture material is reinforced and supplemented with labs/security exercise that demonstrate the theoretical concepts in an isolated, virtual environment.
FOUNDATIONS OF CHEMISTRY I The first in a two-semester sequence presenting the fundamental laws and theories of chemistry. Major topics include chemical stoichiometry, periodic trends, atomic structure, chemical equilibrium, thermodynamics, nuclear chemistry, electrochemistry and kinetics. The lecture material is complemented with experiments designed to develop the student's laboratory skills. Naval applications of chemistry are introduced throughout the courses to provide an awareness of chemistry in normal Navy operations.
FOUNDATIONS OF CHEM II This is the second in the two-course foundations of chemistry sequence. See SC111 for a general course description. In this version of SC112, naval applications of chemistry including body armor, corrosion, nuclear power, boiler water quality, aircraft deicing, and scuba diving will be emphasized.
CALCULUS I The first of a traditional two course sequence covering differential and integral calculus of one real variable and infinite series.
CALCULUS II Continuation of Calculus I.
CALCULUS III WITH VECTOR FIELDS Differential and integral calculus of several real variables; vector analysis including integral theorems.
GENERAL PHYSICS I The first of a two course sequence emphasizing the fundamental principles of classical physics and introduce a variety of applications. Topics include mechanics, electricity, magnetism, wave motion, fluids, sound and light. Lectures, recitations, hands-on laboratories, and large-scale demonstration lectures are employed.
GENERAL PHYSICS II GENERAL PHYSICS II
RHETORIC AND INTRO TO LITERATURE I The first of a two course sequence stressing the writing of rhetorically effective and grammatically correct expository prose. During the first semester students read essays, short stories and plays, and they write brief essays.
RHETORIC AND INTRO TO LIT II RHETORIC AND INTRO TO LIT II
AMERICAN NAVAL HISTORY This course examines the antecedents, origins and development of the United States Navy and Marine Corps within the framework of America's growth as a continental and, eventually, global power, with particular emphasis on the development of naval and maritime strategy.
THE WEST IN THE PRE-MODERN WORLD THE WEST IN THE PRE-MODERN WORLD
ASIA IN THE PREMODERN WORLD ASIA IN THE PREMODERN WORLD
U. S. GOVERNMENT AND CONSTITUTIONAL DEVELOPMENT Basic concepts of American democracy, the Constitution, political process, structure and functions of national government and factors influencing its operation; emphasis on legal and ethical demands placed on government officials, both civilian and military, as defined by the Constitution and statute.
INTRODUCTION TO NAVIGATION A comprehensive introduction to basic navigation concepts, voyage planning, and contact tracking on maneuvering boards. The course objective is to develop skills in the practical uses of the navigation chart. Midshipmen are introduced to the navigation chart format and associated plotting tools and techniques and learn the concepts of chart coordinates, while measuring and calculating distances, times directions and speeds.
BASIC NAVIGATION A comprehensive introduction to basic navigation concepts, voyage planning, and contact tracking on maneuvering boards. The course objective is to develop skills in the practical uses of the navigation chart. Midshipmen are introduced to the nautical chart format and associated plotting tools and techniques, learning the concepts of chart coordinates by measuring and calculating distances, times, directions, and speeds.
ADVANCED NAVIGATION ADVANCED NAVIGATION
Intro to Computer Science Introduction to algorithmic development, problem solving and software design. Principles and concepts to provide foundational knowledge and experience upon which later computing courses will build
Object-Oriented Programming This course builds on the procedural programming skills developed in the prerequisite course and introduces the student to object oriented programming and design principles using Java. Object oriented topics such as classes, inheritance, information hiding, polymorphism and dynamic binding are presented and used to create robust, reusable, and maintainable software
Computer Architecture and Organization This course introduces students to performance metrics, instruction set architectures, assembly language, logic design, memory hierarchies, and pipelining.
Systems Programming The study of an application's interface with the operating system. The operating system is treated as an information resource, and as a facilitator for information flow between processes, including those executing on separate machines. Topics include: process management, multiprogramming, and the basic concepts necessary to understand the design and operation of computer communication networks
Data Structures This course examines abstract data types (ADT), data structures, data representation and information management including storage structures, allocation and collection. ADTs and data structures presented include lists, stacks, queues, trees, heaps, priority queues, maps, dictionaries and graphs. Sorting and searching techniques, hashing and graph algorithm analysis are also covered.
Computer Networks The course presents the fundamental theoretical concepts, characteristics and principles of computer communications and computer networks, and analyzes and assesses these foundational concepts with respect to network performance and network design.
Web and Internet Programming Web site design and management, clients and servers, client and server side scripting languages, web transmission protocols
Applied Database Systems This course introduces the principles underlying Database Management Systems (DBMS) with a special emphasis on database management system structure and function when integrated with web-based database applications
Computer & Network Security This course is an introduction to the theoretical and practical facets of Computer Security to include: Department of Defense (DoD)/Department of the Navy (DoN) policies and directives, Trusted systems, Access mediation, Cryptography, Public Key Infrastructure (PKI), Information Warfare, Network security and Database security. Laboratory work will include student exercises demonstrating information assurance concepts culminating in a vulnerability analysis of given systems
Operating Systems The study of the operating system as a resource manager. This course begins with a brief overview of major evolutionary changes in OS design, then explores the interface between the OS and the architecture. It continues with discussions of processes, threads, concurrency, and synchronization, including scheduling and deadlock. Memory, I/O and files, security, and virtualization are also covered.
Software Engineering An introduction to the basic principles of software engineering. Structured, object-oriented, and formal approaches are studied, with emphasis on life cycles, object-oriented techniques and team-oriented software development
Research Seminar/Capstone Research Seminar/Capstone
Human Computer Interaction An introductory course emphasizing interactive software design, development and evaluation using a human-centered approach. Topics include aspects of human sensation, perception and cognitive psychology.
Enterprise Computing This course develops architectures and concepts for the development of multi-tier (typically 3 tiered) distributed applications for an entire organization or enterprise. This includes a user interface called the client tier or tier 1, a server component which is controlled by the organization and provides for interaction with and data collection from the user (tier 2) and a database component that stores transactions and updates client profiles (tier 3). The course teaches advanced techniques for network programming as well as server management and programming.
Advanced Database Systems This course will discuss advanced issues in database systems, including parallel, distributed and peer-to-peer databases, data warehousing and data mining, XML and service-oriented architectures. The course incorporates hands-on exercises using commercial database systems and products, as well as a web-database project
Composition I Focuses on skills required for effective writing in a variety of contexts, with emphasis on exposition, analysis, and argumentation. Also includes introductory use of a variety of research skills.
Composition II Focuses on developing writing skills beyond the levels of proficiency required by ENGL 1101. Emphasizes interpretation and evaluation and advanced research methods. .
Precalculus This course is an intensive study of the basic functions needed for the study of calculus. Topics include algebraic, functional, and graphical techniques for solving problems with algebraic, exponential, logarithmic, and trigonometric functions and their inverses.
College Trigonometry This course is an in-depth study of the properties of trigonometric functions and their inverses. Emphasis is placed on the unit circle approach to the study of trigonometric functions and their graphs. Topics include circular functions, special angles, solutions of triangles, trigonometric identities and equations, graphs of trigonometric functions, inverse trigonometric functions and their graphs, Law of Sines, Law of Cosines, and vectors.
Contemporary Economic Issues This course provides students with the knowledge and tools necessary to critically examine social and policy issues from an economic perspective. Fundamental economic questions as they relate to individuals, firms, and society in the modern global world are addressed. Students learn about different economic systems, how markets function, the role of government in the economy, the basis for international trade, measurement of macroeconomic performance, and the impact of globalization on living standards and economic growth.
Human Communication This course is an overview of the communication discipline that identifies and explores the various components, situations, and channels involved in the communication process. The main objective is for students to critically assess and improve their personal and professional communication skills with others.
Literature  Literature
Art in Society This interactive course is an introduction to the role of visual art in global societies, from antiquity through the present day. It examines various media within their social, historical, and intellectual contexts; explores a variety of art-historical, art-critical, and theoretical issues; and facilitates critical and analytical thinking. It also teaches students how to analyze the basic elements of art and design and how to visit a museum.
Music in Society This course examines the role of music in society through a study of musical works within their cultural and historical contexts. Course assignments develop skills in critical analysis and global perspectives as well as an understanding of the creative process. Required attendance at live performances provides the experiential component so crucial to the understanding and enjoyment of music.
Dance in Society Through an examination of the role of arts in society, and an in-depth study of selected dance events, this interactive course provides an understanding of the creative process and develops skills in creativity and critical analysis. Heightened perceptual abilities will be developed through class experiences and field visits to a variety of arts events in dance, music, visual arts, and theater.
Theatre in Society This interactive course examines the role of theatre in society through the study of dramatic works and performance events within their cultural and historical contexts. Course assignments promote understanding of the creative process and develop skills in critical analysis, global perspectives, and collaboration. Attendance is required at live performances, including some events with paid admission.
Calculus I This course is the first in the calculus curriculum and introduces the central concepts of calculus. Topics include limits, continuity, derivatives of algebraic and transcendental functions of one variable, applications of these concepts and a brief introduction to the integral of a function.
Elementary Applied Calculus Uses techniques of college algebra and elementary calculus to analyze and model real world phenomena. The emphasis will be on applications using an intuitive approach to the mathematics rather than formal development. Topics include graphs, derivatives, and integrals of functions. The course incorporates collaborative learning, oral and written reports, and technology.
First-Year Seminar This course is a first-year seminar designed to help students develop college-level skills for academic success by focusing on life skills, strategies for academic success, connecting with campus and community, and foundations for global learning. This course guides student through the transition from high school to higher education.
Introduction to Computing Principles This course is an introductory computing principles course. Instruction centers on an overview of the history, scope, and impact of computing as well as critical, algorithmic and computational thinking on problem decomposition and fundamental programming concepts.
General Chemistry I This course is the first in a two-semester sequence covering the fundamental principles and applications of chemistry for science majors. Course content includes electronic structure of atoms and molecules, bonding fundamentals, fundamentals of chemical reactions, and gas laws.
General Chemistry II This course is the second in a two-semester sequence covering the fundamental principles and applications of chemistry for science majors. Course content includes chemical kinetics, chemical thermodynamics, liquids and solids, properties of solutions, chemical equilibrium, acids and bases, electrochemistry, and qualitative analysis.
Principles of Physics I This course is an introductory calculus-based course on classical mechanics, waves, and special relativity. The student will be able to apply Newton’s laws and conservation of energy and momentum to various problems in kinematics and dynamics, use the law of universal gravitation to analyze the behavior of falling objects and objects in orbital motion, describe simple harmonic motion, oscillations, and waves, and explain the basic ideas of special relativity.
Principles of Physics II This course is an introductory calculus-based course on electromagnetism, physical optics, and quantum physics. The student will be able to apply the concepts of electric field and electric potential to problems in electrostatics and with electric currents, describe the motion of charged particles in magnetic fields and induction, explain the origin of electromagnetic waves and properties of light, determine the behavior of light waves passing through single or multiple slits, and understand elementary principles of quantum physics.
American Government This course examines the institutions and processes of American government and Georgia State government. Global comparisons are made between the governments of the U.S. and other modern nation-states.
United States History to 1877 This course explores major themes in the social, cultural, political, and economic history of the peoples of North America to 1877. Topics include the intersections of cultures in colonial America, the origin and development of the American republic, the evolution of democratic ideas and institutions, western expansion, slavery, sectional conflict, and emancipation and its aftermath.
United States History Since 1877 This course examines the major themes in the social, cultural, political, and economic history of the United States since 1877, the multicultural nature of contemporary U.S. civilization, and the nation’s role in the global arena.
Introduction to World History An overview of world history that provides an introduction to the origin and development of the world’s societies and their political, cultural, and economic traditions.
Pre-Modern World History This course is a survey of world history to early modern times. The course examines the political, economic, social, and cultural history of the world with a focus on connections and interactions.
Modern World History This course is a survey of world history from early modern times to the present. The course examines themes, events, trends, institutions, and ideas with a focus on global connections and interactions.
Foundations of Criminal Justice This course provides an overview of the American criminal justice system including law enforcement, the court system, and the correctional system. Emphasis is placed on crime in the U.S., the criminal justice process from arrest through sentencing, and the roles and responsibilities of criminal justice actors. Current topics in the criminal justice system are addressed such as the death penalty, offender treatment, and criminal justice reform among others.
Introduction to Human Geography This course is a survey of global patterns of resources, population, culture, and economic systems. Emphasis is placed upon the factors contributing to these patterns and the distinctions between the technologically advanced and less advanced regions of the world.
Introduction to General Psychology This course is an introduction to the theoretical and scientific study of behavior that emphasizes historical and current theories, methods, and research findings related to the influences of biological, cognitive, and social factors on behavior.
Introduction to Sociology This course is an overview of sociology, which emphasizes the social nature of human behavior, including an introduction to culture, social structure, socialization, deviance, stratification, family, gender, religion, demography, and complex organization.
Science, Technology, and Society This course provides students with the knowledge and tools necessary to critically examine the development and integration of science, technology, and society. The course seeks to help students better understand the world in which they live, the broader implications of their major course of study, and the complex social, ethical, and moral choices presented by modern science and technology in human relationships.
Introduction to Anthropology This course is an introduction to anthropology’s four major subfields: biological anthropology, archeology, cultural anthropology, and linguistics.
Principles of Microeconomics Analysis of price and output determination under various market structures, income distribution, resource allocation, domestic problems and international trade. This course is required for Business majors and International Affairs majors
Programming and Problem Solving I This course provides an introduction to computing with a focus on programming. Instruction centers on an overview of programming, problem-solving, and algorithm development. Particular topics include object-oriented design/programming, primitive data types, arithmetic and logical operators, selection and repetition structures, interactive user input, exception handling, using and designing basic classes, single-dimensional data structures with searching and sorting, and arrays. Programming assignments focus on techniques of good programming style including proper documentation. The student is taught to efficiently design, code, and debug problem solutions and the relationship between correct code and security.
Discrete Structures for Computing Coverage of discrete structures is crucial to any program in computing. This course covers propositional and predicate logic, proofs, set theory, relations and functions, algorithms and complexity theory, matrices, graphs and trees, and combinatorics. Throughout the emphasis will be on applications of these concepts in computing.
Advanced Programming Principles This lecture course introduces contemporary programming concepts of object-oriented data structure and abstractions, object-oriented data access techniques such as searching, sorting, and iterations. Problem solving in object-orientation is emphasized.
Advanced Programming Principles Laboratory Advanced Programming Principles Laboratory
Probability and Data Analysis This course is a foundational, calculus-based introduction to statistics and probability. The following conceptual themes will be developed through the process of statistical investigation: exploratory data analysis (univariate and bivariate), fundamentals of experiment design and sampling, planning and conducting a study, exploring random phenomenon using probability and simulation, and the fundamentals of statistical inference. Technology is integrated into each theme, and the statistical software package used will be chosen by the instructor.
Technical Writing The course is an introduction to organization, style, and mechanics of technical writing. It includes practice in writing such typical documents as technical descriptions, instructions, proposals, and recommendation reports. Emphasis is placed on incorporating rhetorical theory into planning, organizing, and writing reports; designing visual aids; and editing. Among other assignments, at least one complete technical report is required.
Database Systems The topics in this course span from a review of the traditional file processing systems to database management systems. Topics include files systems and file processing logic, planning, and major phases of database development: analysis, design and implementation. Labs use an SQL based database product such as Oracle.
Professional Practices and Ethics This course covers the historical, social and economic consideration of the discipline. It includes studies of professional conduct, risks, and liabilities, and intellectual property relative to the software engineering and computing professions. Software engineering/computing case studies will be used.
Hardware and Software Concepts This course examines various hardware and software components and how they work together in a modern computing environment. Topics include an overview of computer organization and architecture, machine language and modern languages.
Introduction to Web Development This introduction course covers applications for the world wide web. Topics include current languages (such as HTML and JavaScript), basic web protocols, and human-computer interfaces for the web.
Software Acquisition and Project Management The course provides a high level introduction to two areas that are crucial to the IT profession, namely project management and software acquisition. It introduces students to the phases both in the project management and software acquisition and implementation process. Since requirements are crucial to both activities, the course will provide students with an in-depth introduction to requirements engineering. The course will also introduce students to a widely used project management information system.
Operating Systems Concepts & Administration This course is an introduction to basic operating system principles. Topics include memory management, peripheral device management, file system management and process management. Different types of operating systems and their administrations are studied. Projects are carried out with simulations.
Electronic Commerce This course will examine the aspects of electronic commerce. Topics include internet development, EDS, security, network connectivity and privacy. Basic business practices using electronic commerce will also be covered.
Data Communications & Networking Fundamental concepts of computer networking include topics such as properties of signals and media, information encoding, error detection and recovery, LANs, backbones, WANs, network topologies, routing, Internet protocols, and security issues. The focus is on general concepts together with their application to support the business enterprise.
Linux/Unix Administration This course introduces Linux/Unix operating systems. Topics include system administration, file systems and access permissions, regular expression, common tools and utilities, and network service configurations. Lessons will be enhanced using hands-on exercises.
Management of Information Technology and Human Computer Interaction This course provides a study of the information needs in a formal organization and the information systems required to meet those needs within the planning, control, operating and decision-making processes. User acceptance of IT applications that crucially depend on the HCI component will be covered.
Policy & Law This course covers current issues in IT including the law, ethics and social values. Topics include copyright, patents, trademarks, trade secrets, computer ethics, computer crime, computer abuse, cultural impact, web issues, information warfare and current legislation. / IT Information Security Administration & Privacy The student develops knowledge of the principles of information assurance at the policy, procedural, and technical levels to prepare the student for a role as a business decision-maker. Real-world examples from the text and current events will be used to demonstrate the applicability of the techniques of information assurance.
IT Capstone Students work in teams to develop or implement a real-world IT solution integrating the knowledge acquired in preceding IT courses. Components that are emphasized include technical design, research, documentation, project management, leadership, team work, and communication skills. The final result will be an IT solution addressing a typical business or organizational need such as data management or networking, which will be evaluated by faculty members, Industrial Advisory Board members, and project owners.
Advanced Web Development This course covers more advanced topics on web site design and development including server pages, programming, database integration, and web server systems and security administration.
Advanced Database This course will study how databases are used with programming applications. Topics include advanced PL/SQL (or similar database programming language), database transaction, database security, database maintenance, and distributed and web databases.
Network Configuration & Administration This course continues the study of networks. Topics include design and implementation of networks including synchronization, scheduling, exception and deadlock resolution, client server and web based collaborative systems. Network security will also be covered. Cost estimates and speed are examined from a management perspective.
Virtual IT Systems This course explores the design, implementation and use of virtualization, including desktop and server aspects such as deployment, clustering, storage and security. A high level overview of the various certifications available will be discussed. A project will be completed as part of the course.
Business Intelligence Systems This course introduces the concepts, practices, technologies and systems of business intelligence, which supports enterprise level data management, analytical processing, and reporting.
Special Topics in Information Technology Special Topics in Information Technology
Wireless Security This course covers methods and techniques to secure wireless networks against threats and attacks. The topics include Security and Cryptography, Network Security Protocols, Security and Layered Architecture, Voice-Oriented Wireless Networks, Data-Oriented Wireless Networks, Security in Traditional Wireless Networks, Security in Wireless LAN, Security in Wireless Ad Hoc Network, Special Topic: Mobile Security.
Ethical Hacking for Effective Defense This course focuses on detection of network and system vulnerabilities by taking an attacker-like approach to system, network, and data access. Topics include network attacks and defenses, Operating System and application vulnerabilities, social engineering attacks, and malware. Ethical, legal implications of network attacks are also discussed.
Computer Forensics This course studies techniques and tools in computing investigation, digital evidence collection, recovery, and analysis. Topics include: Legal issues relating to digital evidence, recover deleted files and discover hidden information, reconstruct user activity from e-mail, temporary Internet files and cached data, assess the integrity of system memory and process architecture to reveal malicious code
Infrastructure Defense This course provides an overview of the infrastructure assessment and penetration testing process and the processes and techniques for improving the defensibility of that infrastructure.
Foundations of Health Information Technology This course introduces students to the field of health information technology (HIT). Students will become familiar with the content, use, and structure of the health care data and medical records, health information management, the fundamentals of healthcare workflow and process analysis and redesign as a necessary component of complete practice automation, and health information systems. Students will also become familiar with the health care delivery systems in the U.S. and IT organizations and resources.
Electronic Health Record Systems & Applications This course provides an overview of the importance of key technical aspects of electronic health records, the overall architecture, features and functions of major EHR systems. Hands-on exercises with EHR systems allow students to learn by doing.
Clinical Processes and Workflows: Analysis and Redesign This course introduces the fundamentals of healthcare workflow and process analysis and redesign as a necessary component of complete practice automation. Students will become familiar with the concepts of processes, process analysis and redisign in the healthcare settings. Workflow and process mapping in healthcare improvement including detailed guidance, helpful tools, and case studies are introduced.
Health information Security and Privacy Health information security and privacy are of utmost importance in today’s healthcare environment. This course introduces the concepts, practices and concerns of information privacy and security unique to the healthcare settings. The course provides the student with a thorough understanding of the HIPAA security and privacy rules, meaningful use security requirements, security risk assessment and management, and how to integrate privacy and security into medical practices. Resources of privacy and security in healthcare are provided.
Mobile Web Development This course introduces the concepts, practices, and technologies to design, develop, and manage cross-platform web sites and applications running on modern mobile devices.
Overview of Mobile Systems This course explores the use and issues of mobile applications in business including information security issues, connecting to cloud computing services, and mobile interface and programming. A significant design or development project will be created in the course.
Mobile & Casual Game Development This course explores the segments of mobile (handheld, PDA and cell-phone) and casual gaming. Aspects of mobile hardware resources such as smaller memory, limited processor capabilities, and smaller displays are discussed; implications of such limitations to design and playability are also presented. Patterns of casual game development and emerging markets for casual games are also explored. A term project exploring mobile and/or casual game development is required.

Critical Reading and Composition Instruction in strategies for critically reading and analyzing literature and non-literary texts; structured, sustained practice in composing expository and analytical essays.
Rhetoric and Composition Instruction and intensive practice in researching, analyzing, and composing written arguments about academic and public issues.
Discrete Mathematics for Computer Science Logic, number theory, sequences, series, recursion, mathematical induction, set theory, enumeration, functions, relations, graphs and trees. Connections to computers and to programming are emphasized when possible.
Elementary Statistics Introduction to the fundamentals of modern statistical methods, including descriptive statistics, probability, random sampling, simple linear regression, correlation, tests of hypotheses, and estimation.
Public Communication Introduction to theory and practice of oral communication in public, social, and institutional contexts. Includes foundational and cumulative training in the invention, performance, and critical analysis of oral communication, with emphasis on argumentation, persuasion, audience analysis, delivery, and ethical forms of engagement.
Introduction to Economics The study of supply and demand, markets, household and firm decision-making, gross domestic product, inflation, unemployment, and government policies. Open to all students except business administration and economics majors.
Business Law Formation of contracts and their operation as they apply to business; promissory notes and checks; agency and employment.
Business Communications Theory and processes in written business communications; composing effective business letters and reports.
Principles of Accounting I A study of the accounting cycle with emphasis on preparation and analysis of financial statements.
Personnel Organization and Supervision Recruitment, selection, utilization, and development of human resources; role of supervisors in management and personnel administration.
Thriving in the Tech Age Pervasive impact of computers on todays global society; skills and strategies for using technology. How information technologies impact daily life and drive change.
Introduction to Computer Hardware and Software Support Understanding of current computer hardware and software through computer building, repairing, and troubleshooting.
Introduction to Networking Understanding the essential concepts of computer networks, including standards, topologies, security, media, switching, routing, and more.
Computer Applications in Business I Survey of core skills and techniques for spreadsheet design and analysis of business problems.
Computer Applications in Business II Fundamentals of modern database design and applications.
Program Design and Development Fundamental algorithms and processes used in business information systems. Development and representation of programming logic. Introduction to implementation using a high-level programming language.
Software Design Survey of core software development principles, application development from pseudocode and flow charting through coding process.
Algorithmic Design I Problem-solving, algorithmic design, and programming.
Algorithmic Design II Rigorous development of algorithms and computer programs; elementary data structures.
Professional Internship Seminar Preparation for professional internship.
Web-Based Support Systems The development of Web-based information systems for support and training. Communication technologies for the global dissemination of information, including static information and multimedia content.
Database Systems in Information Technology Survey of techniques for working with enterprise-level database systems.
Introduction to Human Computer Interaction Human computer interaction: human factors of interactive software, methods to develop and assess interfaces, interaction styles, and design considerations.
Advanced Networking Advanced administration of client/server networks with major emphasis on network operating system software.
Management of Information Technology Overview of current practices and trends in end-user technology and information system management.
Information Technology Security for Managers Information technology security from a managerial perspective, including security awareness, risk assessment, and security policy development
Professional Internship Internship coordinated by a faculty member and supervised by an approved business supervisor. Contract approved by instructor, advisor, and department head is required for undergraduate students.
Analysis and Applications of Project Management Software Project management principles and standard practices, including software applications for project management.
Project Management for Information Systems Application of project management software, technologies, and practices to the design and implementation of real-world information technology projects.
Mainframe Systems Introduction to the large scale computer systems used by businesses to support thousands of simultaneous users and process millions of transactions.
Job Control Language Programming in job control language used to process batch jobs on mainframe computers. Use of standard system utility programs.
Training Systems Theory, design, and implementation of technology-based training systems, including hardware and software solutions.
Telecommunications Telecommunications systems, applications, and equipment allowing for the global dissemination of information.
Linux Programming and Administration Shell scripting and administration in the Linux operating system.
Advanced Web Support Systems The development of advanced, dynamic, Web-based information systems, including the integration of back-end database-records management systems.
Database Management and Administration Introduction to database administration and implementation using an enterprise-level Relational Database Management System (RDBMS).
eCommerce Technology in Hospitality Provides students with advanced understanding of technologies applicable to hospitality and tourism industries. Students analyze current and emerging technologies to determine operational impact on hotels, restaurants, and travel businesses.
Special Topics in Integrated Information Technology Special Topics in Integrated Information Technology
Principles of Accounting Financial and managerial accounting principles. Basic accounting statements, processes, and management applications. Open to all students.
Principles of Finance Financial management from the viewpoint of the business manager emphasizing profitability, liquidity, and long-range financial planning.
Introduction to Management Information Systems Create technology solutions to solve business problems. Learn database, analytics, spreadsheet, and programming skills useful to all business majors; preparing for a variety of internships.
Marketing Management Marketing's role in society and the firm, marketing opportunities, the consumer market, and management of marketing mix.
Introduction to Computer Programming Introduction to object-oriented program design and development. Principles of algorithm formulation and implementation.
Introduction to Computer Programming Object-oriented program design and development. Principles of algorithm formulation and implementation.
Economic Principles and Problems Strengths and weaknesses of markets and governments for solving problems of social organization or conflict, including policy response to inflation, unemployment, pollution, poverty, growth, etc.
Spreadsheet Skills and Business Analysis Basic spreadsheet skills focusing on features in MS Excel such as basic functions, logic and reference functions, statistical functions, what-if analysis, and charting to solve complex business problems. No technical background is necessary.
Communication in Organizational Settings Developing written and oral communications for professional organizations, including composing and designing employment communications. Incorporates oral presentations.
Principles of Statistics Graphical displays and numerical summaries, data collection methods, probability, sampling distributions, confidence intervals and hypothesis testing involving one or two means and proportions, contingency tables, correlation and simple linear regression.
System Analysis and Design Concepts and skills related to the systems development life cycle, including project management, planning, investigation, requirements definition, systems design. Tools and techniques of object-oriented analysis and design.
Database Systems Concepts and techniques of database system development, focusing on object-oriented modeling and its implementation methods.
Principles of Business Programming Programming business systems. Algorithms, data structures, programming patterns, and interfaces.
Information Systems Project Management Principles and skills of project management in an information systems context, including management of risk, schedule, scope, cost, quality control, communications, human resources, and procurement.
Data Communications Principles of data communications, local- and wide-area networks, hardware, software, media, standards, management, and business applications. Lab required.
Enterprise Application Development Client- and server-side programming. Internet and Web-based applications. Enterprise systems and architectures.
Information Systems Security and Controls Concepts and techniques for securing information systems and applying controls to business processes.
Predictive Data Analytics How to build, evaluate, and implement a variety of predictive models (e.g. recommendation engines, forecasting, prediction calculators, and text analytics) into information systems.
Information Systems Capstone with Predictive Analysis Introduction to machine-learning algorithms for predicting numeric and categorical outcomes, clustering and segmentation, anomaly detection, and model quality evaluation. Integration of prior course content into a capstone project.
Introduction to Global Supply Chain Management Introduces global supply chain management: how firms work with other firms, often foreign firms, to deliver value to customers. Topics include supply chain strategy, sourcing, supplier management, logistics, and quality management.
Introduction to Operations Management Operations Management is the administration of transformation processes that create value for customers by meeting their needs or enabling them to meet to their own needs, In this course we will explore the theory and tools related to several transformation processes, including demand management and forecasting, inventory management, project management, product and service design, and statistical process control.
Organizational Effectiveness Theories and concepts for creating effective organizations, e.g., individual, group, and organizational processes and human resource functions, including selection, compensation, and performance management.
Ethics for Management Analyzing ethical dilemmas and understanding ethical theories as they apply to decision making in management.
Strategy and Organization Concepts and tools of strategic management, with an emphasis on the contribution of organizational behavior and theory in the development of sustainable competitive advantages.
Business Law in the Environment Introduction to legal principles and institutions affecting business.
Finite Mathematics Language of set theory, counting and combinations. Probability theory, elementary stochastic processes, conditional probabilities. Repeated experiments, random variables, expectation, variance, linear equations, matrix algebra, application to economics or similar. Linear programming. Markov chains including applications.
First Year Writing I A detailed study of the principles of rhetoric as applied in reading and writing expository essays.
First Year Writing II Detailed study of the principles of rhetoric as applied to analyzing and writing argumentative and persuasive essays; principles and methods of research, culminating in writing a substantial research paper.
The U S To 1877 The social, economic, and political history of the United States to 1877.
The U S Since 1877 The social, economic, and political history of the United States since 1877
U.S. and Texas Constitution and Politics Introduction to the constitutions and politics of the United States and Texas, emphasizing constitutional structure, federalism, separation of powers, limited government, public opinion, elections, and civil liberties
U.S. Government: Congress, President, and Courts Introduction to the institutions of government with an emphasis on the congress, the president, and the federal courts. (Introductory category.)
Precalculus Precalculus
Calculus I Calculus of rational functions, limits, derivatives, applications of the derivative, antiderivatives, the definite integral with applications, mean value theorem, fundamental theorem of calculus, and numerical integration
Microeconomic Principles Individual consumer and firm behavior, supply and demand and the market determination or prices, production, and income. Includes government price ceilings, monopoly and antitrust, market failures and environmental pollution.
Macroeconomic Principles Aggregate economy, inflation, recession, and economic policy. Economic growth, business cycle theory, and international trades
Technical Communications Procedures and techniques of preparing technical memoranda, oral and written reports, manuals, and other source documents that fit the pattern of industrial and institutional communications.
Applications of Discrete Methods in Technology Application of discrete methods in technology with an emphasis on computer applications.
Finite Math with Applications Systems of linear equations, introduction to linear programming, mathematics of finance, topics in probability and statistics.
Accounting Principles 1 - Financial Fundamentals of financial accounting.
Accounting Principles 2 -Managerial Fundamentals of managerial accounting.
Intro To Logistics Technology Functions, processes and objectives of the logistics operation. Industrial distributor and its relationship to other channel members.
Organizational Leadership and Supervision The supervisory process. Established practices and supporting knowledge of supervisory planning, leading, organizing, and controlling.
Introduction to Organizational Behavior and Management General management functions and the role of individual, group, and organizational behavior in the management process.
Production & Service Operation Planning and control of production and service operations. Product and service design, design of work systems, forecasting, scheduling, capacity planning, and inventory control.
Supply Chain Management Fundamentals Concepts and techniques used to plan, source, make and deliver products and services meeting customer needs in a global environment. Topics include supply chain strategy, forecasting, inventory management, logistics, and operations management, among others.
Quality Improvement Methods Quality improvement methods for managing production and service operations. Concepts, methodologies, and tools of quality improvement, including quality theory, standards, design, control, and assurance.
Computer Science & Programming Introduction to problem solving through computer programming. Students will learn the fundamental principles of computer science, basic hardware and software components of a computer system, computational thinking, basic algorithms, and programming concepts. Students will get hands-on experience in problem solving by designing, writing, testing and debugging programs in a modern programming language.
Introduction to C++ Programming Fundamentals of C++ programming, conditional and looping constructs, functions and function overloading, arrays, pointers and references, class concepts, and files. Emphasis on practical applications.
Information Technology Hardware and Systems Software A conceptual and technological survey of the structure of distributed information systems architectures, operating systems, network operating systems, data management systems, application development environments, peripheral technology, and user interfaces.
Information Systems Applications Concepts and production skills relating to information systems technologies, procedures, and resources.
Internet Application Development Internet and World Wide Web Technologies. Development and maintenance of Web sites and Web applications.
Fundamentals of Information Security Information security, including technical security issues, people security issues, policy issues, privacy, and ethics.
Information Systems Application Development Development of information systems applications using modern application development technologies.
Info Systems Analysis & Design Development and evaluation of information systems with relation to efficiency and cost.
Information Systems Infrastructure and Networks Data communications standards, protocols, models, architectures, internet topics, and ethics. Components of industry infrastructure with business justification. Study of emerging technologies and trends related to software/hardware components.
Integrated Information Systems Evaluation of integrated information systems.
Database Management Applications of hierarchical and relational database systems.
Advanced Information Systems Development Use of integrated development tools for full-stack systems development. Architectural planning, technology selection, user interface design concepts, and programming for desktop applications that include database persistence.
Database Administration and Implementation Database implementation for a multi-user environment, including usage analysis, database application development, and query optimization.
Enterprise Applications Development Advanced n-tier client/server application development for an enterprise-wide setting.
Project Management and Practice Computer Information Systems Capstone course. Information Systems Project Management concepts. Students plan, manage and complete a major semester-long group project involving a multi-user information system application for a client.
Composition and Rhetoric Training in composing correct and effective expository and argumentative essays, including writing documented essays.
Business Calculus I Intuitive approach to the concepts and applications of calculus. Topics include functions and graphing, differentiation, and integration. Applications from social, biological, and management sciences are presented.
Calculus of One Variable I Topics include analytic geometry, introduction to derivatives, computation and application of derivatives, integrals, exponential and logarithm functions
Business Calculus II Introduction to the calculus of several variables, differential calculus and optimization of several variables, multiple integrals. Topics from the management sciences are used to illustrate the above concepts
Calculus of One Variable II Topics include transcendental functions, applications of integration, integration techniques, indeterminate forms, improper integrals, parametric equations, polar coordinates, and infinite series.
Discrete Structures for Computing Introduces ideas and techniques from discrete structures that are widely used in the computing sciences. Topics emphasize techniques of rigorous argumentation and application to the computing disciplines.
Algorithms and Data Structures Study of data structures and algorithms fundamental to computer science; abstract data-type concepts; measures of program running time and time complexity; algorithm analysis and design techniques.
Software Development Foundations Intensive study of software development foundations. Advanced coverage of programming language primitives, function-level design principles, and standard development and debugging tools. Introductory coverage of module-level design principles, program specification and reasoning principles, and validation and verification techniques.
Introduction to Computer Organization Study of the machine architectures on which algorithms are implemented and requirements of architectures that support high-level languages, programming environments, and applications
Seminar in Professional Issues I Considers the impact of computer use on society. Discusses ethical use of software and protection of intellectual property rights. Profession is viewed historically; organizations important to the profession are discussed; the development process for standards is presented; and students are introduced to the professional literature
Principles of Management Managements role as a factor of economic production. Functions of management, principles of organization, and behavior in organizations
Introductory Business Statistics Introductory probability and statistics for business students, particularly those who will take MGT 3100. Topics include descriptive statistics, probability, expectations, binomial, normal, sampling distributions, one and two sample estimation and testing
Financial Accounting Concepts Introduction to accounting principles with emphasis on the use of financial data and analysis of financial statements.
Problem Solving with Office Applications Use of office applications to formulate and solve problem models. Emphasizes applications development in database and spreadsheet environments. Current software products are used. Students are expected to have experience with word processing and spreadsheet applications
Introduction to Operating Systems Detailed study of management techniques for the control of computer hardware resources. Topics include interrupt systems, primitive level characteristics of hardware and the management of memory, processor, devices, and data
Introduction to Software Engineering ntensive introduction to software engineering. Focuses on each major phase of the software lifecycle. Introductory coverage of requirements analysis, requirements modeling, design modeling, and project management. Intermediate coverage of module-level design principles, program specification and reasoning principles, and program validation and verification techniques.
Managerial Accounting Concepts Introduction to managerial accounting with emphasis on using accounting information to make decisions. Includes Honors sections.
Networks and Network Programming Introduction to basic concepts of computer network technologies and network programming. Topics include network programming, layered protocol architectures, local and wide area networks, internetwork and intranetwork concepts, security. Socket level programming is introduced and used throughout the course.
Systems Analysis Incorporates a study of the decision-making process at all levels with the logical design of information systems. Extensive study of the system life cycle with emphasis on current as well as classical techniques for describing data flows, data structures, file design, etc.
Business Analysis Follows the traditional systems development life cycle (SDLC), although alternative methodologies are also discussed. Focuses on earlier phases of the SDLC, from IS planning through specification of structured requirements and on the methods, techniques, and tools used to determine information requirements and their unambiguous documentation.
Computer Security Principles Covers principles of information systems security, including security policies, cryptography, authentication, access control mechanisms, system evaluation models, auditing, and intrusion detection. Computer security system case studies are analyzed
System Administration and Security Covers topics related to the administration and security of computer systems. Primary emphasis is on the administration and security of contemporary operating systems.
Database Management Systems Introduction to database/data communications concepts as related to the design of online information systems. Problems involving structuring, creating, maintaining, and accessing multiple-user databases are presented and solutions developed. Comparison of several commercially available teleprocessing monitor and database management systems is made.
Seminar in Professional Issues II Considers the impact of computing system development on society. Discusses ethical issues in the design and development of computer software. Students discuss standards for professional behavior, the professionals responsibility to the profession, and techniques for maintaining currency in a dynamic field
Decision Models for Management Exploration of ways in which management science decision models can help in making sound managerial decisions. Problem solving is Excel-based. Topics include linear programming, project scheduling, and simulation
Principles of Marketing Principles and concepts involved in planning, pricing, promoting, and distributing of goods and services. Includes Honors sections
Introduction to Web Interface Development An introduction to the design and development of interactive Web 2.0 user interfaces using client-side programming languages.
Introduction to Algorithmic Design I An introduction to problem solving and algorithmic design methodology using a high-level programming language. Topics include problem solving techniques; subprograms and modularity; fundamental data types and structures; flow of control statements; and file input/output.
Introduction to Algorithmic Design I Laboratory Introduction to Algorithmic Design I Laboratory
Introduction to Algorithmic Design II Topics include object oriented programming and algorithm design; elementary data structures; user-defined data types, inheritance, and encapsulation.
Introduction to Algorithmic Design II Laboratory Introduction to Algorithmic Design II Laboratory
Ethics in Computer Science Provides real-world experiences that stimulate discussion of ethical issues in the technical work place. Topics include: ACM Code of Ethics, general moral responsibilities, privacy security, copyright and ownership agreements, computer crimes, and personal ethics.
Linux Fundamentals I  This course provides students with a fundamental understanding of how to use a Linux operating system.
Introduction to Relational Database and SQL This course will provide an introduction to relational database concepts and the design of relational databases. It will also provide a thorough introduction to SQL.
Information Management This course covers the key aspects of information management including the acquisition, classification, storage, analysis, presentation, and archival of information. Privacy and security of information are also addressed.
Data Communication Systems and Networks Fundamentals of data communications, including hardware, basic components of communications, configurations, networks and applications, protocols and software are discussed.
Introduction to Server-side Web Application Development A thorough introduction to development and deployment of web-based applications. Topics include middleware programming concepts, client server architecture, database access, state management, and application security. Students are expected to already have proficiency with introductory computer programming, HTML, CSS, Javascript, and SQL or other database query framework.
Systems Analysis & Software Engineering A thorough introduction to requirements management, and best practices in eliciting, documenting, and verifying requirements for programming systems. Topics include writing effective use cases, constructing UML-compliant models (including class, state, and activity diagrams), specification of user interface and data layers, testing, and integration.
Project Management This course will cover techniques in project management based on the Project Management Body of Knowledge from the Project Management Institute.
Introduction to Information Systems Security Comprehensive survey of security policies, models and mechanisms for confidentiality, integrity, management and legal and ethical issues.
Information Systems Capstone Course and Project This senior capstone course integrates and synthesizes the material covered in the field of Information Systems, including Systems Analysis, Project Management, System Development and Deployment, and Security. Students will develop a practical solution to an information systems problem. Presentation will be both oral and written. Lecture topics may vary from semester to semester.
Senior Assessment This course provides various resources to graduating seniors including strategies for job searching and/or entry to graduate school. Students will complete all final assessments required to maintain currency and quality of the program. It is intended for majors to take in their last semester prior to graduation.
Introduction to the Internet and World Wide Web This course incorporates critical thinking as students learn about the Internet and the World Wide Web.
Software Engineering II Topics include project requirements, design specifications, testing, project management and group dynamics.
Calculus I Limits, continuity, differentiation and integration of algebraic and transcendental functions, applications of the derivative to curve sketching, optimization and related rates.
Trigonometry Right triangle and circular trigonometry, graphs of trigonometric and inverse trigonometric functions, trigonometric identities, solving trigonometric equations, vectors, complex numbers, and their applications.
Introduction to Discrete Mathematics Set theory, logic divisibility, induction, combinatorics, relations, functions, graphs, digraphs, and Boolean algebra.

/  Composition I A review of grammar, introduction to research methods, and practice in writing exposition using reading to provide ideas and patterns.
Calculus for Business and Economics An introduction to the concepts of differentiation and integration. Emphasis will be placed on applications of calculus in business, economics, accounting, social sciences, and life sciences.
Orientation to the University A course designed to provide information and enhance skills that will enable students to take responsibility for a successful transition to college. The course will expose students to college resources and requirements and promote the development of practical skills for college success.
Orientation to Computing, Information, and Technology An overview of hardware, software, technology, and information systems concepts and terms as well as ethics and opportunities within the three fields.
Computer and Information Science Lab An introduction to the computing resources of the department and the university.
Composition II with readings in poetry, fiction, and drama.
History I HIstory I
Principles of Economics I Macroeconomic analysis of output, income, employment, price level, and business fluctuations, including the monetary system, fiscal and monetary policy, and international economics.
Microcomputer Applications This course provides hands-on experience with several software applications. Topics include intermediate and advanced word processing; spreadsheet design, formulas, and charts; database design principles and implementation; presentation design and techniques; and integration among these applications. Students will be required to apply each package on a semester project related to their major.
Foundations of Computer Programming I An introduction to the foundational concepts of programming using structured programming concepts of C++ as an implementation tool. Programming principles covered in lecture are practiced in lab. Major topics include sequential, selection, and iterative control structures, functions, parameter passing, and file processing. Arrays are introduced as a structured data type.
Technical Writing Practice in composing abstracts, instructions, visuals, proposals, questionnaires, letters, memos, and a variety of informal and formal reports.
Accounting Principles I A study of fundamental processes of accounting for day to day business transactions. Includes recording business events in journal entry form and preparing adjusting entries, trial balances, financial statements, and closing entries. Introduces the basic internal control system a business must employ. Concludes with the measurement and reporting of all assets and liabilities.
Microcomputer Applications This course provides hands-on experience with several software applications. Topics include intermediate and advanced word processing; spreadsheet design, formulas, and charts; database design principles and implementation; presentation design and techniques; and integration among these applications. Students will be required to apply each package on a semester project related to their major.
Discrete Structures for Technical Majors Fundamental mathematical concepts related to computing, including logic and proof techniques; sets, sequences, relations, and functions; combinatorics; algebraic structures and Boolean algebra ; trees and graphs.
Computer Networks and Architecture This course covers how to install and administer a local area network and connect it to the Internet. Topics include network architecture, hardware, and software, along with popular protocols for establishing connectivity for sharing resources such as printers and files. Participation in a designated lab outside of the regularly scheduled meeting time is required.
Social I  Social I
Data Structures This course involves a study of abstract data structures and the implementation of these abstract concepts as computer algorithms.
Database Design and Implementation This course focuses on the design and implementation of relational database systems. Fundamental principles of databases such as relational model, conceptual design and normalization are covered. Students will also gain experience in database and query implementation using a DBMS and SQL.
Legal Environment of Business A survey of the U.S. legal system, the ethical and public policy issues relevant to business, and the principles of law commonly affecting business, including Constitutional law, contract law, tort law, employment law, white-collar crime, and laws pertaining to corporations and other business organizations.
Business Statistics This course reviews basic descriptive statistics and probability distributions. The course introduces inferential statistics and their application to business problems. Topics covered include data collection, the t-tests for one sample, matched-pairs, and independent groups, the F-test for one and two-way analysis of variance, the z-test for one and two proportions, the chi-square tests for independence and goodness of fit, the t- and F- tests as they relate to simple and multiple regression, control charts, time-series analysis, the visual display of quantitative information, and the reporting of results. Problems are addressed using technology such as statistical calculators and advanced statistical software.
Business and Professional Speaking An oral communication course for individuals in business, industry and the professions. Human communication theories and behavioral research are used as a framework for generating competencies in interviewing, briefings, conference leadership, and intergroup coordination.
Management and Organizational Behavior Basic principles of management and organizational behavior including planning, organizing, leading, controlling, staffing, decision making, ethics, interpersonal influence, and group behavior; conflict management; job design; and organizational change and development
Administering and Using the IBM Platform This course is an introduction to the operations of the IBM midrange computer system. Topics include architecture, system security, user interface, and work management. Coverage will also extend to applications and programming using an introduction to DB2 and RPG.
Systems Software and Architecture This course covers the implementation of production operating systems, the fundamentals of digital logic, and machine architecture.
Data Mining Introduction to knowledge discovery from large databases: terminology, algorithms, methodologies, software, limitations, implications, and current trends. Students will implement and evaluate data mining techniques.
Visual Programming This course covers the design and development of event-driven programs using an object-oriented visual programming language such as Visual Basic, Visual C#, or Visual C++.
Data Communications and NetworksF Basic elements and functional aspects of the hardware and software required to establish and control data communications in a stand-alone or network environment. Topics include communication protocols, media, network topologies, and system support software. Participation in a designated lab outside of the regularly scheduled meeting time is required.
Fine Arts I Fine Arts I
Implications of Technology on Society This course explores ethical issues faced by members of a complex technological society and by professionals in a technology-related field. Topics covered include professional ethics, ethical decision making, privacy issues, intellectual property, and technology issues relating to software development, productivity, and computer crime. Extensive research on current issues is expected.
Web Programming Topics include features of web forms and CGI processing via a scripting language. Basic database interaction and Server- Side Includes (SSI), client-side implementation of pop-up windows, form validation, cookies, security, and other concepts will also be discussed.
Systems Analysis and Design I The application of concepts, tools, procedures, and techniques involved in the development of information systems. Emphasis is placed on the systems approach to problem solving, user involvement, the management of quality, project control, and teamwork.
Application Program Development bject-oriented application development. Topics include 00 Programming, three-tier design, and model-driven development. The course involves a major individual programming project. Students will develop and present their own large-scale application program.
Systems Analysis and Design II Emphasis on the application of the theory and techniques covered in the previous course. Students will research, analyze, design, implement, test and document a complete system. Students, working as a team, will analyze, plan, implement, document, and present a complete system in a real world environment.
Information Systems Resource Management A study of the principles and concepts involved in the management of organizational maintenance of all information resources, including hardware, software, and personnel. Includes coverage of departmental functions within computer/information services, as well as legal, ethical, and professional issues, quality management, and the strategic impact of information systems.
Principles of Marketing Marketing fundamentals, the ultimate consumer, the retailing and wholesaling systems, marketing functions, marketing policies, marketing costs, critical appraisal of marketing, marketing and the government.

Introduction to Financial Accounting 3.0FS  Introductory study of the information system that measures, records, and communicates the economic activity of an entity, in monetary terms, to stakeholders outside of the organization. The study of assets, liabilities, owners' equity, revenues, expenses, gains, and losses as they relate to the preparation of financial statements communicating an entity's financial position, results of operations, and cash flows.
Introduction to Managerial Accounting 3.0FS  Introductory study of the process of identification, measurement, accumulation, summarization, preparation, interpretation, analysis, and communication of financial and non-financial information to assist managerial planning, controlling, and decision-making within an organization to assure appropriate use of and accountability for the organization's resources.
Introduction to Business Law 3.0FS  A study of the role of law in business environments, including the study of legal institutions and their role in facilitating and regulating business.
Principles of Macroeconomic Analysis 3.0FS GE An introductory survey of macroeconomic analysis. Use of fundamental economic concepts to analyze the over-all economy. Determination of gross national product, rates of unemployment, problems of inflation, recession, and the use of governmental policies.
Principles of Microeconomic Analysis 3.0FS GE An introductory survey of microeconomic analysis. Analysis of individual economic units: household, firms, and markets. Analysis of individual decision making. Supply and demand analysis. Type of market organization: competition, oligopoly, and monopoly.
Finite Mathematics for Business 3.0FS GE Solutions to systems of linear equations, matrices, linear programming, combinatorics, probability, binomial and normal distributions.
Statistics of Business and Economics 3.0FS GE Descriptive statistics, sampling theory, statistical inference and tests of hypotheses, analysis of variance, chi-square tests, simple regression and correlation, and multiple regression and correlation.
Database Design Study of fundamental database design principles and techniques, including data modeling with Entity-Relationship diagrams and normalization. Study of SQL (Structured Query Language) database management systems capabilities. Study of the relational data model and relational operations. Study of database security mechanisms. Introduction to PL/SQL. Application of concepts and techniques to practical business scenarios.
Communication in Business Emphasis is on solving business problems through the strategic design of verbal, print, and electronic messages. Models for effective business documents, presentations, meetings, and interpersonal as well as electronic project interaction are applied to business communication problems. Related technology use, etiquette, cultural differences, and ethical considerations are highlighted.
Enterprise Technology Integration This course introduces students to the concept of information systems as the application of technical resources to support organizational processes. Given this foundation, students build an integrative, process-oriented understanding of information systems and their deployment, management, and use within distributed and global organizations. Projects focus on introductory enterprise systems, client-server database systems management, corporate data networking, and advanced Web programming.
Decision Analysis for Business This course introduces students to qualitative and quantitative decision analysis techniques and practical tools for critical thinking and problem solving in business. A primary emphasis is on the problem solving process including problem identification, data collection and evaluation, analysis, consideration of alternatives, and the presentation of logical and persuasive conclusions.
Systems Project Management Application of Project Management (PM) concepts and tools to systems projects. Students work in teams and apply PM concepts to projects and actual problems in organizations.
Survey of Finance An introduction to financial management, providing a background in the areas of financial institutions, the time value of money, analysis of financial statements, working capital management, financial structure of the firm, capital budgeting, and related tools of financial analysis.
Survey of Management Using a combination of theory and application, this course focuses on the human side of organizations, including issues of 1) making good decisions, 2) enhancing performance, 3) steering through a turbulent global environment, 4) combining and unifying multiple business functions and 5) enabling change. Students gain an understanding of management and how and why organizations are structured.
Survey of Marketing Nature and functions of marketing systems and marketing in the individual firm. Study of the marketing mix, marketing institutions, and the environments in which marketing decisions are made.
Operations Management An overview of the operations function in organizations; topics include operations strategy, manufacturing philosophies, process selection, supply chain management, inventory management, forecasting, production planning and control, capacity planning, material requirements planning, quality management and project management.
Strategic Issues for Information Systems Professionals  A senior seminar with an emphasis on strategy and management of adoption, implementation, and use of information systems in business. An integrative course serving to organize the information learned from earlier information systems and business school courses.
Enterprise Resource Planning: Systems Configuration and Use This course focuses on setting up an Enterprise Resource Planning (ERP) system for use in a global organization. Students learn how to configure a large system to support a global organization with multiple companies. Concepts, issues, current trends, and decision making are addressed through a cross-functional view of the enterprise.
Business Programming Introduction to the basic problem- solving skills needed to create and maintain business-oriented software. This course provides an overview of business information systems, their use in business contexts, and object-oriented design of applications. Coverage includes a survey of basic data structures and the standard algorithms used to manipulate and work with them.
Database Application Development Study of database application development concepts and techniques. Advanced data modeling and SQL for complex business applications. Stored procedures and database triggers. Application of concepts and techniques to practical business information processing environments.
Data Communications and Networking An introduction to data communications and local area networks. This course provides a background in standards and protocols used in communications and their functions within a business information system environment. The class combines lectures, writing assignments, group work, and class discussion to develop a fundamental knowledge of data communications and its importance to the business information systems environment.
Business Systems Analysis An in-depth examination of tools, techniques, and processes used to support the systems analysis portion of the systems development life cycle. Emphasis is given to requirements gathering, gap-fit analysis, development of the business case for systems development projects, as well as tools and techniques that plan, identify, model and communicate conceptual systems to both end users and programmers. Both case studies and real projects are used to develop hands-on experience with conducting business analysis studies from object, data, and process perspectives.
Web Programming Fundamentals A hands-on project course that examines languages, tools, protocols, and techniques for developing interactive and dynamic web applications. Topics include the model-view-controller pattern, document object model, server side and client side scripting, using a server side database, and web applications security.
Distributed Systems Management An in-depth analysis of current managerial issues related to business data communications, networks, and distributed processing. The topics covered in this course directly impact the analysis, design, and implementation of management information systems for both private organizations and government.
Supply Chain Management This course provides an overview of the supply chain management function in modern business. The objective of the course is to provide students with an integrative view of how supply chain decisions affect other functional areas of the firm and impact financial performance. The course focuses on three primary areas of supply chain management: strategy and design, planning, and operations.
Purchasing and Global Sourcing This course examines the business role and ethical consideration of purchasing and procurement. Students learn to identify supplier sources, negotiate terms and conditions of sale, and build and manage supplier relationships linked to organizational goals. Students learn how purchasing operates across all functional areas - including inbound logistics, manufacturing, and outbound logistics - and contributes to competitive advantage and added value through teamwork.
Production Planning and Inventory Control An in-depth study of inventory management and material requirements planning (MRP). Topics include the study of inventory systems and modeling, master production scheduling, and purchasing systems and control.
Quality Management The study and application of the quality management process in both the manufacturing and service sectors of the economy. Topics include process analysis and improvement, statistical process control, cost of quality, quality measurement, and quality in the global marketplace.
Distribution Systems and Channel Management The course includes a study of distribution and its role in the marketing system, economics of distribution, financing competing carriers, rate determination, government regulation subsidization, carrier organization, operation, and traffic control.
Labor Law and Collective Bargaining Intensive examination of unions in an organizational setting. Includes organizational and concerted activities, collective bargaining and employee/employer rights and responsibilities. Includes applied collective bargaining project.
Organizational Design and Change Effective organizations make active design decisions that support their goals and generate a competitive advantage. This course takes a systems perspective to analyze the different elements of an organization's design, including the fundamental elements of internal design and decisions regarding its interaction with its external environment.
Speech Communication Fundamentals Effective oral communication. Introduction to human communication theory. Practice in gathering, organizing, and presenting material in speeches to persuade, inform, and interest.
Academic Writing  Instruction and practice in writing university-level expository prose.
Argumentation and Debate Study of the nature of argument, including methods of analysis, research, patterns and fallacies of reasoning, use and tests of evidence, refutation, and debate as a practical application of argumentation.
Digital Literacy Digital literacy provides students with an introduction to acquisition, management, and communication of textual, numeric, and visual information. The course emphasizes the development of quantitative reasoning skills, financial literacy, and data visualization.
Chemistry and Current Issues This course will introduces students to some of the fundamental concepts of chemistry and illustrates how they apply to important contemporary issues, including nuclear power, water purification, alternative energy, climate change, and foods and drugs.
Introduction to Biological Anthropology The qualities of being human are examined through the investigation of evolutionary principles, non-human primates, human fossil record, and living peoples. The biological origin, evolution, and variation of humankind are explored.
United States History Survey of American history. Development of the United States and its political, economic, social, and cultural institutions.
American Government: National, State, and Local An investigation of Who gets What, When, and How in national, state, and local politics. Also includes principles of American governmental institutions, federal systems, congress, president, and courts. Fulfills California state graduation and credential requirements for the American Constitution.
Art Appreciation: Multicultural Perspectives An interactive discussion of art and visual literacy using related texts that focus on works from around the world, from ancient times to the present.
The American Indian A history of the Indian in North America, development of Indian culture, Indian-white relations, the disruption of the Indian way of life, wars, assimilation, and Indian culture in a Caucasian world.
Introduction to Agricultural Business and Economics The role of agricultural business in the economy. Introductory economic and business principles and their application to the solution of agricultural problems.
Introduction to African American Studies Introduces the aims and objectives of African American Studies. A critical examination of the African American experience and its antecedents. This includes an assessment of how the dominant society impacts African Americans, including such factors as racism, poverty, and the current social/economic status of African Americans.
Child Development A study of the physical, cognitive, social and emotional development of children from conception through adolescence. The course examines genetic, biological, and environmental influences including cross-cultural issues.
American Ethnic and Regional Literature in Focus This course explores the way place, socio-economic status, gender, and sexuality inform and inflect the experience of particular cultural groups set against the larger American culture. Classes typically focus on African American, Asian American, Chicana/o, or Native American literature.
Work, Wealth, and Income Distribution Investigation of the nature and causes of income distribution in the United States. Consideration of the social and economic forces which generate income levels and determine patterns of economic mobility over time, interweaving theoretical, descriptive, quantitative, and normative aspects.
Human Genetics The inheritance, expression, and evolution of the genetic material in humans. Topics include genetic engineering, gene therapy, prenatal diagnosis, cancer, the human genome project, genetic influences on human behavior, such as homosexuality and mental illness, and the social and ethical consequences of the new technologies.
Evolution Analysis of the evidence for evolution and the nature of the process. Darwinism, neo-Darwinism, sociobiology, conflicts and misconceptions regarding evolution, creationism, and evolution of the human body and mind are considered.
Bible, Literature, and Culture  Study of the literary types and qualities of the English Bible and their impact upon British and American literature and language.
Work, Wealth, and Income Distribution  Investigation of the nature and causes of income distribution in the United States. Consideration of the social and economic forces which generate income levels and determine patterns of economic mobility over time, interweaving theoretical, descriptive, quantitative, and normative aspects.
Geology of Food and Health  Focuses on the relation between natural geological factors, food production, and health problems in humans and animals on a global scale, and explores the impacts of diverse proposed solutions on population health and public policy.
Global Economic Geography A systematic survey of human economic activities. Analysis of resource exploitation and use, including agriculture, extractive activities, industry, commerce, and service functions.
Biology of Sex This course explores sex, gender, sexual expression, and mating behavior in humans and non-humans from an evolutionary biological perspective. Why does sex exist? Why do genders exist? What are the alternatives? Why is sex expression so variable in nature? What explains the diversity of courtship and mating behaviors? The course emphasizes lessons gleaned from applying the principles of scientific inquiry toward the study of these and related questions.
Introduction to Technical Writing A study of technical writing and presentation skills in business and scientific environments, including audience analyses, writing processes, genres of technical and business discourse, visual communication, collaboration, professional responsibility, clear and correct expression. Students write and revise several documents and give oral reports.
Gender and Sexuality in Modern European History This course explores major themes and developments in the social and cultural history of European women from the 1700s to the present, including changing gender roles, attitudes toward sexuality, reproduction, and the family. In particular, the course examines women's struggle to define themselves and their roles in society and their impact on the social identities of men.
Children's Gender and Sexuality Development  This topical course is designed for students who wish to develop a broader and deeper understanding of children's gender and sexuality development. Students study multiple theoretical explanations of gender and sexuality development, and learn how biological, social, cultural, and cognitive influences impact concepts of gender and sexuality.
Honors General Education Thesis  Independent study of an interdisciplinary topic that satisfies three units of upper-division GE theme requirements. This capstone course is designed to hone your skills in research and writing by working on a topic that grows out of the material you found most intriguing in your other upper-division theme classes.
Multicultural Literature: Issues and Themes  An intensive survey of major issues and themes in the intersection between Western and non-Western literature. Students examine the interconnections between works of North American cultures and works from the literatures of Africa, Asia, the Middle East, and Latin America.
Africa: Continuity and Change  An introduction to African societies in anthropological and ethnographic perspective. Comparative case studies in historical and regional context explore body and self, religious experience, expressive arts, environmental and political conjunctures, and social change across the continent.
Critical Reading and Expository Writing Writing paragraphs and essays based on close readings of various texts, with an emphasis on clear, grammatically correct expository prose. Students must take this course during the first eligible semester at the university.
Critical Thinking and Argumentation Writing essays based on critical analyses of various literary texts. Emphasis on sound argumentative techniques. Requires documented research paper. Students must earn a grade of “C” or above to pass this course.
Fundamentals of Communication An introduction to the primary areas of study in the communication discipline. Emphasis is on developing communication competence and understanding communication processes. Topics covered include public speaking, interpersonal communication, and group communication.
Public Speaking The study and practice of preparing, delivering, and analyzing public speeches. Writing in ways that appeal to different audiences and presenting in ways that are confident and credible are emphasized.
Argumentation and Debate An introduction to oral argumentation and debate, including case construction techniques, and case analysis and criticism.
World Literature Various genres from such non-European cultures as early Middle East, Asian, African, and Latin American.
Arts and Ideas I An examination of the arts and ideas of ancient and medieval cultures.
Introduction to Philosophy An introduction to some central philosophical problems concerning free will, the self, science, and reality.
Principles of Microeconomics A study of economics which concentrates on micro-theoretical concepts such as pricing, consumer choice, business production, and profit decisions.
Social Problems Sociological study of major current problems confronted in American society and the beliefs that compound them.
General Physics I-Noncalculus A survey of the topics in classical physics intended primarily for students in preprofessional curricula and majors in various engineering technology concentrations
Technical Physics I-Calculus Based A survey of physics for students majoring in technical fields, such as physics, chemistry, engineering, etc.
Probability and Statistics - Noncalculus Descriptive statistics and its relevance, including probability, experimentation, measurement, sampling and surveys, informal statistical inference, and hypothesis testing are included.
Calculus I Functions, limits of functions, derivatives and applications, and introduction to the integral.
Analytic Geometry and Differential Calculus A course in differential calculus with technical applications. Analytic geometry, quadratic equations, and additional topics in trigonometry as foundation to the calculus, limits, the derivative, and applications.
Introduction to Computer Science I Introduction to all aspects of the programming and problem-solving process and the elements of good programming style. A high-level language will be used as a vehicle for introducing these concepts. Laboratory use of the computer in designing, coding, debugging, and executing programs is an integral part of the course.
Introduction to Computer Science II Programming in a high-level language, including programming concepts, good style, algorithms, documentation, and elementary data structures.
PC Set-up and Maintenance Introduces students to the concepts and skills necessary to install, upgrade, maintain, and troubleshoot computers. Includes the installation and replacement of devices interfacing with the motherboard, installation and upgrade of at least two operating systems, and the analysis of computer performance.
Student in University This course is meant to provide guidance to first-year university students as they begin their search for directions to take in self-definition, intellectual growth, career choices, and life skills. Only first semester students may enroll.
Math for Computer Science Students will gain a working knowledge of set theory, mathematical induction and recursion, relations and digraphs, functions, trees and languages, finite-state machines, and languages and see how these topics are applied to the practice of computer science.
Fundamentals of Database This course will introduce students to the essential skills of creating, maintaining, and querying a database system. Basic methodologies for transferring data between a database and a program or web page will be covered. Also considered will be methodologies for database design to ensure consistency and accuracy of the data.
Computer Organization A study of the physical implementation of the computer including mathematical and logical foundations, component-level design, and an introduction to machine architecture. Topics include Boolean algebra, data representation, logic gates, combinational and sequential circuit design, memory cells, memory subsystems, memory hierarchy, I/O subsystems, I/O handling, interrupts, instruction representation, error detection, and serial protocols.
Networking Fundamentals A study of concerns related to the operation of computer networks. Topics include incentives for computer networking, the OSI model of network operation, network media, theory and practice of local area networking, bridging, switching, and routing. Principles of TCP/IP network operation.
Information Security and Assurance Presents critical concepts and skills that are related to protecting information assets from harm. Topics include the history of information security, basic security-related terminology and concepts, major classes of threats to information security, model strategies for protecting against those threats, computer forensics, and best practices in information assurance.
Software Engineering I An introduction to software systems development as an engineering discipline. All phases of the software development life cycle are examined, with particular emphasis on requirements analysis, requirements specification, and preliminary design. Participation on realistic team projects, use of automated tools, written and oral communication skills, exposure to legal, professional, and ethical issues is stressed.
Software Engineering II Software development as an engineering discipline with emphasis on detailed design, implementation, testing, maintenance, project management, verification and validation, configuration management, and software quality assurance. Communications (written and oral), legal, professional, ethical issues, participation on team projects, and use of automated tools are integral.
Essentials of Web DevelopmentAn introduction to the design and development of visually effective and functional web sites. Concepts include design principles regarding information architecture and page layout, the use of graphics in web pages, HTML, CSS, the use of web page and graphics editors, basic accessibility issues, the development process and maintenance issues. Laboratory use of software is an integral part of this course.
Server-Side Web Programming This course covers strategies for developing maintainable and efficient server-side Web applications. Topics include object-oriented methodology, server-side scripting languages, sessions, database integration with web applications, and web site security.
Fundamentals of Business Information Systems Presents the role and responsibility of IS management in a contemporary business environment. Topics include risk management, IS governance policies, system acquisition policies and processes, and IS financial management.
Database Advanced Topics A study of the use and underlying principles of database management systems, and approaches for database design with an emphasis on the relational approach. Students will learn how to use good design techniques and implement methods for both small and large databases. Laboratory use of database software for designing, implementing, debugging, and maintaining database systems will be an integral part of this course.
Database Administration A continuation of the study of the use and underlying principles of database design. Students learn more of the internal working of database management systems, as well as exploring approaches other than relational. Laboratory use of database software for designing, implementing, debugging, and maintaining database systems is an integral part of this course.
Information Systems Implementation Presents implementation and configuration issues in contemporary Enterprise Resource Planning (ERP) and other enterprise-scale information systems. Topics include configuration, organization modeling, role management, decision support, and data integrity.
Enterprise Programming Presents enterprise programming to those students who are experienced programmers through the use of contemporary enterprise system development language syntax, frameworks, and development environments. Development project management concepts are discussed.
Information Systems Strategy and Management Presents the role and responsibility of IS management in a contemporary business environment. Topics include risk management, IS governance policies, system acquisition policies and processes, and IS financial management.
Principles of Accounting I An introductory course in the fundamental concepts and procedures of financial accounting for corporations. Emphasis is placed on the preparation and use of accrual-basis financial statements for decision-making. Additional topics include the regulatory environment, the role of ethics, and the application of technology in the accounting environment.
Principles of Accounting II This course is a study of management accounting including costing, cost-volume-profit analysis, budgeting, productivity analysis, capital investment decisions, planning and control, and managerial decision-making in advanced manufacturing environments. Additional topics include accounting information systems and quality control measurements.
Financial Accounting I An advanced study of financial accounting and reporting including historical development, theoretical structure, the accounting process, financial statements, revenue recognition, current asset and liability recognition, and inventory valuation.
Management Accounting A study of cost accounting emphasizing job order costing, process costing, capital budgeting, and budget control analysis.
Principles of Macroeconomics An introduction to macroeconomic analysis which concentrates on economy wide systematic issues such as inflation, unemployment, and the level of economic activity.
Principles of Accounting I An introductory course in the fundamental concepts and procedures of financial accounting for corporations. Emphasis is placed on the preparation and use of accrual-basis financial statements for decision-making. Additional topics include the regulatory environment, the role of ethics, and the application of technology in the accounting environment.
Organizational Behavior and Management Introduction to the factors influencing individual and group behavior in organizations. From the field of organizational behavior, topics covered include individual differences and diversity, work attitudes, stress, work motivation, power and influence, decision making, negotiation, teams, leadership, organizational culture, and organizational research.
Organizational Theory and Development The study of the structure and functioning of organizations and an examination of the interactive effects of people, technology, and environment on the organization.
Current Management Issues course designed to teach students in specific up-to-date issues tailored to their specific degree requirements. Areas such as total quality management, continuous improvement, team building, quick response, efficient customer response, enterprise resource planning, and business process re-engineering are developed through lectures and case studies to show the student realworld application.

Speech Communications This course is designed to assist in sharpening students’ skills in oral communication with a focus on presenting in professional settings. Understanding basic communication concepts: brevity, precision and adherence to common delivery methods are hallmarks of clear, consistent and concise communication.
Introductory Written Communication The workshop style course focuses on building confidence in writing as students progress through the process of choosing essay topics, developing introductory paragraphs and thesis statements, creating effective body paragraphs and topic sentences, and drafting conclusion paragraphs.
Professional Written Communications Throughout the course, students will incorporate college-level research into their writing, which includes identifying credible research and using citations following CTU APA guidelines. Students will examine writing for a variety of contexts, purposes, and audiences.
Modern American History: 1950 to the 21st Century This course focuses on the key people, social experiments, and technologies that continue to impact our lives. Particular attention is paid to the latter half of the 20th Century and the dawn of a new millennium in America – a time that, through the lens of history, both gives us pause and inspires hope for the future.
College Algebra for Technical Programs Functions are introduced, including their definition, general properties of zeroes, extreme values, symmetry, transformations, and graphs. Special attention is given to linear, rational, radical, and quadratic equations. Additional topics include computation with complex numbers, solving systems of linear equations with matrices and determinants, and solving rational and radical equations and inequalities with absolute value.
Introduction to Ethics This course is designed to provide students a basic understanding of moral and ethical theories and concepts. The activities and discussions encourage students to explore and solve ethical dilemmas by identifying and applying moral and ethical theories. Students will also be encouraged to explain their reasoning from cultural, professional, and personal standpoints.
Introductory Psychology Psychology is fundamental to every field in academic study. This course is designed to teach the student a basic understanding of human behavior as well as emotional and cognitive development. Coursework incorporates terminology, principles, and foundational theories that comprise modern concepts of introductory psychology.
Introduction to the Sciences This course is designed to provide foundational knowledge in and foster an appreciation for the many dynamic disciplines –such as chemistry, physics, biology, and geology – within this robust field. This course is designed for students to explore the basic tenets of scientific thinking, including the Scientific Method, as well as other quantitative and qualitative approaches designed to enable them to draw meaningful conclusions about the world around them.
Science and Technology- Laboratory Course This is a learning experience that complements the Introduction to the Sciences course. Since the course addresses how scientific thinking and the resultant technology has changed modern life, this lab will provide students with experiences in the scientific approaches of different sciences covered, such as: biology, chemistry, physics, geology and astronomy.
Environmental Science and Sustainability This course analyzes the interrelationships between the natural environment and human activities. In this course, students are taught about the preservation and conservation of natural resources and the resilience of the natural environment with respect to the carrying capacity of the earth.
Social Perspectives on Race, Gender, and Class There is an interconnection between gender, race, and class that not only forms our individual identities but also influences how we view the world and others. This course explores how our personal perspectives mold the lens through which we observe our interactions with others. This course focuses on taking the viewpoint of those unlike ourselves.
Academic and Career Success This course introduces effective academic strategies and resources integrating them with career planning methods that can be leveraged to pursue future academic and professional goals.
Data Driven Statistics for Computer Systems and IT An elementary coverage of statistical techniques is augmented at each step with the aid of technology for data processing and analysis in making inferences. Graphical presentation and statistical measures are studied, followed by basic probability concepts leading to binomial and normal distributions. Hypothesis testing is applied to drawing inferences for one and two population parameters. A graphing calculator or equivalent technology is required.
Applications of Discrete Mathematics for Computer Systems and IT This course studies problems that involve finite or discrete data sets. Logic and set notation form a foundation for creating structure in data storage and information retrieval. Tools used include truth tables, methods of proof, Venn diagrams , graphs, trees, paths, and matrices. Additional topics include defining formal languages and recognizing syntactically correct sentences. Additional techniques include automata, digraphs, state transition tables and context free grammars.
Fundamentals of Networking This course serves as an introduction for students to acquire a foundation in current data communication and networking technologies. The course provides an introduction to the hardware, media, Ethernet, addressing, IP Configuration, components, and connections of a network. Network concepts such as network topologies, and major protocols, as well as the basic functions of network administration and operation are covered.
Computer Architecture This course studies computer organization and design. Topics include digital logic and digital systems, machine level representation of data, memory system organization and architecture, computer interfacing and multiprocessing.
Problem Solving in Computer Science The objective of this course is to introduce students to the foundational aspects of Computer Science as a discipline. Students will then be provided with an overview to core Computer Science knowledge areas. We will discuss the spectrum of computation technologies and their typical applications. Finally, the course will discuss problem-solving techniques and critical thinking methods that are commonly used in Computer Science.
Principles of Programming Languages This course provides a comprehensive introduction of programming languages including assembler, scripting, procedural, and Object-Oriented languages. For each type of programming languages, construction components and techniques will be presented and the main application suitability will also be discussed with real world examples. Students will also explore and apply common programming language constructs (i.e. data type, function, procedure, linear, branching, iteration, subroutines, etc.) through assignments in which students will be required to use proper language constructs to design programming logic.
Introduction of Programming This course introduces students to an introductory programming language which can demonstrate several common types of programming models such as scripting, procedural, and object-oriented programming in one language. The course covers algorithmic logic, basic declarations and statements, control structures, data and program design, basic concepts of object-orientation, and also covers how to organize multiple program components into a single programming project.
Python Programming This course will give students the opportunity to extend their programming skills through use of the Python programming language. The foundation of object-oriented and event-driven programming will be discussed and applied in this course. Topics studied will include the use of data structures, the creation of classes and objects, and the application of inheritance and polymorphism, etc.
SQL Programming This course will give students the opportunity to extend their database knowledge and skills through applying the theory into practical applications implemented by programming in Structured Query Language (SQL).
Java Programming This course provides students an opportunity to learn Java, another object-oriented programming (OOP) language, through the development of a software application. Students will use various Java language features to create classes and objects, and apply inheritance to construct solutions. In a lab setting, students will use an IDE (Integrated Development Environment) to incrementally implement and test the software application.
C++ Programming This course provides students an opportunity to learn C++, another object-oriented programming (OOP) language, through the development of a software application. Students will apply C++ language features to create classes and objects; and also apply object-oriented features such as inheritance, operator overloading, polymorphism, and templates to construct solutions. In a lab-oriented setting, students will incrementally implement and test the software application.
Fundamentals of Data Structures This course introduces students to the principles and idiosyncrasies behind representatives of some of the different types of data structures. The course includes an examination of arrays, stacks, queues, lists, and trees.
Introduction to Database Systems This course introduces the basic database management system (DBMS) concepts including relational data models, database management system architecture and components, as well as structured query language (SQL), etc. Topics such as conceptual, logical and physical database designs will be covered and applied for several small real-world database application projects.
Computer Algorithms Students are introduced to classical algorithms, including searching and sorting, hashing and information retrieval, with an emphasis on their applicability to solve real-world problems. Basic techniques to analyze and design algorithms are covered. Average and asymptotic behaviors are discussed. Complexity algorithms issues, performance characteristics, and estimating their potential effectiveness in applications are explored.
Mobile Programming As a foundation course for students looking to acquire programming skills in mobile platforms, this course introduces students to application development process for mobile devices. The course illustrates the commonalities and differences between the development process and workflow, application design methodology and principles, as well as the implementation tools for mobile computing as contrasted with those for desktop computing.
Introduction to Parallel Computing Parallel programming is a fundamental programming skill to construct high performance solutions for complicated computation tasks. This course introduces the basic concepts of parallel programming including parallel computer architectures, analytical modeling of parallel programs, and principles of parallel algorithm design, as well as effective techniques commonly used in coding
Principles of Operating Systems In this course, students are introduced to the design and the implementation concepts of modern operating systems. The topics covered include basic capabilities of operating systems, virtual memory, resource allocation and management, concurrent processes and threads, deadlock detection and prevention, protection and security, I/O and file systems, batch and interactive subsystems.
Software Engineering This course introduces students to the software development processes and methods. Traditional software development life cycle encompassing requirements collection and analysis, design, implementation, testing and the maintenance phases will be covered. The course also introduces principles and techniques supporting topics such as software development project management, people management, software requirements, system models, software design, verification and validation, software maintenance and enhancements, and ethical responsibilities.
Foundations of Big Data Analytics Big data analytics is a critical tool to enable corporations to gain and keep their competitive advantages. To be able to apply various computer technologies to either establish or execute business related data analysis applications is a key skill for any professional with a computer science degree.
Computer Science Team Project II This is the second course in a two course sequence that entails the end-to-end development of a software application in a project team setting. The course reinforces students' abilities to choose and apply the right principles, engineering processes, methods, and tools to conduct productive software implementation and testing.
Computer Science Team Project I This is the first course in a two course sequence that entails the end-to-end development of a software application in a project team setting. Students in this class will work in project teams. Every student will join only one project team and will assume at least one type of job function typical in a software development project, such as requirement collection and analysis, system function specification, architecture design, component design, prototyping, implementation, testing, project management, etc.
Introduction to Computer Security This course provides the foundation for the study of computer system security. The course centers around the ten domains comprising the Information Security Common Body of Knowledge. Topics include access control systems, telecommunications and network security, cryptography, operations security and business continuity and disaster recovery planning. Students will be exposed to security management practices as well as security architecture and models security laws, investigations and ethics.
Linux Programming This course introduces students to the basic features of Linux operating system and the fundamentals of Linux programming. Through several hands-on exercises and projects, students will be exposed to the Linux utility commands, file system and directories, the Linux shells, and the shell script programming.
Principles of User Interface Design This course introduces students to the theories, principles, and practices of user interface design for computer-based systems. Topics such as the human computer interaction, user interface design framework, platform consideration, user profiling, prototyping and usability testing will be covered.
Fundamentals of Software Requirements This course introduces students to various practical techniques for conducting requirements elicitation, specification, analysis, and validation. The additional topics covered during this course include requirements traceability, software quality matrix, and use case scenario development.
Fundamentals of Software Design This course introduces students to the fundamentals of software design. Software Design consists of a set of commonly used design principles, design paradigms, design models, and design patterns. Through several working projects, students will learn how to choose proper design principles, design paradigms, design models and design patterns based upon the requirements specification.
Software Service Construction This course introduces students to how to apply the agile software development approach (process and techniques) to develop Software as a Service by using a proper type of cloud (private, public, or hybrid) enabled web application framework. Students will explore the principles and highly effective methods to design, implement and testing as well as deploying a software on a public cloud as a service.
NoSQL Databases This course introduces students to the foundation, application background, design and implementation principles of NoSQL databases. The course illustrates the commonalities and differences between NoSQL databases and relational databases. The course covers how to best use different NoSQL databases in their working environments. The design of NoSQL-based applications in a variety of platforms such as Windows, Linux, and the Cloud is discussed.
Machine Learning This course introduces students to the foundations, commonly used algorithms and techniques, as well as various types of applications of Machine Learning which is a branch of Artificial Intelligence. The course discusses the strengths and weaknesses of different machine learning methodologies such as decision trees, neural networks, clustering, Naive Bayes, and regression based on the application requirements.
Data Mining This course introduces students to the foundations, commonly used algorithms, techniques and tools, as well as applications of data mining. The course will cover data collection and preparation, data classification, mining association rules, clustering, and the real-world applications where these techniques are used.
Streaming Data Analytics This course introduces students to the basic concepts of streaming data, which includes resources of streaming data, the characteristics and properties of various types of streaming data and the principles, models, methods and technologies that can be effectively applied for streaming data analytics. The course will examine the most common challenges of streaming data analytics—data collection, measurement, tracking, analysis, security, query processing and reporting.
Ethical Hacking This course covers ways that computers and networks are attacked by hackers using techniques and common utilities. Learners explore security threats and ways that system vulnerabilities are exploited to attack systems. Topics include Intrusion Detection Systems (IDS), ethical hacking techniques, sniffers, protocols, social engineering, vulnerability analysis, and penetration testing to ensure infrastructure security.

Computer Science I This course provides a foundation for further studies in computer and information science and emphasizes a structured approach to problem solving and algorithm development. Topics include principles of program design, coding, debugging, testing, and documentation. Students are introduced to the Unified Modeling Language for requirements analysis using use-cases and activity diagrams, an object oriented programming language, and the fundamentals of computer hardware, system software, and components.
Calculus I    Functions and their graphs; limits and continuity of functions, differentiation, algebraic and trigonometric functions, applications of derivatives, definite and indefinite integrals, and applications of definite integral.
Computer Science II This course presents techniques for the design, writing, testing, and debugging of medium-sized programs, and an introduction to data structures (stacks, queues, linked lists) using an object-orientated programming language.
Discrete Structures I  This course introduces students to various topics in discrete mathematics, such as set theory, mathematical logic, trees, and graph theory. Applications to relational databases, modeling reactive systems and program verification are also discussed.
Calculus II Transcendental functions, techniques of integration, improper integral, infinite sequences and series, Taylor's theorem, topics in analytic geometry, polar coordinates, and parametric equations.
Introduction to Linear Algebra   An introduction to the theory and methods of linear algebra with matrices.Topics include: systems of linear equations, algebra of matrices, matrix factorizations, vector spaces, linear transformations, eigenvalues and eigenvectors, science and engineering applications, and computational methods.
Data Struc and Algorithm Anlys This course focuses on data design and algorithm design. Data design topics include object-oriented discussions of hashing, advanced tree structures, graphs, and sets. Algorithm design topics include the greedy, divide-and-conquer, dynamic programming, backtracking and branch-and-bound techniques. A significant discussion of algorithm complexity theory, including time and space trade-offs and elementary computability theory, is included.
Discrete Structures II This course introduces students to further topics in discrete mathematics, including theory of computation, more complexity theory, coding theory, and game theory.
Software Engineering Tools This course will cover various CASE tools, such as UML modeling and code generation tools, configuration management tools, defect management tools, an integrated development environment for coding and debugging, unit and testing tools, and build tools. Students will learn these tools in a laboratory environment.
Computer Org and Assembly Lang  The architecture of computer systems and associated software. Topics include digital logic circuits, computer interfacing, interrupt systems, input/output systems, memory systems, assemblers and assembly language programming, and computer networks.
Eng Probability and Statistics  Set theory, combinatorial analysis, probability and axioms, random variables, continuous and discrete distribution functions, expectations, Chebychev's inequity, weak law of large numbers, central limit theorem, sampling statistics and distributions, point and interval estimation and linear regression.
Operating Systems   Introduction to computer operating systems. Process control, threads, concurrency, memory management, virtual memory, uniprocessor, multiprocessor, and real-time scheduling, I/O management, disk scheduling, file management, distributed processing, client/server, clusters, distributed process management,security.
Software Engineering I This course presents an in-depth treatment of the following software engineering topics: software engineering paradigms, requirements, specification, functional design, object-oriented design, user interface design, software verification and validation, and the maintenance and management of software engineering artifacts, as well as an introductory discussion of software reliability.
Comp Networks and Dis Process Study of the management aspects of computing networks and distributed systems. Topics include network architectures (ISO/OSI, TCP/IP, ATM), communication hardware (transmission media, network adaptors, switches), encoding, framing, error detection and correction, reliable transmission, data link control and LAN technology, internetworking, routing/congestion control, network design/management.
Software Engineering II  opics covered include personal software process, team software process, formal methods, security, software architecture, software quality assurance, software fault tolerance, the evaluation of the effectiveness of human computer interaction and software reliability.
Intro to Artificial Intel This course introduces students to basic concepts and methods of artificial intelligence from a computer science perspective. Emphasis of the course will be on the selection of data representations and algorithms useful in the design and implementation of intelligent systems.
Design Seminar I Students participate in the design and implementation of a major software project.
Design Seminar II  Students continue to participate in the design and implementation of a major software project.
Computer Game Design II  The focus of the course will be hands-on development of computer game development tools (e.g. game engines). Students will study a variety of software technologies relevant to computer game design, including: 3D graphics, computer animation, data-driven game design, multiplayer game programming, and game AI.
Computer Game Design & Implem  This course deals with the study of the technology, science and art in the creation of computer games. The focus of the course will be hands-on development of computer games. Students will study a variety of software technologies relevant to computer game design, including programming languages, scripting languages, operating systems, files systems, networks, simulation engines and multi-media design systems.
Data Security and Privacy  This course covers basics of data security and privacy techniques, which can facilitate the use of data in a secure and privacy-sensitive way. Topics include security and privacy challenges due to data collection and analytics, technologies and strategies for data security and privacy (access control mechanism, integrity policy, cryptography and encryption, notice and consent, anonymization or de-identification, deletion and non-retention).
Computational Learning    This course covers basic computational aspects of learning to perform a task and improve with experience. Topics include learning frameworks and problem formulations; standard models, methods, computational tools, algorithms and modern techniques; and methodologies to evaluate learning ability and to automatically select optimal models.
Soft Arch & Design Patterns This course focuses on design patterns in object-oriented programming. This course begins with an overview of UML and a review of object-oriented programming and then moves on to various structural, behavioral and creational patterns, including: facades, adaptors, bridges, factories and the template method. Analysis of case studies will also be discussed.
Compiler Design  Principles of language compilation. Introduction to formal languages. Lexical analysis, top-down and bottom-up parsing, code generation and optimization. Error handling and symbol table management. Run-time storage management. Programming language design.
Inf Vis & Multimedia Gaming  This course introduces basic techniques for digital animation, computer and video games, and web multimedia. Topics include the process of creating animated video clips from start to finish, including story creation, storyboarding, modeling, animation, and post-production; several key techniques for video editing and motion generation, including keyframe, motion capture editing, collision detection, particle systems, physical simulation, and real-time rendering; techniques for web animation and multimedia; and internet gaming.
Information Systems This course provides in-depth coverage of advanced infrastructures for the development of next-generation information systems

MATH 221  Discrete Mathematics 3.0 Credits Elementary set theory, combinatorics, elementary number theory, graphs, and special topics chosen from formal language theory, graph algorithms, coding theory, and other applications.
INFO 210  Database Management Systems 3.0 Credits Focuses on how to design databases for given problems, and how to use database systems effectively. Topics include database design techniques using the entity-relationship approach, techniques of translating the entity-relationship diagram into a relational schema, relational algebra, commercial query languages, and normalization techniques.
STAT 202  Business Statistics II 4.0 Credits This second course in business statistics focuses on widely used data analysis techniques in business and economics.  Topics include two sample procedures, categorical data analysis, analysis of variance, regression analysis and other statistical applications as time permits.  Applications are covered through practical data analysis examples.
CHEM 103  General Chemistry III 5.0 Credits Covers organic functional groups, biochemistry, inorganic and coordination compounds, chemical kinetics, thermodynamics, and nuclear chemistry.
STAT 201  Introduction to Business Statistics 4.0 Credits This introductory first course in business statistics focuses on applications of data analysis and statistics in business and economics.  Topics covered include descriptive statistics and graphical presentation, probability, statistical inference, and simple regression analysis.
CI 101  Computing and Informatics Design I 2.0 Credits Introduces computing and informatics through a combination of lectures and hands-on laboratory exercises. Lectures emphasize an integrated view of topic areas and systems, spanning low-level software and implementation issues to high-level use and acceptance by individuals and communities. Lab exercises allow students to explore familiar systems in unique and novel ways to better understand how these systems are designed and used.
ENGL 102  Composition and Rhetoric II: Advanced Research and Evidence-Based Writing 3.0 Credits Advances students’ development in the writing processes. Promotes a critical evaluation and integration of information into their own writing as they research complex and open-ended issues. Identifies the relationships between rhetorical situations, the status of claims, and the need for evidence and warrants. Continues review of grammar, style, and documentation conventions. Encourages collaboration and effective search strategies of the Internet and library resources. Promotes students’ reflective analysis and a positive attitude toward writing.
CS 472  Computer Networks: Theory, Applications and Programming 3.0 Credits Introduction to computer networking theory, applications and programming, focusing on large heterogeneous networks. Broad topdown introductions to computer networking concepts including distributed applications, socket programming, operation system and router support, router algorithms, and sending bits over congested, noisy and unreliable communication links.
CS 171  Computer Programming I 3.0 Credits Introduces fundamental concepts of computing including memory, instructions, function calls, and activation records. Covers fundamentals of structured computer programming in the language of instruction: variables, input and output, expressions, assignment statements, conditionals and branching, subprograms, parameter passing, repetition, arrays, top-down design, testing, and debugging.
UNIV CI101  The Drexel Experience 0.0-2.0 Credits This course introduces first-year students to university life, his/her major, our community, and co-op.
PHYS 102  Fundamentals of Physics II 4.0 Credits Second of a four course sequence teaching fundamental physics to engineering and science majors.  Topics include: electrostatics, capacitors, charges in motion, insulators, semiconductors, conductors, superconductors, voltage and current measurements, magnetism, electromagnetic induction, magnetic materials, quantum dots, magnetic resonance phenomenon.
CI 103  Computing and Informatics Design III 2.0 Credits Follows CI 102 in the Computing & Informatics design sequence. Introduces computing and informatics through a combination of lectures and hands-on laboratory exercises. Lectures emphasize an integrated view of topic areas and systems, spanning low-level software and implementation issues to high-level use and acceptance by individuals and communities. Lab exercises allow students to explore familiar systems in unique and novel ways to better understand how these systems are designed and used.
ECON 201  Principles of Microeconomics 4.0 Credits Examines allocation of resources within an economy.  Major topics include interaction of supply and demand in markets, consumer choice, cost structure of firms, and profit maximization for competitive forms as well as firms with market power.
CS 172  Computer Programming II 3.0 Credits Covers object-oriented design, inheritance hierarchies, information hiding principles, string processing, recursion, good programming style, documentation, debugging, and testing.
SE 310  Software Architecture I 3.0 Credits Study of macro-level software system architectures with an emphasis on approaches to interconnection and distribution of current and emerging architectural styles.
SE 211  Software Specification and Design II 3.0 Credits Continues study of requirements with increasing emphasis on converting requirements into a software system design. Presents alternate approaches, techniques for evaluating specifications, specification and design tools, and use of specifications to develop system-level tests.
CS 281  Systems Architecture 4.0 Credits Covers internal function and organization of digital computers, including instruction sets, addressing methods, input-output architectures, central processor organization, machine language, and assembly language.
CS 260  Data Structures 3.0 Credits Covers stacks, queues, linked allocation, binary trees, internal searching and sorting, hashing, and applications.
CS 283  Systems Programming 3.0 Credits This course introduces computer systems, including interaction of hardware and software through the operating system, from the programmer's perspective.  Three fundamental abstractions are emphasized: processes, virtual memory, and files.  These abstractions provide programmers a common interface to a wide variety of hardware devices.  Topics covered include linking, system level I/O, concurrent programming, and network programming.
ENGL 111  English Composition I 3.0 Credits Equivalent to the university requirement of ENGL 101. Develops multilingual (non-native speakers of English) students' abilities to use writing as a tool for research and reflection. Introduces the concept of genre, writing as a process, reflection on students’ own and others’ work, revision, and approaches to primary and secondary research. Reviews grammar, organization, style, and documentation conventions. Promotes positive attitudes toward writing.
CS 164  Introduction to Computer Science 3.0 Credits An introduction to the field of computer science.  Exposure to core areas (selected from algorithms, artificial intelligence, computer architecture, databases, graphics, human-computer interaction, programming languages, scientific computation, software engineering) while introducing and reinforcing the importance of programming.
CS 176  Advanced Computer Programming II 3.0 Credits Enhanced presentation of object-oriented design, inheritance hierarchies, information hiding principles, string processing, recursion, good programming style, documentation, debugging and testing.  Includes special focus on language facilities and use of libraries.
SE 210  Software Specification and Design I 3.0 Credits Study of the principles, practices, and techniques used to gather system requirements and document them in a requirements specification.  Includes techniques for requirements discovery such as user interviews and prototyping.  Introduces approaches for organizing and expressing software requirements in a requirements specification.
SE 410  Software Evolution 3.0 Credits Covers issues related to change in software systems. Addresses principles and techniques of corrective software maintenance, software enhancements, and software product family.  Introduces students to issues of change in large software systems including configuration control, change and product management.
CI 493   [WI] Senior Project III 3.0 Credits Part of a multi-term capstone experience involving in-depth study and application of computing and informatics. Students work in teams to develop a significant product. Requires use of a development process that includes planning, specification, design, implementation, evaluation, and documentation. This course is writing intensive.
BIO 126  Physiology and Ecology 4.5 Credits The first half of the course will survey physiological systems, including the respiratory, circulatory, homeostatic, excretory, and digestive systems in animals.  The second half of the course will emphasize the relationships between organisms and the environment, including how humans impact ecosystems and the biosphere.  This course has a lecture, lab and recitation component.
CI 492   [WI] Senior Project II 3.0 Credits Part of a multi-term capstone experience involving in-depth study and application of computing and informatics. Students work in teams to develop a significant product. Requires use of a development process that includes planning, specification, design, implementation, evaluation, and documentation. This course is writing intensive.
SE 181  Introduction to Software Engineering and Development 3.0 Credits Introduces advanced software development fundamentals including memory management, typing and scoping, datastores, software testing, and security, as well as user-centric design and user experience. This course will be taught using a specified programming language of instruction.
MATH 123  Calculus III 0.0-4.0 Credits Differential equations, Taylor's theorem, sequence and series, convergence, power series.
Calculus I Functions, limits and continuity, derivatives, trancendental functions, and applications.
CIVC 101  Introduction to Civic Engagement 1.0 Credit This course is designed to help students develop skills as active participants in a pluralistic, democratic society through direct service, education and reflection opportunities.
ENGL 101  Composition and Rhetoric I: Inquiry and Exploratory Research 3.0 Credits Develops students’ abilities to use writing as a tool for inquiry. Introduces genre theory, writing as a process, revision, and strategies of primary and secondary research. Reviews grammar, style, and documentation conventions. Engages students in reflection and promotes positive attitudes toward writing.
Calculus II Definite integrals, Fundamental Theorem of Calculus, integration techniques, applications of integration, numerical integration and differential equations.
ENGL 112  English Composition II 3.0 Credits Equivalent to the university requirement of ENGL 102. Advances multilingual (non-native speakers of English) students’ abilities to use of writing as a tool for research and reflection and their understanding of writing as a process. Develops the critical evaluation and integration of information into students’ own writing as they research social, political, and educational open-ended issues. Continues review of grammar, organization, style, and documentation conventions. Enhances effective strategies for secondary research and collaboration skills. Promotes positive attitude towards writing.
ECON 202  Principles of Macroeconomics 4.0 Credits Examines measurement, growth, and fluctuation of aggregate economic activity. Includes national income accounting and explains determination of output, employment, and price level. Also provides an introduction to international economics, money and banking, and economic policy.  Some or all pre-requisites may be taken as either a pre-requisite or co-requisite.  Please see the department for more information.
COOP 101  Career Management and Professional Development 0.0 Credits Prepares new students to achieve success, personally and academically, in their first co-operative education experience. Topics covered include career exploration, resume skills, interview techniques, professional conduct in the job search, contemporary workplace issues, and job searching and the Internet.
CS 270  Mathematical Foundations of Computer Science 3.0 Credits Introduces formal logic and its connections to Computer Science. Students learn to translate statements about the behavior of computer programs into logical claims and to prove such assertions using both traditional techniques and automated tools. Considers approaches to proving termination, correctness, and safety for programs. Discusses propositional and predicate logic, logical inference, recursion and recursively defined sets, mathematical induction, and structural induction.
CS 175  Advanced Computer Programming I 3.0 Credits Advanced programming in language of instruction at an accelerated pace: introduces fundamental concepts of computing including memory, instructions, function calls, and activation records. Covers fundamentals of structured computer programming in the language of instruction: conditionals and branching, subprograms, parameter passing, repetition, arrays, top-down design, testing, and debugging. Supplements basic topics with deeper presentation of advanced techniques for those with some incoming programming experience.
PHYS 201  Fundamentals of Physics III 4.0 Credits Third of a four course sequence teaching fundamental physics to engineering and science majors.  Topics include: oscillations, EM waves, interference, diffraction, wave-particle duality, energy-matter equivalence, uncertainty relations, Schrodinger's equation, Hydrogen atom, laser, and nuclear physics.
PHIL 105  Critical Reasoning 3.0 Credits Introduces and develops the skills involved in reasoning effectively about experience, and being able to distinguish strong arguments from weak ones.
ENGL 113  English Composition III 3.0 Credits Equivalent to the university requirement of ENGL 103. Advances multilingual (non-native speakers of English) students' development in the reading, writing, and research processes. Some courses may focus on the student's academic and discipline-specific experiences, while others may be based on literary or social themes. Enhances multilingual students’ ability to read texts critically and to reflect on their own and others’ writing, scholarly and literary works, and social events. Promotes a positive attitude toward writing.
CI 102  Computing and Informatics Design II 2.0 Credits Introduces computing and informatics through a combination of lectures and hands on laboratory exercises. Lectures emphasize an integrated view of topic areas and systems, spanning low level software and implementation issues to high level use and acceptance by individuals and communities. Lab exercises allow students to explore familiar systems in unique and novel ways to better understand how these systems are designed and used.
CHEM 102  General Chemistry II 4.5 Credits Covers chemical equilibrium, including acid-base equilibria in solution; electrochemistry; organic chemistry; polymers; and petroleum.
PSY 330  Cognitive Psychology 3.0 Credits Covers human thought processes, including perception and pattern recognition, learning and memory, language, problem-solving, and decision-making.
BIO 124  Evolution & Organismal Diversity 4.5 Credits Students will learn about the theory of evolution and the mechanisms of how organisms change.  Using this knowledge, students will explore the diversity of organisms on Earth that is a hallmark of biology and the result of evolution by examining the representative members from the five major kingdoms of life. This course has a lecture, lab and recitation component.
SE 311  Software Architecture II 3.0 Credits Continues discussion of software architecture with a focus on micro-level architecture including patterns, frameworks, and component-based software engineering, and commercial off-the-shelf software.
BIO 122  Cells and Genetics 4.5 Credits An introduction to the concepts of cell and function, cell and reproduction, cell communication, genetic inheritance, and population genetics.  The relevance of genetics to society and ethical issues are included.
CHEM 101  General Chemistry I 3.5 Credits Covers fundamental principles of chemistry, stoichiometry, atomic and molecular structure, chemical bonding, states of matter, thermochemistry, and periodicity.
PHIL 311  Ethics and Information Technology 3.0 Credits Ethical analyses of current laws and pending legislation aimed at regulating computer use as well as Internet practices and content.
PSY 101  General Psychology I 3.0 Credits Reviews the fundamental principles, concepts, and methods of psychology, with emphasis on the concepts of motivation, learning, and perception, and their psychological foundations.
COM 310   [WI] Technical Communication 3.0 Credits Develops skills in communicating technical information. Focuses on writing letters, resumes, proposals, reports, and instructions. Offers extensive writing practice along with exercises and presentations. This is a writing intensive course.
CI 491   [WI] Senior Project I 3.0 Credits Part of a multi-term capstone experience involving in-depth study and application of computing and informatics. Students work in teams to develop a significant product. Requires use of a development process that includes planning, specification, design, implementation, evaluation, and documentation. This course is writing intensive.
COM 230  Techniques of Speaking 3.0 Credits A workshop course in improving public speaking skills. Provides experience in speeches of explanation, persuasion, and argument.
SE 320  Software Verification and Validation 3.0 Credits Presents theory and practice of software testing.  Covers structural testing including such topics as path testing, dataflow testing, logic based testing, syntax testing, program slicing, mutation testing, fault injection, program perturbation, and testing tools.  Discusses techniques for test construction and test suite evaluation, and validation against requirements and design models.  Also covers methods of inspection and review at various phases of the software lifecycle.
CI 120  CCI Transfer Student Seminar 2.0 Credits Introduces students to the academic and co-curricular aspects of university life. Includes academic functions such as reflection papers, reading, and study skills, as well as co-curricular functions such as campus resources, activities, and social programs. Aids in the transition to student life at Drexel and is designed to help each student achieve academic and personal success through academic and career exploration.
CS 265  Advanced Programming Tools and Techniques 3.0 Credits Introduction to the basic principles of programming practice: testing, debugging, portability, performance, design alternatives, and style.  Application in a variety of programming languages, programming environments, and operating systems.  Introduction to tools used in the software development process for improving program functionality, performance, and robustness.
ENGL 103  Composition and Rhetoric III: Themes and Genres 3.0 Credits Advances students' development in the writing and research processes and their understanding of how genres of writing shape meaning. Some courses may focus on the student's academic and discipline-specific experiences; Others may be based on literary or social themes. Promotes a critical reading of texts, reflective analysis, and a positive attitude toward writing.
PHYS 101  Fundamentals of Physics I 4.0 Credits First of a four course sequence teaching fundamental physics to engineering and science majors.  Topics include: description of motion, inertial and non-inertial frames, special relativity, Newton's Laws, translational and rotational equilibrium, one- and two-dimensional motion, fundamental forces, inverse square laws, Gauss' Law, Bohr's quantization, rotational dynamics, potential energy, black holes, determinism and chaos.
INFO 310  Human-Centered Design Process & Methods 3.0 Credits Introduces the student to the process of human-centered design of interactive user interfaces. Teaches some of the basic approaches to design and evaluation of interactive user interfaces. Delivers practical advice on interaction design challenges. Applies human-centered design principles in the design of the user interface to an interactive computer system.
INFO 420  Software Project Management 3.0 Credits The objective of this course is to study project management in the context of software systems development. The course will cover the processes, contexts, metrics, planning and management concerns of managing projects for modern software systems.
ACCT 110  Accounting for Professionals 4.0 Credits The course is open only to non-business students. A nontechnical introduction to the principles of financial and managerial accounting with emphasis on the use and interpretation of financial reports, managerial planning and control.  The course would also provide an overview of business entities and taxation for businesses and individuals. The course is for the individual who seeks a basic knowledge of accounting and its uses. It is designed for the user of accounting information rather than the preparer. This course cannot be substituted for ACCT 115 or 116. Students graduating with a major in the School of Business cannot receive credit for this course.
First Year Seminar First Year Seminar
Introduction to Programming Techniques Design and implementation of algorithms. Structured programming. Problem solving techniques. Introduction to a high-level language, including arrays, procedures, and recursion.
Chemical Principles I is the first semester of a two-semester, comprehensive general chemistry course which introduces students to the basic principles of chemistry with an emphasis on the relationships between the microscopic structure and macroscopic properties of matter. Principles are illustrated with examples from the sciences, engineering and technology, and from everyday life. Topics covered are atomic structure and periodic properties, molecular compounds and chemical bonding, molecular structure, intermolecular forces, the properties of gases, liquids, and solutions, chemical reactions, stoichiometry and thermochemistry.
Experimental Chemistry I Students are introduced to laboratory safety and good experimental technique, how to keep a proper laboratory notebook, and interpret experimental data. The course introduces laboratory experimentation in the context of a variety of specific topics, such as reactions in solutions, spectroscopy, acids and bases, and the synthesis and analysis of chemical compounds.
Calculus with Analytic Geometry Differential calculus topics include derivatives and their applications to rates of change, related rates, linearization, optimization, and graphing techniques. The Fundamental Theorem of Calculus, relating differential and integral calculus begins the study of Integral Calculus. Antidifferentiation and the technique of substitution is used in integration applications of finding areas of plane figures and volumes of solids of revolution. Trigonometric functions are included in every topic
English Composition An overview of composition studies, with particular attention to the schools of writing pedagogy.
Intermediate Programming Object-oriented programming, recursion, fundamental data structures (including stacks, queues, linked lists, hash tables, trees, and graphs), the basics of algorithmic analysis, and an introduction to the principles of language translation.
Calculus with Analytic Geometry II Calculus is an important building block in the education of any professional who uses quantitative analysis. This course further introduces and develops the mathematical skills required for analyzing growth and change and creating mathematical models that replicate reallife phenomena. The goals of our calculus courses include to develop the students' knowledge of calculus techniques and to use the calculus environment to develop critical thinking and problem solving skills. This course covers the following topics: logarithms, exponentials, and inverse trigonometric functions; applications of the definite integral and techniques of integration; sequences and series; power series and Taylor polynomials; parametric equations and polar functions.
General Physics: Mechanics This course meets the Bachelor of Arts degree requirements. Calculus-based introduction to classical mechanics, including such topics as: measurement, dimensional analysis, motion in one-dimension, vectors, motion in 2 and 3 dimensions, relative and circular motion, force and dynamics, Newton's Laws, friction, kinetic energy, work, potential energy, energy conservation, systems of particles, center of mass and momentum, elastic and inelastic collisions, rotation (moments of inertia), rolling motion, torque, angular momentum, static equilibrium, gravitational force and Kepler's laws, gravitational potential energy, oscillations, waves (transverse and longitudinal, superposition of waves). This course is designed to provide students with a working knowledge of the elementary physics principles mentioned above, as well as their applications, and to enhance their conceptual understanding of physical laws. The exact model of instruction varies at different campuses due to different resources and class sizes. Students attend several class meetings including at least one lab or activity period per week. Use of a combination of computer-based and traditional lab exercises is expected and collaborative learning exercises will be used in both small class sessions. The introduction of data acquisition and analysis methods (often making use of modern computer tools) will be stressed in the laboratory/activity period. Course evaluation is based on a combination assessments such as homework, quizzes, lab reports, midterm and final exams, and other evaluative tools. The course is an important prerequisite for later work in many science and engineering disciplines.
Matrices Systems of linear equations; matrix algebra; eigenvalues and eigenvectors; linear systems of differential equations.
Introductory Microeconomics This course meets the Bachelor of Arts degree requirements. Economics is the study of how people satisfy their wants in the face of limited resources. One way to think about economics is that it is a consistent set of methods and tools that is valuable in analyzing certain types of problems related to decision--making, resource allocation, and the production and distribution of goods and services. There are two main branches of economics, microeconomics, and macroeconomics. Macroeconomics is concerned with economy--wide factors such as inflation, unemployment, and overall economic growth. Microeconomics deals with the behavior of individual households and firms and how government influences that behavior;
Object-Oriented Software Design and Construction Object-Oriented Software Design and Construction (3) Object-oriented design and programming embody powerful design strategies that are based on practical and proven software engineering techniques. In this class, students will learn how existing object-oriented languages support these strategies, how to apply these strategies to moderately-sized systems, and how to use a visual object-oriented modeling tool such as the Unified Modeling Language (UML).
General Physics: Electricity and Magnetism General Physics: Electricity and Magnetism (4) (GN)(BA) This course meets the Bachelor of Arts degree requirements. Calculus-based introduction to classical electricity and magnetism, including such topics as, electric charge and electric fields, Gauss's law, electric potential, capacitance, current, resistance, and circuits, magnetic fields, and fields due to currents, induction and inductance, magnetism of matter, Maxwell's equations, and electromagnetic oscillations. This course is designed to provide students with a working knowledge of the elementary physics principles mentioned above, as well as their applications, and to enhance their conceptual understanding of physical laws. The exact model of instruction varies at different campuses due to different resources and class sizes. Students attend several class meetings including at least one lab or activity period per week. Use of a combination of computer-based and traditional lab exercises is expected and collaborative learning exercises will be used in both small class session. Use of a combination of computer-based and traditional lab exercises is expected and collaborative learning exercises will be used in both small class settings. The introduction of data acquisition and analysis methods (often making use of modern computer tools) will be stressed in the laboratory/activity period.Course evaluation is based on a combination assessments such as homework, quizzes, lab reports, midterm and final exams, and other evaluative tools.The course is an important prerequisite for later work in many science and engineering disciplines.
Ordinary Differential Equations First- and second-order equations; special functions; Laplace transform solutions; higher order equations.
Effective Speech Introduction to speech communication: formal speaking, group discussion, analysis and evaluation of messages.
Digital Design: Theory and Practice Introduction to digital systems and their design. Topics include combinational and sequential devices and circuits, modern design tools and design practices
Circuits and Devices Introduction to electrical circuit analysis, electronic devices, amplifiers, and time-domain transient analysis.
Discrete Mathematics for Computer Science Discrete mathematics and foundations for modern computer science. Topics include sets, relations, logic, algorithms, graphs, finite state machines and regular expressions.
Statistical Analysis I Probability concepts; nature of statistical methods; elementary distribution and sampling theory; fundamental ideas relative to estimation and testing hypotheses.
Effective Writing: Technical Writing A key emphasis will be on the rhetorical principles of effective communication, including context analysis and defining clear, actionable purposes. Students will gain experience with a wide range of technical writing genres, including reports, descriptions, definitions, procedures, job application documents, emails, memos, and web applications. Students will also learn about the importance of document and graphic design, including how best to design communications to maximize their potential for success.
Microprocessors This course is designed to provide students with strong foundation in microprocessor programming and hardware interfacing both in the classroom and laboratory settings. This course is a required course in the Electrical Engineering BS curriculum and is intended to be taken by students who have completed their digital systems and first electronics course requirements. As such, the course integrates materials from the above undergraduate electrical courses in addition to related math, engineering, and science courses.
Software Engineering The purpose of this course is to stress a rigorous and systematic approach to embedded software development that represents current best practices and is widely accepted by business, industry and regulatory agencies governing embedded software. This includes proper planning and implementation.Knowledge of generally accepted core standards and guidelines is stressed, including safety planning, hazards analysis, software management planning, requirements specification, design documents, coding, test plans, test specifications, test logs, test reports, design reviews, structured code walk-throughs, verification and validation, and reporting. The Unified Modeling Language (UML) is introduced and followed, including the components of UML, class diagrams, object diagrams, use-case diagrams, state diagrams, sequence diagrams, activity diagrams, collaboration diagrams, component diagrams, and deployment diagrams. Object oriented concepts include classes, abstraction, inheritance, polymorphism, encapsulation, message sending, associations, and aggregation.
Operating Systems Resource management in computer systems. Process scheduling, memory management, file system design, I/O management, Unix operating system.
Database Management Systems Topics include: conceptual data modeling, relational data model, relational query languages, schema normalization, database/Internet applications, and database system issues.
Health and Physical Activity Health and Physical Activity
Embedded Real Time Systems Embedded Real Time Systems (3) Real time operating systems is the study of hardware/software systems in which timing constraints must be met for correctness. Real time systems are embedded in applications ranging from the antilock brakes in cars to the flight control systems for jetliners. Students are first introduced to the concept of systems with real time constraints by examining case studies. The unified modeling languages (UML) with real time extension is introduced allowing students to capture the constraints present in the systems in a variety of models allowing the problem to be described at several levels of abstraction. Tasks and messages are introduced as programming structures which can satisfy the constraints described by the UML models. With a basic understanding of real time systems and how to implement them, the focus of the course shifts away from these technical concerns towards understanding the documentation of the requirements using the Volere Requirements Specification template
Software Verification, Validation, and Testing Software Verification, Validation, and Testing (3) Provides a background necessary for verification, validation, and testing of software systems. Verification addresses the question: &quot;are we building the product right?&quot; In other words, does the product meet the engineering specifications? Validation addresses whether the right product is being built and if it meets the design requirements. The testing aspect of the course addresses many of the methods available to test software systems. The levels of testing explored are 1) unit level (each module is tested independently), 2) integration testing (where the modules are integrated together and tested as a complete system), and 3) acceptance testing (the testing requirements of the users). Following this, specific test methodologies are addressed. By the end of this course the student should also be able to develop an appropriate test plan.
Data Structure and Algorithms Fundamental concepts of computer science: data structures, analysis of algorithms, recursion, trees, sets, graphs, sorting.
Software Architecture Software Architecture (3)This course introduces the frequently-used software infrastructures in software development by experienced engineers. The formal UML notations are utilized to design software architecture and help communicate the design visually. Students will learn the real practice of architectural styles, design patterns and design reuse. As to certain complex problems, alternative architectures will be proposed and their design trade offs will be evaluated. For instance, students compare two-tier with three-tier client/server architectures for distributed systems, and employ multi-process and multi-thread concurrent architectures for high performance computation systems. Moreover, students learn to conduct high level quality analysis from the design artifacts. The quality evaluation will focus on a number of attributes, including reusability, extendibility and performance. A great deal of effort is placed on the major categories of design types containing dozens of separate design patterns. Students first review the most fundamental design patterns. Afterwards, they apply creational patterns to effectively create objects, partitioning patterns to categorize objects, structural patterns to allocate objects, behavioral patterns to interface the communication between objects, and concurrent patterns to handle tasks simultaneously. These skills will enable students to extend their own knowledge after graduation by giving them the skills to learn new patters on their own. Finally, students will integrate their programs with native code applications to enlarge the application domains. To achieve best reusability, they also learn modular designs to develop component-based software. These help them meet today's software needs of cross applications and architectures.
Communications Networks Data transmission, encoding, link control techniques; communication network architecture, design; computer communication system architecture, protocols. CMPEN 362CMPEN (E E) 362 Communication Networks (3)CMPEN (E E) 362 is an elective course in both the electrical and computer engineering curricula which provides an overview of the broad field of data and computer communications. First, a general model of the communication task is presented, including the layered concept by which each layer provides services for the layer above. First, the lowest (physical) layer is studied. This involves signal design, Fourier analysis representations, bandwidth concepts, transmission impairments and communication media properties. Then the next higher (link) layer is considered which involves organizing bits into frames, data link and error control methods (including frame sequence numbering and error detection principles). Multiplexing to share a link is studied, including frequency division multiplexing, dedicated time division multiplexing, and statistical time multiplexing.At the network layer level, there are two categories: broadcast (usually local area) and switching networks. Broadcast and local area network studies include bus, tree and star topologies, Ethernet, optical fiber bus networks, ring networks, and medium access control protocols.Switching and routing concepts for networks are explained, including both circuit and packet switching, datagrams and virtual circuits. Properties of frame relay and asynchronous transfer mode (ATM) networks are described. Internetworking frame structures, routing and protocols are studied. Also, bridge routing for local networks is described.At the still higher transport (network end-to-end control) layer, transport protocols, including TCP/EP, are described.
Programming Language Concepts Fundamental concepts of programming language design, specifications, and implementation; programming language paradigms and features; program verification.
Software Engineering Design Software Engineering and Design (3) The primary goal of this course is to familiarize students with the wide variety of techniques and methodologies used in software engineering to assist in the development of large software systems. Issues discussed include the human factors involved in developing software, models of the software development process, the use of formal methods in software engineering, software validation and verification, and software maintenance.A second goal is to help students understand the importance of written communication in software engineering, and to provide opportunities for students to improve the quality of their writing
Software Engineering Project Software Engineering Project
Basic Management Concepts exposes undergraduate students to the fundamental principles and basic concepts of management, with emphasis on organizational design, management processes, leadership, motivation, and managing teams and individuals in a global business environment. Understanding these principles and concepts is extremely important for students preparing for and entering the business profession. Managers plan, organize, lead, and control.
Composition and Rhetoric The first of two courses in college-level writing skills. Focuses on writing essays using various rhetorical modes: persuasion, description, comparison and analysis. Presents basic methods of library research, as well as the MLA documentation system. Students write one research paper and several essays.
Fundamentals of Software Development 1 Introduces software development as it applies to small programs. Students learn to program in a higher-level language and to read, understand, write and evolve typical small higher-level programs.
Computing Disciplines and Careers 1 Overviews computing-related disciplines and professional careers. Includes an overview of software engineering and computer science. Introduces the ethical, moral and legal implications of crafting software.
Applied Discrete Mathematics Topics include positional and modular number systems, relations and their graphs, discrete functions, set theory, propositional and predicate logic, sequences, summations, mathematical induction and proofs by contradiction.
University Experience Assists new incoming students during their initial academic and social transitions to the university. Aims to promote student success by providing information about campus and academic resources, and encouraging participation in the classroom and in the campus community.
Calculus 1 Functions and graphs, limits and continuity, derivatives of algebraic and trigonometric functions, chain rule; applications to maxima and minima, and to related rates. Exponential logarithmic, circular and hyperbolic functions: their inverses, derivatives and integrals.
Writing About Literature The second of two courses in college-level writing skills. Focuses on reading and analyzing poems, plays and short works of fiction. Students write several essays and one research paper on literary topics.
Fundamentals of Software Development 2 Introduces the basic data structures and algorithms used in software design and implementation. Includes sorting and searching techniques.
Computer Organization and Machine Programming Introduces digital logic, computer arithmetic, instruction sets and the basic components of computer architecture. Covers arithmetic/logic, control, memory and input/output units. Explores the relationship between computer architecture and machine language programming. Requires students to write programs in Intel assembly language.
Calculus 2 Integration and applications of integration, further techniques of integration, improper integrals, limits, lHospitals rule, sequences and series, numerical methods, polar coordinates and introductory differential equations.
Scientific and Technical Communication Practice in the technical and scientific writing style and format, including gathering and using data to prepare reports. Includes abstracts, reports, letters, technical descriptions, proposals and at least two oral presentations.
Algorithms and Data Structures to include algorithms and data structures fundamental to software systems development. Includes abstraction, recursion, algorithm design and complexity analysis, linked lists, stacks, queues, trees, and sorting and searching methods.
British Literature and Culture Emphasizes the interpretation of texts that represent the development of a British literary tradition and culture from its origins to the Restoration.
British and American Literature 2 Surveys British and American literature in the 20th and 21st centuries, from World War I to the present. Emphasizes the interpretation of texts that represent the development of the modern world and modern selves.
Programming in a Second Language Introduces a second programming language for computer science majors. Students learn to read and write programs in a second language. The language chosen is one with wide popularity and use. The current language is C++.
Applied Statistics Includes probability and sample space concepts, discrete and continuous random variables, moments of random variables, covariance, correlation, generating functions, conditional probability, independence, introduction to statistics, confidence intervals, hypothesis tests, chi-square tests, linear regression and non-linear regression.
Introduction to Software Engineering Presents a basis for the integration of engineering rigor and software development. Students are shown a practical yet rigorous method of going from a problem concept to a software solution. Includes requirements specification, functional specification and coding techniques using information hiding and stepwise refinement.
Introduction to Linear Algebra Includes vectors and matrices, linear equations, vector spaces and subspaces, orthogonality, determinants, eigenvalues and eigenvectors, and linear transformations. Introduces students to solution and manipulation of matrix equations using a standard package of mathematical software.
Software Testing 1 Explores functional (black box) methods for testing software systems, reporting problems effectively and planning testing projects. Students apply what they have learned throughout the course to a sample application that is commercially available or under development. The choice of sample application changes from term to term.
Human-Computer Interaction Introduces the methods and principles of human-computer interaction throughout the software development life cycle. Topics include user-centered design, prototyping, modeling interaction, cognitive models and socio-organizational issues.
Operating Systems Concepts Examines the design and implementation of operating systems. Includes process, storage and recovery management. Explores issues involved in moving from single-user systems to multitasking, multiprocessing and multiprocessor systems
Requirements Engineering Studies in depth software requirements engineering tools and techniques. Includes gathering user requirements, formal specification of system behavior, system interfaces, end user and system documentation and validation techniques. Emphasizes the end-user aspect of gathering and formalizing user expectations.
Junior Project Introduces the concepts and methodology of software project development. Forms teams and develops team proposals for capstone design projects that will be implemented during the senior year. Allows juniors to interact with seniors completing capstone design projects.
Software Design Methods Explores methods for the design of software systems. Includes formal specifications of software behavior, object-oriented analysis/design and structured analysis/design.
Formal Languages and Automata Theory Presents abstract models of computers (finite automata, pushdown automata and Turing machines) and the language classes they recognize or generate (regular, context-free and recursively enumerable). Also presents applications of these models to compiler design, algorithms and complexity theory.
Software Maintenance and Evolution Introduces the methods, principles and practices of software maintenance and evolution. Topics include program slicing, reusable components, refactoring, regression testing, program comprehension, reverse engineering and impact analysis.
Software Development Projects 1 A two-semester, senior-year project sequence that serves as the capstone for the project-intensive courses in software engineering. Students team to implement a software project from conception to completion.
Programming Language Concepts Surveys programming language concepts and design principles of programming paradigms (procedural, functional and logic). Includes a history of programming languages, data types supported, control structures and run-time management of dynamic structures.
Software Project Management Introduces project management issues that are typical of large software projects. Includes project planning, estimation, modeling, measurement and assessment techniques. Surveys software project management tools. Overviews the key CMM process areas for project management.
Software Development Projects 2 A two-semester, senior-year project sequence that serves as the capstone for the project-intensive courses in software engineering. Students team to implement a software project from conception to completion.
Formal Methods Introduces the use of mathematical models of software systems for their specification and validation. Includes finite state machine models, models of concurrent systems, verification of models, and limitations of these techniques.
Physics 1 Includes vectors; mechanics of particles; Newtons laws of motion; work, energy and power; impulse and momentum; conservation laws; mechanics of rigid bodies, rotation, equilibrium; fluids, heat and thermodynamics; and periodic motion.
General Chemistry 1 Covers fundamental principles of modern chemistry, including stoichiometry, properties of gases, liquids and solids, thermochemistry, atomic structure, properties of solutions and equilibrium. Includes lab component.
Physics 2 Includes electricity and magnetism, Coulombs law, electric fields, potential capacitance, resistance, DC circuits, magnetic fields, fields due to currents, induction, magnetic properties; and wave motion, vibration and sound, interference and diffraction.
Introduction to Biodiversity and Physiology Provides a hands-on approach to teaching concepts of biodiversity and physiology.

Engineering Seminar I The goal of this course is to prepare the student for study in an engineering discipline.
Engineering Seminar II This course is focused on the tools that teams use to engineer solutions together.
Engineering Seminar III The goal of this course is to prepare the student for upper class courses and entering the workplace.  Career preparation will include strategies for finding internships and full-time positions and preparing for the hiring process (building a resume, writing a cover letter, and interviewing).
Programming for Engineers An introduction to programming for electrical engineers. This course is a highly focused introduction to programming in C language. It covers the basics of programming including procedures, variables, types, loop, and control structures.
Statistical Process Control A variety of control charts will be used for assessing process stability and estimation of process capability. We will also study how engineers design experiments based on statistical quality control for the purpose of controlling, improving, and optimizing the engineering process.
Computer Science I - Lecture An introduction to computer programming from an object-oriented perspective. Students will complete several programs with an emphasis placed on good software engineering principles and development of good programming skills. Students will implement complete programs using an object-oriented programming language and development environment. Topics include: fundamental programming techniques including algorithm design, documentation, style, and debugging; fundamental program constructs including simple data types, and control structures; fundamental object oriented techniques including classes, abstraction, polymorphism, inheritance, and encapsulation; and fundamental software engineering principles.
Computer Science I - Lab for non-majors An introduction to computer programming from an object-oriented perspective. Students will complete several programs with an emphasis placed on good software engineering principles and development of good programming skills. Students will implement complete programs using an object-oriented programming language and development environment. Programming assignments will address the implementation and use of fundamental programming techniques including algorithm design, documentation, style, and debugging; fundamental program constructs including simple data types, and control structures; fundamental object oriented techniques including classes, abstraction, polymorphism, inheritance, and encapsulation; and fundamental software engineering principles.
Probability and Statistics for Engineers Course topics will include basic probability rules, conditional probability and independence, Bayes rule, discrete and continuous random variables, joint distributions, expectation and variance, probability distributions to include binomial, geometric, hypergeometric, Poisson, Gaussian, exponential, lognormal, t, F, and Chi-square, correlation and covariance, Central Limit Theorem and sampling distributions, simple linear regression, and inference procedures for means and proportions.
Design Patterns  Provides an advanced study of the concepts of object-oriented programming, with an emphasis on applying those concepts to software development. Many object design patters have emerged as proven ways to structure object-oriented solutions to a wide range of key problems.
Crafting Quality Code This course will explore the differences between code that works and good code. This will include: designing during development, characteristics of interfaces, naming conventions, defensive programming, selecting data types, organizing code, controlling loops, unusual control structures, table driven methods.
Software Metrics & Process Mgt Software Metrics & Process Mgt
Large Scale Architectures This course will cover the issues associated with enterprise size systems including: layered and tiered architectures, view patterns, input controller patterns, concurrency, session states, distribution strategies, domain logic patterns, object-relational patterns, web presentation patterns, and distribution patterns.
Interdisciplinary Development The course is focused on building a product for a non-engineering customer. The class will be paired with another course or activity on campus which will act as the customer.
Extreme Programming The capstone experience of product development using agile development techniques. Topics include iteration planning, configuration management, communication tools, customer management, retrospectives and revising the development project.
Design and Analysis of Algorithms Examines various techniques for designing algorithms and analyzing their efficiencies, and examines and compares their efficiency of execution. Studies the theoretical foundations for analysis of algorithms and the ramifications of design strategies on efficiency.
Database Management Systems Detailed examination of theory and practical issues underlying the design, development, and use of a DBMS. Topics include characteristics of a well-designed database; high-level representation of an application using ER modeling; functional dependency theory, normalization, and their application toward a well-designed database; abstract query languages; query languages; concurrency; integrity; security. Advanced topics may be included (e.g., distributed databases; object-oriented databases). Theory to practice is applied in a number of projects involving the design, creation, and use of a database.
Computer Networks Studies protocol suites, emphasizing the TCP/IP 4-layer model. Topics included are network addresses, sub netting, client/server network programming via the sockets API, network utilities, architecture of packets, routing, fragmentation, connection and termination, connection-less applications, data flow, and an examination of necessary protocols at the link layer, particularly Ethernet. Other topics may include FDDI, wireless, ATM, congestion control, and network security.
Computer Organization Introduces organization and architecture of computer systems from the standard von Neumann model to more recent architectural concepts. Internal structure and organization of a computer leads to significant differences in performance and functionality, giving rise to an extraordinary range of computing devices from hand-held computer to large-scale, high performance machines.
Operating Systems An operating system provides an abstract interface with which programmers can control hardware. The study of this area includes both the use of operating systems (externals) and their design and implementation (internals).
Calculus I Introduction to study of differential and integral calculus from algebraic, numerical, and graphical points of view. Concept of limit and applications of derivatives will be covered.
Discrete Mathematics Study of topics usually associated with analysis of discrete and/or finite mathematical models. Topics from logic, set theory, Boolean algebra, mathematical proof, recursion, induction, combinatorics, discrete probability, matrices and graph theory covered.
Elementary Linear Algebra Introduction to the study of matrices, linear systems, determinants, eigenvalues, and the geometry of linear operators. Topics from Euclidean n-space include linear transformations, linear independence, span, bases, inner product, and vector spaces. An introduction to structural proof techniques will be a part of the key concepts for the course.

