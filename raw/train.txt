Introduction to Algorithms and Programming and Lab Introduction to algorithms, their representation, design, structuring, analysis and optimization. Implementation of algorithms as structured programs in a high level language
Computer Architecture and Assembly Language Introduction to computer architecture, assembly language programming, system software and computer applications. Number systems and data representation. Internal organization of a computer. Primitive instructions and operations. Assembly language. Integrated lecture/lab environment.
Data Structures and Prog Introduction to data structures and the algorithms that use them. Review of composite data types, such as arrays, records, strings and sets. Role of the abstract data type in program design. Definition, implementation and application of data structures, such as stacks, queues, linked lists, trees and graphs. Recursion. Use of time complexity expressions in evaluating algorithms. Comparative study of sorting and searching algorithms
Computer Organization Extension of basic addressing concepts to more advanced addressability, such as base register and self-relative addressing. Comparative computer architecture focusing on such organizations as multiple register processors and stack machines. Basics of virtual memory input-output. Introduction to the concept of microprogrammable systems. Low-level language translation process associated with assemblers. System functions such as relocatable loading and memory management. Application of data structure and hashing techniques to the above
Discrete Structures for Computer Science and Lab  Study of discrete mathematical structures and proof techniques as used in computer science. Discrete structures, such as functions, relations, sets, graphs and trees. Proof techniques, such as proof by induction, proof by contradiction and proof by cases
Advanced Data Structures Introduction to advanced data structures (particularly persistent structures) using object-oriented design. Main memory structures, hash tables and trees. Architectural foundations for files. Large-scale sorting. Hash-based persistent structures. Indexed files. Introduction to databases.
Calculus I Limits, derivatives, and applications of differentiation. Definite and indefinite integrals. The fundamental theorem of calculus and applications of integration.
Calculus II Techniques of integration and improper integrals. Sequences and series. Power series and Taylor polynomials. Parametric and polar coordinates. Vectors and solid geometry.
Introduction to Linear Algebra Systems of linear equations, matrices, determinants, eigenvalues, vector spaces and linear transformations, as well as introduction to inner products on Rn and spectral theorem for symmetric matrices.
Introduction to Formal Logic Introduction to modern deductive logic, including propositional logic and theory of quantification.
Biological Principles I Selected topics illustrating major concepts in biology, including the scientific process, heredity, evolution, taxonomy and systematics, ecology and animal behavior. Observations, experiments and demonstrations. Emphasis on unifying biological concepts and methods in science
Biological Principles II Selected topics illustrating major concepts in biology, including biological chemistry, cells, molecular genetics, animal development and plant and animal physiology. Observations, experiments and demonstrations. Emphasis on unifying biological concepts and methods in science.
General Chemistry I Basic course in the fundamental principles and theories with special emphasis on chemical calculations. Includes a discussion of the kinetic molecular theory, atomic structures, the periodic table, solutions and oxidation-reduction
General Chemistry II Introduction to kinetics, gas phase and solution equilibria, electrochemistry, chemical thermodynamics, radio, organic chemistry and the descriptive chemistry of the more familiar metals and nonmetals.
Mechanics Dynamics and statics of particles and rigid bodies, harmonic vibrations and fluid mechanics.
Electricity and Magnetism Electric and magnetic fields, circuit theory and electromagnetic induction
Automata, Languages and Computation Study of the relation of languages (defined as sets of strings) and machines for processing these languages, with emphasis on classes of languages and corresponding classes of machines. Phrase structure languages and grammar. Types of grammar and classes of languages. Regular languages and finite state automata. Context-free languages and pushdown automata. Unrestricted languages and Turing Machines. Computability models of Turing, Church, Markov and McCarthy
Introduction to Operating Systems and System Architecture and Lab Recommended Prerequisite: COMP 105C or knowledge of C Language. Examination of the principal types of systems, including batch, multi-programming and time-sharing. Discusses networked system. Considers the salient problems associated with implementing systems, including interrupt of event driven systems, multitasking, storage and database management and input-output. Emphasizes some of the simple algorithms used to solve common problems encountered, such as deadlocks, queue service and multiple access to data
Concepts of Programming Languages Discussion of issues in the design, implementation and use of high-level programming languages through a historical framework, including how languages reflect different design philosophies and use requirements and the technical issues in the design of main abstraction constructs of programming languages. Other approaches to imperative or object-oriented programming, functional programming, logical programming and parallel programming.
Introduction to Software Engineering Concepts and techniques for systems engineering, requirements analysis, design, implementation and testing of large-scale computer systems. Principles of software engineering for production of reliable, maintainable and portable software products. Emphasis on object-oriented analysis and design techniques. Topics include unit, integration and systems testing, configuration management, software quality assurance practices and an introduction to Computer Aided Software Engineering (CASE). This is a lecture portion of a course in software engineering involving the design and partial implementation of a software system as a group project.
Algorithm Design and Analysis The analysis of algorithms, in terms of time and space complexity for best/average/worst case execution using asymptotic notation; the application of standard algorithmic approaches, including greedy, divide and conquer, and dynamic programming, to algorithm design; and a review of classical algorithms, including sorting, searching, and graph algorithms.
Senior Design Project Senior Design Project
Senior Project Lab Senior Project Lab
Introductory Probability  Sample spaces, probability rules, independence, conditional probability, Bayes Theorem, discrete and continuous random variables and distributions (e.g. binomial, Poisson, geometric, normal, exponential, uniform), expectation, moment generating functions, joint distributions and central limit theorem.
Applied Statistics  Introduction to the practice of statistics, emphasizing the role of probability. Includes basic probability, discrete and continuous probability distributions, expectation and variance, sample surveys and experiments, displaying and summarizing data, sampling distributions, central limit theorem, inference for proportions, chi-square test and least squares regression. Mathematics majors who are not in the Secondary Teaching option may not receive credit for both
Logic Programming Programming techniques in the logic programming language PROLOG. Prenex conjunctive normal form and grammatical algorithms. Tableaux, sequenzen, resolution and other semi-decision procedures. Closures of relations, fixed point theory, control mechanisms, relationship to functional programming.
Computer System Security Analysis of the need for computer system security and the security techniques in operating systems, databases and computer networks. Supporting techniques, such as auditing, risk analysis and cost-benefit tradeoffs, are discussed
Computer Network Software Basic software design and analysis considerations in networking computers into coherent, cooperating systems capable of processing computational tasks in a distributed manner. Network topology, routing procedures, message multiplexing and process scheduling techniques
Language Design and Compilers Examination of the issues involved in the design and subsequent implementation of programming languages. Considerations of implementation difficulties, including various features in a programming language. Tools and techniques to facilitate both the processing of programming languages and the building of programming processors.
Database Design Database structure, including: structure definition, data models, semantics of relations and operation on data models. Database schemas, including element definition and use and manipulation of the schema. Elements of implementation. Algebra of relations on a database. Hierarchical databases. Discussion of information retrieval, reliability, protection and integrity of databases
Computer Graphic Systems and Design and Lab Fundamental concepts of computer graphics. Graphics devices; graphics languages; interactive systems. Applications to art, science, engineering and business. Trade-offs between hardware devices and software support.
Multimedia Systems Design Study of fundamentals of multimedia storage, processing, communication, presentation and display by digital means with emphasis on audio, still images and video media. Includes sampling theory, compression techniques and synchronization. Discussion of hypermedia and methodology issues. Multimedia programming; software tools for authoring multimedia applications and interfaces.
Introduction to Artificial Intelligence Exploration of the use of computers to perform computations normally associated with intelligence. These include game playing, theorem proving, problem solving, question answering and visual perception. Topics include languages, system architectures and heuristic strategies for advanced, high-level computations. Covers computational models for knowledge representation, natural language and vision
Algorithm Design and Analysis The analysis of algorithms, in terms of time and space complexity for best/average/worst case execution using asymptotic notation; the application of standard algorithmic approaches, including greedy, divide and conquer, and dynamic programming, to algorithm design; and a review of classical algorithms, including sorting, searching, and graph algorithms.
Web Engineering I and Lab Internet infrastructure and the underlying networking technologies. Study of system and software architectures for web applications, e-business and e-commerce systems. Principles of website design. Advances in web-engineering technologies. Principles of web-based based transaction processing. XML and the associated technologies. Web service technology. Security and privacy issues.  Study of the emerging Internet technologies.
Human-Computer Interaction Examines the information exchange between humans and computer systems. Discusses aspects of input/output devices, software engineering and human factors with respect to human-computer interactions. Topics include text and graphic display; user modeling; program design, debugging, complexity and comprehension; and current research studies and methodologies
Academic Internship Academic Internship
Experimental Topics Courses in Computer Science  Experimental Topics Courses in Computer Science
Independent Study Independent Study

World Literature I  A survey of representative works of world literature from ancient times to the end of the 17th century, with emphasis on critical reading and writing skills.
Principles of Public Speaking The critical study and practice of public speaking emphasizing the art of rhetoric from a humanistic perspective. Areas of study include research and preparation, ethics, audience analysis, and presentation of speeches.
Programming Principles I  Provides a fundamental understanding of the development of computer solutions to solve problems with emphasis on structured, top-down development and testing. Concepts include the following: an overview of computer system design, problem solving and procedural abstraction design of computer solutions, algorithm development using simple data types and control structures, implementation and testing of programmed problem solutions, design modularization using subprograms and structured and user-defined data types.
Programming Principles II  Emphasis is on advanced techniques such as recursion, regular expressions, refactoring, object oriented programming concepts and constructs, reusing components, templates/generics, interfaces and classes. Experiences include use of an integrated development environment and shared (code) repositories.
Computers, Ethics, and Society  An investigation of issues related to the use of computers and computer technology including the following: computer ethics, professional standards, and social impact of computer applications. Some topics to be researched include: philosophical ethics, the application of ethical theory to situations involving computer technology, codes of conduct, privacy, data protection, employee privacy, data regulation, artificial intelligence, copyright/patent issues, computer malfunction liability, computer crime and responsibilities of computer users.
Discrete Mathematics  Covers important discrete mathematical objects such as sets, relations and functions, graphs and trees. An introduction to mathematical logic and reasoning, and the concept of an algorithm and its complexity will be covered.
Calculus II  Techniques and applications of integration; transcendental functions; indeterminate forms; improper integrals; parametric equations and polar coordinates; sequences and series; Taylor's theorem.
Introduction to Statistics I  Introduction to Statistics I
Healthful Living Introduces students to fundamental concepts associated with healthful living throughout the life span in modern society. Course content focuses upon the promotion of health and wellness within individuals, families and communities through an understanding of healthful living, development of healthy lifestyles and avoiding or overcoming harmful habits.
First Year Seminar  Seminar designed to develop foundational information literacy skills and apply them to academic inquiry, academic planning, and campus engagement.
Principles of Biology II  An introduction to evolution and its role in creating biodiversity. Students will explore how evolution creates a hierarchical pattern of shared ancestry among all living things. Topics include natural selection and evolutionary change, speciation, phylogeny and classification, and the structure and function of the major forms of life (domains, kingdoms, and major phyla).
Principles of Biology II Lab Principles of Biology II Lab
General Chemistry II General Chemistry II
General Historical Geology  Discusses the origin and geological history of Earth. Methods of interpretation, fossils, geologic time measurements, time scales, physical and organic development of Earth are taught.
Introduction to Physics II  An introductory course which will include electrostatics, electric current and circuits, and electromagnetism, and may also include optics and modern physics. Elementary algebra and trigonometry will be used. Laboratory exercises supplement the lecture material.
Physics Lab II Physics Lab II
Introduction to Physics II  An introductory course which will include electrostatics, electric current and circuits, and electromagnetism, and may also include optics and modern physics. Elementary calculus will be used. Laboratory exercises supplement the lecture material.
Data Structures  Introduction to abstract data types such as lists, stacks, queues, and trees, and algorithm analysis.
Systems Software  Provides basic concepts of computer software systems including operating systems, language translators, utilities, linkers and loaders, system component interface, diverse programming language concepts, and interfaces.
Theoretical Foundations  A study of languages, formal grammars, and abstract representations of computation.
Database Systems The fundamental concepts of database management systems (DBMS) including logical and physical database organization, date models and design issues. Emphasis will be placed upon the rational data model including design and implementation using commercial database systems.
Algorithm Design and Analysis  An in-depth study of the design, implementation, testing, and analysis of algorithms.
Computer Architecture This course will focus on the following topics: Computer Organization (RISC, CISC architecture), Assembly Language Programming, Processor, Memory and I/O Architecture, Parallel Architectures.
Data Communications and Networking  Fundamental concepts of data communications including architecture models, protocol suites, network programming, signal and data transmissions, error detection, and performance analysis.
Object Oriented Design  Introduction to concepts, methods, and current practice of object oriented design and analysis. Topics include the study of the Unified Modeling Language (UML), which has become an industry standard notation. UML topics will include use cases, diagramming notation (class, object, sequence) and object state diagrams. Students will use UML to design and implement individual and small group projects. Additional topics include understanding design patterns in building applications.
Computer Security  Computer security theory and practice fundamentals including methods of attack, defending against attacks, privacy vs security, methods of encryption, authentication, writing secure code, web security, and network security.
Distributed Web System Design  This course involves programming methodologies for the World Wide Web. Topics include: Client-side programming, distributed transactions, remote procedure calls, component objects, server side programming and network load balancing.
Software Engineering This course serves as a major integrative, capstone experience for students and requires teamwork. A study of the development and management of software; strategies and techniques of design, testing, documentation and maintenance.
Logic Circuits and Microprocessor Digital system and Logic Circuits Design. Topics include the study of the Logic gate, Boolean Functions representation and Minimization, Combinational and Sequential logic circuits, Programmable Logic Arrays, Data Representation, RAM, ROM, and Cache Memories, Register Transfer Language and micro-operations, Hardware Description Language (VHDL), Microprocessor Organization and Design, Assembly Language, Computer Aided Design Tools and Filed Programmable Gate Arrays.
Selected Topics  Specialized study in a selected area of Computer Science. Graduate students will be given an extra assignment determined by the instructor that undergraduates will not be required to do.
Discrete Simulation Introduction to discrete simulation models and their implementation on computers. Topics include modeling techniques, experiment design, analysis and validation of results. Students will be exposed to one or more computer simulation languages.
CALCULUS I The course provides an introduction to calculus with emphasis on differential calculus. Topics include limits of functions, derivatives of algebraic and transcendental functions, application of the derivative to curve sketching, optimization problems, and examples in the natural sciences, engineering, and economics.
ENGLISH COMPOSITION I Prepares students for diverse types of college writing. Covers the writing process, general criteria used to evaluate writing, collaborative writing, and rhetoric, especially audience analysis.
INTRODUCTION TO PROGRAMMING Problem-solving and pre-programming skills developed using hands-on activities in preparation for the introductory programming course.
PROB SOLV AND PROG CONCEPTS An introduction to the design of algorithms and their implementation in a high-level programming language. Topics include: problem solving strategies, programming concepts, programming environment, control structures, methods, arrays, searching, sorting, object-oriented programming, and file input/output.
DISCRETE MATH STRUCTURES This course is an introduction to discrete mathematics for students majoring in computer-related areas. Students will be introduced to concepts and methods that are essential to theoretical computer science. A strong emphasis is placed on mathematical reasoning and proofs. Topics include sets, functions, induction, recursion, combinatorics and graphs.
CALCULUS II This course is a continuation of MA 125 with emphasis on integral calculus. Topics include techniques of integration; applications of the definite integral to geometry, natural sciences, engineering, and economics; improper integrals; infinite sequences and series; Taylor polynomials and Taylor series; parametric equations and polar coordinates.
ENGLISH COMPOSITION II3 cr Prepare students for college writing by focusing on argumentation, research, and the critical thinking required to argue effectively.
INTRO DATA STRUCTURES ALGS The course will cover techniques to organize and access collections of data, definition, implementation, and use of Classes and Abstract Data Types(ADT). Topics include: stacks, queues, heaps, search trees, recursion, algorithmic complexity, advance searching and sorting algorithms, and graphs and their application to problems.
DECISION MAKING - SMALL GROUPS Theory and practice in leading and participating in small group decision making Special focus on group problem solving and the management of conflict in small group decision-making meetings.
PUBLIC SPEAKING A beginning study of the principles of speech communication as they relate to speaker-audience communication. The student is provided an opportunity to develop the art of audience and subject analysis, research, critical thinking, organization, language, and delivery of speeches.
DIGITAL LOGIC COMPUTER ARCH Topics include: Boolean algebra, minimization techniques, combinatorial and sequential circuit analysis, memory organization, microprocessor concepts, and CPU architecture.
SOFTWARE ENGINEERING PRIN Models, techniques, and tools used in project management. Topics include: software development process, task scheduling, estimation and progress measurement. Coordination of development teams. Standards, testing plans, configuration management, metrics and use of CASE tools, system delivery and maintenance strategies.
OPERATING SYSTEMS This course covers the development of operating systems that control computing systems. Topics include: file systems, process management, scheduling, memory management (real and virtual), security, and concurrency.
COMPUTER ORG-ARCHITECT An introduction to computer organization using a top down approach from system component to the register level, internal representation of data, general assembly and linking concepts, addressing modes, and introduction to a specific processor, its architecture and operating system.
NETWORKING AND COMMUNICATIONS An introduction to computer networks. Topics include: data transmission, network architectures, file compression algorithms, communication devices and protocols, network routing and flow algorithms.
ADV DATA STRUCTURES AND ALGS This course teaches techniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics to be covered include: mathematical foundations; analytic, empirical, and qualitative evaluation techniques; hash tables; graph algorithms; balanced trees; priority queues; dynamic programming; and divide-and-conquer.
SECURE SOFTWARE ENGINEERING The objective of this course is to enhance the security of software by introducing sound security principles that should be incorporated into the software development process. Students will learn a risk management framework and best practices for software security including code reviews, architectural risk analysis, penetration testing, risk-based security test, abuse cases, security requirements, and security operations.
PROG LANGUAGE THEORY Formal examination of programming languages. Formal Language concepts including syntax and basic grammars are studied. Language features such as data types and structures, control structures, and data flow are examined. The run-time environment and the process of interpretation/compilation are covered. Interpreter and compilation techniques are introduced.
HY OF WESTERN CIVILIZATION I History of humankind, emphasizing the development of the West to c. 1600 C.E. Topics may include Mesopotamia and Egypt, Ancient Greece and Rome, the origins of monotheistic religions, and medieval Europe,
US HISTORY TO 1877 Survey of US History to 1877. Topics may include Native American societies, colonial societies, the American Revolution, slavery, the Civil War, and Reconstruction.
INFORMATION TECH IN SOCIETY A discussion of personal, local, national, and global impact of information technology on ethical, legal, and social issues.
FORM LANG - AUTOMATA THEORY Mathematical preliminaries, languages, context-free grammars, parsing, normal forms, finite automata, regular languages, pushdown automata, Turing machines.
APPLIED PROBABILITY-STATISTICS Concepts of probability theory, discrete and continuous probability distributions including gamma, beta, exponential and Weibull, descriptive statistics, sampling, estimation, confidence intervals, testing of hypothesis, ANOVA and multiple comparisons, linear and multiple regression, correlation, nonparametric analysis, contingency table analysis, computer-assisted data analysis using appropriate statistical software.
HY OF WESTERN CIVILIZATION II History of humankind, emphasizing the rise of the West, from c. 1600 C.E. Topics may include the Enlightenment, the French Revolution, WWI, WWII and the Cold War.
US HISTORY SINCE 1877 Survey of US History from 1877. Topics may include Western frontiers and Native Americans, Progressive Era, immigration, the Great Depression and Civil Rights Movements.
TECHNICAL WRITING - W The purpose of this course is to train students in the kinds of written reports required of practicing professionals, aiming to improve mastery of the whole process of report writing from conceptual stage through editing stage.
SENIOR CAPSTONE EXPERIENCE-W A comprehensive team project will be completed and documented. Writing assignments will reinforce the importance of life-long learning, leadership skills, and the ethical issues of computing as well as appropriate resume and job application cover letter creation.
CIS SENIOR SEMINAR A series of mini-seminars designed to prepare graduating seniors for transition to professional careers in computing or graduate study and to assess student learning outcomes in the curriculum. Mini-seminars would include, but would not be limited to: resume development, interviewing tips and techniques, career planning, professionalism and ethics in the workplace, and advanced graduate study and professional development.
COMPILER DESIGN-CONSTRUCTION Lexical analysis, syntactic analysis, intermediate code generation, object code generation, optimization, memory use, generators for scanners and parsers.
ADV GAME & SIMULATION DEV This course will cover advance topics related to the development of game and simulation software. Topics include game physics, collision techniques, game mechanics, level design, artificial intelligence, and security.
REAL-TIME SOFTWARE SYSTEMS Design and implementation of software for real-time computer systems. Survey of typical real-time systems; techniques for code-conversion, error checking, and transmission monitoring.
COMPUTER GRAPHICS An in-depth study of hardware and software techniques used in computer graphics. Study of display and entry devices, including refresh, storage, and raster scan topics. Software techniques will include display files, windowing, clipping, two and three-dimensional transformations, and hidden-surface removal.
AI THEORY AND PROGRAMMING Introduction to basic concepts, implementation techniques, and philosophies of artificial intelligence and intelligent systems. Introduction to expert systems, fuzzy logic systems, neural networks, and techniques for artificial intelligence programming. The fundamentals of an AI programming language (LISP or PROLOG) will be presented. The language will then be used to solve problems in typical AI applications.
INTRO TO PHYSICAL SCIENCE The scientific attitude, the application of physical laws and principles to modern life, and assembling of apparatus and materials for demonstrating these principles are studied.
INTRO TO PHYSICAL SCIENCE The scientific attitude, the application of physical science laws and principles to modern life, and assembling of apparatus and materials for demonstrating these principles are studied.
Speech Focuses on oral communication. The student will examine practical programs in speech preparation, delivery, informative and persuasive strategies, and listening and responding to messages of others. Most of what a student gains from this course will come not only from reading a text but also from in-class projects, simulation exercises, and skills training.
Calculus I A development of the fundamental concepts of calculus using graphical, numerical, and analytic methods with algebraic and trigonometric functions of a single variable. Limits and continuity, derivatives, indefinite integrals, definite integrals, and the Fundamental Theorem of Calculus; applications of derivatives and integrals.
Discrete Structures: Computer Science Logic, sets, counting techniques, cardinality, relations, functions and sequences, matrices, mathematical induction, and computer science applications. Please see the mathematics program for placement details. Offered fall and winter semesters.
Discrete Structures: Computer Science 2 Properties of relations, equivalence relations, partial orderings, fundamental concepts of graphs, trees, digraphs, networks, and associated algorithms; computer science applications
Introductory Applied Statistics A technique-oriented approach to statistical problems with emphasis on applications. Descriptive statistics, probability distributions, estimation, testing hypotheses, t-test, regression and correlation, chi-square tests, and one-way analysis of variance. A statistical software package will provide computational assistance.
Business Communication Training in communication skills for business and the professions. Assignments cover varieties of information management, including handling research, gathering data, writing reports, manuals, directions, and correspondence, and making oral presentations.
Calculus II Continuation of MTH 201 using graphical, numerical, and analytic methods to study exponential, logarithmic, hyperbolic, and inverse trigonometric functions. Indeterminate forms, improper integrals, integration techniques, sequences and series, Taylor polynomials, and power series.
Linear Algebra I Vectors in two and three dimensional space, systems of linear equations, matrix algebra, determinants, vectors in n dimensional space, subspace, dependence, bases, linear transformations, eigenvectors, and applications.
Automata and Theory of Computation Introduction to basic mathematical models of computation and the finite representation of infinite objects. Finite automata, regular languages, nondeterminism, pushdown automata, context-free languages, Turing machines and variants, halting problems, time complexity of algorithms, and NP-Complete problems.
Intermediate Applied Statistics Project-oriented introduction to major statistical techniques using a statistical package such as SAS or SPSS. Hypothesis testing, t-test, multivariate regression, analysis of variance, analysis of covariance, chi-square tests, and nonparametric statistics
General Biology I Introduction to cell structure and physiology, growth and development, and genetics (3-0-3). Offered every semester. Fulfills Foundations - Life Sciences with a lab.
Statistical Computing and Graphics with R An introduction to statistical programming and graphics using the object-oriented statistical language R. Skills in writing R code to perform statistical analyses, graphics, and simulations are developed. Emphasis will be on solving real problems with hands-on work including randomization statistics, time series, data mining, and big data analysis.
General Biology II Students will be introduced to the diversity of living organisms, emphasizing fundamental biological processes operating at the scale of individual organisms. Form and function of organisms will be studied in ecological and evolutionary contexts.
Anatomy and Physiology An introduction to the human body, its form and function. With the study of each system, correlations between its function and the functions of other systems are emphasized.
Principles of Chemistry I First semester of the two-semester general chemistry sequence for the sciences. Concepts of atomic structure, development of the principles of modern chemistry, connections between atomic/molecular structure, and observed behavior
Principles of Chemistry II The second semester in the two-semester general chemistry sequence for the sciences. Builds on the theoretical foundation of CHM 115 to develop the concepts of equilibria, solubility, acids and bases, kinetics, and thermodynamics
Exploring the Earth Introduction to the study of earth materials and processes, including minerals, rocks, mineral deposits, weathering, erosion, volcanism, and mountain building. Lectures, laboratories, and field trips
General Physics I The first half of a two-semester noncalculus sequence with a laboratory; recommended for life science majors. Kinematics, vectors, Newtonian mechanics, gravity, work, conservation of energy and momentum, fluids, and properties of matter.
General Physics II The second half of a standard one-year noncalculus sequence with a laboratory; recommended for life science majors. Electricity and magnetism, fields, simple electrical circuits, light and optics, and introduction to quantum and nuclear phenomena.
Principles of Physics II The second course in a two-semester sequence for students of science and engineering, with a laboratory. Topics include thermodynamics, Coulombs law, electric fields and potential energy, Gausss law, circuits, electrical waves and oscillations, Maxwells equations, and optics
Computer Science I Introduction to programming and computer science through lab and lecture. Simple and structured data types and program control structures. Problem analysis, algorithm design, and computer implementation using a high-level language. Offered every semester
Computer Science II Intermediate object-oriented programming: inheritance, abstract classes, interfaces, and exception handling. Introduction to algorithms and data structures: basic analysis of performance using big O(), recursion, searching, sorting, linked lists, stacks, queues, and basics of trees and tree traversal algorithms.
System-level Programming and Utilities Introduction software infrastructure underlying development of computer programs. Topics include Linux utilities, shell scripting, processes, facilities for programming, the C programming language, libraries, structures, pointers, dynamic memory management, and system calls
Data Structures and Algorithms Advanced data structures, including lists, trees, sets, and graphs. Analysis of algorithms. Emphasis on abstract data types, their representations, and role as models in the development of computer algorithms.
CIS Internship Preparation CIS Internship Preparation
Structure of Programming Languages Language definition structure. Data types and structures. Control structures and data flow. Lexical analysis and parsing. Interpretive languages. Run time considerations.
Introduction to Software Engineering Systems development life cycle from project request through project implementation and evaluation. Systems analysis and design concepts, tools, and techniques are emphasized
Computer Organization and Assembly Language Introduction to the logical structure of computers, including combinational and sequential logic, arithmetic, datapaths, CPU control, caches, and basic pipelining. Introduction to assembly language including data movement, arithmetic, comparing and branching, bit manipulation, procedure calling, memory access, and implementation of high-level language constructs
Database The study and application of established sound principles in the modeling, design, implementation, and manipulation of databases using industrial-strength Database Management Systems
Operating Systems Concepts Fundamental operating systems concepts: processes and threads, CPU scheduling, coordination and synchronization, deadlock, memory management, input/output devices, file systems, distributed systems, protection and security. Case studies and lab exercises using modern operating systems
Data Communications An introduction to data communications techniques, particularly as applied to computer networks. Physical media and devices, data link and network protocols, and other data communications topics will be studied
Computer Science Project Computer Science Project
Internship Internship
Data Mining Data mining is the application of computational techniques to the discovery of useful information in large data sets. This course will provide a hands-on study of computational methods for such knowledge discovery. Topics include clustering, classification techniques, and selected data mining software.
Mobile Application Development Fundamental concepts and technologies underlying mobile application development. All aspects of developing and deploying conventional mobile applications are covered, including mobile user interfaces, location-based services, integration with social media and other cloud-based services.
Information Management and Science Introduction to information representation, modeling, storage, retrieval, processing, analysis, visualization, and science. Topics may include digital libraries, repositories, collections, metadata, databases, ontologies, vocabularies, dictionaries, and multimedia, as applied to complex and compound content at a large scale. Approaches will be discussed for business, medical, humanities, and scientific contexts.
Artificial Intelligence Introduction to the concepts of artificial intelligence using the LISP programming language. Knowledge representation and problem solving applied to expert systems, natural language understanding, machine learning, and vision
Computer Graphics Principles of computer graphics. I/O devices. Basic graphic primitives and attributes. Transformations: translation, scaling, and rotation. World and screen coordinates, windows and viewports, clipping. Circle drawing. Graphics and text modes. Raster graphics. Filling algorithms. 3-D graphics.
Usability Design and Evaluation The usability engineering design cycle. Discount usability evaluation techniques. Graphical user interface development. Technical communication skills
Web Application Programming The tools and techniques for developing dynamic Web applications. Topics include scripting languages, markup languages, database connectivity, Web standards and security issues.
Wireless Networking Systems A multidisciplinary, hands-on oriented course that integrates topics at all layers of wireless networks and mobile systems, starting from wireless physical layer through application layer. The course emphasizes hands-on learning through experiments, case studies, and design projects.
Computer and Cyber Forensics Introduction to the fundamental concepts of digital forensics and cybercrime. The course covers the recovery and analysis of digital evidence, addressing both legal and technical issues. Hands on lab activities use primarily open source and commercial forensics toolkits and a variety of hardware to reinforce the concepts discussed in lecture.
Automata and Theory of Computation Introduction to basic mathematical models of computation and the finite representation of infinite objects. Finite automata, regular languages, nondeterminism, pushdown automata, context-free languages, Turing machines and variants, halting problem, time complexity of algorithms, and NP-complete problems
Compiler Design and Construction Basics of compiler construction. Topics include lexical analysis, grammars for programming languages, parsing algorithms, symbol table construction and management, code generation and optimization
System Security Learn the tools needed to protect computer systems from both inside attacks and network based attacks. Theory and applications of various techniques will be explored.
Computer Architecture This course will survey advanced computer architecture techniques such as branch prediction, super-scalar, multiprocessors and multicomputers. It will also compare CPU design options (such as CISC vs. RISC) and discuss the effects of these options on performance
﻿
Intercultural Communication An introduction to the problems of communication across cultures, with emphasis on the interplay of American civilization with those of other cultural areas.
General Physics I: Mechanics Vectors and motion in one, two and three dimensions.  Newton's Laws.  Particle dynamics, work and energy.  Conservation laws and collisions.  Rotational kinematics and dynamics, angular momentum and equilibrium of rigid bodies.  Gravitation.  Oscillations.
Graph Theory and Applications Directed and undirected graphs; paths, cycles, trees, Eulerian cycles, matchings and coverings, connectivity, Menger's Theorem, network flow, coloring, planarity, with applications to the sciences (computer, life, physical, social) and engineering.
Discrete Structures Introduction to the use of formal mathematical structures to represent problems and computational processes. Topics covered include Boolean algebra, first-order logic, recursive structures, graphs, and abstract language models.
Introduction to Computer Science Research Prepares undergraduate computer science majors for conducting research.
Introduction to Information Security An introduction to the fundamentals of computer and information security. This course focuses on algorithms and techniques used to defend against malicious software. Topics include an introduction to encryption systems, operating system security, database security, network security, system threats, and risk avoidance procedures.
Advanced Computer Security This course will teach various modern topics in network and computer security.  It will provide a thorough grounding in cyber-security for students who are interested in conducting research on security and networking and for students who are more broadly interested in real-world security issues and techniques.  Students will undertake a semester-long research project with the goal of technical publications.  Lecture topics will include, but not limited to:  (1) Unwanted traffic, such as denial of service (DoS), and spam; (2) Malware, such as botnet, worm, and virus; (3) Network configuration and defense, such as firewall, access control, and intrusion detection systems; (4) Cyber physical system security, such as critical infrastructure protection (e.g., smart grid); and (5) Hot topics, such as software-defined networking (SDN), network verification, data center and enterprise network security, web security and more.
Software Engineering I Study of the principles and practices of software engineering. Topics include software quality concepts, process models, software requirements analysis, design methodologies, software testing and software maintenance. Hands-on experience building a software system using the waterfall life cycle model. Students work in teams to develop all life cycle deliverables: requirements document, specification and design documents, system code, test plan, and user manuals.
Multivariate and Vector Calculus Analytic geometry in three-dimensional space. Partial derivatives. Multiple integrals. Vector analysis. Applications.
Technical Communication Principles and practice in the communication of technical materials. Students work on the design, writing, and revising of reports, articles, manuals, procedures, proposals, including the use of graphics. Works by modern writers are analyzed.
Systems Programming Examines the components of sophisticated multilayer software systems, including device drivers, systems software, applications interfaces, and user interfaces. Explores the design and development of interrupt-driven and event-driven software.
Matrix Algebra and Complex Variables Vectors and matrices; matrix operations, transpose, rank, inverse; determinants; solution of linear systems; eigenvalues and eigenvectors. The complex plane; analytic functions; contour integrals; Laurent series expansions; singularities and residues.
Natural Language Processing An introduction to the problems of computing with human languages. Parsing. Semantic representations. Text generation. Lexicography. Discourse. Sublanguage studies. Applications to CAI, database interfaces and information retrieval.
Information Retrieval Overview of fundamental issues of information retrieval with theoretical foundations. The information-retrieval techniques and theory, covering both effectiveness and run-time performance of information-retrieval systems are covered. The focus is on algorithms and heuristics used to find documents relevant to the user request and to find them fast. The course covers the architecture and components of the search engine such as parser, stemmer, index builder, and query processor. The students learn the material by building a prototype of such a search engine. Requires strong programming knowledge.
Special Projects Special Projects
Introduction to Parallel and Distributed Computing This course covers general introductory concepts in the design and implementation of parallel and distributed systems covering all the major branches such as cloud computing, grid computing, cluster computing, supercomputing, and many-core computing.
Introduction to Advanced Studies I First course in a two-course sequence that is designed to prepare students for graduate study in computer science.  Explores the implementation and application of fundamental data structures and algorithms with an emphasis on object-oriented programming in Java.  Examines the relationship between these elements and the mathematical structures that form the foundation of computer science.
Probability and Statistics Elementary probability theory including discrete and continuous distributions, sampling, estimation, confidence intervals, hypothesis testing, and linear regression.
Database Organization Overview of database architectures, including the Relational, Hierarchical, Network, and Object Models. Database interfaces, including the SQL query language. Database design using the Entity-Relationship Model. Issues such as security, integrity, and query optimization.
Introduction to Mathematical Modeling This course provides an introduction to problem-driven (as opposed to method-driven) applications of mathematics with a focus on design and analysis of models using tools from all parts of mathematics.
Calculus II Transcendental functions and their calculus. Integration techniques. Applications of the integral. Indeterminate forms and improper integrals. Polar coordinates. Numerical series and power series expansions.
Distributed Objects This course provides an introduction to architecture, analysis, design, and implementation of distributed, multi-tier applications using distributed object technology. The course focuses on the services and facilities provided by an Object Request Broker (ORB). Students will use a commercially available ORB and Database Management System to develop distributed object applications.
Machine Learning Introduce fundamental problems in machine learning.  Provide understanding of techniques, mathematical concepts, and algorithms used in machine learning.  Provide understanding of the limitations of various machine learning algorithms and the way to evaluate performance of learning algorithms.  Topics include introduction, regression, kernel methods, generative learning, discriminative learning, neural networks, support vector machines, graphical models, unsupervised learning, and dimensionality reduction.
Object-Oriented Programming II Introduces more advanced elements of object-oriented programming, including dynamic data structures, recursion, searching and sorting, and advanced object-oriented programming techniques.
Introduction to Differential Equations Linear differential equations of order one. Linear differential equations of higher order. Series solutions of linear DE. Laplace transforms and their use in solving linear DE. Introduction to matrices. Systems of linear differential equations.
Discrete Structures Introduction to the use of formal mathematical structures to represent problems and computational processes. Topics covered include Boolean algebra, first-order logic, recursive structures, graphs, and abstract language models.
Introduction to Wireless Networks and Performance This class provides an opportunity for students to obtain a fundamental understanding of the nature and operation of the full range of wireless networks (personal, local area, wide area, and satellite) and their performance characteristics, future potential, and challenges through class lectures, assigned readings, homework, projects, and various hands-on experiences.
Distributed Objects This course provides an introduction to architecture, analysis, design, and implementation of distributed, multi-tier applications using distributed object technology. The course focuses on the services and facilities provided by an Object Request Broker (ORB). Students will use a commercially available ORB and Database Management System to develop distributed object applications.
Cryptography Cryptography provides foundations for ensuring the confidentiality, authenticity, integrity and privacy of the increasing sensitive information in digital world.  It is a theoretical field that relies on a diverse and wide variety of mathematics.  The topics in this course include encryption, message authentication codes, digital signatures, public key crypto-systems, key exchange, identification protocols, zero-knowledge proof systems, etc.  The goal of this course is to help students develop a solid understanding of the fundamentals of security and become familiar with the theories of cryptography as well as the role of cryptography in the recent and emerging applications.
General Physics II:  Electricity and Magnetism Waves charge, electric field, Gauss' Law and potential.  Capacitance, resistance, simple a/c and d/c circuits.  Magnetic fields, Ampere's Law, Faraday's Law, induction, and Maxwell's equations.  Traveling waves, electromagnetic waves, and light.
Data Mining This course will provide an introductory look at concepts and techniques in the field of data mining. After covering the introduction and terminologies to Data Mining, the techniques used to explore the large quantities of data for the discovery of meaningful rules and knowledge such as market basket analysis, nearest neighbor, decision trees, and clustering are covered. The students learn the material by implementing different techniques throughout the semester.
Elementary Linear Algebra Systems of linear equations; matrix algebra, inverses, determinants, eigenvalues, and eigenvectors, diagonalization; vector spaces, basis, dimension, rank and nullity; inner product spaces, orthonormal bases; quadratic forms.
Number Theory Divisibility, congruencies, distribution of prime numbers, functions of number theory, diophantine equations, applications to encryption methods.
Introduction to Artificial Intelligence Introduction to computational methods for intelligent control of autonomous agents, and the use of programming paradigms that support development of flexible and reactive systems. These include heuristic search, knowledge representation, constraint satisfaction, probabilistic reasoning, decision-theoretic control, and sensor interpretation. Particular focus will be places on real-world application of the material.
Systems Programming Examines the components of sophisticated multilayer software systems, including device drivers, systems software, applications interfaces, and user interfaces. Explores the design and development of interrupt-driven and event-driven software.
Introduction to Information Security An introduction to the fundamentals of computer and information security. This course focuses on algorithms and techniques used to defend against malicious software. Topics include an introduction to encryption systems, operating system security, database security, network security, system threats, and risk avoidance procedures.
Design and Analysis of Experiments Review of elementary probability and statistics; analysis of variance for design of experiments; estimation of parameters; confidence intervals for various linear combinations of the parameters; selection of sample sizes; various plots of residuals; block designs; Latin squares; one, two, and 2^k factorial designs; nested and cross factor designs; regression; nonparametric techniques.
Information and Knowledge Management Systems This capstone course is designed as a project course whose purpose is to enable students to see how the various algorithms and systems they have learned about in their prerequisite courses can be used in context to create useful knowledge management tools.  Class periods will be divided among discussion of design of information and knowledge management systems, lectures on effective project management techniques, and hands-on advising of student project group meetings.
Introduction to Discrete Structures and Algorithms This course will provide students with an understanding of some basic discrete mathematics and techniques for designing computer algorithms and measuring and analyzing their behavior. We emphasize the necessary mathematical ideas such as how to prove a mathematical statement, how to analyze the worst case and the average case complexity of an algorithm. We also introduce students to some new techniques used in designing algorithms, such as the approximation algorithms and randomized algorithms.
Calculus I Analytic geometry.  Functions and their graphs.  Limits and continuity.  Derivatives of algebraic and trigonometric functions.  Applications of the derivative.  Introduction to integrals and their applications.
Mobile Applications Development Students will learn a variety of software engineering techniques and design patterns to assist in the rapid development and prototyping of applications, leveraging frameworks and APIs provided by current mobile development platforms (such as Android and iOS).  Application lifecycles, data management and persistence mechanisms, and user interface design, among other topics, will be covered.  Industry speakers will be invited to speak about best practices.  Students (individually or in teams) will take ideas from concept to final implementation and will present their work at the end of the semester.  When appropriate, students may take the additional step of deploying their work on the appropriate application marketplace(s).
Introduction to Computational Mathematics Study and design of mathematical models for the numerical solution of scientific problems. This includes numerical methods for the solution on linear and nonlinear systems, basic data fitting problems, and ordinary differential equations. Robustness, accuracy, and speed of convergence of algorithms will be investigated including the basics of computer arithmetic and round-off errors.
Introduction to Algorithms Introduction to the design, behavior, and analysis of computer algorithms. Searching, sorting, and combinatorial algorithms are emphasized. Worst case, amortized, and expected bounds on time and space usage.
Editing Principles and practical applications of editing at all levels, working with both hard and soft copy and including copymarking, copyediting, proofreading, grammar and style, and comprehensive editing.  Attention primarily to documents from science, technology, and business.
Probability Elementary probability theory; combinatorics; random variables; discrete and continuous distributions; joint distributions and moments; transformations and convolution; basic theorems; simulation.
Computer Organization and Assembly Language Programming Introduction to the internal architecture of computer systems, including micro-, mini-, and mainframe computer architectures. Focuses on the relationship among a computer's hardware, its native instruction set, and the implementation of high-level languages on that machine. Uses a set of assembly language programming exercises to explore and analyze a microcomputer architecture.
Linear Optimization Introduction to both theoretical and algorithmic aspects of linear optimization: geometry of linear programs, simplex method, anticycling, duality theory and dual simplex method, sensitivity analysis, large scale optimization via Dantzig-Wolfe decomposition and Benders decomposition, interior point methods, network flow problems, integer programming.
Programming Languages and Translators Study of commonly used computer programming languages with an emphasis on precision of definition and facility in use. Scanning, parsing, and introduction to compiler design. Use of compiler generating tools.
Information and Knowledge Management Systems This capstone course is designed as a project course whose purpose is to enable students to see how the various algorithms and systems they have learned about in their prerequisite courses can be used in context to create useful knowledge management tools.  Class periods will be divided among discussion of design of information and knowledge management systems, lectures on effective project management techniques, and hands-on advising of student project group meetings.
Data Communications Introduction to data communication concepts and facilities with an emphasis on protocols and interface specifications. Focuses on the lower four layers of the ISO-OSI reference model.
Undergraduate Research Undergraduate Research
Information Retrieval Overview of fundamental issues of information retrieval with theoretical foundations. The information-retrieval techniques and theory, covering both effectiveness and run-time performance of information-retrieval systems are covered. The focus is on algorithms and heuristics used to find documents relevant to the user request and to find them fast. The course covers the architecture and components of the search engine such as parser, stemmer, index builder, and query processor. The students learn the material by building a prototype of such a search engine. Requires strong programming knowledge.
Computers and Society Discussion of the impact of computer technology on present and future society. Historical development of the computer. Social issues raised by cybernetics.
Operating Systems Introduction to operating system concepts-including system organization for uniprocessors and multiprocessors, scheduling algorithms, process management, deadlocks, paging and segmentation, files and protection, and process coordination and communication.
Marketing Fundamentals BUS 371 focuses on the information, frameworks and techniques required to devise a marketing strategy for the organization.  The course begins with an understanding of how to design products and services for consumers based on their needs and their budget constraints.  It then moves to an evaluation of the capabilities of the firm, its collaborators, and its competitors in service of developing appropriate price and promotion strategies when going to market.  This course has no formal pre-requisites, but students will benefit from a basic background in microeconomics and basic statistics.
Introduction to Stochastic Processes This is an introductory, undergraduate course in stochastic processes.  Its purpose is to introduce students to a range of stochastic processes which are used as modeling tools in diverse fields of applications, especially in risk management applications for finance and insurance.  The course covers basic classes of stochastic processes:  Markov chains and martingales in discrete time; Brownian motion; and Poisson process.  It also presents some aspects of stochastic calculus.
Computer Organization and Assembly Language Programming Introduction to the internal architecture of computer systems, including micro-, mini-, and mainframe computer architectures. Focuses on the relationship among a computer's hardware, its native instruction set, and the implementation of high-level languages on that machine. Uses a set of assembly language programming exercises to explore and analyze a microcomputer architecture.
Artificial Intelligence Language Understanding Theory and programming paradigms that enable systems to understand human language texts and extract useful information and knowledge. For example, extraction of structured event representations from news stories or discovering new research hypotheses by analyzing thousands of medical research articles. the course covers a variety of text analysis and text mining methods, with an emphasis on building working systems. Connections to information retrieval, data mining, and speech recognition will be discussed.
Document Design Principles and strategies for effective document and information design, focusing on print media.  Students design, produce, and evaluate documents for a variety of applications, such as instructional materials, brochures, newsletters, graphics, and tables.
Computers and Society Discussion of the impact of computer technology on present and future society. Historical development of the computer. Social issues raised by cybernetics.
Combinatorics Permutations and combinations; pigeonhole principle; inclusion-exclusion principle; recurrence relations and generating functions; enumeration under group action.
Special Projects Special projects.
Topics in Computer Science This course will treat a specific topic, varying from semester to semester, in which there is particular student or staff interest.
Introduction to Algorithms Introduction to the design, behavior, and analysis of computer algorithms. Searching, sorting, and combinatorial algorithms are emphasized. Worst case, amortized, and expected bounds on time and space usage.
Undergraduate Research Undergraduate Research
Artificial Intelligence Language Understanding Theory and programming paradigms that enable systems to understand human language texts and extract useful information and knowledge. For example, extraction of structured event representations from news stories or discovering new research hypotheses by analyzing thousands of medical research articles. the course covers a variety of text analysis and text mining methods, with an emphasis on building working systems. Connections to information retrieval, data mining, and speech recognition will be discussed.
Software Engineering I Study of the principles and practices of software engineering. Topics include software quality concepts, process models, software requirements analysis, design methodologies, software testing and software maintenance. Hands-on experience building a software system using the waterfall life cycle model. Students work in teams to develop all life cycle deliverables: requirements document, specification and design documents, system code, test plan, and user manuals.
Data Structures and Algorithms Implementation and application of the essential data structures used in computer science. Analysis of basic sorting and searching algorithms and their relationship to these data structures. Particular emphasis is given to the use of object-oriented design and data abstraction in the creation and application of data structures.
Data Communications Introduction to data communication concepts and facilities with an emphasis on protocols and interface specifications. Focuses on the lower four layers of the ISO-OSI reference model.
Data Mining This course will provide an introductory look at concepts and techniques in the field of data mining. After covering the introduction and terminologies to Data Mining, the techniques used to explore the large quantities of data for the discovery of meaningful rules and knowledge such as market basket analysis, nearest neighbor, decision trees, and clustering are covered. The students learn the material by implementing different techniques throughout the semester.
Introduction to Computer Science Research Prepares undergraduate computer science majors for conducting research.
Statistics Estimation theory; hypothesis tests; confidence intervals; goodness-of-fit tests; correlation and linear regression; analysis of variance; nonparametric methods.
Operating Systems Introduction to operating system concepts-including system organization for uniprocessors and multiprocessors, scheduling algorithms, process management, deadlocks, paging and segmentation, files and protection, and process coordination and communication.
Special Projects Special projects.
Introduction to Parallel and Distributed Computing This course covers general introductory concepts in the design and implementation of parallel and distributed systems covering all the major branches such as cloud computing, grid computing, cluster computing, supercomputing, and many-core computing.
Cloud Computing This course is a tour through various topics and technologies related to cloud computing.  Students will explore solutions and learn design principles for building large network-based systems to support both compute-intensive and data-intensive applications across geographically distributed infrastructure.  Topics include resource management, programming models, application models, system characterizations, and implementations.  Discussions will often be grounded in the context of deployed cloud computing systems such as Amazon EC2 and S3, Microsoft Azure, Google AppEngine, Eucalyptus, Nimbus, OpenStack, Google's MapReduce, Yahoo's Hadoop, Microsoft's Dryad, Sphere/Sector, and many other systems.  The course involves lectures, outside invited speakers, discussions of research papers, programming assignments, and a major project (including both a written report and an oral presentation).
Computer Architecture Introduction to the functional elements and structures of digital computers. Detailed study of specific machines at the register transfer level illustrates arithmetic, memory, I/O and instruction processing.
Foundations to Advanced Studies This course is a six-credit hour integration of CS 401 and CS 402. The course is an introduction to data structures but is designed to expand programming skills/concepts using software development methodology techniques. The course also provides an introduction to computer architecture and systems programming including assembly language programming, event handling and multi-threading.
Computer Graphics Overview of display devices and applications. Vector graphics in two and three dimensions. Image generation, representation, and manipulation. Homogeneous coordinates. Modeling and hidden line elimination. Introduction to raster graphics. Perspective and parallel projections.
Introduction to Advanced Studies II Second course in a two-course sequence that is designed to prepare students for graduate study in computer science. Explores the development of the multiple layers of software that form a sophisticated software system, from device drivers to application interfaces to user interfaces. Examines how computer architecture influences software development. Emphasizes the design and implementation of interrupt-driven/event-driven software.
Object Oriented Design and Programming Introduction to methodologies for object-oriented design and programming. Examines the object model and how it is realized in various object-oriented languages. Focuses on methods for developing and implementing object-oriented systems.
Programming Languages and Translators Study of commonly used computer programming languages with an emphasis on precision of definition and facility in use. Scanning, parsing, and introduction to compiler design. Use of compiler generating tools.
Introduction to the Profession An introduction to science and engineering as a profession. Examines the problem-solving process used in engineering and science. Emphasizes the interdisciplinary and international nature of problem-solving and the need to evaluate solutions in terms of a variety of constraints: computational, financial, and social.
Programming Paradigms and Patterns This class balances the imperative, object-oriented bent of the introductory programming sequence by presenting alternative programming paradigms and asks students to write complex programs from scratch while amassing a repertoire of reusable programming patterns and techniques.  Programming assignments, drawn from various domains of computer science, will highlight the importance of selecting appropriate data structures, algorithms, and techniques for the problem at hand.
Mobile Applications Development Students will learn a variety of software engineering techniques and design patterns to assist in the rapid development and prototyping of applications, leveraging frameworks and APIs provided by current mobile development platforms (such as Android and iOS).  Application lifecycles, data management and persistence mechanisms, and user interface design, among other topics, will be covered.  Industry speakers will be invited to speak about best practices.  Students (individually or in teams) will take ideas from concept to final implementation and will present their work at the end of the semester.  When appropriate, students may take the additional step of deploying their work on the appropriate application marketplace(s).
Object-Oriented Programming I Introduces the use of a high-level object-oriented programming language as a problem-solving tool, including basic data structures and algorithms, object-oriented programming techniques, and software documentation. Designed for students who have had little or no prior experience with computer programming. For students in CS and CS-related degree programs.
Database Organization Overview of database architectures, including the Relational, Hierarchical, Network, and Object Models. Database interfaces, including the SQL query language. Database design using the Entity-Relationship Model. Issues such as security, integrity, and query optimization.
Verbal and Visual Communication Introduces students to the issues, strategies, and ethics of technical and professional presentations, and provides students with opportunities to engage in public address, video presentations and conferencing, and group presentations. Analysis of audience types and presentation situations, group dynamics, persuasive theories, language, and mass media.
Compiler Construction This course covers the design and implementation of a compiler for modern languages by implementing the following:  abstract syntax trees; intermediate representations; static analysis; fix-point operations; symbol tables and type checking; and first-order and high-order function implementation.  Students will incrementally create a series of compilers.
Introduction to Engineering I Fundamentals of engineering problem-solving including skills from mathematics, science, and computing. Introduction to the engineering design process through team-based activities. Study of the contemporary engineering profession and the disciplines within the College of Engineering.
Composition I  Composition I
University Chemistry I  An introductory course for science, engineering or agriculture majors. Atomic structure, electron configurations and periodic properties, nomenclature and bonding in compounds, Lewis structure and resonance forms, molecular geometries and polarity, stoichiometry, solution chemistry and aqueous reactions, thermochemistry, gas laws and kinetic molecular theory.
Calculus I  Derivative of functions of one variable, applications of the derivative, introduction of the integral, and applications.
University Physics I  Introduction to the principles of mechanics, wave motion, temperature and heat, with calculus.
Introduction to Engineering II Further study of engineering problem-solving including skills from mathematics, science, and computing. Experience with the engineering design process through a major, team-based project. Selecting a major within the College of Engineering.
Calculus II  Integral calculus of one variable and infinite series.
University Physics II  Topics covered include electricity, magnetism, light and geometric optics.
Composition II Composition II
Programming Foundations I Introductory programming course for students majoring in computer science or computer engineering. Software development process: problem specification, program design, implementation, testing and documentation. Programming topics: data representation, conditional and iterative statements, functions, arrays, strings, file I/O and classes. Using C++ in a UNIX environment.
Digital Design Introduction to the hardware aspects of digital computers, logic gates, flip-flops, reduction, finite state machines, sequential logic design, digital systems, software design tools, hardware description language (VHDL), and implementation technologies. Corequisite: Lab component.  /  Discrete Mathematics Introductory study of sets, relations, logic, proofs, algorithms, counting methods, graph theory, trees, and Boolean algebras.
Programming Foundations II  This course continues developing problem solving techniques by focusing on fundamental data structures and associated algorithms. Topics include: abstract data types, introduction to object-oriented programming, linked lists, stacks, queues, hash tables, binary trees, graphs, recursion, and searching and sorting algorithms. Using C++ in a UNIX environment.
Computer Organization  Presents the relationship between computing hardware and software with a focus on the concepts for current computers. CPU design topics are covered including various techniques for microprocessor design and performance evaluation.
Combinatorics Basic combinatorial techniques including the study of the principle of inclusion and exclusion and generating functions. Additional topics may include modular arithmetic, algebraic coding theory, Polya's method of enumeration, and an introduction to abstract algebraic structures.
Programming Paradigms Programming in different paradigms with emphasis on object oriented programming and network programming. Survey of programming languages, event driven programming, and concurrency.
Operating Systems An introduction to operating systems including topics in system structures, process management, storage management, files, distributed systems, and case studies.
Engineering Probability and Statistics Applications to engineering problems of data summary and presentation, random variables and probability distributions, point and interval estimation, hypothesis testing, linear regression, and design of experiments.
Ethics and the Professions After a survey of the standard theories of moral obligation, justice, and rights, the course focuses on specific moral problems that arise within engineering, business, and the professions.
Software Engineering  A modern approach to the current techniques used in software design and development. This course emphasizes the use of modern software development tools, multi-module programming, and team design and engineering.
Database Management Systems Introduction to database management systems, architecture, storage structures, indexing, relational data model, E-R diagrams, query languages, SQL, ODBC, transaction management, integrity, and security.
Linear Algebra  Systems of linear equations, vector spaces, linear transformations, matrices, and determinants.
Public Speaking Application of the communication techniques needed to organize and deliver oral messages in a public setting. Emphasis given to theory and practice of message strategies and preparation, audience analysis, presentational skills including multimedia support, speech criticism, and the listening process.
Capstone I  CSCE students complete a comprehensive software capstone project during their final year of undergraduate studies. The project is done over 2 semesters in phases: concept, formal proposal, implementation, and presentation. The projects include and may require the integration of software and human factors and hardware elements and are developed to software engineering methodologies.
Algorithms Provides an introduction to formal techniques for analyzing the complexity of algorithms. The course surveys important classes of algorithms used in computer science and engineering.
Computer Networks This course is an introductory course on computer networks. Using the Internet as a vehicle, this course introduces underlying concepts and principles of modern computer networks, with emphasis on protocols, architectures, and implementation issues.
Capstone II  SCE students complete a comprehensive capstone project during their final year of undergraduate studies. The project is done over two consecutive semesters in phases: concepts, formal proposal, implementation, and presentation. The projects include and may require the integration of software, human factors, and hardware elements and are developed using software engineering methodologies.
Formal Languages and Computability  Finite Automata and regular languages, regular expressions, context-free languages and pushdown automata, nondeterminism, grammars, and Turing machines. Church's thesis, halting problem, time complexity, space complexity and undecidability.
Computer Networks.  This course is an introductory course on computer networks. Using the Internet as a vehicle, this course introduces underlying concepts and principles of modern computer networks, with emphasis on protocols, architectures, and implementation issues.
Cloud Computing and Security.  Cloud computing has entered the mainstream of information technology, providing highly elastic scalability in delivery of enterprise applications and services. In this course, we will focus on the architecture of today's cloud computing, the technologies used within them, application development using contemporary cloud computing tools, and the security risks and management in the cloud.
Computer Graphics.  Introduction to the theory and algorithms used in computer graphics systems and applications. Topics include: 2D and 3D geometric models (points, lines, polygons, surfaces), affine transformations (rotation, translation, scaling), viewpoint calculation (clipping, projection), lighting models (light-material interactions, illumination and shadow calculation).
Introduction to Drawing from Observation. Problems dealing with materials and techniques of drawing, including basic concepts of line, perspective, and value.
Perspectives in History. Introduction to the history major and to college life, emphasizing essential collegiate academic skills and the methods and techniques of the professional historian. Designed for history majors, history minors, and those with an interest in learning skills relevant to history, other humanities, or other social sciences.
Introduction to Philosophy.  An examination of such basic philosophical topics as the existence of God, the nature of the human mind, the relationship between appearance and reality, the forms and limits of human knowledge, freedom of the will, and standards of right and wrong. Includes both historical and contemporary readings.
General Sociology Applies a sociological perspective and develops critical thinking. Focuses on culture, identity, race, ethnicity, gender, class inequality, crime, deviance, globalization, social change, and social institutions.
English Composition I A study of logical and rhetorical principles and organizational strategies that contribute to effective writing. Honors section available
English Composition II An expanded study of and practice in stylistics, logic, and research as contributions to analytical writing
Humanities I Humanities I
Fine Arts I Fine Arts I
Social I  Social I
Calculus I Analytic geometry; functions; limits; continuity; derivatives of algebraic functions; applications of the derivative
Calculus II Antidifferentiation; the definite integral; applications of the definite integral; differentiation and integration of transcendental functions.
Calculus III Further methods of integration; polar coordinates; vectors; infinite series.
Calculus IV Differential calculus of functions of several variables; multiple integration; vector calculus.
Introduction to Linear Algebra Vector spaces; matrices; linear transformations; systems of linear equations; characteristic values and characteristic vectors
Foundations of Mathematics The logical structure of mathematics; the nature of a mathematical proof; applications to the basic principles of algebra and calculus
Graph Theory Basic concepts, graphs, and matrices, algebraic graph theory, planarity and nonplanarity, Hamiltonian graphs, digraphs, network flows, and applications
Number Theory Divisibility: congruences; quadratic reciprocity; Diophantine equations; continued fractions
Engineering Statistics I Introduction to statistical analysis. Topics include: probability, probability distributions, data analysis, parameter estimation, statistical intervals, and statistical inferences
Biology I Principles of Biology including nature of science, chemistry of life, cell structure and division, cellular respiration, photosynthesis, Mendelian, chromosomal and molecular genetics, evolution, and ecology
Chemistry I The principles of atomic and molecular structure, energetics, dynamics, and synthesis as related to chemical systems
Investigations in Chemistry I Selected experiments to illustrate fundamentals of chemistry
Physics I Calculus-based course emphasizing Newtonian mechanics and conservation laws
Physics II Calculus-based introduction to gravitation, electricity and magnetism. Laboratory emphasizes concepts of force and motion, conservation laws, and simple electrical circuits
Chemistry II The principles of atomic and molecular structure, energetics, dynamics, and synthesis as related to chemical systems
Biology II Form and function of organisms including body plans and phylogeny,human evolution, plant anatomy and physiology, animal anatomy and physiology,reproduction, development, and animal behavior
Introduction to CSE Introduction to the computer science and software engineering curricula, profession, and career opportunities. Historical perspective; support role of the department. Ethics, team building, problem solving
Introduction to Computer Programming Introductory problem solving and computer programming using object-oriented techniques. Theoretical and practical aspects of programming and problem solving.
Intermediate Computer Programming Object-oriented problem solving, design,and programming. Introduction to data structures, algorithm design and complexity.
Data Structures and Analysis of Algorithms Non-linear data structures and their associated algorithms. Trees, graphs, hash tables, relational data model, file organization
Discrete Structures Concepts of algorithms, induction, recursion,proofs, topics from logic,set theory, combinatorics, graph theory fundamental to study of computer science
Distributed Client/Server Programming Design of software systems for distributed environments. Multithreaded and server-side programming, client/server
Introduction to Formal Languages and Automata Theoretical foundations of computer science; formal languages and automata, parsing of context-free languages; Turing machines; introduction to computability and complexity
Social and Ethical Issues in Computing Study of major social and ethical issues in computing, impact of computers on society, and the computer professional's code of ethics
Database Management Systems Modern database models; basic database management concepts; query languages; database design through normalization; advanced database models; extensive development experience in a team environment
Programming Languages An introduction to programming language specification and analysis. Additional topics include control structrues, data types, and structures,run-time environments, binding strategies, compilers, and interpreters
Operating Systems I Historical development of operating systems to control complex computing systems; process management, communication, scheduling techniques;file systems concepts and operation; data communication, distributed process management
Introduction to Analysis of Algorithms Study of complexity of algorithms and algorithm design. Tools for analyzing efficiency; design of algorithms, including recurrence, divide-and-conquer, dynamic programming and greedy algorithms
Digital Devices and Logic Design Binary codes, Boolean, algebra, combinational logic design, flip-flops, counters, synchronous sequential logic, programmable logic devices, MSI logic devices, adder circuits
Microprocessors Architecture of microprocessor-based systems. Study of microprocessor operation, assembly language, arithmetic operations, and interfacing
Computer Architecture Detailed design and implementation of a stored-program digital computer system. Designs for the CPU, I/O subsystems, and memory organizations. ALU design and computer arithmetic
Data Communications and Computer Networks The concepts and practices of data communications and networking to provide the student with an understanding of the hardware and software used for data communications
Designing Parallel Algorithms Techniques for designing algorithms to take advantage efficiently of different parallel architectures. Includes techniques for parallelizing sequential algorithms and techniques for matching algorithms to architectures
Introduction to Software Engineering Introduction to software engineering; planning, requirements, analysis and specification, design; testing; debugging; maintenance; documentation. Alternative design methods, software metrics, software projecet management, reuse, and reengineering
Principles of Computer Graphics Graphics hardware; algorithms,graphics primitives, windowing and clipping , transformations,3D graphics, shading,hidden surfaces; standards
Game Design Principles of computer game design: Game mechanics, structure, narrative, character/environment/level design
Artificial Intelligence Heuristic programming;search programming; search strategies; knowledge representation; natural language understanding; perception; learning
Operating Systems II Integrated treatment of hardware and software concepts in operating systems design; procedure implementation; creation and control of processes;name and space management
Fundamentals of Public Speaking The psychological processes and adjustments necessary in preparing, organizing, wording, and delivering effective speeches. Honors section available.
Technical Writing Instruction and practice in technical writing for scientific and engineering fields, emphasizing analysis and development of correspondence, progress and research reports, instruction, and proposals
Introduction to the Theory of Computation  An introduction to the abstract notions encountered in machine computation. Topics include finite automata, regular expressions, and formal languages, with emphasis on regular and context-free grammars. Questions relating to what can and cannot be done by machines are covered by considering various models of computation, including Turing machines, recursive functions, and universal machines.
Computer Networks  Overview of computer networks and the Internet. Concept of end systems, access networks, clients and servers. Connection-oriented and connectionless services. Circuit switching and packet switching. Description of Internet protocol layers, including application layer, transport layer, network layer and link layer. Architecture of the current Internet and the World-Wide Web. TCP/IP protocol stack. Internet routing and addressing. Local area network protocols, Ethernet hubs and switches. Wireless LANs. Multimedia networking.
Fundamentals of Software Development  Introduction to systematic design, development and testing of software systems, including event-driven and Web programming, information management, principles and practices for secure computing, software design and development fundamentals, and the application of these skills to the construction of large, robust programs. Students design and implement a secure, full-stack, distributed web application.
Systems Fundamentals II  This course introduces C programming and essential concepts of operating systems, compilers, concurrency, and performance analysis, focused around several cross-cutting examples, such as memory management, error handling, and threaded programming. In this course, operating systems concepts are considered from the point of view of the application programmer, and the focus is on APIs for interacting with an operating system.
Analysis of Algorithms  Mathematical analysis of a variety of computer algorithms including searching, sorting, matrix multiplication, fast Fourier transform, and graph algorithms. Time and space complexity. Upper-bound, lower- bound, and average-case analysis. Introduction to NP completeness.
Software Engineering  Introduces the basic concepts and modern tools and techniques of software engineering. Emphasizes the development of reliable and maintainable software via system requirements and specifications, software design methodologies including object-oriented design, implementation, integration, and testing; software project management; life-cycle documentation; software maintenance; and consideration of human factor issues.
Programming Abstractions  Intermediate-level programming concepts and paradigms, including functional programming, object-orientation, basics of type systems, memory management, program and data abstractions, parameter passing, modularity, version control, and parallel programming. Includes weekly recitations, which provide students with experience in the practice of programming in a variety of high-level languages.
Systems Fundamentals I  This course will introduce assembly language programming and essential concepts of computer organization and architecture. The focus of this course is on the computer organization of a computer system, including the processor architecture and the memory system. In particular, we will discuss the internal representation of information, performance evaluation methodology, instruction set architectures and implementation techniques for computer arithmetic, control path design, and pipelining.
Applied Calculus I A review of functions and their applications; analytic methods of differentiation; interpretations and applications of differentiation; introduction to integration.
Applied Calculus II Analytic and numerical methods of integration; interpretations and applications of integration; differential equations models and elementary solution techniques; phase planes; Taylor series and Fourier series.
Applied Linear Algebra An introduction to the theory and use of vectors and matrices. Matrix theory including systems of linear equations. Theory of Euclidean and abstract vector spaces. Eigenvectors and eigenvalues. Linear transformations.
Finite Mathematical Structures An introduction to graph theory and combinatorial analysis. The emphasis is on solving applied problems rather than on theorems and proofs. Techniques used in problem solving include generating functions, recurrence relations, and network flows.
Survey of Probability and Statistics  A survey of data analysis, probability theory, and statistics. Stem and leaf displays, box plots, schematic plots, fitting straight line relationships, discrete and continuous probability distributions, conditional distributions, binomial distribution, normal and t distributions, confidence intervals, and significance tests.
Fundamentals of Biology: Organisms to Ecosystems An introduction to the major concepts in evolution, ecology, and biodiversity at the genetic, organismal, community, and ecosystem levels. Topics are presented in relation to five overall themes: Nature and Process of Science, Evolution, Information Flow, Systems, and Structure-Function.
Fundamentals of Scientific Inquiry in the Biological Sciences I Students will experience the laboratory process, research process, a wide range of laboratory tools, methods, skills, learn to read and write scientific presentations, and collaborate in formal inquiry. This course has been designated as a High Demand/Controlled Access (HD/CA) course.
Modern Physics Laboratory Students perform some of the pivotal experiments of the 20th century.
Classical Physics A First of a three-part sequence intended for physical-sciences or engineering majors. It focuses on the mechanics of point particles and simple oscillators, and emphasizes motion in one and two dimensions and the concepts of momentum and energy.
Legal, Social, and Ethical Issues in Information Systems This course deals with the impact of computers on us as individuals and on our society. Rapid changes in computing technology and in our use of that technology have changed the way we work, play, and interact with other people. These changes have created a flood of new social and legal issues that demand critical examination. For example, technologies such as Gmail, Facebook, MySpace, along with music sharing sites and wikis create new social, ethical, and legal issues.
Technical Communications Weekly laboratories provide students with experience in the practice of programming in a variety of high-level languages such as Java, Scala, Haskell, Python or Javascript.
Calculus A Differential calculus, emphasizing conceptual understanding, computations and applications, for students who have the necessary background from 12th-year high school mathematics. Limits and continuous functions. Differentiation of elementary algebraic, trigonometric, exponential and logarithmic functions; graphing; modeling; and maximization. L'Hospital's rule.
Calculus B Riemann sums, the fundamental theorem, symbolic and numeric methods of integration, area under a curve, volume, applications such as work and probability, improper integrals.
Calculus C This course has been designated as a High Demand/Controlled Access (HD/CA) course.
Calculus II Covering symbolic and numeric methods of integration; area under a curve; volume; applications such as work and probability; sequences; series; Taylor series; differential equations; and modelling.
Analysis II Techniques and applications of integration, infinite series, Taylor series, modelling and elementary differential equations.
Single Variable Calculus I Limits, differentiation, Fundamental Theorem of Calculus, curve sketching, maxima/minima, definite and indefinite integrals, applications. Course is not applicable toward the undergraduate Mathematics major requirements.
General Chemistry I An introduction to atomic structure, chemical bonding, kinetic-molecular theory, energy relationships and structural concepts.
EECS First Year Design Orientation to the University, college and departmental facilities, procedures and methodologies available to the student for the academic journey.
College Composition I Explanatory and persuasive writing in both personal and public genres; instruction and practice in generating, focusing, developing, researching and presenting ideas in ways consistent with one's subject, purposes and intended audience.
Introduction To Logic An introduction to the symbolic analysis of argument components and structures. Topics include definition, syllogistic reasoning, semantics, sentential logic and probability.
Single Variable Calculus II Applications and techniques of integration, polar coordinates and calculus of plane curves, infinite series and Taylor series, vectors and geometry of space.
Physics For Science And Engineering Majors I Calculus based general physics. Mechanics of motion and energy, rotation, gravitation, harmonic motion, waves, fluids and the laws of thermodynamics.
EECS Professional Development Preparation for entry to the professions of Electrical Engineering and Computer Science and Engineering, including ethics and social responsibilities, employment practices, continuing education and professional registration.
Introduction To Object Oriented Programming Introduces the basics of programming using the Java language. Covers number types, objects, methods, control structures, vectors, files, and inheritance. Utilizes the Java platform to develop GUI interfaces.
Science And Technical Report Writing Instruction and practice in multiple forms of technical and scientific communication for varied scientific and technical audiences. Emphasis on writing informational and analytical reports and documents in medical, scientific or technical fields
Elementary Multivariable Calculus Geometry of functions of several variables, partial differentiation, multiple integrals, vector algebra and calculus (including Theorems of Green, Gauss and Stokes), and applications.
Physics For Science And Engineering Majors II Calculus based general physics. Electricity and magnetism, capacitors and inductors, electromagnetic oscillations, Maxwell's equations and electromagnetic radiation, optics, images, interference, and diffraction.
Digital Logic Design Number representation and Boolean Algebra. Combinational circuit analysis and design. K-map and tabulation methods. Multiplexers, decoders, adders/subtracters and PLD devices. Sequential circuit analysis and design. Registers, counters and recognizers.
Linear Data Structures This course looks at stacks, queues, and lists as well as the order of algorithms used to access and modify these structures. In addition recursion, hashing, sorting, and set representation are examined in depth.
Elementary Differential Equations An introduction to the analysis and solution of ordinary differential equations with emphasis on the fundamental techniques for solving linear differential equations.
Numerical Methods And Linear Algebra Topics include: matrices, characteristic roots, solution of linear and nonlinear equations, curve fitting, integration, differentiation and numerical solution of ordinary differential equations. MATLAB is introduced and used to analyze problems. Additional topics are chosen from Google's page rank algorithm, Digital Image Compression, and others.
Computer Architecture and Organization Fundamentals of computer architecture, computer arithmetic, memory systems, interfacing and communication, device subsystems, processor design, cpu organization, assembly programming, performance, distributed models and multiprocessing.
Electric Circuits An introduction to electrical circuit components and laws, including ideal op-amps, DC circuit analysis, AC circuit analysis, transient analysis of RL and RC circuits and computer-aided circuit analysis.
Discrete Structures An introduction to the discrete structures used in computer science to develop software including proof techniques, Boolean logic, graphs, trees, recurrence relations, functions, combinatorics, and number theory.
Co-Op Experience Approved co-op work experience. Course may be repeated.
Non-Linear Data Structures The data structures introduced in EECS 1570 are extended to include trees (binary, balanced, and n-ary), graphs, and advanced sorting techniques. In addition, the C++ language is used as the main vehicle and is introduced in the couse. Students are expected to have a strong background in Java prior to this course.
Signals and Systems Signal and system representation. Convolution and impulse response. Fourier series, Fourier transform and Laplace transform. Discrete-time systems and Z-transforms. Computer simulation using MATLAB.
Electronics I Large-signal and incremental characteristics of the pn diode, BJT, MOSFET and JFET. Large- signal analysis and computer simulation of devices and digital circuits. Logic gate implementation.
Embedded Systems Microcontroller interfacing, assembly and C language programming for embedded systems, timer, input/output synchronization; analog to digital conversion, digital to analog conversion, interrupts, and embedded system debugging techniques.
Data Communications Analog and digital data transmission, transmission media, Modulation techniques. Data encoding, asynchronous and synchronous transmissions, USART, RS232-C, RS-449 standards. Data link configuration and control, error control, multiplexing and demultiplexing.
Engineering Statistics I This course introduces the student to the areas of probability theory and statistical inferences. Topics include sample spaces, the concepts of random variables, probability distributions; functions of random variables, transformation of variables, moment generating functions, sampling and estimation theory; T, F and chi-square distribution.
Principles Of Macroeconomics Explaining the level and the growth of economic activity, its fluctuations and ways of achieving greater stability, including the roles of money, banking and international finance.
Database Management Systems Introduction to Database Systems, Data Modeling, Entity-Relationship Diagrams, The Relational Model, SQL, Relational Algebra, Relational Calculus, Normal Forms (1NF, 2NF, 3NF, BCNF, 4NF, PJNF/5NF), Candidate keys, superkeys, schema decomposition, Functional dependency,
Systems And Systems Programming Examines the external and internal characteristics of computer operating systems and related software. Details of at least one operating system and comparison with other operating systems. An introduction to systems level programming.
Software Engineering An introduction to the Software Engineering process. Includes: the software lifecycle, user requirements, human-computer interaction, functional specification, software design, software tools, testing and modification. A major term project is assigned.
Senior Design Project I Student teams select and research a design project and propose a design. Topics covered include entrepreneurship, business plan, technical communications, design process, design teams, standards, ethics, safety and environment, and intellectual property. A fully developed senior design project proposal is required.
Theory of Computation Examines formal models of automata and languages. Finite-state automata, regular languages, pushdown automata, context-free languages, Turing machines, decidability, reducibility, and P vs NP complexity classes.
Senior Design Project II Student teams implement, test and evaluate a design previously proposed in EECS 4010. Written reports on progress and final project are required. Preliminary design and critical design reviews may be performed. Oral presentation and senior design exposition participation are needed.
﻿Introduction to Differential Equations.  Techniques and applications of differential equations, first and second order equations, Laplace transforms, series solutions, graphical and numerical methods, and partial differential equations.
Engineering Distributed Objects For Cloud Computing. Provides a broad but solid overview of engineering distributed object for cloud computing. Students will learn the theory and principles of engineering distributed objects for cloud environments. Programming assignments required.
Computational Geometry. Algorithmic problems on sets of points, rectangles, intervals, arcs, chords, polygons. Counting, reporting, location, intersection, pairing; static and dynamic data structures.
Program Design II.  Data abstraction and modular design; recursion; lists and stacks; dynamic memory allocation; file manipulation; programming exercises.
Systems Programming. . Study of computer systems emphasizing impact on application level programming. Virtual memory and memory management; code optimization; system-level I/O; concurrency:  processes, threads, synchronization; introduction to network programming.
Compiler Design.   Language translation: lexical analysis, parsing schemes, symbol table management, syntax and semantic error detection, and code generation. Development of fully-functional compiler.
Codes and Cryptography. Mathematics of communications theory, basic information theory necessary to understand both coding theory and cryptography, basic ideas and highlights for both coding theory and cryptography, including public-key cryptosystems.
Combinatorics. The pigeonhole principle, permutations and combinations,  binomial coefficients, inclusionexclusion principle, recurrence relations and generating functions, special counting sequences, Polya theory of counting.
Honors and Majors General and Analytical Chemistry II. General and analytical chemistry with laboratory. Coverage of the fundamentals of chemistry including atomic and molecular structure, thermodynamics, and kinetics. Coverage of principles of analytical chemistry, including the use of instrumentation.
Undergraduate Design/Research. Design and/or research experience for undergraduate Computer Science majors under close supervision of a CS faculty member.
Public Policy, Legal, and Ethical Issues in Computing, Privacy, and Security.  Contemporary topics involving legal, public policy, and/or ethical issues in computing, especially privacy, security, and surveillance.
Communication and Ethical Issues in Computing.  Communication skills for computing professionals: presentation organization, visual aides, delivery techniques, argument support. Ethical and societal issues in computing: privacy, intellectual property and ownership, crime.
Introduction to Machine Learning. Mechanism, implementation, and application of systems that improve automatically based on past experience, including classification, density estimation, clustering, and online learning tasks and solutions.
Program Design I. Introduction to programming: control structures; variables and data types; problem decomposition and procedural programming; input and output; aggregate data structures including arrays; programming exercises.
Programming Language Design and Implementation. Programming language paradigms, design and implementation: syntax and semantics; parsing; runtime systems; control;  data types; subroutines and exceptions; data and procedural abstraction; functional programming.
Computer Graphics I. Principles of interactive computer graphics. Raster and vector display, techniques and hardware considerations. Introduction to two-dimensional and three dimensional rendering.
Introduction to Symbolic Computation.  Introduction to computer algebra systems (MAPLE), symbolic computation, and the mathematical algorithms employed in such computation, with examples and applications to topics in undergraduate mathematics.
Calculus I. Differentiation, curve sketching, maximum-minimum problems, related rates, mean-value theorem, antiderivative, Riemann integral, logarithm, and exponential functions.
Software Engineering I.  Software life-cycle model, requirement specification techniques, large-scale software design techniques and tools, implementation issues, testing and debugging techniques, software maintenance.
Introduction to Advanced Mathematics.  Introduction to methods of proofs used in different fields in mathematics.
General Chemistry Laboratory II. Laboratory in general chemistry including phase transitions, thermochemistry, spontaneity/equilibrium, electrochemistry, kinetics, bonding, order/symmetry in condensed phases, coordination compounds, descriptive chemistry.
General Physics II (Electricity and Magnetism). Electrostatics; electric currents; d-c circuits; magnetic fields; magnetic media; electromagnetic induction; a-c circuits; Maxwell?s equations; electromagnetic waves; reflection and refraction; interference; geometrical optics.
User Interface Design and Programming.   User interface design, implementation, and evaluation: user-centered design methodologies, windowing systems, I/O devices and techniques, event-loop programming, user studies. Programming projects.
Academic Writing II: Writing for Inquiry and Research.  Students learn about academic inquiry and complete several writing projects including a documented research paper. Topics vary by section.
Game Theory.  Introduction to the basic ideas of game theory. Static and dynamic games; mixed strategies, imperfect information; economic, political and biological applications.
Calculus II. Techniques of integration, arc length, solids of revolution, applications, polar coordinates, parametric equations, infinite sequences and series, power series.
Software Design.   Software design principles and practices: Object-oriented design; design patterns; software reuse; testing;  event driven programming and concurrency; graphical user interface design and development; Team development.
Honors and Majors General and Analytical Chemistry I.  General and analytical chemistry with laboratory. Coverage of the fundamentals of chemistry including stoichiometry and equilibrium. Coverage of the principles of analytical chemistry, including the use of instrumentation.
Calculus III.   Vectors in space, functions of several variables, partial differential and optimization, multiple integrals, vector fields, Green?s Theorem, Stokes Theorem.
Natural Language Processing.  Design of natural language processing systems; part-of speech tagging, statistical and symbolic parsers; semantic interpretation; discourse and dialogue processing; natural language generation; applications.
Machine Organization.   Data representation and computer arithmetic; machine language; addressing; memory hierarchy; subroutines; data structures; processor architecture: hardwdare components, pipelining.
Object-Oriented Languages and Environments.  Data abstraction, classes and objects, messages and methods, polymorphism and dynamic binding, inheritance. Object-oriented design. Pure and hybrid object-oriented languages.
Applied Linear Algebra.  Matrices, row reduction algorithm, vector spaces, LU-decomposition, orthogonality, Gram-Schmidt process, determinants, inner products, eigenvalue problems, applications to differential equations and Markov processes.
Biology of Cells and Organisms.   Introductory biology at the molecular, cellular, and organismal level. Topics include: Scientific skills, biological chemistry, cell structure and function, metabolism, cell division, molecular genetics, diversity, anatomy and physiology.
Programming Practicum.  Software development tools and practices; debugging and testing; advanced language features; standard libraries; code management.
Computer Vision I.  Computer vision system design. Segmentation and representation of regions and boundaries; image filtering; object recognition; advanced topics (examples: texture, stereo, color); applications. Programming assignments.
Building Secure Computer Systems.   Building and programming secure systems; protecting systems from threats and reduction of vulnerabilities; Includes application, host and network security.
Linear Algebra I.  Linear equations, Gaussian elimination, matrices, vector spaces, linear transformations, determinants, eigenvalues and eigenvectors.
Artificial Intelligence I.  Problem representation; rule-based problem-solving methods; heuristic search techniques. Application to expert systems, theorem proving, language understanding. Individual projects.
Academic Writing I: Writing in Academic and Public Contexts.  Students write in a variety of genres with an emphasis on argument and sentence-level grammar. Topics vary by section.
Advanced Computer Architecture.   Design and analysis of high performance uniprocessors. Topics include arithmetic: multiplication, division, shifting; processor: pipelining, multiple function units. instruction sets; memory: caches, modules; virtual machines.
Engineering Orientation.   A general orientation course on careers in the engineering profession. Discussion of college advising procedures. Required of all engineering students.
Human Augmentics.   Study of technologies for augmentation of human capabilities; human limitations; implants and wearable technologies; implants; brain-computer interfaces; exoskeletons; sensors and networks. Includes project work.
Introduction to Probability.   Probability spaces, random variables and their distributions, conditional distribution and stochastic independence, special distributions, sampling distributions, limit theorems.
Global Environmental Change.  Natural and anthropogenic controls on the structure and evolution of the earth's surface environment. Interactions among the Earth's solid surface, hydrosphere, atmosphere, and biosphere and human impacts on these processes.
Computer Algorithms I.   Design and analysis of computer algorithms. Divide-and-conquer, dynamic programming, greedy method, backtracking. Algorithms for sorting, searching, graph computations, pattern matching, NP-complete problems.
Mathematical Foundations of Computing.  Discrete mathematics concepts fundamental to computing:  propositional logic, predicates and quantifiers; proofs; sets; recursive definitions and  induction; functions, relations and graphs; combinatorics and discrete probability; applications.
Introduction to Networking.   Network protocols, algorithms, and software issues. Topics include the Open Systems Interconnect model, data link, network and transport layers, TCP/IP, ATM, mobile networks.
Software Engineering II.  Advanced concepts in software development: requirements engineering, cost estimation, risk analysis, extreme programming, regression test case selection, and design patterns.  Software lab assignments required.
General Physics I (Mechanics).  Kinematics, vectors, Newton?s laws of motion; linear momentum, collisions; work and kinetic energy; potential energy, conservation of energy; rotational kinematics and energy; rotational dynamics, static equilibrium; simple harmonic motion.
Probability and Statistics for Engineers. Probability, random variables, mathematical expectation, discrete and continuous distributions, sampling distributions, estimation theory, and test of hypothesis.
Numerical Analysis.   Introduction to numerical analysis; floating point arithmetic, computational linear algebra, iterative solution to nonlinear equations, interpolation, numerical integration, numerical solution of ODEs, computer subroutine packages.
Design and Implementation of Network Protocols.  Network protocols and their software, Examines OS network interface through network layers. Topics include routing, congestion control, fault tolerance, security, name servers, multicast, and performance.
Foundations of Number Theory.  Primes, divisibility, congruences, Chinese remainder theorem, primitive roots, quadratic residues, quadratic reciprocity, and Jacobi symbols. The Euclidean algorithm and strategies of computer programming.
General Chemistry II Lecture. A second-semester course in general chemistry including phase transitions, thermochemistry, spontaneity/equilibrium, electrochemistry, kinetics, bonding, order/symmetry in condensed phases, coordination compounds, descriptive chemistry.
Programming Language Design.   Definition, design, and implementation of programming languages. Syntactic and semantic description; variable bindings, control and data structures, parsing, code generation, optimization; exception handling; data abstraction.
Biology of Populations and Communities. Introductory biology at the level of populations and communities. Topics include: Scientific skills, evolution, Mendelian and population genetics, biological diversity, and ecological systems including ecosystem processes and human impacts.
General Chemistry I Lecture.  A first-semester course in general chemistry, including stoichiometry, periodicity, reaction types, the gaseous state, solution, chemical equilibria, acid-base equilibria, dissolution-precipitation equilibria.
Professional Development Seminar.   Graduating seniors will be provided with information regarding future career paths and will provide information regarding the program to be used for assessment purposes. Students take the CS Major Field Exam as part of this course.
Video Game Design and Development. Theory and practice of video game design and programming. Students will form interdisciplinary teams, to design, build and demonstrate video games or related interactive simulation environments.
Formal Logic I.   First order logic, syntax and semantics, completeness-incompleteness.
Languages and Automata.  Regular sets and finite automata. Context-free languages and push-down automata. Parsing. Computability theory including Turing machines and decidability.
Computer Design.   Computer hardware building blocks.  logic gates; combinational circuits; arithmetic circuits; flip flops and sequential circuits; registers and memory; CPU design; I/O design.
Software Development for Mobile Platforms. Design and implementation of mobile applications; operating systems, object-oriented languages and programming environments for mobile platforms; integration with hardware components; and location-aware applications. Programming assignments required.
Linear and Non-Linear Programming.  Linear programming, simplex algorithm, degeneracy, duality theorem sensitivity analysis, convexity, network simplex methods, assignment problems. Constrained and unconstrained minima. Quasi-Newton methods. Ellipsoidal methods of Kachian.
Number Theory for Applications.   Primality testing methods of Lehmer, Rumely, Cohen-Lenstra, Atkin. Factorization methods of Gauss, Pollard, Shanks, Lenstra, and quadratic sieve. Computer algorithms involving libraries and nested subroutines.
General Chemistry Laboratory I.  Laboratory in general chemistry, including stoichiometry, periodicity, reaction types, the gaseous state, solution, stoichiometry, chemical equilibria, acid-base equilibria, dissolution-precipitation equilibria.
Database Systems.   Database design, logical design, physical design. Relational databases. Recovery, concurrency control. Normalization.
Visualization and Visual Analytics.   Geospatial visualization, scientific visualization, medical visualization, information visualization, and social network visualization, interaction, data analysis, human factors, dynamic data, privacy, uncertainty, data transforms.
Data Structures.  Design, usage and analysis of data structures:  review of lists, stacks and  queues; hash tables, priority queues, search trees, introduction  to graphs;  searching and sorting; runtime analysis; programming projects and lab exercises.
Hardware Description Language Based Digital and Computer System Design.  Hardware description language (HDL) introduction; digital system design including arithmetic circuit, datapath and control; basic processor architecture and design; use of CAD tools for simulation, synthesis, and verification.
Applied Statistical Methods I.   Graphical and tabular representation of data; Introduction to probability, random variables, sampling distributions, estimation, confidence intervals, and tests of hypotheses. Includes SAS and SPSSX applications.
Graph Theory. Basic concepts of graph theory including Eulerian and hamiltonian cycles, trees, colorings, connectivity, shortest paths, minimum spanning trees, network flows, bipartite matching, planar graphs.
Networked Operating Systems Programming.   Concepts, design, and programming of multi-process and distributed systems; inter-process communications; fault tolerance; distributed programming semantics. Programming assignments and project required.
Earth, Energy, and the Environment.   Nature and evolution of Earth from the scale of minerals and rocks to tectonic plates.  Earthquakes and volcanoes, their hazards and effects on humans.  Natural resources, sources of energy, and their environmental impacts.
Operating Systems Design and Implementation.   Kernel design and implementation; process management; effective management of machine resources: resource allocation and scheduling, mutual exclusion, deadlock avoidance, memory management policies, devices and file systems, and client-server systems.
Secure Operating System Design and Implementation.   Design of operating systems; operating system kernel implementation; secure coding and systems; virtual machines; extensive programming in a systems language such as C.
Critical Reading and Expository Writing Writing paragraphs and essays based on close readings of various texts, with an emphasis on clear, grammatically correct expository prose. Students must take this course during the first eligible semester at the university.
Critical Thinking and Argumentation Writing essays based on critical analyses of various literary texts. Emphasis on sound argumentative techniques. Requires documented research paper. Students must earn a grade of “C” or above to pass this course.
Fundamentals of Communication An introduction to the primary areas of study in the communication discipline. Emphasis is on developing communication competence and understanding communication processes. Topics covered include public speaking, interpersonal communication, and group communication.
Public Speaking The study and practice of preparing, delivering, and analyzing public speeches. Writing in ways that appeal to different audiences and presenting in ways that are confident and credible are emphasized.
Argumentation and Debate An introduction to oral argumentation and debate, including case construction techniques, and case analysis and criticism.
World Literature Various genres from such non-European cultures as early Middle East, Asian, African, and Latin American.
Arts and Ideas I An examination of the arts and ideas of ancient and medieval cultures.
Introduction to Philosophy An introduction to some central philosophical problems concerning free will, the self, science, and reality.
Principles of Microeconomics A study of economics which concentrates on micro-theoretical concepts such as pricing, consumer choice, business production, and profit decisions.
Social Problems Sociological study of major current problems confronted in American society and the beliefs that compound them.
General Physics I-Noncalculus A survey of the topics in classical physics intended primarily for students in preprofessional curricula and majors in various engineering technology concentrations
Technical Physics I-Calculus Based A survey of physics for students majoring in technical fields, such as physics, chemistry, engineering, etc.
Probability and Statistics - Noncalculus Descriptive statistics and its relevance, including probability, experimentation, measurement, sampling and surveys, informal statistical inference, and hypothesis testing are included.
Calculus I Functions, limits of functions, derivatives and applications, and introduction to the integral.
Analytic Geometry and Differential Calculus A course in differential calculus with technical applications. Analytic geometry, quadratic equations, and additional topics in trigonometry as foundation to the calculus, limits, the derivative, and applications.
Introduction to Computer Science I Introduction to all aspects of the programming and problem-solving process and the elements of good programming style. A high-level language will be used as a vehicle for introducing these concepts. Laboratory use of the computer in designing, coding, debugging, and executing programs is an integral part of the course.
Introduction to Computer Science II Programming in a high-level language, including programming concepts, good style, algorithms, documentation, and elementary data structures.
PC Set-up and Maintenance Introduces students to the concepts and skills necessary to install, upgrade, maintain, and troubleshoot computers. Includes the installation and replacement of devices interfacing with the motherboard, installation and upgrade of at least two operating systems, and the analysis of computer performance.
Student in University This course is meant to provide guidance to first-year university students as they begin their search for directions to take in self-definition, intellectual growth, career choices, and life skills. Only first semester students may enroll.
Math for Computer Science Students will gain a working knowledge of set theory, mathematical induction and recursion, relations and digraphs, functions, trees and languages, finite-state machines, and languages and see how these topics are applied to the practice of computer science.
Fundamentals of Database This course will introduce students to the essential skills of creating, maintaining, and querying a database system. Basic methodologies for transferring data between a database and a program or web page will be covered. Also considered will be methodologies for database design to ensure consistency and accuracy of the data.
Computer Organization A study of the physical implementation of the computer including mathematical and logical foundations, component-level design, and an introduction to machine architecture. Topics include Boolean algebra, data representation, logic gates, combinational and sequential circuit design, memory cells, memory subsystems, memory hierarchy, I/O subsystems, I/O handling, interrupts, instruction representation, error detection, and serial protocols.
Networking Fundamentals A study of concerns related to the operation of computer networks. Topics include incentives for computer networking, the OSI model of network operation, network media, theory and practice of local area networking, bridging, switching, and routing. Principles of TCP/IP network operation.
Information Security and Assurance Presents critical concepts and skills that are related to protecting information assets from harm. Topics include the history of information security, basic security-related terminology and concepts, major classes of threats to information security, model strategies for protecting against those threats, computer forensics, and best practices in information assurance.
Software Engineering I An introduction to software systems development as an engineering discipline. All phases of the software development life cycle are examined, with particular emphasis on requirements analysis, requirements specification, and preliminary design. Participation on realistic team projects, use of automated tools, written and oral communication skills, exposure to legal, professional, and ethical issues is stressed.
Software Engineering II Software development as an engineering discipline with emphasis on detailed design, implementation, testing, maintenance, project management, verification and validation, configuration management, and software quality assurance. Communications (written and oral), legal, professional, ethical issues, participation on team projects, and use of automated tools are integral.
Assembly Language The assembly language of a modern computer including the instruction set, pseudo-operations, macros, and conditional assembly, object code, use of dumps, coding and linkage conventions, addressing techniques, and use of the assembler. Laboratory use of the computer in designing, coding, debugging, and executing programs is an integral part of the course.
UNIX Fundamentals UNIX and UNIX-like command environments, including basic UNIX command-line commands and utilities; a representative UNIX interface; and a UNIX-based scripting language.
Data Structures Strings, vectors, lists, stacks, queues, arrays, trees, hash tables and associative containers, algorithm and elementary analysis. Laboratory use of the computer in designing, coding, debugging, and executing programs is an integral part of the course.
Algorithms Introduction to algorithms with analysis techniques. Topics include files and file structures, sorting, indexing and searching, trees, hashing, compression, graph algorithms, computational geometry, encryption, string matching, and NP completeness.
Computer Architecture Computer systems are viewed as consisting of a series of layers or levels one on top of another. Topics of computer architecture are presented. Microprogramming stack computers, parallel computers, pipeline processing, multiprocessors, virtual storage, cache storage, addressing schemes, and I/O and interrupt structure.
Operating Systems The study of operating systems which are the primary resource managers of computer hardware. The main features provided by operating systems, including process management, storage management, processor management, and auxiliary storage management are studied in detail. Topics of networking and security are introduced. Case studies of representative commercial operating systems highlight the main features common to operating systems. Use of the computing laboratory is an integral part of the course.
Calculus II Applications of the integral, inverse trigonometric functions, exponential and logarithmic functions, techniques of integration, indeterminate forms and improper integrals, sequence, and series.
Linear Algebra Systems of linear equations, matrix algebra, inner products, vector spaces, linear transformations, eigenvalues, and threespace vector geometry.
Foundations of Probability and Statistics A calculus-based introduction to probability and statistical inference. Basic probability concepts, mathematical expectation, discrete and continuous probability distributions, sampling distributions, one and two-sample estimation, and hypothesis testing techniques will be developed and used; linear regression and correlation.
Adventures in Computing This course is intended for majors and non-majors. Students gain a working knowledge of programming basics, problem solving, algorithm development, debugging strategies, and a modern programming environment. Students also acquire skills that can be applied to problem solving using programs and the practice of computer science
Essentials of Web Development An introduction to the design and development of visually effective and functional web sites. Concepts include design principles regarding information architecture and page layout, the use of graphics in web pages, HTML, CSS, the use of web page and graphics editors, basic accessibility issues, the development process and maintenance issues. Laboratory use of software is an integral part of this course.
Intermediate Topics in Web Development This course will cover topics to help students develop professional and innovative (client-side only) Web applications. Topics will include current tools and techniques to increase the usefulness and effectiveness of Web sites, advanced Web style guidelines, integration of current Web standards, graphic design theory, appropriate use of colors, writing for the Web, introduction to usability testing, and real-world implementation considerations.
Special Topics in Computer Science Special Topics in Computer Science
Human Computer Interaction Students will learn how to assess and improve the user experience between humans and electronic devices, and to design systems that enable individuals to make more effective use of computers by creating better user interfaces.
Selected Topics in Computer Science Selected Topics in Computer Science
Independent Study Individual or group projects done with permission of and under supervision of faculty. This course may be repeated for credit with departmental approval.
Visual Programming I An introduction to all aspects of the programming and problem-solving process and the elements of good programming style. Visual Basic will be used as a vehicle for introducing these concepts. Laboratory use of the computer in designing, implementing, debugging, and executing programs is an integral part of the course.
Cloud Computing Presents an overview of cloud technologies and secure virtualization. Topics include cloud architectures; models for cloud deployment, service, and storage; cloud security and privacy; and cloud programming.
Wireless and Mobile Computing Explores mobile computing concepts and related software development. Includes internal mechanisms for serving attached devices, managing ad hoc networks, and employing wireless network protocols.

Principles of Programming Concepts of problem solving using an object-oriented programming language, algorithm design, structured programming, fundamental algorithms and techniques.
Calculus for Engineers I Limits and continuity, differential calculus of functions of one variable, introduction to integration.
Introduction to Engineering Introduces the engineering design process; working in engineering teams; the profession of engineering; engineering models, written and oral technical communication skills.
Introduction to Africana Studies Introduces the study of African and African-descended peoples; theory, themes, and perspectives.
Advanced First-Year Composition Concentrated composition course for students with superior writing skills; intensive reading; research papers; logical and rhetorical effectiveness.
Object-Oriented Programming and Data Structures Problem solving by programming with an object-oriented programming language. Introduces data structures. Overview of computer science topics.
Calculus for Engineers II Methods of integration, applications of calculus, elements of analytic geometry, improper integrals, Taylor series.
Advanced First-Year Composition Concentrated composition course for students with superior writing skills; intensive reading; research papers; logical and rhetorical effectiveness.
African American Literature: Beginnings through the Harlem Renaissance Focuses on the history of African American literature through the Harlem Renaissance, as exemplified in selected slave narratives, poems, and fiction.
Digital Design Fundamentals Number systems, conversion methods, binary and complement arithmetic, Boolean algebra, circuit minimization, ROMs, PLAs, flipflops, synchronous sequential circuits.
Discrete Mathematical Structures Logic, sets, functions, elementary number theory and combinatorics, recursive algorithms, and mathematical reasoning, including induction. Emphasizes connections to computer science.
Calculus for Engineers III Vector-valued functions of several variables, partial derivatives, multiple integration.
Logic in Computer Science This course is a mathematically solid introduction to propositional logic, first order logic, logic programming, and their applications in computer science.
Introduction to Environmental Science Introduces the interconnected nature of Earth's hydrosphere, lithosphere (soils and rocks), atmosphere, and biosphere.
Computer Organization and Assembly Language Programming Register-level computer organization. Instruction set architecture. Assembly language. Processor organization and design. Memory organization. IO programming. Exception/interrupt handling.
Introduction to Programming Languages Introduces the procedural, object-oriented, functional and declarative languages.
Applied Linear Algebra Solving linear systems, matrices, determinants, vector spaces, bases, linear transformations, eigenvectors, norms, inner products, decompositions, applications. Problem solving using MATLAB.
Fundamentals of Sustainable Horticulture Principles and practices of horticulture, emphasizing development, growth, and propagation of horticultural plants and environmental factors that affect these processes.
Data Structures and Algorithms Advanced data structures and algorithms, including stacks, queues, trees (B, B+, AVL), and graphs. Searching for graphs, hashing, external sorting.
Computing Ethics Ethics for computing majors: history of computing, intellectual property, privacy, ethical frameworks, professional ethical responsibilities, and risks of computer-based systems.
Introduction to Software Engineering Software life cycle models; project management, team development environments and methodologies; software architectures; quality assurance and standards; legal, ethical issues.
Information Assurance Concepts of information assurance (IA); basic IA techniques, policies, risk management, administration, legal and ethics issues.
Probability and Statistics for Engineering Problem Solving Applications-oriented course with computer-based experience using statistical software for formulating and solving engineering problems.
Principles of Programming Languages Formal syntactic and semantic descriptions, compilation and implementation issues, and theoretical foundations for several programming paradigms.
Operating Systems Operating system structure and services, processor scheduling, concurrent processes, synchronization techniques, memory management, virtual memory, input/output, storage management, and file systems.
Introduction to Theoretical Computer Science Introduces formal language theory and automata, Turing machines, decidability/undecidability, recursive function theory, and complexity theory.
Distributed Software Development Distributed system architectures and design, service-oriented computing, and frameworks for development of distributed applications and software components.
Precolonial Africa The course will study the continent and its people, the way the history of the continent has been interpreted by non-Africans, how the continent's anatomy has affected historical development, and the methodology and interdisciplinary scholarship in the study of Africa
Computer Science Capstone Project I First course in capstone sequence for computer science and informatics majors emphasizing development process, technical skills, teamwork, and communication.
Software Analysis and Design Object-oriented and structured analysis and design; software architecture and design patterns; component-based development; software safety and reliability.
Software Quality Assurance and Testing Software quality assurance (SQA), software quality metrics, software configuration management, software verification and validation, reviews, inspections, understanding software testing process, functional testing, structural testing, model-based testing, integration, system, and regression testing techniques, software life cycle models and software testing, testing distributed software, bug management, and use of testing tools.
Space Vehicle Dynamics and Control Attitude dynamics and control, orbital mechanics, orbital transfer/rendezvous, spacecraft control systems design.
Computer Science Capstone Project II Second course in capstone sequence for computer science and informatics majors continuing the development process, technical skills, teamwork and communication.
Software Integration and Engineering Software development using architecture design, composition, workflow, services, data resources, data representations, data management, and development tools.
Introduction to Human Computer Interaction Design, evaluate, and implement interactive software intended for human use.
Computer Systems Security Countermeasures to attacks to computer systems from miscreants (or hackers) and basic topics of cryptography and network security.
Data and Information Security Basic concepts of security and privacy, data and database security, access controls, trust models, watermarking, and private information retrieval.
Computer Network Security Practical network security exposure and hands-on experience about basic concepts, case studies, and useful tools.
General Genetics General Genetics

Composition I  Expository writing with emphasis on effective communication and critical thinking. Emphasizing the writing process writing topics are based on selected readings and on student experiences.
Composition II  Focus on extensive research in analytical and argumentative writing based on a variety of readings from the humanities. Emphasis on developing critical thinking and diversity of perspective.
Fundamentals of Technical Presentations Communication theory and its application to preparing and delivering technical information in public speaking situations.
Calculus with Analytic Geometry I  Analytic geometry; limits, continuity, differentiation of algebraic and trigonometric functions; applications of derivatives; integration and the fundamental theorem of calculus; applications of definite integrals.
Statistical Methods I  First methods course introducing probability and statistical inference, including estimation, hypothesis testing, binomial and normal distributions, sample size.
Biology I  Open only to students whose major requires this specific course. Cellular and chemical basis of life, genetics, and the theory of evolution. Emphasis on problem solving, analysis, synthesis of information, and applying data effectively.
General Physics Using Calculus I  Mechanics, Thermodynamics, fluids.
Introduction to Programming with C  Programming in C including arrays, pointer manipulation and use of standard C math and IO libraries.
Calculus with Analytic Geometry I  Analytic geometry; limits, continuity, differentiation of algebraic and trigonometric functions; applications of derivatives; integration and the fundamental theorem of calculus; applications of definite integrals.
Calculus with Analytic Geometry II  Differentiation and integration of exponential, logarithmic, inverse trigonometric functions; techniques of integration; further applications of integration; parametric equations, polar coordinates; infinite sequences and series.
General Physics Using Calculus II Electricity, magnetism, optics.
Chemistry Fundamentals I Principles of modern chemistry, units and measures, basic physical theory of chemical reactivity, stoichiometry, reactions in aqueous solutions, thermochemistry, atomic structure, periodicity, chemical bonding, states of matter, gases.
Chemistry Fundamentals II Intermolecular forces, solutions and colligative properties. equilibria, thermodynamics, chemical kinetics, electrochemistry, nuclear chemistry.
Statistical Methods I  First methods course introducing probability and statistical inference, including estimation, hypothesis testing, binomial and normal distributions, sample size.
Object Oriented Programming  Object oriented programming concepts (classes, objects, methods, encapsulating, inheritance, interfaces) and the expression of these concepts in the programming languages such as JAVA.
Computer Science I  Problem solving techniques, order analysis and notation, abstract data types, and recursion.
Computer Science II Algorithm design and analysis for tree, list, set, and graph data models; algorithmic strategies and applications, and algorithmic complexity analysis; sorting and searching; practical applications.
Computer Logic and Organization  Logic design, computer arithmetic, Instruction Set Architecture (MIPS, SPIM simulator), performance, data path, control unit, memory hierarchy, I/O interface.
Introduction to Discrete Structures  Logic, sets, functions, relations, combinatorics, graphics, Boolean algebras, finite-state machines, Turing machines, unsolvability, computational complexity.
Security in Computing  Security theory. Legal and human factors, Malware, Intrusion patterns and tools, Windows, Unix, TCP/IP, and applications vulnerabilities. Detection. Policies and enforcement. Protection and assurance.
Systems Software  Design and development of assemblers, linkers, loaders, and compilers. Study memory hierarchy, program performance, and system level I/O.
Discrete Structures II Computation theory. A study of the properties of grammars and automata as formal specifications for algorithms and families of languages.
Processes for Object-Oriented Software Development Concepts, principles, processes and methods for developing large software systems featuring a team project using object-oriented design in UML and implementation in C++.
Foundation Exam  Foundation examination for computer science majors.
Professional Writing  Study of and practice with professional writing as a rhetorical act involving problem solving and audience accommodation; includes research and text production practices as well as business genres and conventions.
Senior Design I  Students work in teams to demonstrate their knowledge of computer science and apply it to realistic and meaningful problems.
Senior Design II Students work in teams to demonstrate their knowledge of computer science and apply it to realistic and meaningful problems.
Calculus with Analytic Geometry III  Geometry of higher dimensional Euclidean space; vectors and vector functions; partial derivatives; multiple integrals; line integrals; vector fields; Green’s Theorem and Stoke’s Theorem.
Ordinary Differential Equations I  Methods of solution for first order equations. Linear equations. Laplace transforms. Series solutions. Selected applications.
Concepts of Parallel and Distributed Processing  Parallel and distributed paradigms, architectures and algorithms, and the analytical tools, environments and languages needed to support these paradigms.
Operating Systems Function and organization of operating systems, process management, virtual memory, I/O management, and file management.
Database Systems Storage and access Structures, database models and languages, related database design, and implementation techniques for database management systems.
Computer Architecture Computer systems performance and evaluation, processor datapath and control, microprogrammed architectures, instruction and arithmetic pipelines, cache and virtual memory, and RISC vs. CISC.
AI for Game Programming  Surveys cutting-edge AI techniques for video games and board games and contrasts them with more traditional approaches.
Robot Vision  Perspective and orthographic projections; the processing of edges, regions, motion, shading, texture, object detection, recognition, and machine learning.

Programming Fundamentals This is the first course in the computer science programming sequence and is required of all computer science majors. Course objectives include: introduction to problem solving methods and algorithm development; definition of language syntax and semantics of a high level programming language; and developing the ability to design, code, debug, document, and successfully execute programs. Topics include objects and classes, data types, applets and graphics, decision statements, iteration, methods, testing and debugging, arrays, sorting and searching, inheritance, interfaces and polymorphism
Object-Oriented Programming.  This course is the follow-up of CSC 118. Additional topics in Object-Oriented Programming are covered in this course. Then the emphasis shifts to object-oriented analysis and design. This course covers I/O streams, exception handling, threads, reflection, UML, object-oriented analysis and design, object-oriented graphical user interfaces, design patterns, and refactoring
Discrete Structures for Computer Science.  Introduces the foundations of discrete mathematics as they apply to computer science, focusing on providing a solid theoretical foundation for further work. Topics include basic logic, proof techniques, sets, bags, ordered structures, graphs, trees, facts and properties of functions, and construction techniques
Composition I This course is the first part of the two-semester freshman composition program and is designed to give intensive study and practice in writing themes. Emphasis is placed on grammar and mechanics, the sentence, the paragraph, and the essay
Composition II with emphasis on critical thinking and writing essays; writing the research paper, business letters, and resumes.
University Success in College Experience and offers a global, comprehensive and personalized approach to student success through textbook, stimulating lectures, action research, leadership development, library initiatives, and service learning.
History of Civilization I A global survey and study of the histories of major geographical regions and populations between humans prehistory beginnings and their civilizational, societal, and cultural developments by the 15th century. Additionally, the course provides and promotes student learning outcomes that include content literacy about the human historical experience and the honing of specific skill setsi.e., reading comprehension, critical, and analytical thinking as well as effective written and oral communication.
History of Civilization II A global survey and study of the histories of population groups, their regional geographics and their civilizational and cultural developments from the 15th and the 21st century. The course emphasizes both content literacy and enrichment as well as the honing of skill sets, especially students reading comprehension, analytical and critical thinking, problem solving and effective oral and written communication.
Calculus I with Laboratory.  Functions, limits, continuity, differentiation, limiting forms, applications, properties of continuous functions, analytic geometry and integration. The Laboratory component is designed to reinforce the lecture component with activities requiring the use of technology in the form of computers with selective software and graphing utilities
Calculus II with Laboratory.  Applications of the definite integral, logarithmic exponential and inverse trigonometric functions. Techniques and further application of the definite integral, parametric equations and polar coordinates. The laboratory component is designed to reinforce the lecture component with activities requiring the use of technology in the form of computers with selective software and graphing utilities.
Introduction to Biology Designed to acquaint the student with fundamental principles of biological science and their functional applications.
General Chemistry I A study of the types and properties of matter, measurement, qualitative and quantitative descriptions of chemical reactions, atomic structure, bonding and thermochemistry
Computer Architecture and Organization. Topics include machine level representations of data, computer arithmetic, instruction set architecture and assembly language, datapath and control, memory system and bus architectures and I/O devices. Also, the compilation and the assembly processes, and linking and loading are covered
Data Structures and Algorithms.  The concepts of data abstraction and data structures are developed. For the basic data structures of linked lists, stacks, queues, hash tables, graphs, and trees, associated algorithms are described and analyzed.The course also treats recursion, sorting, fundamentals of software engineering, and the philosophy of object-orientation.
Digital Logic This is an introductory course to digital design. Topics include number systems, binary logic, Boolean algebra, truth tables, minimization of Boolean functions. K-maps, and Flip-Flops, Designs include combinational circuits, counters, and sequential circuits.
World Literature I.  A one-semester survey of classical literary masterpieces representative of the Ancient, Medieval, and Renaissance and Modern Periods. The course will assist the student in reading literary works with increased perceptiveness and understanding of the complex resources available to the imaginative writer for the representation of human experience and reality.
Professional Writing A course designed for those students of varied academic backgrounds and occupational interests whose jobs or careers will, or already do, require specific writing skills. Since many of the types of writing are not taught in basic composition courses, this course offers students opportunities to enhance these particular skills, thereby providing them with on the job experience that would not ordinarily be gained in regular composition
Calculus III with Laboratory Infinite sequences and series, differential calculus of functions of several variables, multiple integrals. The laboratory component is designed to reinforce the lecture component with activities requiring the use of technology in the form of computers with selective software and graphing utilities.
Advanced Computer Architecture Uniprocessor computer architectures are reviewed. Quantitative approaches of computer designs are emphasized. Performance enhancements to the uniprocessor architecture model, including pipelining and superscalar architectures, techniques to reduce instruction pipeline stalls, and memory organization techniques are studied. Advanced computer organizations, performance evaluation, and programming of vector processors, array processors, and multi processors are also covered.
Algorithm Design and Analysis.  Introduces students to various techniques to design and analyze algorithms. Topics include examples of computational problems, basic issues related to algorithms, efficiency comparison, and the design and analysis of brute force, divide-and-conquer, decrease-and-conquer, and transform-and-conquer algorithm design strategies
Operating Systems This course introduces the major concepts of process communication and synchronization, protection, performance measurement, and causes and evaluations of the problems associated with mutual exclusions and process synchronization among concurrent processes. This course introduces and analyzes various operating systems in terms of processor management, memory management, device management, information management, and distributed systems management.
Database Systems This course is designed to introduce students to the concepts and theories of database systems. Topics include: information models and systems; the database environment; data modeling; conceptual modeling using the entityrelationship approach and mapping to relational tables; the relational model including the relational data structure, integrity rules, relational algebra and relational calculus; normalization; data definition and data manipulation in SQL; conceptual, logical, and physical database design; security; transaction management; query processing; and advanced topics in database systems
Organization of Programming Languages.  Study of the organization and specification of programming languages. Topics include an overview of programming languages; issues in language design, including typing regimens, data structure models, control structure models, and abstraction; virtual machines; language translation; interpreters; compiler design; lexical analysis; parsing; symbol tables; declaration and storage management; code generation; and optimization techniques
Modern Foreign Language  Modern Foreign Language
General Physics I Introduction to mechanics, wave motion, sound, and heat.
General Physics II Introduction to electricity, magnetism, optics, and modern physics.
Elementary School Mathematics Introduction to concepts of probability and statistics required to solve problems in various disciplines; mathematical basis for probability and statistics includes axioms of probability, continuous sampling distributions, and discrete probability, hypothesis testing, confidence intervals, probability estimations for risk assessment, data processing and statistical inference, statistical techniques of data analysis, simple and multiple regression model development; stochastic processes, emphasis is on the application of probability, statistics and reliability to rational decision making, data analysis and model estimation in engineering context
Computer Networks ourse will primarily focus on the following five layers of the TCP/IP protocol stack: Physical, Link, Network, Transport, and Application layers. Topics to be covered include: Physical Layerencoding and decoding data for short distance and long-distance communications; Link Layerlocal area network technologies and their extension using interconnection devices; Network Layerrouting protocols, IP addressing, subnets, datagram forwarding, fragmentation, and other auxiliary network-level communication protocols;
Computers and Society This course presents concepts of computer moral and legal issues, describes the impact of computers on society and presents techniques which are applicable in addressing problems posed by the social impact of computers. As a Service Learning Course, students will be able to help agencies and businesses in educating them on the most recent Anti-virus software available, viruses, e-mail scams, privacy issues, intellectual property rights, and computer crimes
Software Engineering Introduction to software engineering, software design, APIs, software tools and environments, software development processes, software requirements and specifications, software verification and validation, software implementation, software evolution, and software project management
Senior Project. Senior Project.
Digital Image Processing Introduction to Digital Image Processing and its Applications, where the emphasis is on earth resources analysis. Subject matter consists of Hardware and Software Requirements, Transformations, Registration, Encoding, Enhancement and Restoration, and Image Databases.
Introduction to Computer Programming Introduction to object-oriented program design and development. Principles of algorithm formulation and implementation.
Introduction to Computer Systems How a computer works, from hardware to high-level programming. Logic circuits, computer instructions, assembly language, binary arithmetic, C programming, program translation, data structures, and algorithm analysis.
Data Structures and Algorithms Fundamental data structures and algorithms of computer science; basic algorithm analysis; recursion; sorting and searching; lists, stacks, queues, trees, hashing; object-oriented data abstraction.
Discrete Structures Introduction to grammars and parsing; predicate and propositional logic; proof techniques; sets, functions, relations, relational data model; graphs and graph algorithms.
Advanced Programming Concepts Advanced software development with an object-oriented focus. Design, implementation, and testing of several large programs in a Java and Linux environment using current technologies.
Introduction to Computational Theory Finite state automata, regular languages, lexical analysis; push-down automata, context-free languages, parsing; Turing machines and unrestricted grammars; computability complexity, NP-completeness.
Algorithm Design and Analysis A study of the design and analysis of algorithms as solutions to problems, including dynamic programming, linear programming, greedy algorithms, divide-and-conquer algorithms, graph algorithms, and intelligent search algorithms.
Systems Programming Systems programming principles and concepts, including Linux systems programming, multiprocessing, concurrency, exceptional control flow, caching, sockets, protocols, and non-blocking I/O.
Software Design and Testing Principles of software design, design patterns, design representation, refactoring. Principles of software quality assurance and testing. Development and testing tools.
Ethics and Computers in Society Societal impact of computer technology, the computer scientist's place in society, ethical issues. Reading, discussion, and writing seminar.
Technical Communication Effective processes of written, oral, and visual technical communication, including collaborative processes. Writing for academic and professional audiences.
Calculus 1 Differential and integral calculus: limits; continuity; the derivative and applications; extrema; the definite integral; fundamental theorem of calculus; L'Hopital's rule.
Calculus 2 Techniques and applications of integration; sequences, series, convergence tests, power series; parametric equations; polar coordinates.
Elementary Linear Algebra Linear systems, matrices, vectors and vector spaces, linear transformations, determinants, inner product spaces, eigenvalues, and eigenvectors.
Introduction to Newtonian Mechanics Linear, circular, and projectile motion; their prediction from forces and torques. Conservation of energy and momentum. Weekly lab.
Probability Theory Axiomatic probability theory, conditional probability, discrete / continuous random variables, expectation, conditional expectation, moments, functions of random variables, multivariate distributions, laws of large numbers, central limit theorem.
Principles of Statistics Graphical displays and numerical summaries, data collection methods, probability, sampling distributions, confidence intervals and hypothesis testing involving one or two means and proportions, contingency tables, correlation and simple linear regression.
Statistics for Engineers and Scientists The scientific method; probability, random variables, common discrete and continuous random variables, central limit theorem; confidence intervals and hypothesis testing; completely randomized experiments; factorial experiments.
Concepts of Programming Languages Principles and concepts characterizing high-level computer programming languages, process and data abstration, encapsulation, inheritance, functional programming, logic programming, scanners, and parsers.
Operating Systems Design Principles and concepts of operating systems design and the implementation of an operating system.
Introduction to Graphics and Image Processing Introduces basic concepts of computer graphics and image processing. Includes characteristics of physical cameras and displays; color models; basic image processing algorithms: 2D and 3D homogeneous coordinate transformations; fundamentals of 3D rendering geometry; lighting and shading: image warping and texture mapping; and frequency-domain processing.
Topics in Computer Science Undergraduate level subjects as announced before each semester.
Linear Programming and Convex Optimization Optimization, problem formulation, and solution algorithms, including simplex and interior point methods. Applications from control, data mining, finance, game theory, learning, network flow, operations research, and statistical estimation.
Bioinformatics Computational methods for analyzing biological systems. Dynamic programming, Markov models, Neural Networks, and Bayesian analysis are used to predict secondary structure, tertiary structure, and active sites for drug docking given molecular DNA sequence data.
Software Engineering Analysis, design, implementation, and testing of significant software systems.
Algorithmic Languages and Compilers Formal description of algorithmic languages and techniques used in their compilation: semantics, ambiguities, procedures, replication, iteration, recursion.
Computer Vision Introduction to fundamental concepts and algorithms of computer vision, including feature extraction, detection, segmentation, registration, recognition, motion, 3D vision, and image understanding. Applies techniques from image processing, geometry, Bayesian methods, optimization, and machine learning to computer vision problems.
Database Modeling Concepts Database models: relational, deductive, object-oriented. Integrity constraints, query languages, database design.
Fundamentals of Information Retrieval Concepts and terminology of information retrieval (IR) systems. Design methodologies and issues. Fundamental IR models examined: Boolean, Vector Space, Probabilistic models, and evaluation strategies.
Computer Graphics Interactive computer graphics systems programming and architecture.
Introduction to User Interface Software Introduction to software architectures and techniques for graphical user interfaces. Input devices, windowing systems, event-driven programming, interactive geometry.
Computer Communications and Networking Introduction to data communications and computer networking. Communications fundamentals, computer networks, software, architecture, telecommunications, regulation, standards.
Large-Scale Distributed System Design Principles and concepts of designing and building distributed systems. Introduction to architectures for distributed computation. Reliability, availability, and scalability of large applications. Cloud computing and APIs.
Computer Security Introduction to computer security fundamentals: confidentiality, integrity, authentication, and access control. Secret key and public key cryptography, network security protocols, viruses, and fire walls.
Introduction to Artificial Intelligence Introduction to core areas of artifical intelligence; intelligent agents, problem solving and search, knowledge-based systems and inference, planning, uncertainty, learning, and perception.
Tools for Machine Learning Machine learning models and other mechanisms allowing computers to learn and find knowledge from data.
Parallel Processing Theoretical and practical study of parallel processing including multi-core, fine-grained, and clustered architectures, parallel programming languages, and parallel algorithms.
Verification and Validation Foundational topics in verification and validation; the application of logic to building correct systems. Covers logics to formally specify properties of systems, verifications of basic systems, and advanced topics in formal verification for complex systems.
Advanced Topics in Computer Science Advanced undergraduate- and graduate-level subjects as announced before each semester.
Robust Control Introduction to the analysis and design of feedback systems guaranteed to perform well in spite of model uncertainty.
Web Programming Introduction to web application design and implementation. Both front end and back end development with an emphasis on REST architectures.
Designing the User Experience Iterative user centered design of the user experience situated in the mobile and desktop contexts. Students will use their background in software engineering to create prototypes of increasing functional and visual fidelity. The class will situate designing the user experience in the mobile and desktop contexts. About half of in-class time will be spent reviewing and critiquing design artifacts.
Creating and Managing a Software Business Entrepreneurship, idea/opportunity generation, strategic planning, legal organization, product development, marketing/sales, customer support, fund raising, and effective management.
Computer Systems Machine-level representations of programs and data, processor architecture, program performance optimizaton, memory hierarchies, virtual memory, linking, exceptions.
Real-Time Operating Systems Hardware/software interface, real-time kernel internals, implementation of high-level language constructs, issues in real-time application software development.
Cyber Security and Penetration Testing Advanced computer systems security. Vulnerabilities and exploits. System and network attacks. Ethical hacking and penetration testing. Cyber security, cyber weapons, and advanced persistent threats. Legal and regulatory requirements for security and privacy.
Numerical Methods Iterative solvers for linear systems, eigenvalue, eigenvector approximations, numerical solutions to nonlinear systems, numerical techniques for initial and boundary value problems, elementary solvers for PDEs.
Mathematical Cryptography A mathematical introduction to some of the high points of modern cryptography.
Computing Competitions Students work in teams to prepare for and compete in computer science competitions in areas such as programming, data science, and ethical hacking.
Capstone 1 Culminating experience based on skills learned in advanced technical courses. Students work in teams to plan, design, test, and demonstrate a major project.
Capstone 2 The second semester of a culminating experience based on skills learned in advanced technical courses. Students work in teams to plan, design, test, and demonstrate a major project.
Undergraduate Research Students receive course credit for doing undergraduate research under the supervision of a faculty mentor.
Undergraduate Special Projects Students identify an interesting problem in computer science and solve it with the aid of faculty members.
Introduction to Programming & Problem Solving This course introduces problem solving and computer programming and is for undergraduate Computer Science and Computer Engineering majors who have limited prior experience in programming in any language. The course covers fundamentals of computer programming and its underlying principles using the Python programming language
Introduction to Computer Science This is a breadth-first course that introduces computer-science majors to several subdisciplines in the computer-science field. The course is built around the theme that computer science is the study of algorithms and includes much more than programming. The course introduces hardware, virtual machines, software, applications and social issues in computing.
Data Structures and Algorithms This course covers abstract data types and the implementation and use of standard data structures along with fundamental algorithms and the basics of algorithm analysis.
Object Oriented Programming This intermediate-level programming course teaches object-oriented programming in C++. Topics: Pointers, dynamic memory allocation and recursion. Classes and objects including constructors, destructors, methods (member functions) and data members. Access and the interface to relationships of classes including composition, association and inheritance. Polymorphism through function overloading operators. Inheritance and templates. Use of the standard template library containers and algorithms.
Computer Architecture and Organization This course covers a top-down approach to computer design. Topics: Computer architecture, introduction to assembly language programming and machine language set design. Computer organization, logical modules; CPU, memory and I/O units. Instruction cycles, the datapath and control unit. Hardwiring and microprogramming. The memory subsystem and timing. I/O interface, interrupts, programmed I/O and DMA. Introduction to pipelining and memory hierarchies. Fundamentals of computer networks.
Design & Analysis of Algorithms This course covers fundamental principles of the design and analysis of algorithms. Topics include asymptotic notation, recurrences, randomized algorithms, sorting and selection, balanced binary search trees, augmented data structures, advanced data structures, algorithms on strings, graph algorithms, geometric algorithms, greedy algorithms, dynamic programming and NP completeness.
Introduction to Operating System This course studies the fundamental concepts and principles of operating systems. Batch, spooling and multiprogramming systems are introduced. The parts of an operating system are described in terms of their functions, structure and implementation. Basic policies for allocating resources are discussed.
Software Engineering Focusing on software engineering, the course introduces techniques to specify, design, test and document medium and large software systems. Design techniques include information engineering, object orientation and complexity measures. Also covered are testing methods, such as path testing, exhaustive test models and construction of test data. An introduction to software tools and project management techniques is presented. Student projects involve team software development and tracking.
Design Project Design Project
Calculus I for Engineers Library of Functions, functions of one variable. Limits, derivatives of functions defined by graphs, tables and formulas, differentiation rules for power, polynomial, exponential and logarithmic functions, derivatives of trigonometric functions, the product and quotient rules, the chain rule, applications of the chain rule, maxima and minima, optimization. The definite integral, the Fundamental Theorem of Calculus and interpretations, theorems about definite integrals, anti-derivatives.
Calculus II for Engineers covers techniques of integration, introduction to ordinary differential equations, improper integrals, numerical methods of integration, applications of integration, sequences, series, power series, approximations of functions via Taylor polynomials, Taylor series, functions of two variables, graphs of functions of two variables, contour diagrams, linear functions, functions of three variables
Data Analysis An introductory course to probability and statistics. It affords the student some acquaintance with both probability and statistics in a single term. Topics in Probability include mathematical treatment of chance; combinatorics; binomial, Poisson, and Gaussian distributions; the Central Limit Theorem and the normal approximation. Topics in Statistics include sampling distributions of sample mean and sample variance; normal, t-, and Chi-square distributions; confidence intervals; testing of hypotheses; least squares regression model.
Discrete Mathematics Logic, proofs, set theory, functions, relations, asymptotic notation, recurrences, modeling computation, graph theory.
Engineering and Technology Forum In this course the notion of invention, innovation and entrepreneurship (i2e) is introduced to the students educational experience. Students will be exposed to elements of a research-intensive institution and diverse research performed by leading engineers, scientists, inventors and entrepreneurs.
Introduction to Engineering and Design This course introduces selected aspects of the history, philosophy, methodology, tools and contemporary topics in engineering. Also included are basic engineering experimentation and data analysis, a team design project and analysis and presentation of engineering data and designs.
Science Requirement I Science Requirement I
Science Requirement II Science Requirement II
Writing the Essay Writing the Essay
The Advanced College Essay The Advanced College Essay
Digital Logic and State Machine Design This course covers combinational and sequential digital circuits. Topics: Introduction to digital systems. Number systems and binary arithmetic. Switching algebra and logic design. Error detection and correction. Combinational integrated circuits, including adders. Timing hazards. Sequential circuits, flipflops, state diagrams and synchronous machine synthesis. Programmable Logic Devices, PLA, PAL and FPGA. Finite-state machine design. Memory elements. A grade of C or better is required of undergraduate computer-engineering majors.
Introduction to Databases This course introduces database systems and their approach as a mechanism to model the real world. The course covers data models (relational, object-oriented), physical database design, query languages, query processing and optimization, as well as transaction management techniques. Implementation issues, object oriented and distributed databases also are introduced.
Introduction to Game Programming A programming intensive introduction to the creation of computer games. Using mostly two-dimensional sprite-based programming, we examine and experiment with animation, physics, artificial intelligence and audio. In addition, the course explores the mathematics of transformations (both 2D and 3D) and the ways they may be represented.
Game Development Studio I This class introduces the principles of 2D and 3D computer game design. Students learn about the range of game types and understand their conceptual building blocks. Students complete a structured sequence of assignments towards the design for a new game.
Introduction to Parallel and Distributed Systems This course offers a solid grounding in the basic issues and techniques of parallel and distributed computing. The material covers the spectrum from theoretical models of parallel and distributed systems to actual programming assignments.
Unix System Programming This course covers programming and system administration of UNIX systems. Also covered: Shell programming, special purpose languages, UNIX utilities, UNIX programming tools, systems programming and system administration.
Java and Web Design Programmers familiar with C or C++ learn to develop Java applications and applets. This course teaches the syntax of the Java language, object-oriented programming in Java, creating graphical user interfaces (GIU) using the Java 2 Platform technology event model, Java exceptions, file input/output (I/O) using Java Foundation Class threads and networking.
Computer Security This course covers cryptographic systems. Topics: Capability and access control mechanisms, authentication models, protection models. Database and operating system security issues, mobile code, security kernels. Malicious code, Trojan horses and computer viruses. Security policy formation and enforcement enforcement, legal aspects and ethical aspects.
Network Security This course covers reviews networking. Topics: Basic notations of confidentiality, integrity, availability; cryptographic systems, coding and decoding messages. Cryptographic protocols for privacy, integrity, key exchange and access control. TCP/IP security; Firewalls, IPSec; secure ecommerce. Intrusion detection, prevention, response.
Special Topics in Computer Science Special Topics in Computer Science
Interactive Computer Graphics An introduction to the field of computer graphics: displays, image formation, visual perception, images, transformations (viewing and projection), programmable pipelines (vertex and fragment programs), modeling (primitives, polygon meshes, smooth curves and surfaces), animation (keyframing, procedural), rendering and realism (visibility, lighting, shading, shadows, texturing, ray tracing).
Human Computer Interaction Designing a successful interactive experience or software system takes more than technical savvy and vision--it also requires a deep understanding of how to serve people's needs and desires through the experience of the system, and knowledge about how to weave this understanding into the development process. This course introduces key topics and methods for creating and evaluating human-computer interfaces/digital user experiences. Students apply these practices to a system of their choosing (I encourage application to prototype systems that students are currently working on in other contexts, at any stage of development). The course builds toward a final write-up and presentation in which students detail how they tackled HCI/user experience design and evaluation of their system, and results from their investigations. Some experience creating/participating in the production of interactive experiences/software is recommended.
Game Design This course is about experimental game design. Design in this context pertains to every aspect of the game, and these can be broadly characterized as the game system, control, visuals, audio, and resulting theme. We will explore these aspects through the creation of a few very focused game prototypes using a variety of contemporary game engines and frameworks, high-level programming languages, and physical materials. This will allow us to obtain a better understanding of what makes games appealing, and how game mechanics, systems, and a variety of player experiences can be designed and iteratively improved by means of rapid prototyping and play-testing
Artificial Intelligence Artificial Intelligence (AI) is an important topic in computer science that has many diversified applications. It addresses one of the ultimate puzzles human are trying to solve  How is it possible for a slow, tiny brain, whether biological or electronic, to perceive, understand, predict, and manipulate a world far larger and more complicated than itself? And, how do we go about creating a machine (or computer) with those properties? To this end, researchers in the AI field have been trying to understand how seeing, learning, remembering, and reasoning could, or should be done.
Application Security This course addresses the design and implementation of secure applications. Concentration is on writing software programs that make it difficult for intruders to exploit security holes. The course emphasizes writing secure distributed programs in Java. The security ramifications of class, field and method visibility are emphasized.
Information Systems Security Engineering and Management The primary goal of this course is to present a system and management view of information security: what it is, what drives the requirements for information security, how to integrate it into the systems design process, and life cycle security management of information systems. This course will not be about the technologies of information security, but how those technologies are integrated into a system and managed.
Penetration Testing and Vulnerability Analysis The course will start off with an in-depth review of the exploitation mitigations introduced in modern operating systems. The instructors will demonstrate their limitations through simple examples and gradually develop the basic exploitation techniques into more complicated methods applicable to real-world exploitation. Unlike most other exploitation courses, we will focus on approaching exploitation as a creative problem-solving process rather than an exercise of applying cookbook techniques to common types of vulnerabilities. Most of the course will focus on the hands-on application of the material through exercises and leading the students through the development of reliable exploits for recently patched vulnerabilities in widely used software.
Applied Cryptography This course examines Modern Cryptography from a both theoretical and applied perspective, with emphasis on provable security and application case studies. The course looks particularly at cryptographic primitives that are building blocks of various cryptographic applications. The course studies notions of security for a given cryptographic primitive, its various constructions and respective security analysis based on the security notion. The cryptographic primitives covered include pseudorandom functions, symmetric encryption (block ciphers), hash functions and random oracles, message authentication codes, asymmetric encryption, digital signatures and authenticated key exchange. The course covers how to build provably secure cryptographic protocols (e.g., secure message transmission, identification schemes, secure function evaluation, etc.), and various number-theoretic assumptions upon which cryptography is based. Also covered: implementation issues (e.g., key lengths, key management, standards, etc.) and, as application case studies, a number of real-life scenarios currently using solutions from modern cryptography.
Computer Networking This course takes a top-down approach to computer networking. After an overview of computer networks and the Internet, the course covers the application layer, transport layer, network layer and link layers. Topics at the application layer include client-server architectures, P2P architectures, DNS and HTTP and Web applications. Topics at the transport layer include multiplexing, connectionless transport and UDP, principles or reliable data transfer, connection-oriented transport and TCP and TCP congestion control. Topics at the network layer include forwarding, router architecture, the IP protocol and routing protocols including OSPF and BGP. Topics at the link layer include multiple-access protocols, ALOHA, CSMA/CD, Ethernet, CSMA/CA, wireless 802.11 networks and link-layer switches.
Introduction to Computer Science This is an introduction to computer science with an emphasis on programming. The topics include: design; algorithmic thinking; recursion; object-oriented programming; ethics in computer science; and some basics about computer systems: machine language, interpreters, compilers, and data representation.
Introduction to Web Programming and Project Development This course introduces students to the infrastructure underlying the Web, including protocols and markup languages. It also addresses the question of how one presents large volumes of information to people who need to find out what they are looking for quickly. The scope of the course ranges from mechanics to aesthetics. Social and ethical issues are also discussed, including the concept of information ecologies for social acceptance. Networks and protocols; pervasive computing; Web protocols; markup languages and XML; defining information architecture; understanding information needs and informationseeking behaviors; organizing Web sites and intranets; navigation systems; search systems; thesauri; from research to design: strategies for information architecture; enterprise information architecture; ethics on the Web; and information ecologies.
Differential Calculus  Limits and derivatives of functions of one variable including the trigonometric, inverse trigonometric, logarithmic and exponential functions; differentiation rules, implicit differentiation, geometric and physical interpretations of the derivative, applications of the derivative including optimization and sketching graphs of one variable functions.
Integral Calculus Definite integrals of functions of one variable, antiderivatives, the two versions of the Fundamental Theorem of Calculus, integration techniques including substitution, integration by parts, inverse trigonometric substitutions, and partial fraction decompositions; improper integrals, LHospitals Rule, applications to geometry and physics including calculation of areas, volumes, and work done by a variable force.
Writing And Communications Colloquium  The mission of the course is to help students develop their skills in the following essential areas: connective and innovative thinking about complex global issues; composition, structure and argumentation; grammatical and stylistic sophistication; critical reading and textual analysis; research and investigation; group work and mutual evaluation; and polished public speaking using visual aids.
Physical Education I Physical Education I
Data Structures  This is a course on standard data structures, including sorting and searching and using the Java language. The topics include: stages of software development; testing; UML diagrams; elementary data structures (lists, stacks, queues, and maps); use of elementary data structures in application frameworks; searching; sorting; and introduction to asymptotic complexity analysis.
Discrete Structures The aim of this course is to integrate knowledge of basic mathematics with the problems involving specification, design, and computation. By the end of the course, the student should be able to: use sets, functions, lists, and relations in the specification and design of problems; use properties of arithmetic, modular arithmetic (sum, product, exponentiation), prime numbers, greatest common divisor, factoring, Fermats Little Theorem; use binary, decimal, and base-b notation systems and translation methods; use induction to design and verify recursive programs; and implement in Scheme all algorithms considered during the course.
Series, Vectors, Functions, and Surfaces Taylor polynomials and series, functions of two and three variables, linear functions, implicit functions, vectors in two and three dimensions.
Calculus of Two Variables  Partial derivatives, the tangent plane and linear approximation, the gradient and directional derivatives, the chain rule, implicit differentiation, extreme values, application to optimization, double integrals in rectangular coordinates.
CAL Colloquium: Knowledge, Nature, Culture  This course introduces students to enduring questions and methods of inquiry that drive research and creative endeavors in the College of Arts and Letters. Drawing on multiple ethical, cultural, and disciplinary perspectives, each faculty member will select a theme designed to help students deepen their understanding of a social-cultural phenomenon by examining it from different points of view. The completion of a research essay is required.
Computer Organization and Programming  The main aspects of computers: data (data types and formats, number bases), hardware (stored program computer concept, addressing methods and program sequencing, instruction sets and their implementation, the CPU and microprogrammed control, input/output organization, peripherals and interfacing, and main memory), communication (network protocols), software (operating systems, dispatching algorithms), and assembly language programming.
Algorithms  This is a course on more complex data structures, and algorithm design and analysis, using the C++ language. Topics include: advanced and/or balanced search trees; hashing; further asymptotic complexity analysis; standard algorithm design techniques; graph algorithms; complex sort algorithms; and other classic algorithms that serve as examples of design techniques.
Automata and Computation Introduction to recursive functional programming and equational reasoning; lists as inductive types and list induction; introduction to formal languages, automata, and the theory of computation; regular expressions, finite state machines, and pumping lemma; context free grammars and push down automata; turing machines, recursive enumerability, and unsolvable problems; and complexity and intractability. A number of models of computation are considered, as well as their relation to various problem classes (e.g. solvable problems and polynomial time solvable problems).
Project Management This course will describe the problems of managing a project within a permanent organization for the purpose of achieving a specific objective. It will broadly cover the operational and conceptual issues faced by modern project managers.
Physical Education III Physical Education III
Systems Programming Introduction to systems programming in C on UNIX. Students will be introduced to tools for compilation, dynamic linking, debugging, editing, automatic rebuilding, and version control. Some aspects of the UNIX system call interface will be studied, drawn from this list: process creation, signals, terminal I/O, file I/O, inter-process communication, threads, network protocol stacks, programming with sockets, and introduction to RPC. Style issues to be covered include: naming, layout, commenting, portability, design for robustness and debugability, and language pitfalls. X programming and GUI design will be covered, if time allows.
Principles of Programming Languages  An introduction to programming language design and implementation, with an emphasis on the abstractions provided by programming languages. Assignments involve problem-solving issues in principles of programming languages such as Scheme and ML; recursive types and recursive functions; structural induction; abstract data types; abstract syntax; implementing languages with interpreters; static vs. dynamic scoping, closures, state; exceptions; types: type-checking, type inference, static vs. dynamic typing; object-oriented languages: classes and interfaces, inheritance and subtyping; polymorphism and genericity; and design patterns and the visitor pattern.
Software Development Process  This course provides a general introduction to the essentials of the software development process, that series of activities that facilitate developing better software in less time. The course introduces software development and deployment life cycles, requirements acquisition and analysis, software architecture and design, and resource management and scheduling in the implementation phase. Students gain experience with tools and methodologies for configuration management and project management. Security engineering is considered as an essential part of the software development process, particularly from the standpoint of applied risk management.
Probability and Statistics  Introduces the essentials of probability theory and elementary statistics. Lectures and assignments greatly stress the manifold applications of probability and statistics to computer science, production management, quality control, and reliability. Contents include: descriptive statistics, pictorial and tabular methods, and measures of location and of variability; sample space and events, probability axioms, and counting techniques; conditional probability and independence, and Bayes formula; discrete random variables, distribution functions and moments, and binomial and Poisson distributions; continuous random variables, densities and moments, normal, gamma, and exponential and Weibull distributions unions; distribution of the sum and average of random samples; the Central Limit Theorem; confidence intervals for the mean and the variance; hypothesis testing and p-values, and applications for the mean; simple linear regression, and estimation of and inference about the parameters; and correlation and prediction in a regression model.
Physical Education IV Physical Education IV
Database Management Systems  Introduction to the design and querying of relational databases. Topics include: relational schemas; keys and foreign key references; relational algebra (as an introduction to SQL); SQL in depth; Entity-Relationship (ER) database design; translating from ER models to relational schemas and from relational schemas to ER models; functional dependencies; and normalization.
Concurrent Programming  The study of concurrency as it appears at all levels and in different types of computing systems. Topics include: models of concurrency; languages for expressing concurrency; formal systems for reasoning about concurrency; the challenges of concurrent programming; race conditions; deadlock; livelock and nondeterministic behavior; prototypical synchronization problems, such as readers-writers and dining philosophers; mechanisms for solution of these problems, such as semaphores, monitors, and conditional critical regions; important libraries for concurrent programming; message passing, both synchronous and asynchronous; and applications of multithreaded concurrent programming and parallel algorithms.
Intermediate Statistics An introduction to statistical inference and to the use of basic statistical tools. Topics include descriptive and inferential statistics; review of point estimation, method of moments, and maximum likelihood; interval estimation and hypothesis testing; simple and multiple linear regression; analysis of variance and design of experiments; and nonparametric methods. Selected topics, such as quality control and time series analysis, may also be included. Statistical software is used throughout the course for exploratory data analysis and statistical inference based in examples and in real data relevant for applications
Computers and Society  An introduction to arguments about the relationship between computing and society, the impact of computing activities on social relationships, and the evolution of institutions to regulate computer-mediated activities.
Ethical Issues in Science and Technology  Consideration of such issues as the ethical responsibility of scientists and technologists for the uses of their knowledge, the ethics of scientific research, and truth and fraud in science and engineering. We will study such contemporary moral questions as those concerning the uses and abuses of nuclear energy, environmental pollution and the preservation of natural resources, and the impact of new technologies on the right to privacy.
Operating Systems  The use and internals of modern operating systems. Lectures focus on internals whereas programming assignments focus on use of the operating system interface. Major topics include: the process concept; concurrency and how to program with threads; memory management techniques, including virtual memory and shared libraries; file system data structures; and I/O.
Compiler Design and Implementation In the modern software industry, there is a proliferation of programming languages, especially domain-specific languages, such as Facebook Hack, Google Go, and Mozilla Rust. Therefore, the robustness and security of the software of the future depends on these languages (i) being built from classical compilers foundations and (ii) increasingly incorporating better analysis techniques. This course introduces students to the structure and design of compilers (lexical and syntax analysis, symbol table construction, code generation, etc.) as well as semantic analyses for correctness and security. The emphasis in this course is on the integration of the various parts of a compiler.
CS 541 Artificial Intelligence An introduction to the large and diverse field of artificial intelligence. Topics include: problem-solving by search and constraint satisfaction; alpha-beta search for two-player games; and logic and knowledge representation, planning, learning, decision theory, statistical learning, and computer vision.
Senior Design I Students in this course work in teams to develop real software for real clients.
Introduction to IT Security This course provides a basic introduction to the key concepts in security. It covers basic concepts such as authentication, confidentiality, integrity, and nonrepudiation as well as important techniques and applications. Topics include access control, security economics, ethics, privacy, software/operating system security, and security policies.
Web Programming  This course will provide students with a first strong approach of internet programming. It will give the basic knowledge on how the Internet works and how to create advanced web sites by the use of script languages, after learning the basics of HTML.
Societal Impact of Information Technologies  Students explore tradeoffs posed by modern information technologies such as the Internet, mining of personal data, web tracking, and surveillance systems. Also covered are major debates about how IT technologies should be harnessed to serve the greater good, such as: Internet governance, privacy vs. openness, and laws regarding intellectual property.
Senior Design II The goal of the course is to provide you with basic skills for successfully performing high-quality research in finance and to help you choose a research topic to work on. The course will include both formal training sessions, on various aspects of research in finance, and an actual research project completed by students.
Computer Vision An introduction to the field of Computer Vision, focusing on the underlying algorithmic, geometric, and optic issues. The course starts with a brief overview of basic image processing topics (convolution, smoothing, and edge detection). It then proceeds on various image analysis topics: binary images, moments-based shape analysis, Hough transform, image formation, depth and shape recovery, photometry, motion, classification, and special topics.
Web Programming II This course focuses on teaching students the newest technologies available in Web Programming. Topics include advanced client side programming, responsive design, NoSQL databases, JQuery, AJAX, Web Site security, and the latest Frameworks.
Computer Science I This course serves as an introduction to computational thinking using a problem-centered approach. Specific topics covered include: expression of algorithms in pseudo code and a programming language; functional and imperative programming techniques; control structures; problem solving using recursion; basic searching and sorting; elementary data structures such as lists, trees, and graphs; and correctness, testing and debugging.
Computer Science II This course delves further into problem solving by continuing the discussion of data structure use and design, but now from an object-oriented perspective. Key topics include more information on tree and graph structures, nested data structures, objects, classes, inheritance, interfaces, object-oriented collection class libraries for abstract data types (e.g. stacks, queues, maps, and trees), and static vs. dynamic data types. Concepts of object-oriented design are a large part of the course. Software qualities related to object orientation, namely cohesion, minimal coupling, modifiability, and extensibility, are all introduced in this course, as well as a few elementary object-oriented design patterns. Input and output streams, graphical user interfaces, and exception handling are covered
Project-based Calculus I This is the first in a two-course sequence intended for students majoring in mathematics, science, or engineering. It emphasizes the understanding of concepts, and using them to solve physical problems. The course covers functions, limits, continuity, the derivative, rules of differentiation, applications of the derivative, Riemann sums, definite integrals, and indefinite integrals.
Project-based Calculus II This is the second in a two-course sequence intended for students majoring in mathematics, science, or engineering. It emphasizes the understanding of concepts, and using them to solve physical problems. The course covers techniques of integration including integration by parts, partial fractions, improper integrals, applications of integration, representing functions by infinite series, convergence and divergence of series, parametric curves, and polar coordinates.
Discrete Mathematics for Computing This course introduces students to ideas and techniques from discrete mathematics that are widely used in Computer Science. Students will learn about the fundamentals of propositional and predicate calculus, set theory, relations, recursive structures and counting. This course will help increase students mathematical sophistication and their ability to handle abstract problems.
First Year Writing First Year Writing
Wellness Education Wellness Education
Undergraduate Cooperative Education Seminar This seminar helps students prepare for Computer Science co-operative education employment (co-op) by developing job search strategies and materials, and reviewing relevant policies. Students are introduced to RITs Office of Career Services and Cooperative Education, and learn about professional and ethical responsibilities for their co-op and subsequent professional experiences. Completion of this seminar and the related assignments are required before a CS student can be registered for co-op.
The Mechanics of Programming Students will be introduced to the details of program structure and the mechanics of execution as well as supportive operating system features. Security and performance issues in program design will be discussed.
Analysis of Algorithms This course provides an introduction to the design and analysis of algorithms. It covers a variety of classical algorithms and data structures and their complexity and will equip students with the intellectual tools to design, analyze, implement, and evaluate their own algorithms.
Honors Analysis of Algorithms  This course provides a challenging introduction to the design and analysis of algorithms with an emphasis on problem solving and algorithmic research. It covers a variety of classical algorithms and data structures and their complexity, as well as deeper coverage of more advanced material; for example, linear programming, approximation algorithms, and randomized algorithms. The course will equip students with the intellectual tools to design, analyze, implement, and evaluate their own algorithms.
Introduction to Computer Science Theory This course provides an introduction to the theory of computation, including formal languages, grammars, auto-mata theory, computability, and complexity.
Honors Introduction to Computer Science Theory This course provides a challenging introduction to the theory of computation with an emphasis on problem solving. Topics include formal languages, grammars, auto-mata theory, computability, and complexity.
Linear Algebra This course is an introduction to the basic concepts of linear algebra, and techniques of matrix manipulation. Topics include linear transformations, Gaussian elimination, matrix arithmetic, determinants, vector spaces, linear independence, basis, null space, row space, and column space of a matrix, eigenvalues, eigenvectors, change of basis, similarity and diagonalization. Various applications are studied throughout the course.
Probability and Statistics I This course introduces sample spaces and events, axioms of probability, counting techniques, conditional probability and independence, distributions of discrete and continuous random variables, joint distributions (discrete and continuous), the central limit theorem, descriptive statistics, interval estimation, and applications of probability and statistics to real-world problems. A statistical package such as Minitab or R is used for data analysis and statistical applications.
Introduction to Software Engineering An introductory course in software engineering, emphasizing the organizational aspects of software development and software design and implementation by individuals and small teams within a process/product framework. Topics include the software lifecycle, software design, user interface issues, specification and implementation of components, assessing design quality, design reviews and code inspections, software testing, basic support tools, technical communications and system documentation, team-based development. A term-long, team-based project done in a studio format is used to reinforce concepts presented in class.
Concepts of Computer Systems An introduction to the hardware and software organization of computer systems. The course emphasizes a multilevel model of computer organization. Topics include the digital logic level; the micro architecture level; the machine instruction set level; the operating system level; and the assembly language level. Programming assignments will be required.
Principles of Data Management This course provides a broad introduction to the principles and practice of modern data management, with an emphasis on the relational database model. Topics in relational database systems include data modeling; the relational model; relational algebra; Structured Query Language (SQL); and data quality, transactions, integrity and security. Students will also learn approaches to building relational database application programs. Additional topics include object-oriented and object-relational databases; semi-structured databases (such as XML); and information retrieval. A database project is required.
Introduction to Intelligent Systems An introduction to the theories and algorithms used to create artificial intelligence (AI) systems. Topics include search algorithms, logic, planning, machine learning, and applications from areas such as computer vision, robotics, and natural language processing. Programming assignments are an integral part of the course.
Concepts of Parallel and Distributed Systems This course is an introduction to the organization and programming of systems comprising multiple computers. Topics include the organization of multi-core computers, parallel computer clusters, computing grids, client-server systems, and peer-to-peer systems; computer networks and network protocols; network security; multi-threaded programming; and network programming. Programming projects will be required.
Programming Language Concepts This course is a study of the syntax and semantics of a diverse set of high-level programming languages. The languages chosen are compared and contrasted in order to demonstrate general principles of programming language design and implementation. The course emphasizes the concepts underpinning modern languages rather than the mastery of particular language details
Professional Communications This course focuses on developing and improving verbal and written communication skills specific to the discipline of computer science. Topics include the different forms of writing in computer science (books, theses, journal articles, technical reports, manuscripts, etc.), writing styles of computer scientists, document readability and usability, documents for career readiness, effective presentations, teamwork and peer review, research methods, experimentation, documenting mathematics and algorithms, proper formatting of graphs, figures, and tables, and ethical, social, and professional issues facing Computer Scientists.
Principles of Data Mining This course provides an introduction to the major concepts and techniques used in data mining of large databases. Topics include the knowledge discovery process; data exploration and cleaning; data mining algorithms; and ethical issues underlying data preparation and mining.
Introduction to Computer Vision An introduction to the underlying concepts of computer vision. The course will consider fundamental topics, including image formation, edge detection, texture analysis, color, segmentation, shape analysis, detection of objects in images and high level image representation. Depending on the interest of the class, more advanced topics will be covered, such as image database retrieval or robotic vision
Systems Programming Application of operating system concepts to the design of hardware interfaces for a multiprogramming environment. Laboratory work includes the development of a multiprogramming (optionally, multiprocessing) kernel with system call and interrupt handling facilities, and the building of device drivers for a variety of peripheral devices. This course provides extensive experience with those aspects of systems programming that deal directly with the hardware interface
Computer Architecture Computer Architecture is a study of the design of both modern and classic computer hardware. Topics include: a review of classical computer architectures; the design of operation codes and addressing modes, data formats, and their implementation; internal and external bus structures; architectural features to support virtual storage and page-replacement policies, high-level language features, and operating system
Principles of Computer Security This course provides a broad introduction to the basic principles and practice of computer security and emphasizes policies and mechanisms for building secure and trusted computer systems. Topics include but are not limited to the following: security principles, policies and mechanisms; cryptographic tools; user authentication and access control; secure systems and networking; secure application development; secure data management; impact of mobile, web and cloud computing; intrusion detection and prevention; auditing and forensics; privacy; security management and risk assessment; and legal and ethical aspects
Introduction to Cryptography This course provides an introduction to cryptography, its mathematical foundations, and its relation to security. It covers classical cryptosystems, private-key cryptosystems (including DES and AES), hashing and public-key cryptosystems (including RSA). The course also provides an introduction to data integrity and authentication
Xtreme Theory A fast paced, informal look at current trends in the theory of computing. Each week is dedicated to a different topic and will explore some of the underlying theory as well as the practical applications of the theory. Sample topics may include: quantum cryptography, networks and complex systems, social welfare and game theory, zero knowledge protocols. Students will be evaluated on homework assignments and a final presentation
Professional Communications This course focuses on developing and improving verbal and written communication skills specific to the discipline of computer science. Topics include the different forms of writing in computer science (books, theses, journal articles, technical reports, manuscripts, etc.), writing styles of computer scientists, document readability and usability, documents for career readiness, effective presentations, teamwork and peer review, research methods, experimentation, documenting mathematics and algorithms, proper formatting of graphs, figures, and tables, and ethical, social, and professional issues facing Computer Scientists
CS Undergraduate Summer Co-op CS Undergraduate Summer Co-op
Introduction to Computer Graphics Introduction to Computer Graphics is a study of the hardware and software principles of interactive raster graphics. Topics include an introduction to the basic concepts, 2-D and 3-D modeling and transformations, viewing transformations, projections, rendering techniques, graphical software packages and graphics systems. The course will focus on rasterization techniques and emphasize the hardware rasterization pipeline including the use of hardware shaders. Students will use a standard computer graphics API to reinforce concepts and study fundamental computer graphics algorithms
Introduction to Intelligent Security Systems The course will introduce students to the application of intelligent methodologies in computer security and information assurance systems design. It will review different application areas such as intrusion detection and monitoring systems, access control and biological authentication, firewall structure and design
Introduction to Security Measurement The course will introduce students into the algorithmic foundations and modern methods used for security evaluation and tools design. It will combine a theoretical revision of the methods and models currently applied for computer security evaluation and an investigation of computer security through the study of user's practice
Programming Skills The goal of this course is to introduce the students to a programming paradigm and an appropriate programming language chosen from those that are currently important or that show high promise of becoming important. A significant portion of the learning curve occurs through programming assignments with exemplary solutions discussed later in class
Calculus, Part I Brief review of High School calculus, applications of integrals, transcendental functions, methods of integration, infinite series, Taylor's theorem, and first order ordinary differential equations. Use of symbolic manipulation and graphics software in calculus.
Calculus, Part II Functions of several variables, vector-valued functions, partial derivatives and applications, double and triple integrals, conic sections, polar coordinates, vectors and vector calculus, first order ordinary differential equations. Applications to physical sciences. Use of symbolic manipulation and graphics software in calculus.
Mathematical Foundations of Computer Science What are the basic mathematical concepts and techniques needed in computer science? This course provides an introduction to proof principles and logics, functions and relations, induction principles, combinatorics and graph theory, as well as a rigorous grounding in writing and reading mathematical proofs.
Discrete Probability, Stochastic Processes, and Statistical Inference The purpose of this course is to provide a 1 CU educational experience which tightly integrates the theory and applications of discrete probability, discrete stochastic processes, and discrete statistical inference in the study of computer science. The intended audience for this class is both those students who are CS majors as well as those intending to be CS majors. Specifically, it will be assumed that the students will know: Set Theory, Mathematical Induction, Number Theory, Functions, Equivalence Relations, Partial-Order Relations, Combinatorics, and Graph Theory
Engineering Probability This course introduces students to the mathematical foundations of the theory of probability and its rich applications. The course begins with an exploration of combinatorial probabilities in the classical setting of games of chance, proceeds to the development of an axiomatic, fully mathematical theory of probability, and concludes with the discovery of the remarkable limit laws and the eminence grise of the classical theory, the central limit theorem. The topics covered include: discrete and continuous probability spaces , distributions, mass functions, densities; conditional probability; independence; the Bernoulli schema: the binomial, Poisson, and waiting time distributions; uniform, exponential, normal, and related densities; expectation, variance, moments; conditional expectation; generating functions, characteristic functions; inequalities, tail bounds, and limit laws. But a bald listing of topics does not do justice to the subject: the material is presented in its lush and glorious historical context, the mathematical theory buttressed and made vivid by rich and beautiful applications drawn from the world around us. The student will see surprises in election-day counting of ballots, a historical wager the sun will rise tomorrow, the folly of gambling, the sad news about lethal genes, the curiously persistent illusion of the hot hand in sports, the unreasonable efficacy of polls and its implications to medical testing, and a host of other beguiling settings.
Engineering StatisticsThis is a first course in applied statistics and probability for students in engineering. The course covers basic concepts of probability, discrete and continuous random variables, probability distributions, data description techniques, random samples, estimations, hypothesis testing, regression, and statistical quality control.
Probability Discrete and continuous sample spaces and probability; random variables, distributions, independence; expectation and generating functions; Markov chains and recurrence theory.
Mathematics in the Age of Information This course counts as a regular elective for both the Mathematics Major and Minor. This is a course about mathematical reasoning and the media. Embedded in many stories one finds in the media are mathematical questions as well as implicit mathematical models for how the world behaves. We will discuss ways to recognize such questions and models, and how to think about them from a mathematical perspective. A key part of the course will be about what constitutes a mathematical proof, and what passes for proof in various media contexts. The course will cover a variety of topics in logic, probability and statistics as well as how these subjects can be used and abused.
Calculus, Part II with Probability and Matrices Functions of several variables, partial derivatives, multiple integrals, differential equations; introduction to linear algebra and matrices with applications to linear programming and Markov processes. Elements of probability and statistics. Applications to social and biological sciences. Use of symbolic manipulation and graphics software in calculus. One-term course offered either term
Principles of Physics I (without laboratory) The topics of this calculus-based course are: Classical laws of motions; interactions between particles; conservation laws and symmetry principles; particle and rigid body motion; gravitation, harmonic motion, and applications of mechanics to real-world problems. Engineering students only.
Principles of Physics II (without laboratory) The topics of this calculus-based course are electric and magnetic fields; Coulomb's, Gauss's, Ampere's, and Faraday's laws; DC and AC circuits; Maxwell's equations and electromagnetic radiation. Engineering students only.
Principles of Physics I: Mechanics and Wave Motion This calculus-based course is recommended for science majors and engineering students. Classical laws of motion; interactions between particles; conservation laws and symmetry principles; particle and rigid body motion; gravitation, harmonic motion, and applications of mechanics to real-world problems.
Principles of Physics II: Electromagnetism and Radiation The topics of this calculus-based course are electric and magnetic fields; Coulomb's, Gauss's, Ampere's, and Faraday's laws; DC and AC circuits; Maxwell's equations and electromagnetic radiation.
Introduction to Syntax This course is an introduction to current syntactic theory, covering the principles that govern phrase structure (the composition of phrases and sentences), movement (dependencies between syntactic constituents), and binding (the interpretation of different types of noun phrases). Although much of the evidence discussed in the class will come from English, evidence from other languages will also play an important role, in keeping with the comparative and universalist perspective of modern syntactic theory.
Perception How the individual acquires and is guided by knowledge about objects and events in their environment.
Introduction to Computer Programming Introduction to Computer Programming is the first course in our series introducing students to computer science. In this class you will learn the fundamentals of computer programming in Java, with emphasis on applications in science and engineering. You will also learn about the broader field of computer science and algorithmic thinking, the fundamental approach that computer scientists take to solving problems.
Programming Languages and Techniques I A fast-paced introduction to the fundamental concepts of programming and software design. This course assumes some previous programming experience, at the level of a high school computer science class or CIS110. (If you got at least 4 in the AP Computer Science A or AB exam, you will do great.) No specific programming language background is assumed: basic experience with any language (for instance Java, C, C++, VB, Python, Perl, or Scheme) is fine
Programming Languages and Techniques II This is a course about Algorithms and Data Structures using the JAVA programming language. We introduce the basic concepts about complexity of an algorithm and methods on how to compute the running time of algorithms. Then, we describe data structures like stacks, queues, maps, trees, and graphs, and we construct efficient algorithms based on these representations. The course builds upon existing implementations of basic data structures in JAVA and extends them for the structures like trees, studying the performance of operations on such structures, and theiefficiency when used in real-world applications. A large project introducing students to the challenges of software engineering concludes the course.
Introduction to Computer Systems You know how to program, but do you know how computers really work? How do millions of transistors come together to form a complete computing system? This bottom-up course begins with transistors and simple computer hardware structures, continues with low-level programming using primitive machine instructions, and finishes with an introduction to the C programming language.
Automata, Computability, and Complexity This course explores questions fundamental to computer science such as which problems cannot be solved by computers, can we formalize computing as a mathematical concept without relying upon the specifics of programming languages and computing platforms, and which problems can be solved efficiently. The topics include finite automata and regular languages, context-free grammars and pushdown automata, Turing machines and undecidability, tractability and NP-completeness. The course emphasizes rigorous mathematical reasoning as well as connections to practical computing problems such as test processing, parsing, XML query languages, and program verification.
Introduction to Algorithms How do you optimally encode a text file? How do you find shortest paths in a map? How do you design a communication network? How do you route data in a network? What are the limits of efficient computation? This course gives a comprehensive introduction to design and analysis of algorithms, and answers along the way to these and many other interesting computational questions. You will learn about problem-solving; advanced data structures such as universal hashing and red-black trees; advanced design and analysis techniques such as dynamic programming and amortized analysis; graph algorithms such as minimum spanning trees and network flows; NP-completeness theory; and approximation algorithms.
Compilers and Interpreters You know how to program, but do you know how to implement a programming language? In CIS341 you'll learn how to build a compiler. Topics covered include: lexical analysis, grammars and parsing, intermediate representations, syntax-directed translation, code generation, type checking, simple dataflow and control-flow analyses, and optimizations. Along the way, we study objects and inheritance, first-class functions (closures), data representation and runtime-support issues such as garbage collection. This is a challenging, implementation-oriented course in which students build a full compiler from a simple, typed object-oriented language to fully operational x86 assembly.
Software Design/Engineering You know how to write a "program". But how do you create a software "product" as part of a team, with customers that have expectations of functionality and quality? This course introduces students to various tools (source control, automated build systems, programming environments, test automation, etc.) and processes (design, implementation, testing, and maintenance) that are used by professionals in the field of software engineering. Topics will include: software development lifecycle; agile and test-driven development; source control and continuous integration; requirements analysis; object-oriented design and testability; mobile and/or web application development; software testing; refactoring ; and software quality metrics.
Computer Organization and Design This is the second computer oganization course and focuses on computer hardware design. Topics covered are: (1) basic digital system design including finite state machines, (2) instruction set design and simple RISC assembly programming, (3) quantitative evaluation of computer performance, (4) circuits for integer and floating-point arithmatic, (5) datapath and control, (6) micro-programming, (7) pipeling, (8) storage hierarchy and virtual memory, (9) input/output, (10) different forms of parallelism including instruction level parallelism, data-level parallelism using both vectors and message-passing multi-processors, and thread-level parallelism using shared memory multiprocessors. Basic cache coherence and synchronization.
Computer Operating Systems This course surveys methods and algorithms used in modern operating systems. Concurrent distributed operation is emphasized. The main topics covered are as follows: process synchronization; interprocess communication; concurrent/distributed programming languages; resource allocation and deadlock; virtual memory; protection and security; distributed operation; distributed data; performance evalaution.
Senior Project Design and implementation of a significant piece of work: software, hardware or theory. In addition, emphasis on technical writing and oral communication skills. Students must have an abstract of their Senior Project, which is approved and signed by a Project Adviser, at the end of the second week of Fall classes.
Database and Information Systems This course provides an introduction to the broad field of database and information systems, covering a variety of topics relating to structured data, ranging from data modeling to logical foundations and popular languages, to system implementations. We will study the theory of relational and XML data design; the basics of query languages; efficient storage of data, execution of queries and query optimization; transactions and updates; web-database development; and "big data" and NoSQL systems.
Internet and Web Systems This course focuses on the challenges encountered in building Internet and web systems: scalability, interoperability (of data and code), security and fault tolerance, consistency models, and location of resources, services, and data. We will examine how XML standards enable information exchange; how web services support cross-platform interoperability (and what their limitations are); how to build high-performance application servers; how "cloud computing" services work; how to perform Akamai-like content distribution; and how to provide transaction support in distributed environments. We will study techniques for locating machines, resources, and data (including directory systems, information retrieval indexing, ranking, and web search); and we will investigate how different architectures support scalability (and the issues they face). We will also examine ideas that have been proposed for tomorrow's Web, and we will see some of the challenges, research directions, and potential pitfalls. An important goal of the course is not simply to discuss issues and solutions, but to provide hands-on experience with a substantial implementation project. This semester's project will be a peer-to-peer implementation of a Googe-style search engine, including distributed, scalable crawling; indexing with ranking; and even PageRank. As a side-effect of the material of this course you will learn about some aspects of large-scale software development assimilating large APIs.
Interactive Computer Graphics This course focuses on programming the essential mathematical and geometric concepts underlying modern computer graphics. Using 3D interactive implementations, it covers fundamental topics such as mesh data structures, transformation sequences, rendering algorithms, and curve interpolation for animation. Students are also introduced to two programming languages widely used in the computer graphics industry: C++ and GLSL. The curriculum is heavily project-based, and culminates in a group project focused on building an interactive first-person world exploration application using the various real-time interaction and rendering algorithms learned throughout the semester.
Networked Systems This course provides an introduction to fundamental concepts in the design and implementation of networked systems, their protocols, and applications. Topics to be covered include: Internet architecture, network applications, addressing, routing, transport protocols, network security, and peer-to-peer networks. The course will involve written assignments, examinations, and programming assignments.. Students will work in teams to design and implement networked systems in layers, from routing protocols, transport protocols, to peer-to-peer networks.
Engineering Ethics In this course, students will study the social, political, environmental and economic context of engineering practice. Students will develop an analytical toolkit to identify and address ethical challenges and opportunities in the engineering profession, including studies of risk and safety, professional responsibility, and global perspectives. The course will begin with a foundation in the history of engineering practice and major Western ethical and philosophical theories. Students will then apply this material to both historical case studies, such as Bhopal, the NASA Shuttle Program, and Three Mile Island, as well as contemporary issues in big data, artificial intelligence, and diversity within the profession. Students will consider how engineers, as well as governments, the media, and other stakeholders, address such issues.
Writing Seminar Writing Seminar
Machine Learning Machine learning has been essential to the success of many recent technologies, including autonomous vehicles, search engines, genomics, automated medical diagnosis, image recognition, and social network analysis, among many others. This course will introduce the fundamental concepts and algorithms that enable computers to learn from experience, with an emphasis on their practical application to real problems. This course will introduce supervised learning (decision trees, logistic regression, support vector machines, Bayesian methods, neural networks and deep learning), unsupervised learning (clustering, dimensionality reduction), and reinforcement learning. Additionally, the course will discuss evaluation methodology and recent applications of machine learning, including large scale learning for big data and network analysis.
Advanced Topics in Natural Language Processing Different topics selected each offering; e.g., NL generation, question-answering, information extraction, machine translation, restricted grammar formalisms, computational lexical semantics, etc.
Robotics: Planning Perception This introductory course will present basic principles of robotics with an emphasis to computer science aspects. Algorithms for planning and perception will be studied and implemented on actual robots. While planning is a fundamental problem in artificial intelligence and decision making, robot planning refers to finding a path from A to B in the presence of obstacles and by complying with the kinematic constraints of the robot. Perception involves the estimation of the robots motion and path as well as the shape of the environment from sensors. In this course, algorithms will be implemented in Python on mobile platforms on ground and in the air. No prior experience with Python is needed but we require knowledge of data structures, linear algebra, and basic probability.
Computer Vision & Computational Photography This is an introductory course to Computer Vision and Computational Photography. This course will explore three topics: 1) image morphing, 2) image matching and stitching, and 3) image recognition. This course is intended to provide a hands-on experience with interesting things to do on images/videos. The world is becoming image-centric. Cameras are now found everywhere, in our cell phones, automobiles, even in medical surgery tools. Computer vision technology has led to latest innovations in areas such as Hollywood movie production, medical diagnosis, biometrics, and digital library. This course is suited for students from all Engineering backgrounds, who have the basic knowledge of linear algebra and programming, and a lot of imagination.
Advanced Topics in Computer Graphics and Animation The goal of the course is to review state-of-the art research in the fields of computer graphics and animation as well as provide students with working knowledge of how to convert theory to practice by developing an associated graphics/animation authoring tool. The course is comprised of primers, lectures, student presentations and the authoring tool group project. Each student will be responsible for presenting one primer and at least two SIGGRAPH papers to the class. Working in teams of two, students will design and develop an authoring tool that that facilitates the creation of a new type of user interaction, animation/simulation capability or 3D graphics special effect. Research papers published in the SigGraph Conference proceedings will provide the basis for the features/functionality/special effects that can be selected for implementation in the authoring tool. Each group will analyze the need and user requirements for the tool they plan to develop, prepare a formal software design document, construct a project work plan, develop the authoring tool functionality and user interface, test the design and demonstratthe authoring of associated content. A plug-in to standard authoring tools such as Maya or Houdini must also be developed to enable importing of appropriate assets and/or exporting of results.
Computer Architecture This course is an introductory graduate course on computer architecture with an emphasis on a quantitative approach to cost/performance design tradeoffs. The course covers the fundamentals of classical and modern uniprocessor design: performance and cost issues, instruction sets, pipelining, superscalar, out-of-order, and speculative execution mechanisms, caches, physical memory, virtual memory, and I/O. Other topics include: static scheduling, VLIW and EPIC, software speculation, long (SIMD) and short (multimedia) vector execution, multithreading, and an introduction to shared memory multiprocessors.
Networked Systems This course provides an introduction to fundamental concepts in the design and implementation of networked systems, their protocols, and applications. Topics to be covered include: Internet architecture, network applications, addressing, routing, transport protocols, network security, and peer-to-peer networks. The course will involve written assignments, examinations, and programming assignments.. Students will work in teams to design and implement networked systems in layers, from routing protocols, transport protocols, to peer-to-peer networks.
Advanced Topics in Algorithms and Complexity This course covers various aspects of discrete algorithms. Graph-theoretic algorithms in computational biology, and randomization and computation; literature in dynamic graph algorithms, approximation algorithms, and other areas according to student interests.
Applications in Engineering Introduction of various concepts in engineering. Emphasis on project work, engineering ethics, and engineering design process.
Introduction To Computing In Engineering An introduction to engineering problem-solving with the aid of computational software. Scientific computing concepts will be introduced including number representation, arrays, structured programming techniques, and good coding practices.  Basic numerical and data analysis methods will be introduced including numerical differentiation and integration, matrix operations, descriptive statistics, curve fitting, and optimization.
Calculus I Differential and integral calculus: limits and continuity, the derivative and techniques of differentiation, extremal problems, related rates, the definite integral, Fundamental Theorem of Calculus, derivatives and integrals of trigonometric functions, logarithmic and exponential functions.
Calculus II Applications of the integral, techniques of integration, separable differential equations, improper integrals. Sequences, series, convergence tests, Taylor series. Polar coordinates, complex numbers.
General Physics I W/lab Principles of classical mechanics, fluids, heat, thermodynamics. Lectures, recitations, laboratories. Calculus based.
General Physics II W/lab Principles of  electricity and magnetism, waves, sound, and light. Lectures, recitations, laboratories.
Expository Writing Explores the principles of effective written communication and provides intensive practice in writing various types of expository prose, especially analysis and persuasion.
Introduction To Computer Science The study of computer science centers on two complementary aspects of the discipline. First, computer science is fundamentally concerned with the problem-solving methodologies it derives from its foundational fields: the design principles of engineering, mathematical theory, and scientific empirical study. Second, these methodologies are applied in the complex context of a modern day computing system. In this course we will address both of these important aspects. As a means for developing your design skills, we will discuss the fundamental features of a high level, general purpose programming language — namely C++ — and learn how to use it as a tool for problem solving. We will also consider the performance of solutions, and how to apply both analytical and empirical assessment techniques
Data Structures Data structures and algorithms are studied through major programming projects. Topics include linked lists, trees, graphs, dynamic storage allocation, and recursion.
Calculus III Vectors in two and three dimensions, applications of the derivative of vector-valued functions of a single variable. Functions of several variables, continuity, partial derivatives, the gradient, directional derivatives. Multiple integrals and their applications. Line integrals, Green's theorem, divergence theorem, Stokes’ theorem.
Discrete Mathematics Sets, relations and functions, logic and methods of proof, combinatorics, graphs and digraphs.
General Physics II W/lab Principles of  electricity and magnetism, waves, sound, and light. Lectures, recitations, laboratories.
Introduction To Digital Logic Circuits W/ Lab Number systems and their conversions. Boolean algebra and Karnaugh map minimizations of Boolean expressions. Logic gates. Analysis and design of combinational logic circuits. Characteristics of various flip-flops. Analysis and design of sequential logic circuits. Design of counter and shift register circuits. Various binary codes and code conversion circuits. Binary arithmetic and arithmetic circuits. Introduction to iterative design.
Introduction To Electrical Systems W/ Lab Definitions of circuit elements, fundamental laws, selected network theorems, controlled sources, introduction to the oscilloscope, energy and power, natural response and complete response of first order circuits, steady state sinusoidal behavior, algebra of complex numbers, phasors, impedance, average and reactive power, introduction to analog and digital systems, frequency response and filters, measurements and instrumentation, introduction to computer applications for circuit analysis and design.
Machine Structure & Assembly-language Programming Structure of machine-level data and code, including memory, cache, registers, machine arithmetic, and bitwise operations. Encapsulating machine functionality through interfaces and abstract data types. Structure of assembly code, relocatable object code, and binary machine code, and the translations between them. Applications of machine-level operations and code translations in programming projects.
Algorithms Introduction to the study of algorithms. Strategies such as divide-and-conquer, greedy methods, and dynamic programming. Graph algorithms, sorting, searching, integer arithmetic, hashing, and NP-complete problems.
Convex Optimization Convex sets, convex functions and convex optimization problems; duality theory and optimality conditions; algorithms for solving convex problems including descent, gradient descent, Newton and interior point methods.
Human Computer Interaction Introduction to human-computer interaction, or how computers communicate with people. Methodology for designing and testing user interfaces, interaction styles (command line, menus, graphical user interfaces, virtual reality), interaction techniques (voice, gesture, eye movement), design guidelines, and user-interface management system software. Students will design a small user interface, program a prototype, and test the result for usability.
Introduction To Biomedical Engineering An introduction to the interdisciplinary nature of biomedical engineering. The biological, chemical, electrical, and mechanical principles involved in the design and operation of medical devices. Biopotentials, electrodes, transducers, biocompatibility of materials, and patient safety.
Engineering for a Sustainable and Resilient Society Quantitative description of natural and engineered processes affecting environmental sustainability at local, regional, and global scales.  Principles of ecology, material and energy flows, environmental quality, climate change, and resiliency in a civil and environmental engineering context.
Senior Capstone Project I Requirements analysis and design of a senior capstone project. Requirements analysis and elicitation methods, and prototyping. Design principles and methods, including designing for usability, security, testability, performance, and scaling. Project management and planning, including cost and effort estimation. Writing effective documentation.
Senior Capstone Project II Implementation and testing of the project designed in COMP97. Implementation tools, strategies, and platforms. Testing and debugging methodologies. Maintenance and release management. Legal, ethical, and social impacts of computing.
Programming Languages Principles and application of computer programming languages.  Emphasizes ideas and techniques most relevant to practitioners, but includes foundations crucial for intellectual rigor: abstract syntax, lambda calculus, type systems, dynamic semantics.  Case studies, reinforced by programming exercises.  Grounding sufficient to read professional literature.
Computation Theory Models of computation: Turing machines, pushdown automata, and finite automata. Grammars and formal languages, including context-free languages and regular sets. Important problems, including the halting problem and language equivalence theorems.
Computer Graphics The course provides the background to understand and build interactive graphics systems. Introduction to computer graphics from simple two-dimensional graphics through three-dimensional viewing and transforms. Interactive graphics programming, raster graphics, raster algorithms, geometrical transformations, viewing in three dimensions, modeling and hierarchical data structures, visual realism, virtual reality, interaction devices, tasks and techniques.
Visualization Visualization as a tool for data analysis, recall, inference, and decision-making. Tools for visual description and presentation. Principles of effective visualization, including data-visual mapping, interaction techniques, color theory, cognitive and perceptual psychology, and human factors of visual depictions of data.
Biostatistics An examination of statistical methods for designing, analyzing, and interpreting biological experiments and observations. Topics include probability, parameter estimation, inference, correlation, regression, analysis of variance, and nonparametric methods.
Software Engineering Core principles and ideas that enable development of large-scale software systems, with a focus on programming. Abstraction, modularity, design patterns, specification, testing, verification, and debugging.
Mechanical Design And Fabrication Fabrication techniques focusing on manual and CNC machines. Engineering drawings. Fundamentals of machine design. Elastic and plastic deformation, theories of failure, impact, and fatigue of machine elements.
Engineering Psychology Survey of the applied areas of psychology that have proven useful in the design of equipment for human use and in the design of human-machine systems. Emphasis on how humans process information and how psychological science can further inform each stage of information processing.
Freshman Composition Instruction and practice in the basic principles of expository writing: the paragraph and the whole composition-the methods of development, the thesis, the outline and organization, the structure and style. Instruction in functional grammar, sentence structure, diction and spelling, punctuation and mechanics, in direct relation to the student's writing.
Calculus I  Topics include limits, the derivatives, techniques of differentiation, applications of the derivative, antiderivatives, definite integrals, and the calculus of transcendental functions.
Critical Reading and Writing  Development of skills in reading critically, analyzing models of good writing, and writing in response to a variety of texts, including imaginative literature. Writing the argumentative essay, the critical essay, the research paper, and the essay examination.
Calculus II  Topics include integration techniques, applications of the definite integral, and infinite series. Calculus will be used in the solution of real world applications.
WORLD LITERATURE WORLD LITERATURE
Applied Statistics with Probability  Topics will include the basic rules of probability, commonly used discrete and continuous distributions, random sampling and sampling distributions, regression analysis, parameter estimation, and hypothesis testing.
Intro to Prof and Technical Writing  An introduction to the genres of writing used in the technical and professional workplace, including memos, letters, instructions, directions, proposals, résumés, and short reports.
NUMERICAL METHODS Topics include error analysis, Taylor series, solutions of non-linear equations, systems of linear equations, and interpolation.
LINEAR ALGEBRA I Topics will include equations, matrices, determinants, vector spaces, linear transformations, eigenvalues/eigenvectors/eigenspaces, diagonalization, and inner product spaces.
GENERAL BIOLOGY I Principles of biology from the cellular level including biochemistry, cell biology, metabolism, photosynthesis, molecular biology, and genetics.
GENERAL BIOLOGY LAB I Laboratory exercises for studying the principles of biology from the cellular level including biochemistry, cell biology, molecular biology, and genetics.
CALCULUS III Topics include vectors and geometry of 3-space, vector-valued functions, directional derivatives, and multiple and line integrals.
Discrete Structures Introduction to discrete structures of computing. Topics include sets, relations, functions, digraphs, matrices, recursion, partially ordered sets, Boolean Algebra, artificial languages, and finite state machines.
Algorithim Design & Implementation II  An introduction to elementary data structures, searches, simple and complex sorts, and objects.
Software Engineering Introduction to the methods used for specifying, designing, implementing, and testing medium and large-scale software systems; methods for organizing and managing software development projects, professionalism and ethical resposibilities in software development.
Assembly Language  Topics include machine representation of data, fixed point, floating point, and decimal arithmetic, macros, address modification, bit manipulation, and subroutine linkage.
Computer Architecture  Hardware organization and implementation of computer architecture. Instruction set considerations and addressing modes. System control concepts. CPU control, microprogramming, I/O interface and memory organization. Parallel and data flow architecture.
Data Structures  Further study of trees, including: balanced trees, B-trees, 2-3 trees, and tries; external sorting, symbol tables, and file structures.
Numerical Methods  Topics include error analysis, Taylor series, solutions of equations, linear simultaneous equations, and interpolation.
Survey of Programming Languages Involves the formal study of programming languages, specification, and analysis in terms of data types and structures.
SURVEY WORLD ART HISTORY I One semester chronological survey of world art and architecture from the Paleolithic to the Late Gothic eras. Emphasis varies with instructor.
WESTERN CIVILIZATION TO 1500 A survey of Western Civilization from prehistoric times to 1500. Four units on the Ancient Near East; the Ancient Greeks; the Ancient Roman World; and the Middle Ages. Includes in-depth coverage of the role of women.
Capstone I Topics include organization and management of software projects, security, programmer teams, validation and verification.
Integrated Technologies for Enterprise Systems  This course provides an introduction to several current technologies, and how they can be used to integrate software solutions into a functional large interconnected system.
Introduction to Public Speaking Training in the organization of materials and the oral and physical aspects of delivery in various speaking situations. Intended to give the beginning student an understanding of and practice in communicative speaking.
Operating Systems  Topics include process management, processor management, memory management, device management, file management, process synchronization and interprocess communication, and user interface.
Macroecoomics The nature of economics, economic concepts and institutions, monetary theory, national income theory, financing of business, population problems and economic stability.
Automata and Formal Languages Introduction to computing device capabilities through study of abstract machines and corresponding formal languages. Topics include Turing machines, recursion, Chomsky grammars, context-free languages, regular languages, and finite automata.
Current Trends in Computer Science Topics include computer and information ethics, social implications of technology, current trends in computer science and information technology applications and development, professional issues, and emerging trends and current topics in computer science research.
MACHINE LEARNING Introduction to machine learning. Topics include genetic algorithms, inductive learning, statistical learning methods, reinforcement learning, neural networks, decision trees, analytical learning, and Bayesian learning.
INTRODUCTION TO ROBOTICS An introduction to robotics including the history of robots, the sense-plan-act paradigm, any-time learning systems, and the three-layer architecture. The class will emphasize concepts and practical application of robotics.
FRESHMAN ACADEMIC SUCCESS AT SOUTHEASTERN Topics include the purpose and value of higher education; the expectations and responsibilities of a college student; the development of analytical and metacognitive learning strategies.

Computer Science I An introduction to programming concepts and methodology using an object-oriented programming language (currently Java).  Topics include problem analysis, abstraction, modularization, the development and use of algorithms, reuse, and the use of programming constructs including data types, classes, control structures, and methods.
Computer Science II This course emphasizes object-oriented software development, addressing both software engineering and programming.  Topics include modularization, abstraction, encapsulation/information hiding, software reuse, software testing, classic data abstractions (e.g., lists, trees) and algorithms (e.g., sorting, searching), recursion, program correctness, and basic algorithm analysis.
Discrete Structures A study of symbolic logic, sets, combinatorics, mathematical induction, recursion, graph theory, and trees. Intended for Engineering, Computer Science, and Computer Information Systems majors, but open to other qualified students.
Calculus I Topics from calculus and analytic geometry including limits, derivatives and their applications, integrals, and the Fundamental Theorem.
Introduction to Computing and Information Technology This course presents foundational concepts and surveys the past, present and future of computing and information technology with an emphasis on the seminal ideas, concepts, inventions and innovations that fuel the Digital Revolution.  The sub-disciplines of computing are identified and discussed relative to each other.
Composition Students develop techniques for making effective contributions in writing to intellectual discussions, academically and in other cultural settings. Students are tasked with forming the strong foundation in critical reading, thinking, writing, researching, and reflecting necessary for expressing ideas in a variety of rhetorical situations.
Introduction to Philosophy The aim of this course is to awaken in the student an appreciation of the nature and method of philosophical inquiry through an examination of key texts that grapple with central questions in the history of philosophy.
Introduction to the Bible A survey of central texts and themes of the Bible. Its purpose is to develop biblical literacy as well as skills in interpreting various literary forms and key theological concepts.
Data Structures and Algorithms An examination of the issues of data representation, algorithm structure, and encapsulation as they pertain to the development of object-oriented software.  Abstract data types studied include stacks, queues, binary trees, n-ary trees, and graphs. Various representation alternatives are analyzed and compared, trade-offs frequently encountered by software developers are discussed.
Machine Organization and Assembly Language Programming An introductory study of the organization and architecture of computers through an exploration of various virtual machines. Programming at the assembly-language level and interfacing with software components (primarily written in C). Topics include representation of data and instructions, computer arithmetic, memory hierarchies, instruction sets, addressing modes, digital logic, microprogramming, pipelining, and parallel processing.
Theoretical Foundations of Computer Science An examination of the fundamental models and concepts of computation  automata, formal languages, and grammars  and how they are related.  Church-Turing thesis; recursive and recursively enumerable sets; unsolvable problems; complexity of algorithms; Chomsky hierarchy.
Sophomore Colloquia I Sophomore Colloquia I
Sophomore Colloquia II Sophomore Colloquia II
Calculus II Topics from calculus and analytic geometry including applications of the definite integral, calculus of transcendental functions, methods of integration, improper integrals, sequences and series.
Ethics An examination of moral issues through close readings of important historical texts such as the writings of Plato, Aristotle, Augustine, Aquinas, Kant or Mill.  Themes will include happiness, virtue, the nature of justice, free choice, conscience, natural law and obligation, God and morality.
Theology II: Introduction to Christian Theology A survey of key Christian themes: creation, Christs incarnation and redemption, the Church and sacraments, Christian personhood, and the practice of prayer, virtue, and hope for the future.
Operating Systems An introduction to the principles of operating systems.  Topics include operating system structure, process management, scheduling and dispatching, process synchronization and interprocess communication, memory management, virtual memory, device management, I/O, and file systems.
Programming Languages A study of programming languages from both the theoretical and practical perspectives.  A survey of major and developing paradigms and languages is undertaken which includes use of specific languages to broaden the students experience.  Implementation is studied through an introduction to language translation along with a study of run-time models and interfaces with virtual machines.
Introduction to Database File structures concepts and file processing applications.  Topics include file maintenance and storage management; file searching, sorting, and merging; co-sequential processing; index structures; B-trees; hash tables; indexed sequential files; database concepts.
Computer Architecture A study of the logical structure of computer-system organization including a survey of logic and design with an emphasis on functional components.  Topics include instruction sets, hard-wired and microprogrammed control-unit designs, memory systems (caches and virtual memory), I/O systems (interrupts, DMA, and channels).
Junior Colloquia I Junior Colloquia I
Junior Colloquia II Junior Colloquia II
Fundamentals of Software Engineering An introduction to the concepts of Software Engineering.  Stress is placed upon formal models for the design and development of high-quality software.  Topics include: project planning, requirements analysis, system design, program design, program implementation, program testing, system testing, system delivery, and maintenance.
Capstone Project Capstone Project
Senior Colloquia I Senior Colloquia I
Senior Colloquia II Senior Colloquia II
Computers and Ethics Ethical aspects of hacking, software, piracy, computer-aided decision making, protection of software by copyright, patent, trade secret laws, unauthorized use of computer resources, privacy and database security, program warranties and programmer responsibility, artificial intelligence, the interface between human and computer.
Elements of Physics I Calculus-based introduction to physics covering linear and rational kinematics, Newtons laws, conservation of momentum and energy, the work-energy theorem, gravitation, oscillations, and waves
Elements of Physics II Calculus-based introduction to physics covering waves of sound and light, superposition, interference, geometrical and ray optics, electrostatics, electric field, electric potential, current, capacitance, resistance, circuits, magnetic field, magnetic force, and induced emf.
General and Analytical Chemistry A study of the laws, theories and principles of general chemistry together with qualitative and quantitative analysis. Three hours lecture each semester.
General Biology A comprehensive study of the nature of living organisms, both plant and animal, their structure, function, development and relationships, including the problems of development, heredity and evolution.
Database Systems An introduction to database management systems with an emphasis on relational database design and applications.  It uses an appropriate database package such as ORACLE or PostgreSQL.
Data Communications and Networks A study of data communication and networking concepts, including distributed-system architectures, electronic interfaces, data-transmission, data link protocols, terminal networks, computer communication, public-data networks, and local-area networks.
Mobile Application Development This course deals with the development of software for mobile devices such as smartphones and tablets.  Topics include, but are not limited to, graphical user interface design, event-driven software model, resource management, interfacing with sensors, concurrency, database access, and networking.
Web Programming This course covers all aspects of programming on the World Wide Web.  This includes the presentation of HTML, Java, JavaScript and CGI.  Topics include advanced HTML (maps, forms, etc.) client-server programming basics as they relate to the Web, Java machine concepts, Java/JavaScript similarities and differences, server-side programming, GIF animations, Web programming resources and environments.
Real-Time Systems A study of issues related to systems that interface with the physical world and must meet the timing constraints imposed on them.  Topics include: real-time hardware architecture, real-time operating systems, invoking and managing threads and processes, interprocess communications and synchronization, manipulating process priority, concurrent programming, exception handling, software safety, reliability, and fault tolerance.
Analysis of Algorithms A survey of methods for designing and analyzing algorithms. Classic algorithms from graph theory, combinatorics and text processing are examined, as are traditional design strategies such as divide-and-conquer, backtracking and dynamic programming.  Other topics include NP-completeness and parallel algorithms.
Numerical Analysis A survey of numerical methods for solving equations, integration, differentiation, interpolation, differential equations, and linear algebra, and the analysis of error.
Theory of Computation The development of a theoretical notion of computability and its relationship to Turing computability and recursive functions; the study of the relationships between automata, formal languages and grammars.
Computer Graphics An introduction to the hardware, software and techniques used to generate graphical representations by computer.  Two and three dimensional concepts, algorithms and architectures are studied. An essential aspect of the course involves the development of programs utilizing appropriate APIs (currently OpenGL is emphasized) as a means of developing expertise.  Advanced topics may be pursued as appropriate.
Artificial Intelligence Problem solving using expert systems, heuristic programming techniques, tree speed-up techniques, and learning mechanisms.
Rapid Prototyping Some common applications using a database with a visual interface (perhaps Web based) can be successfully treated using Rapid Prototyping (a.k.a. Rapid Application Development).   This course will cover the synergy of combining a visual language and a relational database employing rigorous design techniques.
Special Topics Some recent courses have covered Rapid Prototyping, Real-Time Systems, and Parallel Computing.  A syllabus including prerequisites is published prior to the registration period for the course.
Computer Research Computer Research
Compiler Design Study of techniques and problems involved in constructing compilers.  Lexical analysis, syntax analysis, semantic analysis, symbol-table management, code generation, code optimization.
Computer Internship An extensive job experience in computing which carries academic credit.
Computer Graphics An introduction to the hardware, software and techniques used to generate graphical representations by computer.  Two and three dimensional concepts, algorithms and architectures are studied. An essential aspect of the course involves the development of programs utilizing appropriate APIs (currently OpenGL is emphasized) as a means of developing expertise.  Advanced topics may be pursued as appropriate.
Linear Algebra Vector spaces, matrices, determinants, linear transformations, eigenvalues, eigenvectors, inner products, and orthogonality.
3D Computer-generated Animation/Content A course that addresses three-dimensional graphic content creation and manipulation. Students develop 3D content using a number of industry- standard software packages. Topics include mode/texture development, animation, construction of 3D environments, rendering and advanced topics.
Capstone Project In this course, students prepare and present individual computer projects to be evaluated by the instructor and their fellow students.
Calculus I A detailed study of limits, continuity, derivatives of algebraic and transcendental functions, applications of derivatives, numerical techniques, integrals and the Fundamental Theorem of Calculus
Calculus II A detailed study of methods of integration, applications of the integrals, improper integrals, sequences, series and power series, polar coordinates, and parametric curves. Satisfies the university general education requirement for the knowledge applications integration area
Linear Algebra Study of general vector spaces, linear systems of equations, linear transformations and compositions, Eigenvalues, eigenvectors, diagonalization, modeling and orthogonality. Provides a transition to formal mathematics.
Discrete Mathematics Concepts and methods of discrete mathematics with an emphasis on their application to computer science. Logic and proofs, sets and relations, algorithms, induction and recursion, combinatorics, graphs and trees.
Applied Probability and Statistics Introduction to probability and statistics as applied to the physical, biological and social sciences and to engineering. Applications of special distributions and nonparametric techniques. Regression analysis and analysis of variance
Introductory Physics I Classical mechanics and thermodynamics. For science, mathematics and engineering students
Fundamentals of Physics II Sound, light, electricity and magnetism.
Introduction to C Programming and Unix Introduction to programming and problem solving using C and Unix. The topics include fundamentals of C programming and basic Unix commands including file organization, user commands, and utilities in Unix and creating, editing, executing, and debugging C programs. Introduction to shell programming.
Introduction to Electrical and Computer Engineering An introduction to the fundamentals of electrical and computer engineering; DC and AC circuits, digital logic circuits; combinational logic design; sequential circuits, introduction to electronics, operational amplifiers, DC electromechanical machines. With laboratory. Offered fall, winter. Satisfies the university general education requirement in the natural science and technology knowledge exploration area.
Object-Oriented Computing Introduction to object-oriented computer programming using a high-level programming language such as Java. Classes, member functions, inheritance, polymorphism and operator overloading. Design methodologies and introduction to software engineering principles and practices. Basic data structures, algorithms and event driven programming concepts are introduced.
Data Structures This course covers data structures using object oriented programming. The fundamental data structures in computer science, including stacks, queues, lists and trees are covered in detail. Concepts of design, analysis and verification are discussed in the context of abstract data types. Examples of applications taken from numeric and symbolic domains are used. With laboratory.
Introduction to Computer Networks An introduction to fundamental concepts for design and analyses of computer networks. Topics covered include the physical layer, network protocols, Local Area Networks, Internet, wireless and mobile networks, network security, and socket programming
Sophomore Project Sophomore Project
Programming Languages Fundamental concepts in programming languages. Several high-level languages are studied in depth and their approaches to the fundamental issues in language design are compared. Issues include: data types and structures, control structures, binding times, run-time storage organization, flexibility vs. efficiency, compiled vs. interpreted languages, strong vs. weak typing, block structure and scope of names.
Software Engineering and Practice Introduction to software engineering and practice. Topics include software process models, project management, requirements analysis, software quality assurance, and testing.
Theory of Computation Formal models of computation, ranging from finite state automata to Turing machines. Computational models are used to discuss the languages recognized by these machines and address issues of computability.
Database Design and Implementation Introduction to the design and implementation of database systems. Include designing a practical database for an application using normal forms, understanding relational database schemas, planning and implementing a database using software such as Oracle and Microsoft SQL Server, advanced database topics in redundancy, replication, load balancing, compatibility, ODBC and JDBC, and database systems administration.
Design and Analysis of Algorithm Computer algorithms, their design and analysis. Strategies constructing algorithmic solutions, including divide-and- conquer, dynamic programming and greedy algorithms. Development of algorithms for parallel and distributed architectures. Computational complexity as it pertains to time and space is used to evaluate the algorithms.
Computer Organization Assembly language, addressing modes, RISC and CISC architectures, assemblers, loaders, linkers arithmetic and logic unit, hardware functional units, input/output organization, memory organization, cache memory, virtual memory, control unit, pipelining, parallel computer organization.
Information Security Practice Survey of concepts and methods of security policies, models and mechanisms for secrecy, integrity, availability, and authentication. Topics covered include security policies; access control; introduction to cryptography; control and prevention of viruses and other rogue programs; common system vulnerabilities and countermeasures; and legal and social issues.
Fundamentals of Operating Systems Introduction to the concepts and design of operating systems. Typical topics include: sequential processes, concurrent processes, processor management, memory management, scheduling, file management, and resource protection.
Senior Capstone Project Senior Capstone Project
Immersive Python This course introduces the fundamentals and applications of Python. The language fundamentals covered are statements, variables, comments, control structures, functions, modules, packages, and objects. The course also includes advanced concepts such as collections (Lists, Tuples and Dictionaries) with their practical use for Data Processing, Systems administration, and Web development applications.
Computer Algebra The mathematics and algorithms for symbolic computation. Includes theory of algebraic extensions, modular and p-adic methods, Groebner bases, factorization and zeros of polynomials, solutions to systems of polynomial equations, applications to automatic geometric theorem proving and closed form solutions to differential equations.
Computational Intelligence Track Computational Intelligence Track
Signals and Systems Presents the fundamentals of signal and system analysis. Topics include discrete-time and continuous-time signals, Fourier series and transforms, Laplace and Z transforms, and analysis of linear, time-invariant systems. Applications drawn broadly from engineering and physics, including audio and image processing, communications, and automatic control.
Computer Systems Engineering Topics on the engineering of computer software and hardware systems: techniques for controlling complexity; strong modularity using client-server design, operating systems; performance, networks; naming; security and privacy; fault-tolerant systems, atomicity and coordination of concurrent activities, and recovery; impact of computer systems on society. Case studies of working systems and readings from the current literature provide comparisons and contrasts. Includes a single, semester-long design project. Students engage in extensive written communication exercises. Enrollment may be limited.
Introduction to Electric Power Systems Electric circuit theory with application to power handling electric circuits. Modeling and behavior of electromechanical devices, including magnetic circuits, motors, and generators. Operational fundamentals of synchronous. Interconnection of generators and motors with electric power transmission and distribution circuits. Power generation, including alternative and sustainable sources. Incorporation of energy storage in power systems. Students taking graduate version complete additional assignments.
Strobe Project Laboratory Application of electronic flash sources to measurement and photography. First half covers fundamentals of photography and electronic flashes, including experiments on application of electronic flash to photography, stroboscopy, motion analysis, and high-speed videography. Students write four extensive lab reports. In the second half, students work in small groups to select, design, and execute independent projects in measurement or photography that apply learned techniques. Project planning and execution skills are discussed and developed over the term. Students engage in extensive written and oral communication exercises. Enrollment limited.
Fields, Forces and Flows in Biological Systems Introduction to electric fields, fluid flows, transport phenomena and their application to biological systems. Flux and continuity laws, Maxwell's equations, electro-quasistatics, electro-chemical-mechanical driving forces, conservation of mass and momentum, Navier-Stokes flows, and electrokinetics. Applications include biomolecular transport in tissues, electrophoresis, and microfluidics.
Introduction to Computer Science Programming in Python Introduction to computer science and programming for students with little or no programming experience. Students develop skills to program and use computational techniques to solve problems. Topics include the notion of computation, Python, simple algorithms and data structures, testing and debugging, and algorithmic complexity. Meets with 6.00 first half of term. Credit cannot also be received for 6.00. Combination of 6.0001 and 6.0002 counts as REST subject. Final given in the seventh week of the term.
Introduction to EECS via Robotics An integrated introduction to electrical engineering and computer science, taught using substantial laboratory experiments with mobile robots. Key issues in the design of engineered artifacts operating in the natural world: measuring and modeling system behaviors; assessing errors in sensors and effectors; specifying tasks; designing solutions based on analytical and computational models; planning, executing, and evaluating experimental tests of performance; refining models and designs. Issues addressed in the context of computer programs, control systems, probabilistic inference problems, circuits and transducers, which all play important roles in achieving robust operation of a large variety of engineered systems.
Seminar in Undergraduate Advanced Research Instruction in effective undergraduate research, including choosing and developing a research topic, surveying previous work and publications, research topics in EECS, industry best practices, design for robustness, technical presentation, authorship and collaboration, and ethics. Students engage in extensive written and oral communication exercises, in the context of an approved advanced research project. A total of 12 units of credit is awarded for completion of the Fall and subsequent Spring term offerings. Application required; consult EECS SuperUROP website for more information.
Fundamentals of Programming Introduces fundamental concepts of programming. Designed to develop skills in applying basic methods from programming languages to abstract problems. Topics include programming and Python basics, computational concepts, software engineering, algorithmic techniques, data types, and recursion.  Lab component consists of software design, construction, and implementation of design. Enrollment may be limited.
Nanoelectronics and Computing Systems Studies interaction between materials, semiconductor physics, electronic devices, and computing systems. Develops intuition of how transistors operate. Topics range from introductory semiconductor physics to modern state-of-the-art nano-scale devices. Considers how innovations in devices have driven historical progress in computing, and explores ideas for further improvements in devices and computing. Students apply material to understand how building improved computing systems requires knowledge of devices, and how making the correct device requires knowledge of computing systems. Includes a design project for practical application of concepts, and labs for experience building silicon transistors and devices.
Differential Equations Prereq: None. Coreq: Calculus II (GIR) Study of differential equations, including modeling physical systems. Solution of first-order ODEs by analytical, graphical, and numerical methods. Linear ODEs with constant coefficients. Complex numbers and exponentials. Inhomogeneous equations: polynomial, sinusoidal, and exponential inputs. Oscillations, damping, resonance. Fourier series. Matrices, eigenvalues, eigenvectors, diagonalization. First order linear systems: normal modes, matrix exponentials, variation of parameters. Heat equation, wave equation. Nonlinear autonomous systems: critical point analysis, phase plane diagrams.
Electromagnetics and Applications Analysis and design of modern applications that employ electromagnetic phenomena for signals and power transmission in RF, microwaves, optical and wireless communication systems. Fundamentals include dynamic solutions for Maxwell's equations; electromagnetic power and energy, waves in media, metallic and dielectric waveguides, radiation, and diffraction; resonance; filters; and acoustic analogs. Labs activities range from building to testing of devices and systems (e.g., antenna arrays, radars, dielectric waveguides). Students work in teams on self-proposed maker-style design projects with a focus on fostering creativity, teamwork, and debugging skills. 6.002 and 6.003 are recommended but not required.
Multicore Programming Introduces principles and core techniques for programming multicore machines. Topics include locking, scalability, concurrent data structures, multiprocessor scheduling, load balancing, and state-of-the-art synchronization techniques, such as transactional memory. Includes sequence of programming assignments on a large multicore machine, culminating with the design of a highly concurrent application. Students taking graduate version complete additional assignments.
Elements of Software Construction Introduces fundamental principles and techniques of software development: how to write software that is safe from bugs, easy to understand, and ready for change. Topics include specifications and invariants; testing, test-case generation, and coverage; abstract data types and representation independence; design patterns for object-oriented programming; concurrent programming, including message passing and shared memory concurrency, and defending against races and deadlock; and functional programming with immutable data and higher-order functions. Includes weekly programming exercises and larger group programming projects.
Introduction to Probability I Provides an introduction to probability theory and the modeling and analysis of probabilistic systems. Probabilistic models, conditional probability. Discrete and continuous random variables. Expectation and conditional expectation. Limit Theorems. Students taking graduate version complete additional assignments. Combination of 6.041A and 6.041B counts as a REST subject.
Biological Circuit Engineering Laboratory Students assemble individual genes and regulatory elements into larger-scale circuits; they experimentally characterize these circuits in yeast cells using quantitative techniques, including flow cytometry, and model their results computationally. Emphasizes concepts and techniques to perform independent experimental and computational synthetic biology research. Discusses current literature and ongoing research in the field of synthetic biology. Instruction and practice in oral and written communication provided. Enrollment limited.
Introduction to EECS via Medical Technology Explores biomedical signals generated from electrocardiograms, glucose detectors or ultrasound images, and magnetic resonance images. Topics include physical characterization and modeling of systems in the time and frequency domains; analog and digital signals and noise; basic machine learning including decision trees, clustering, and classification; and introductory machine vision. Labs designed to strengthen background in signal processing and machine learning. Students design and run structured experiments, and develop and test procedures through further experimentation.
Engineering Mathematics: Linear Algebra and ODEs Introduction to linear algebra and ordinary differential equations (ODEs), including general numerical approaches to solving systems of equations. Linear systems of equations, existence and uniqueness of solutions, Gaussian elimination. Initial value problems, 1st and 2nd order systems, forward and backward Euler, RK4. Eigenproblems, eigenvalues and eigenvectors, including complex numbers, functions, vectors and matrices.
Oral Communication Provides instruction in aspects of effective technical oral presentations and exposure to communication skills useful in a workplace setting. Students create, give and revise a number of presentations of varying length targeting a range of different audiences. Enrollment may be limited.
Computation Structures Introduces architecture of digital systems, emphasizing structural principles common to a wide range of technologies. Multilevel implementation strategies; definition of new primitives (e.g., gates, instructions, procedures, and processes) and their mechanization using lower-level elements. Analysis of potential concurrency; precedence constraints and performance measures; pipelined and multidimensional systems. Instruction set design issues; architectural support for contemporary software structures.
Performance Engineering of Software Systems Project-based introduction to building efficient, high-performance and scalable software systems. Topics include performance analysis, algorithmic techniques for high performance, instruction-level optimizations, vectorization, cache and memory hierarchy optimization, and parallel programming.
Electrical Engineering and Computer Science Project Individual experimental work related to electrical engineering and computer science. Student must make arrangements with a project supervisor and file a proposal endorsed by the supervisor. Departmental approval required. Written report to be submitted upon completion of work.
Power Electronics Laboratory - Independent Inquiry Introduces the design and construction of power electronic circuits and motor drives. Laboratory exercises include the construction of drive circuitry for an electric go-cart, flash strobes, computer power supplies, three-phase inverters for AC motors, and resonant drives for lamp ballasts and induction heating. Basic electric machines introduced include DC, induction, and permanent magnet motors, with drive considerations. Provides instruction in written and oral communication. To satisfy the independent inquiry component of this subject, students expand the scope of their laboratory project.
Constructive Computer Architecture Illustrates a constructive (as opposed to a descriptive) approach to computer architecture. Topics include combinational and pipelined arithmetic-logic units (ALU), in-order pipelined microarchitectures, branch prediction, blocking and unblocking caches, interrupts, virtual memory support, cache coherence and multicore architectures. Labs in a modern Hardware Design Language (HDL) illustrate various aspects of microprocessor design, culminating in a term project in which students present a multicore design running on an FPGA board.
Machine Vision Deriving a symbolic description of the environment from an image. Understanding physics of image formation. Image analysis as an inversion problem. Binary image processing and filtering of images as preprocessing steps. Recovering shape, lightness, orientation, and motion. Using constraints to reduce the ambiguity. Photometric stereo and extended Gaussian sphere. Applications to robotics; intelligent interaction of machines with their environment. Students taking the graduate version complete different assignments.
Software Studio Covers design and implementation of software systems, using web applications as the platform. Emphasizes the role of conceptual design in achieving clarity, simplicity, and modularity. Students complete open-ended individual assignments and a major team project. Enrollment may be limited.
Solid-State Circuits Analysis and design of transistor circuits, based directly on the semiconductor physics and transistor circuit models developed in 6.012. High-frequency and low-frequency design calculations and simulation of multistage transistor circuits. Trans-linear circuits. Introduction to operational-amplifier design and application. Some previous laboratory experience assumed.
Fundamentals of Photonics Covers the fundamentals of optics and the interaction of light and matter, leading to devices such as light emitting diodes, optical amplifiers, and lasers. Topics include classical ray, wave, beam, and Fourier optics; Maxwell's electromagnetic waves; resonators; quantum theory of photons; light-matter interaction; laser amplification; lasers; and semiconductors optoelectronics. Students taking graduate version complete additional assignments.
Computational Cognitive Science Introduction to computational theories of human cognition. Focus on principles of inductive learning and inference, and the representation of knowledge. Computational frameworks covered include Bayesian and hierarchical Bayesian models; probabilistic graphical models; nonparametric statistical models and the Bayesian Occam's razor; sampling algorithms for approximate learning and inference; and probabilistic models defined over structured representations such as first-order logic, grammars, or relational schemas. Applications to understanding core aspects of cognition, such as concept learning and categorization, causal reasoning, theory formation, language acquisition, and social inference. Graduate students complete a final project.
Circuits and Electronics Fundamentals of the lumped circuit abstraction. Resistive elements and networks, independent and dependent sources, switches and MOS devices, digital abstraction, amplifiers, and energy storage elements. Dynamics of first- and second-order networks; design in the time and frequency domains; analog and digital circuits and applications. Design exercises. Occasional laboratory.
Advanced Natural Language Processing Introduces the study of human language from a computational perspective, including syntactic, semantic and discourse processing models. Emphasizes machine learning methods and algorithms. Uses these methods and models in applications such as syntactic parsing, information extraction, statistical machine translation, dialogue systems, and summarization. Students taking graduate version complete additional assignments.
Introduction to Algorithms Introduction to mathematical modeling of computational problems, as well as common algorithms, algorithmic paradigms, and data structures used to solve these problems. Emphasizes the relationship between algorithms and programming, and introduces basic performance measures and analysis techniques for these problems.
Psychoacoustics Project Laboratory Introduces the methods used to measure human auditory abilities. Discusses auditory function, principles of psychoacoustic measurement, models for psychoacoustic performance, and experimental techniques. Project topics: absolute and differential auditory sensitivity, operating characteristics of human observers, span of auditory judgment, adaptive measurement procedures, and scaling sensory magnitudes. Knowledge of probability helpful. Students engage in extensive written and oral communication exercises.
Micro/Nano Processing Technology  Introduces the theory and technology of micro/nano fabrication. Includes lectures and laboratory sessions on basic processing techniques such as vacuum processes, lithography, diffusion, oxidation, and pattern transfer. Students fabricate solar cells, MEMS cantilevers, and microfluidic mixers. Emphasizes interrelationships between material properties and processing, device structure, and the electrical, mechanical, optical, chemical or biological behavior of devices. Provides background for thesis work in micro/nano fabrication. Students engage in extensive written and oral communication exercises.
Introduction to Inference Introduces probabilistic modeling for problems of inference and machine learning from data, emphasizing analytical and computational aspects. Distributions, marginalization, conditioning, and structure; graphical representations. Belief propagation, decision-making, classification, estimation, and prediction. Sampling methods and analysis. Introduces asymptotic analysis and information measures. Computational laboratory component explores the concepts introduced in class in the context contemporary applications. Students design inference algorithms, investigate their behavior on real data, and discuss experimental results.
Electromagnetic Fields, Forces and Motion (New) Study of electromagnetics and electromagnetic energy conversion leading to an understanding of devices, including electromagnetic sensors, actuators, motors and generators. Quasistatic Maxwell's equations and the Lorentz force law. Studies of the quasistatic fields and their sources through solutions of Poisson's and Laplace's equations. Boundary conditions and multi-region boundary-value problems. Steady-state conduction, polarization, and magnetization. Charge conservation and relaxation, and magnetic induction and diffusion. Extension to moving materials. Electric and magnetic forces and force densities derived from energy, and stress tensors. Extensive use of engineering examples. Students taking graduate version complete additional assignments.
Medical Device Design Provides an intense project-based learning experience around the design of medical devices with foci ranging from mechanical to electro mechanical to electronics. Projects motivated by real-world clinical challenges provided by sponsors and clinicians who also help mentor teams. Covers the design process, project management, and fundamentals of mechanical and electrical circuit and sensor design. Students work in small teams to execute a substantial term project, with emphasis placed upon developing creative designs - via a deterministic design process - that are developed and optimized using analytical techniques. Instruction and practice in written and oral communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
Modern Optics Project Laboratory Lectures, laboratory exercises and projects on optical signal generation, transmission, detection, storage, processing and display. Topics include polarization properties of light; reflection and refraction; coherence and interference; Fraunhofer and Fresnel diffraction; holography; Fourier optics; coherent and incoherent imaging and signal processing systems; optical properties of materials; lasers and LEDs; electro-optic and acousto-optic light modulators; photorefractive and liquid-crystal light modulation; display technologies; optical waveguides and fiber-optic communication systems; photodetectors. Students may use this subject to find an advanced undergraduate project. Students engage in extensive oral and written communcation exercises. Recommended prerequisite: 8.03.
Probability and Random Variables Probability spaces, random variables, distribution functions. Binomial, geometric, hypergeometric, Poisson distributions. Uniform, exponential, normal, gamma and beta distributions. Conditional probability, Bayes theorem, joint distributions. Chebyshev inequality, law of large numbers, and central limit theorem. Credit cannot also be received for 6.041A or 6.041B.
Mathematics for Computer Science Elementary discrete mathematics for computer science and engineering. Emphasis on mathematical definitions and proofs as well as on applicable methods. Topics include formal logic notation, proof methods; induction, well-ordering; sets, relations; elementary graph theory; asymptotic notation and growth of functions; permutations and combinations, counting principles; discrete probability. Further selected topics include recursive definition and structural induction, state machines and invariants, integer congruences, recurrences, generating functions.
Cellular Neurophysiology and Computing Integrated overview of the biophysics of cells from prokaryotes to neurons, with a focus on mass transport and electrical signal generation across cell membrane. First third of course focuses on mass transport through membranes: diffusion, osmosis, chemically mediated, and active transport. Second third focuses on electrical properties of cells: ion transport to action potential generation and propagation in electrically excitable cells. Synaptic transmission. Electrical properties interpreted via kinetic and molecular properties of single voltage-gated ion channels. Final third focuses on biophysics of synaptic transmission and introduction to neural computing. Laboratory and computer exercises illustrate the concepts. Students taking graduate version complete different assignments. Preference to juniors and seniors.
Robotics: Science and Systems Presents concepts, principles, and algorithmic foundations for robots and autonomous vehicles operating in the physical world. Topics include sensing, kinematics and dynamics, state estimation, computer vision, perception, learning, control, motion planning, and embedded system development. Students design and implement advanced algorithms on complex robotic platforms capable of agile autonomous navigation and real-time interaction with the physical word. Students engage in extensive written and oral communication exercises. Enrollment limited.
Feedback System Design Learn-by-design introduction to continuous and discrete-time system modeling and feedback control. Topics include performance metrics; time- and frequency-domain model extraction: classical control topics, such as dominant pole, PID, and lead-lag compensation; and state-space control topics, such as eigenvalue assignment, linear-quadratic regulators, and observer systems. In lab, students combine circuits, sensors, actuators, algorithms, and a high-performance micro-controller to address problems such as controlling the angle of a propeller-levitated robot arm, stabilizing magnetic levitation, accelerating scans in a tilted-mirror laser imager, eliminating interference in a PWM-based audio amplifier, balancing a two-wheel vehicle, or multi-axis positioning.
Design and Fabrication of Microelectromechanical Systems Provides an introduction to microsystem design. Covers material properties, microfabrication technologies, structural behavior, sensing methods, electromechanical actuation, thermal actuation and control, multi-domain modeling, noise, and microsystem packaging. Applies microsystem modeling, and manufacturing principles to the design and analysis a variety of microscale sensors and actuators (e.g., optical MEMS, bioMEMS, and inertial sensors). Emphasizes modeling and simulation in the design process. Students taking the graduate version complete additional assignments.
Advances in Computer Vision Advanced topics in computer vision with a focus on the use of machine learning techniques and applications in graphics and human-computer interface. Covers image representations, texture models, structure-from-motion algorithms, Bayesian techniques, object and scene recognition, tracking, shape modeling, and image databases. Applications may include face recognition, multimodal interaction, interactive systems, cinematic special effects, and photorealistic rendering. Covers topics complementary to 6.801. Students taking graduate version complete additional assignments.
Creating Video Games Introduces students to the complexities of working in small, multidisciplinary teams to develop video games. Covers creative design and production methods, stressing design iteration and regular testing across all aspects of game development (design, visual arts, music, fiction, and programming). Assumes a familiarity with current video games, and the ability to discuss games critically. Previous experience in audio design, visual arts, or project management recommended. Limited to 24.
Foundations of Computational and Systems Biology Provides an introduction to computational and systems biology. Includes units on the analysis of protein and nucleic acid sequences, protein structures, and biological networks. Presents principles and methods used for sequence alignment, motif finding, expression array analysis, structural modeling, structure design and prediction, and network analysis and modeling. Techniques include dynamic programming, Markov and hidden Markov models, Bayesian networks, clustering methods, and energy minimization approaches. Exposes students to emerging research areas. Designed for students with strong backgrounds in either molecular biology or computer science. Some foundational material covering basic programming skills, probability and statistics is provided for students with less quantitative backgrounds. Students taking graduate version complete additional assignments.
Principles and Practice of Assistive Technology Students work closely with people with disabilities to develop assistive and adaptive technologies that help them live more independently. Covers design methods and problem-solving strategies; human factors; human-machine interfaces; community perspectives; social and ethical aspects; and assistive technology for motor, cognitive, perceptual, and age-related impairments. Prior knowledge of one or more of the following areas useful: software; electronics; human-computer interaction; cognitive science; mechanical engineering; control; or MIT hobby shop, MIT PSC, or other relevant independent project experience.
Introduction to Machine Learning Introduces principles, algorithms, and applications of machine learning from the point of view of modeling and prediction; formulation of learning problems; representation, over-fitting, generalization; clustering, classification, probabilistic modeling; and methods such as support vector machines, hidden Markov models, and neural networks. Students taking graduate version complete additional assignments. Meets with 6.862 when offered concurrently. Recommended prerequisites: 6.006 and 18.06. Enrollment may be limited; no listeners.
The Human Intelligence Enterprise Analyzes seminal work directed at the development of a computational understanding of human intelligence, such as work on learning, language, vision, event representation, commonsense reasoning, self reflection, story understanding, and analogy. Reviews visionary ideas of Turing, Minsky, and other influential thinkers. Examines the implications of work on brain scanning, developmental psychology, and cognitive psychology. Emphasis on discussion and analysis of original papers. Students taking graduate version complete additional assignments. Enrollment limited.
Computer Language Engineering Analyzes issues associated with the implementation of higher-level programming languages. Fundamental concepts, functions, and structures of compilers. The interaction of theory and practice. Using tools in building software. Includes a multi-person project on compiler design and implementation.
Introduction to Probability and Statistics Elementary introduction with applications. Basic probability models. Combinatorics. Random variables. Discrete and continuous probability distributions. Statistical estimation and testing. Confidence intervals. Introduction to linear regression.
Database Systems Topics related to the engineering and design of database systems, including data models; database and schema design; schema normalization and integrity constraints; query processing; query optimization and cost estimation; transactions; recovery; concurrency control; isolation and consistency; distributed, parallel and heterogeneous databases; adaptive databases; trigger systems; pub-sub systems; semi structured data and XML querying. Lecture and readings from original research papers. Semester-long project and paper. Students taking graduate version complete different assignments. Enrollment may be limited.
Introduction to EECS via Interconnected Embedded Systems Introduction to embedded systems in the context of connected devices, wearables and the "Internet of Things" (IoT). Topics include microcontrollers, energy utilization, algorithmic efficiency, interfacing with sensors, networking, cryptography, and local versus distributed computation. Students design, make, and program an internet-connected wearable or handheld device. In final project, student teams design and demo their own cloud-connected IoT system. Enrollment limited; preference to first- and second-year students.
Computational Biology: Genomes, Networks, Evolution Covers the algorithmic and machine learning foundations of computational biology, combining theory with practice. Principles of algorithm design, influential problems and techniques, and analysis of large-scale biological datasets. Topics include (a) genomes: sequence analysis, gene finding, RNA folding, genome alignment and assembly, database search; (b) networks: gene expression analysis, regulatory motifs, biological network analysis; (c) evolution: comparative genomics, phylogenetics, genome duplication, genome rearrangements, evolutionary theory. These are coupled with fundamental algorithmic techniques including: dynamic programming, hashing, Gibbs sampling, expectation maximization, hidden Markov models, stochastic context-free grammars, graph clustering, dimensionality reduction, Bayesian networks.
Introduction to EECS via Communication Networks Studies key concepts, systems, and algorithms to reliably communicate data in settings ranging from the cellular phone network and the Internet to deep space. Weekly laboratory experiments explore these areas in depth. Topics presented in three modules - bits, signals, and packets - spanning the multiple layers of a communication system. Bits module includes information, entropy, data compression algorithms, and error correction with block and convolutional codes. Signals module includes modeling physical channels and noise, signal design, filtering and detection, modulation, and frequency-division multiplexing. Packets module includes switching and queuing principles, media access control, routing protocols, and data transport protocols.
Artificial Intelligence Introduces representations, methods, and architectures used to build applications and to account for human intelligence from a computational point of view. Covers applications of rule chaining, constraint propagation, constrained search, inheritance, statistical inference, and other problem-solving paradigms. Also addresses applications of identification trees, neural nets, genetic algorithms, support-vector machines, boosting, and other learning paradigms. Considers what separates human intelligence from that of other animals.
Foundations of Information Policy Studies the growth of computer and communications technology and the new legal and ethical challenges that reflect tensions between individual rights and societal needs. Topics include computer crime; intellectual property restrictions on software; encryption, privacy, and national security; academic freedom and free speech. Students meet and question technologists, activists, law enforcement agents, journalists, and legal experts. Instruction and practice in oral and written communication provided. Students taking graduate version complete additional assignments. Enrollment limited.
Digital and Computational Photography Presents fundamentals and applications of hardware and software techniques used in digital and computational photography, with an emphasis on software methods. Provides sufficient background to implement solutions to photographic challenges and opportunities. Topics include cameras and image formation, image processing and image representations, high-dynamic-range imaging, human visual perception and color, single view 3-D model reconstruction, morphing, data-rich photography, super-resolution, and image-based rendering. Students taking graduate version complete additional assignments.
Introductory Analog Electronics Laboratory Introductory experimental laboratory explores the design, construction, and debugging of analog electronic circuits. Lectures and laboratory projects in the first half of the course investigate the performance characteristics of semiconductor devices (diodes, BJTs, and MOSFETs) and functional analog building blocks, including single-stage amplifiers, op amps, small audio amplifier, filters, converters, sensor circuits, and medical electronics (ECG, pulse-oximetry). Projects involve design, implementation, and presentation in an environment similar to that of industry engineering design teams. Instruction and practice in written and oral communication provided. Opportunity to simulate real-world problems and solutions that involve tradeoffs and the use of engineering judgment.
Design and Analysis of Algorithms Techniques for the design and analysis of efficient algorithms, emphasizing methods useful in practice. Topics include sorting; search trees, heaps, and hashing; divide-and-conquer; dynamic programming; greedy algorithms; amortized analysis; graph algorithms; and shortest paths. Advanced topics may include network flow; computational geometry; number-theoretic algorithms; polynomial and matrix calculations; caching; and parallel computing.
Introductory Digital Systems Laboratory Introduces digital systems with lectures and labs on logic, flip flops,  FPGAs, counters, timing, synchronization, and finite-state machines. Includes overview of accelerometers, gyros, time of light and other modern sensors.  Prepares students for the design and implementation of a final project of their choice: games, music, digital filters, wireless communications, video, or graphics.  Extensive use of Verilog for describing and implementing digital logic designs.
Microcomputer Project Laboratory - Independent Inquiry Introduces analysis and design of embedded systems. Microcontrollers provide adaptation, flexibility, and real-time control. Emphasizes construction of complete systems, including a five-axis robot arm, a fluorescent lamp ballast, a tomographic imaging station (e.g., a CAT scan), and a simple calculator. Presents a wide range of basic tools, including software and development tools, programmable system on chip, peripheral components such as A
Power Electronics Laboratory Introduces the design and construction of power electronic circuits and motor drives. Laboratory exercises include the construction of drive circuitry for an electric go-cart, flash strobes, computer power supplies, three-phase inverters for AC motors, and resonant drives for lamp ballasts and induction heating. Basic electric machines introduced include DC, induction, and permanent magnet motors, with drive considerations. Provides instruction in written and oral communication. Students taking independent inquiry version 6.1131 expand the scope of their laboratory project.
Introduction to Nanoelectronics Transistors at the nanoscale. Quantization, wavefunctions, and Schrodinger's equation. Introduction to electronic properties of molecules, carbon nanotubes, and crystals. Energy band formation and the origin of metals, insulators and semiconductors. Ballistic transport, Ohm's law, ballistic versus traditional MOSFETs, fundamental limits to computation.
Interactive Music Systems Explores audio synthesis, musical structure, human computer interaction (HCI), and visual presentation for the creation of interactive musical experiences. Topics include audio synthesis; mixing and looping; MIDI sequencing; generative composition; motion sensors; music games; and graphics for UI, visualization, and aesthetics. Includes weekly programming assignments in python. Teams build an original, dynamic, and engaging interactive music system for their final project.
Computer Graphics Introduction to computer graphics algorithms, software and hardware. Topics include ray tracing, the graphics pipeline, transformations, texture mapping, shadows, sampling, global illumination, splines, animation and color.
Automata, Computability, and Complexity Mathematical introduction to questions concerning the definition of computation, and what problems can be solved by computers. Considers what problems can be efficiently solved by way of finite automata, circuits, Turing machines, and communication complexity. Provides complete, rigorous answers to the questions in some cases; others are major open problems. Builds skills in classifying computational problems in terms of their difficulty. Discusses other fundamental issues, including the Church-Turing Thesis, the P versus NP problem, and the power of randomness.
Biomolecular Feedback Systems Comprehensive introduction to dynamics and control of biomolecular systems with emphasis on design/analysis techniques from control theory. Provides a review of biology concepts, regulation mechanisms, and models. Covers basic enabling technologies, engineering principles for designing biological functions, modular design techniques, and design limitations. Students taking graduate version complete additional assignments.
Large-scale Symbolic Systems Concepts and techniques for the design and implementation of large software systems that can be adapted to uses not anticipated by the designer. Applications include compilers, computer-algebra systems, deductive systems, and some artificial intelligence applications. Covers means for decoupling goals from strategy, mechanisms for implementing additive data-directed invocation, work with partially-specified entities, and how to manage multiple viewpoints. Topics include combinators, generic operations, pattern matching, pattern-directed invocation, rule systems, backtracking, dependencies, indeterminacy, memoization, constraint propagation, and incremental refinement. Students taking graduate version complete additional assignments.
User Interface Design and Implementation Examines human-computer interaction in the context of graphical user interfaces. Covers human capabilities, design principles, prototyping techniques, evaluation techniques, and the implementation of graphical user interfaces. Includes short programming assignments and a semester-long group project. Students taking the graduate version also have readings from current literature and additional assignments. Enrollment limited.
Ethics for Engineers - Independent Inquiry Explores the ethical principles by which an engineer ought to be guided. Integrates foundational texts in ethics with case studies illustrating ethical problems arising in the practice of engineering. Readings from classic sources including Aristotle, Kant, Machiavelli, Hobbes, Locke, Rousseau, Franklin and Tocqueville. Case studies include articles and films that address engineering disasters, safety, ethical codes, biotechnology, the internet and AI, and the ultimate scope and aims of engineering.  To satisfy the independent inquiry component of this subject, students expand the scope of their term project. Students taking 20.005 focus their term project on a problem in biological engineering in which there are intertwined ethical and technical issues.
Signals, Systems and Inference Covers signals, systems and inference in communication, control and signal processing. Topics include input-output and state-space models of linear systems driven by deterministic and random signals; time- and transform-domain representations in discrete and continuous time; and group delay. State feedback and observers. Probabilistic models; stochastic processes, correlation functions, power spectra, spectral factorization. Least-mean square error estimation; Wiener filtering. Hypothesis testing; detection; matched filters.
Microcomputer Project Laboratory Introduces analysis and design of embedded systems. Microcontrollers provide adaptation, flexibility, and real-time control. Emphasizes construction of complete systems, including a five-axis robot arm, a fluorescent lamp ballast, a tomographic imaging station (e.g., a CAT scan), and a simple calculator. Presents a wide range of basic tools, including software and development tools, programmable system on chip, peripheral components such as A
General Chemistry I  This course is intended for students who expect to pursue further coursework in science or engineering. It involves the study of chemical nomenclature, stoichiometry, atomic structure, bonding theories, thermochemistry, periodic properties, solution calculations, and the gas laws.
General Chemistry Laboratory I Experimental work providing hands-on experience with concepts in fundamental chemistry, including chemical nomenclature, stoichiometry, thermochemistry, solution chemistry and related calculations, chemical bonding, and the gas laws.
Foundations of Engineering Design Thinking I Foundations of Engineering Design Thinking I
Calculus I Topics covered include functions, limits and continuity, differentiation, applications of the derivative, optimization, antiderivatives, fundamental theorem of calculus, definite and indefinite integrals
Calculus II Topics covered include techniques of integration, applications of the integral, sequences and series, and vectors.
Introduction to COOP for CEAS This course is designed to introduce CECH students to the cooperative education (co-op) learning model and how it is executed through the Professional Practice Program. It will prepare students to maximize learning through and develop the strategies and necessary skills for effective participation in the Professional Practice Program.
Linear Algebra Study of linear equations, matrices, Euclidean n-space and its subspaces, bases, dimension, coordinates, orthogonality, linear transformations, determinants, eigenvalues and eigenvectors, diagonalization.
Probability and Statistics I An introduction to probability and statistics for students with a calculus background. The course covers sample spaces and probability laws; discrete and continuous random variables with special emphasis on the binomial, Poisson, hypergeometric, normal and gamma distributions; joint distributions; sampling distributions; one and two-sample parameter estimation problems; and one and two-sample tests of hypotheses. This course provides a foundation for the further study of statistics.
Introduction to Effective Speaking This course introduces the principles of and practice in composition and presentation of speeches. Topics include speaker and audience relationship, organization of speeches, active listening skills, use of appropriate language, use of technology as an enhancement of speech, managing speech anxiety and developing a natural verbal and nonverbal delivery style.
Software Engineering Software Engineering
Operating Systems & Systems Programming Introduction to concepts of modern operating systems and systems programming. Emphasis is on the concepts, algorithms and architectures of modern operating systems. Students will also learnUnix system programming such as synchronizing, inter-process communication, and networking.
Technical and Scientific Writing Technical and Scientific Writing
Computer Science 1 Introduction to computer science with emphasis upon structured and object-oriented programming, algorithm design, and problem-solving. Currently,  C++ is used as the computer language.
Introduction to Computer Systems Assembly language programming. Organization of the hardware including registers, memory, and microprocessors and I/O ports. Binary and hexadecimal arithmetic, assembler instructions, processor status (flags), program control, addressing modes.
Python Programming Topics of the class include: 1. Introduction to Python 2. Interpreters and Dynamic typing 3. Data types and functions 4. Generators and game solvers 5. Modules and Packages 6. Designing Classes 7. Web development 8. Interactive systems and graphics programming 9. Data Methods using numpy, scipy, and matplotlib 10. Networking and Concurrent Programming
Data Structures Pointers and dynamic memory management with objects. Designing of abstract data types, OO programming, and implementing ADTs. Use of templates/generics and STL for container classes. Introduction to complexity analysis. Big O notation, asymptotic behavior. Linked-lists: Use them to implement stacks and queues. Implementation as ADTs using templates: Vectors, Lists, Stacks, Queues, Sets,
Information Security and Assurance An introduction to the various technical and administrative aspects of information security and assurance. This course provides the foundation for understanding the key issues associated with protecting information assets, determining the levels of protection and response to security incidents, and designing a consistent, reasonable information security system, with appropriate intrusion detection and reporting features.
Discrete Computational Structures Introduces discrete mathematical topics in the context of CS: mathematical induction, sets, propositional logic, relations and functions, algorithm analysis, graph theory.
Programming Languages Concepts and features in design, compilation, and implementation of modern programming languages. Introduction to functional and logic-programming.
Intermediate Composition This course emphasizes critical reading and writing, advanced research and argument skills, and rhetorical understanding of language as it is used in different discourse communities.
Design and Analysis of Algorithms An introduction to the study of sequential algorithms. Analysis of computing time, asymptoticnotation, introduction to lower bound theory. Induction, correctness proofs, and recurrence relations. Major design strategies: the greedy method, divide-and-conquer, dynamic programming. Graph and network algorithms.
Database Design and Development Database design with the Entity Relationship model. Relational data model and database design. Physical storage techniques. Reliability and recovery. Concurrency.
Artificial Intelligence: Principles and Applications Fundamental Issues in Intelligent Systems. Basic Search Strategies.  Basic Knowledge Representation. Reasoning with uncertainty. Basic Machine Learning.
Computer Networks and Networked Computing Introduction to basic concepts of computer networks, communication protocols, and computing principles for networked systems.
Computer Science Senior Design I Each student selects a project advisor,and works with him/her to select a design problem,identify the requirements and specifications of the product, and design the product. Team projects are strongly encouraged.
Computer Science Senior Design II Computer Science Senior Design II
The Theory of Formal Languages and Automata Finite state automata. Regular languages and grammars. Context-free grammars and their normal forms. Pushdown automata. Turing machines. Nondeterministic Turing machines. Universal Turing Machines. The Chomsky hierarchy. The limits of computation. Complexity theory. Finite-state transducers. Moore machines and Mealy machines.
Introduction to Bioinformatics Subjects covered include: deep sequencing, biological sequence analysis, statistical models for gene expression profiling, prediction of protein and macromolecular complexes structure and function, systems biology. Analysis of algorithmic aspects will be accompanied by projects and case studies to provide a direct illustration of computational issues and to provide knowledge and practical command of standard bioinformatic tools and protocols that are being used to analyze complex biological data.
Introduction to Wireless and Mobile Networking Introduction to Wireless and Mobile Systems, Probability Theory, Statistics, and Traffic Theories, Mobile Radio Propagation, Channel Coding, Cellular Concept, Multiple Radio Access, Multiple Division Techniques, Channel Allocation, Mobile Communication Systems, Existing Wireless Systems, Network Protocols, Ad Hoc Networks, Sensor Networks, Wireless LANs and PANs, Recent Advances.
First-Year Seminar The First-Year Seminar is a discussion/experience-based course intended to orient the new student to Gannon University, to introduce the Liberal Studies Core and LIFECORE, to assist in the transition from high school to university life, and to encourage development of academic, personal and spiritual aspects of the student’s life.
Prob. Solv. & Comp. Programming The course focuses on problem solving and its relationship to computer programming. The student is introduced to the tools for developing the solution to a problem, and its subsequent implementation as an algorithm in a computer program. Once the introductory concepts of computer algorithm development have been assimilated, the student progresses to creating programs in the Java programming language including sequence, condition, iteration, functional decomposition and object use.
Prob. Solv. & Comp. Program. Lab Prob. Solv. & Comp. Program. Lab
Calculus 1 Limits; derivatives of algebraic and trigonometric functions; graphing; related rates; optimization problems.
Introduction to Networks The theory and techniques of data communications design and analysis are studied. Topics include data communication concepts, terminology, and standards. Error correction and detection, LANs, ISO/OSI layers are also an integral part of this course.
College Composition The principles of logic, rhetoric, and language and their use in written discourse. Application of these theories to numerous reading and writing assignments. Much attention to basic writing skills.
Foundations of Theology Rooted in the richness of the Catholic Intellectual Tradition, this course explores the religious experiences of the human person and their relationship to Christian moral living.
Object-Oriented Programming The course is aimed at developing advanced object-oriented programming skills, and assumes a foundation in the basic syntax of Java. The student will explore the basis of software development using the major constructs of encapsulation, polymorphism, inheritance and dynamic binding. Topics include GUI objects, event-driven programming, threading, networking and exception handling.
Object-Oriented Programming Lab Object-Oriented Programming Lab
Calculus 2 The definite and indefinite integrals; applications of integration; techniques of integration; calculus of the exponential, logarithmic, and other transcendental functions.
Critical Analysis & Composition Development of the reading, research, and writing skills needed to use library resources to solve problems in a variety of disciplines, and relate these solutions to appropriate audiences.
Introduction to Philosophy An introduction to the study of philosophy. Beginning with the dawn of philosophical awareness among the ancient Greek philosophers, the course surveys both traditional and modern approaches to the philosophical understanding of the human condition.
Fundamentals of Physics 1: Mechanics This course provides a calculus-based introduction to mechanics and emphasizes both quantitative and conceptual understanding of the material. Topics covered include kinematics in one and two dimensions, Newton’s laws of motion, rotational motion, conservation of energy and momentum, and gravitation.
Fundamentals of Physics 1 Lab Labs are designed to build conceptual and quantitative understanding of the material.
Data Structures & Algorithms An in-depth programming-based study of data structures and of algorithms for their manipulation. Arrays, tables, stacks, queues, trees, linked lists, sorting, searching and hashing are topics considered.
The User Experience This course deals with the study of the user experience (UX), and its relationship to human computer interaction. This course includes identifying and assessing usability issues, particularly as they apply to computer-based systems. Includes coverage of UX goals and processes, usability factors and measurements, wireframes and other prototyping technologies, and introductory web implementation. Special attention is given to usability and usability testing.
The Bible: An Introduction  Students will explore the structure, theological themes, literary forms, and historical context of the Judeo-Christian Bible using methods of Biblical interpretation.
Discrete Mathematics 1 Discrete Mathematics 1 Logic, sets, methods of mathematical proof, functions, mathematical induction, counting methods, recurrence relations, graphs.
Mobile Application Development I This is an introductory course into the methods and tools for developing mobile applications for integrated devices such as iOS, Android and other mobile computing platforms. Topics include introduction to the coding and development platforms for one of the major mobile platforms (e.g., iOS or Android), unit testing, source code control, the development of prototype applications, and deployment
Object-Oriented Design Lab An advanced treatment of methods for producing a software design. Includes treatment of the developing Unified Modeling Language (UML) models and their application to software development.
Technical Communication This course is an introduction to the exploration of the procedures of preparing a public speech with emphasis on personal credibility, audience analysis, and effective delivery techniques. This course fulfills Gannon University’s Liberal Studies Speech requirement for students enrolled in programs approved by the Liberal Studies Committee.
Database Management & Administration Develop skills in query statements usage for programming, database design, as well as implementing and managing SQL servers. The core concept of SQL database design, usage and server configuration will be first introduced. Query statements for programming and SQL server management will be substantially taught. Essential skills for administrating a database are covered.
Algorithm Development Lab Fundamental techniques, searching, sorting, tree, graph and backtracking algorithms are covered.
Discrete Mathematics 2 Algorithms, relations, topics in graph theory, tree traversal, spanning trees, Boolean algebra, logic gates, circuits, automata, Turing machines.
Numerical Analysis Taylor polynomials, machine representation of numbers, computational error, interpolation, root finding, systems of linear equations, curve fitting, numerical differentiation and integration.
Software Engineering The course provides an overview of software requirements analysis, the software design process, verification and validation, software maintenance, and documentation. The major emphasis of the course is a project that provides experience in the design and development of a significant software project.
Fundamentals of Physics 3 Lab Labs are designed to build conceptual and quantitative understanding of the material
Fundamentals of Physics 3: Electricity and Magnetism This course provides a calculus-based introduction to electricity and magnetism and emphasizes quantitative and conceptual understanding of the material. Topics covered include Coulomb’s Law, electric fields, electric potential, basic DC and AC circuits, magnetic fields, magnetic induction, and Maxwell’s equations
Web Programming and Implementation Focuses on the development of web applications with user interface conventions that facilitate viewing, searching, and changing of information stored in a relational database. The student will also learn to set up and configure the development environment for applications requiring a web client, web server, application server and relational database.
Formal Methods in Software DevelopmentFocusing on the issues and techniques needed to apply formal specification methods to the development of software, the course uses mathematical and logical formalism to develop a precise statement of what software is to do.
Linux Programming This course introduces the students to the Linux boot and login processes, basic process management techniques, file system, user controlled software build process, and basic application software architecture using the operating system. This course applies the concepts of shells, shell programming, controlling tasks developed with high-level programming languages to understand co-operating tasks by using signals and inter-processing communication (IPC). By applying the various software techniques, the student will comprehend the basic Linux Operating System (OS) concepts.
Probability and Statistics 1 Enumeration, probability, independence, probability distributions, random variables, expectation, mean, variance, moment generating functions, Central Limit Theorem, sampling distributions, and other selected topics.
Project Economics This course develops the techniques necessary for understanding economic price theory, the time-value of money, and the basic issues surrounding organizational architecture. These include issues surrounding supply and demand, cost-production, decision making and market models. In particular, the course focuses on the application of these economic theories to projects, including issues surrounding risk analysis and triage, budgeting, planning, and scheduling necessary to the successful completion of a project
CIS Leadership Seminar The Leadership Seminar introduces students to a three-dimensional model of leadership, including a repertoire of leadership skills and means of using those skills responsibly in the various communities to which they belong. In addition, the course helps students explore the relevance of leadership skills in the leadership process.
CIS Professional SeminarThe course focuses on current issues facing engineering and software professionals. Included with the focus, is an introduction to technical speaking as well as a review of trends in the software, computing and other engineering fields, job prospects, political issues, team and workplace behavior.
Server Management This course focuses on the configuration of networks for internet services, and how to deploy and maintain internet servers on multiple platforms. The course includes extensive laboratory work to support the installation and configuration of hardware and software to support networking, servers, and security for internet services, particularly on Windows and UNIX platforms.
Number Theory & Cryptography Introduction to the theory of integers and basic cryptography. Topics include: primes, divisibility, unique factorization, congruences, applications to cryptography (including RSA and Diffie-Hellman), primitive roots, and quadratic reciprocity.
Advanced Multi-Media The course covers advanced multimedia concepts such as graphics, animation, video and sound; as well as the tools used to create multimedia applications. In addition, the course presents the design principles and management skills needed to develop dynamic, interactive multimedia products
Philosophy of Ethical Responsibility The subject matter of ethics is “the good life and how to live it.” Students will examine a variety of influential approaches to ethics, and will gain skill in applying ethical theory both to practical ethical issues in daily life, and to some of the urgent ethical issues in contemporary society
Computer Architecture This course is for understanding the interactions between computer hardware and software, Von-Neumann and Harvard architectures, hardware, software and system performance measurement, and instruction-set architecture (ISA). In particular, this course offers students the opportunity to understand and enrich their capability to interface between software (e.g., computer instructions and assembly language programming) and hardware (e.g., computer arithmetic, processor control and data manipulation, memory hierarchy and performance, and I/O subsystems) components.
Senior Design I The Liberal Studies senior capstone is the culminating experience of the Core curriculum and therefore requires students to integrate knowledge and skills from their major study areas, Liberal Studies courses, and co-curricular experiences. The course emphasizes cultural competence, leadership, ethical reasoning,
Comparative Languages An introduction to modern computing concepts and computational models as embodied in a number of different classes of languages. The course includes an introduction to functionbased languages such as ML. LISP, Scheme;  logic-based languages such as Prolog, Parlog, Strand, OPS; and object-oriented languages such as JAVA, Smalltalk, Eiffel.
System and Network Security The course reviews standard computer security for desktop and server-based systems. Coverage includes network security issues and techniques. Ethical hacking and defenses against unethical hacking and other computer and network intrusions are discussed.
Philosophy of Knowledge, Certitude and Truth A study of the possibility and validity of human knowledge, together with the criteria of truth.
History without Borders The most important ideas, issues, problems, and developments that mark the changing fortunes of the West’s interaction with the world from the Seventeenth Century to the present.
Operating Systems An introduction to the study of operating systems. Topics covered include: process manipulation and synchronization, processor management, storage management, security, I/O and file systems, and basic distributed system concepts.
Senior Design II Lab The completion of the capstone design sequence. Students develop and deliver a completed end product. Emphasis is on working effectively in cross-disciplinary teams. Course topics include organizational behavior, quality assurance, documentation, design process and process metrics, risk management, written and oral presentation skills, ethical issues in the digital world.
Distributed Programming An introduction to the fundamental techniques and tools used developing programs that rely on inter-process communication. Topics include TCP/IP, client-server paradigm, daemon programs, client socket calls, server socket calls, concurrent vs. iterative servers, connectionless and connection-oriented server paradigms, advanced topics.
Poetry This course helps students develop an appreciation, understanding and evaluation of poetry as it reflects human experience in diverse cultural contexts.
American Architecture A broad survey of the American architectural tradition. The entire range of American building practices is examined, from the earliest colonial experiments to the latest Postmodern skyscrapers.
Multimedia Production Multimedia software uses text, graphics, sound, animation, and video to entertain, inform or educate its users. This course examines all parts of the multimedia software development process and provides hands-on experience with the use of multimedia software authoring tools.
First-Year Seminar The First-Year Seminar provides an educational experience that is composed of several important components. First, it develops intellectual skills, such as critical analysis and synthesis, and communications skills, such as speaking and writing.
Writing and Language sA writing course focusing on writing as a process of discovery concerning ideas, drafting, revising and editing. Students read, write and speak about a variety of aspects of the power of language.
Advanced Writing and Language A writing course designed to explore the writing process and the history of the English language, its past and present uses and powers.
Computer Science I The fundamental concepts of computer organization, machine-level representation of data, algorithmic development and structured programming are presented with an emphasis on the syntactic and execution characteristics of an object-oriented programming language, including data types; arithmetic operators and assignment; input/output, selection and iteration constructs; elementary data structures; and procedural abstraction.
Computer Science II A continuation of the presentation of the computer software essentials. The course surveys fundamental data structures for information processing and corresponding algorithm construction. The implementation of these data structures is considered. Additional topics include recursion, file processing, classes and advanced object-oriented programming techniques.
Calculus I A thorough introduction to the basic concepts and techniques of the differential and integral calculus of elementary functions, including a study of limits and continuity. Applications to the physical, biological and social sciences are studied in detail.
Calculus II involving the calculus of the trigonometric, exponential, logarithmic and rational functions. Analytic geometry in the plane, parametric equations, polar coordinates, sequences and series are included, and an in-depth study of integration is completed
Data Structures The design of algorithms for handling abstract data types, including stacks, queues, linked lists, trees and graphs is coupled with an introduction to complexity analysis, storage allocation and management.
Systems Programming This course covers advanced programming and machine representation of data and data structures, including dynamic structures and files. Topics include memory allocation, run-time data organization, function linkage and parameter passing, interrupt processing and the relationship between high level and machine language.
Computer Networking Theory and knowledge of computer networks, the operation of the network, the characteristics of network architecture as it relates to the ISO model and administration, and the security and management of networks are provided. Other topics include network hardware requirements, such as routers, repeaters, gateways, interface cards, file servers, network topology options, and the Internet. *Prerequisite(s): CS 122. Spring semester.
Introduction to Mathematical Proofs Topics include logic, sets, functions, relations, mathematical induction, combinatorics and other counting techniques, graphs and trees. Special emphasis will be given to writing correct mathematical proofs.
Database Systems An introduction to concepts of databases and database management systems including the storage, processing, evaluation, display and security of data. The course represents a study of the database logical and physical design; of the basic management techniques using the most popular data languages, SQL and QBE; and of the different methodologies for database development - the relational approach and the object-oriented approach
Algorithms This course provides an introduction to theoretical computer science with an emphasis on algorithm design and analysis. Divide-and-conquer approaches, dynamic programming, NP-completeness, and graph algorithms are covered. Techniques including asymptotic analysis, solving recurrence relations, and amortized analysis are discussed.
Computer Organization and Architecture Introduction to Boolean algebra, design of combinational and sequential circuits, and their use in von Neumann computer architecture. Basic parts of computer systems - including memory, control and input-output systems - are studied. The student is expected to design a simple micro-programmed computer.
Software Engineering An introduction to software development methodologies including requirements specification, design, testing, maintenance, and documentation. Students will participate in a large software development project using version control software.
Compiler Design Design and construction of system software such as compilers, interpreters and assemblers. Topics include command and statement parsing techniques, symbol tables, code generation and code optimization.
Operating Systems Principles and theories behind the design of operating systems and their practical implementation, including executives and monitors, task handlers, scheduling algorithms, file handlers, device drivers and interrupt handlers, theories of resource allocation and sharing, multiprocessing and interprocess communication.
Composition and Rhetoric Through the critical engagement of a variety of texts, including written, oral, and visual, this course prepares students to become careful readers, critical thinkers, and skilled writers. Drawing upon rhetorical theory, it emphasizes the practices of analytical reading, informed reasoning, effective writing, and sound argumentation
Inquiry An introduction to the value of research and to the role of research and scholarship in the life of an undergraduate student, including exposure to the opportunities available to participate in research and scholarship within the Liberty University undergraduate programs
Communications Communications
Information Literacy Information Literacy
Foundational Skills provides students with an introduction to Liberty University and to the academic core competencies that students attain by the point of graduation.
Quantitative Reasoning Applying mathematical tools and analysis to practical context, particularly focusing on using proportions and ratios. Basic statistical tools are developed and employed, including graphs, descriptive statistics, the normal curve, the basics of inferential reasoning and investigating correlation. Financial applications are particularly emphasized, as is the use of spreadsheets.
Introduction to Biblical Worldview An introduction to the biblical worldview and contemporary moral issues. This course will introduce critical thinking skills. Religious and philosophical worldviews will also be explored.
Research A survey of knowledge and skills required for the conduct of research in either the humanities, sciences, or creative arts.
Evangelism and the Christian Life  2 Special attention will be given to the theology of all aspects of evangelism including the follow-up. Various methods of approach and presentation will be considered
Natural Science Elective Natural Science Elective
Social Science Elective Social Science Elective
Old Testament Survey An introduction to the authorship and contents of the Old Testament books. Special attention will be given to important persons, places and events, as well as to key chapters in the Old Testament revelation.
New Testament Survey An introduction to the authorship and contents of the New Testament books. Special attention will be given to important persons, places, events, as well as to key chapters in the New Testament revelation.
Theology Survey I This is a general survey of Bible doctrine designed to synthesize and outline each of ten major areas of systematic theology, including prolegomena, bibliology, theology proper, Christology, angelology, and pneumatology.
Theology Survey II This is a continuation of general survey of Bible doctrine designed to synthesize and outline each of the ten major areas of systematic theology. Survey II includes anthropology, hamartiology, soteriology, ecclesiology and eschatology.
Organizational Behavior I This introductory course in organizational behavior integrates the management and behavioral principles, techniques, and concepts associated with the productivity of organizational resources. It focuses on human behavior in organizations and is primarily concerned with improving organizational efficiency and effectiveness through increased understanding of the behavior of people at work.
Introduction to Computing Sciences A breadth-first introduction to the computing disciplines, with an emphasis on computer ethics and how computing technology impacts the world. Topics include: computing history; discrete mathematics; computer architecture and organization; algorithm design; languages; compilers; operating systems; applications; networks; databases; intellectual property; privacy; free speech; social consequences; computer crime; and codes of conduct.
Introduction to Programming Introduction to structured programming and algorithms with an object-oriented language. Topics include input/ output, flow of control, functions, and an introduction to software engineering.
Technical Communication This course will teach students how to write documents representing the three main types of technical writing: operational (instructional), promotional (argumentative and analytical), and reportorial (expository, informational and analytical). Students will also evaluate and edit documents belonging to these categories by examining how well these documents serve their purpose for particular audiences in different cultural and social contexts. Students will study and practice communicating ideas competently in diverse public and private speaking venues.
Calculus and Analytic Geometry I Functions and graphs, exponential, logarithmic, inverse trigonometric, limits, the derivative, techniques of differentiation, continuity, applications of differentiation, L'Hopital's Rule, the integral.
General Physics I A study of mechanics, gravitation, waves, sound, heat, light, electricity and magnetism, optics and modern physics from a non-calculus perspective.
Introduction to Discrete Mathematics Logic and proofs, set theory, Boolean algebra, functions, sequences, matrices, algorithms, modular arithmetic, mathematical induction and combinatorics.
Introduction to Statistical Analysis An introduction to statistical analysis for students with a background in calculus. Includes probability theory, probability distributions, expectation, statistical inference, regression and correlation.
Elementary Functions and Coordinate Geometry A pre-calculus course that includes the study of elementary functions, their graphs and applications including polynomial, rational, algebraic functions, exponential, logarithmic and circular or trigonometric functions.
Integrative Programming and Technologies Examines the integration of systems and applications across global businesses; explores programming interfaces, data mapping and exchange, scripting, and programming languages to support the configuration, maintenance, integration, and security of systems.
CS Capstone II The activities in this course provide a hands-on experience that will allow the students to apply the various skills and knowledge they have gained throughout their Computer Science program. Teams of three to four persons will be formed at the beginning of the course. Software is nearly always developed by teams so this kind of experience is crucial for career preparation. A real-world project submitted by a ministry, some component of the university, or an associated business organization will be identified for each team.
CS Capstone I A hands-on experience that requires students to apply the skills and knowledge gained throughout the Computer Science program. A team solution of a real-world project is required.
Software Engineering Study of the software development process. Topics include: phases of a software project; life-cycle models; metrics; tools; and ethical and professional issues. Participation on team projects is integral
Technical Aspects of Computer Security This course introduces the following issues and principles of information system security: security policies and their mechanisms of implementation, methods used by attackers attempting to circumvent these protections, and specific defenses against these attackers.
Operating Systems Resource management for processes, files, devices, and memory. Deadlock and recovery procedures. Security issues.
Theory of Programming Languages A theoretical study of programming languages. Introduction to grammars and parsers. Language design issues and practical applications.
Network Architecture and Protocols A study of how computer networks and internets operate. Investigates networking from the level of data transmission and wiring through the level of application software that provides networking functionality.
System Administration Principles of system administration activities, applications, operating systems, and domains; analysis of computing applications, infrastructures, architectures, firmware, hardware, disaster recovery, security, and enterprise deployment.
Introduction to Linux This course introduces students to the usage and administration of the UNIX Operating System. The course will emphasize end-user tools and commands for basic file manipulation, editing, compilation and debugging, as well as special features of the UNIX shell environment. Basic system administration will also be covered. Students will learn through a combination of traditional lectures, hands-on laboratory sessions, and individual assignments
Computer Architecture and Organization Introduction to architecture and organization of computer systems. Data and instruction representations. Arithmetic and logical operations. Processor and memory implementations.
Database System Concepts The study of database management systems, database architecture, design, queries, applications, administration and implementation. The course will focus on data normalization, SQL (queries), and the use of relational technology for building database applications. Projects will be assigned to provide hands-on experience with the SQL language and relational database management software packages.
Algorithms and Data Structures Study of data structures such as linked lists, stacks, queues, trees, and graphs. Algorithms for manipulating such structures will be introduced and analyzed. Static and dynamic memory allocation. Access methods for sorting/searching, such as hashing and tree searching.
Advanced Programming Further development of discipline in program design, especially for larger programs. Introduction of pointers, simple data structures, recursion, internal sort/search methods
Introduction to Information Sciences and Systems This course examines the design, selection, implementation and management of enterprise Business solutions. The focus is on identifying critical business processes and envisioning how technology can be developed to provide solutions which generate competitive advantage.
General Physics I A study of mechanics, gravitation, waves, sound, heat, light, electricity and magnetism, optics and modern physics from a non-calculus perspective.
Calculus and Analytic Geometry I Functions and graphs, exponential, logarithmic, inverse trigonometric, limits, the derivative, techniques of differentiation, continuity, applications of differentiation, L'Hopital's Rule, the integral.
Technical Communication Technical Communication
Introduction to Programming Introduction to structured programming and algorithms with an object-oriented language. Topics include input/ output, flow of control, functions, and an introduction to software engineering.
Introduction to Computing Sciences A breadth-first introduction to the computing disciplines, with an emphasis on computer ethics and how computing technology impacts the world. Topics include: computing history; discrete mathematics; computer architecture and organization; algorithm design; languages; compilers; operating systems; applications; networks; databases; intellectual property; privacy; free speech; social consequences; computer crime; and codes of conduct.
Organizational Behavior I This introductory course in organizational behavior integrates the management and behavioral principles, techniques, and concepts associated with the productivity of organizational resources. It focuses on human behavior in organizations and is primarily concerned with improving organizational efficiency and effectiveness through increased understanding of the behavior of people at work.

Rhetoric and Writing This course will introduce students to common textual issues surrounding audience and purpose to prepare them for the different kinds of texts they will encounter in upper-level academic courses as well as professional settings.
Calculus I This course examines the notions of limit, continuity and derivatives of functions of one variable. The course explores differentiation rules for algebraic, trigonometric, exponential and logarithmic functions. The course discusses applications of differential calculus, such as related rates problems, curve sketching, and optimization. The course also introduces students to definite and indefinite integrals and the Fundamental Theorem of Calculus.
Beauty and Joy of Computing The course focuses on teaching students some of the Big Ideas of Computing such as abstraction, design, recursion, concurrency, simulations, and the limits of computation. The course also provides a historic perspective of Computing and where it is heading. Throughout the course, we will emphasis the relevance of Computing to the students, their future studies, their careers, and society. In this course students will learn Python as the programming language to deliver the concepts.
Programming I This course provides an introduction to problem solving techniques and the computer programming process. Topics in the course include data types, operations, expressions, flow control, I/O, functions, program structure, software design techniques, and memory allocation.
Calculus II The course presents various integration techniques and their applications, convergence of sequences and series, as well as power series and Taylor series of a function of one variable.
Calculus-Based Physics I This course is an introduction to the fundamental laws and theories of physics with an emphasis on mechanics, heat and wave motion.
Calculus-Based Physics I Lab Calculus-Based Physics I Lab
Computational Structures  This course will cover the mathematical and logical fundamentals required in computer science, information systems, information science, and information technology. The course develops concepts in discrete mathematical structures as applied to computing in general through the topics of sets; logic; proof techniques; Boolean algebra; algorithms and problem solving; number systems; number theory; counting and discrete probability; and relations and graphs.
Programming II This course serves as a continuation to the Programming I course.Students are shown additional fundamental concepts of problem solving using the object-oriented paradigm and data structures. The topics in this course include classes, interfaces, objects, class types, events, exceptions, control structures, polymorphism, inheritance, linked lists, arrays, stacks, queues, and deques.
Calculus-Based Physics II  This course is a continuation of PHY 2048 with emphasis on electricity, magnetism and light.
Calculus-Based Physics II Lab Calculus-Based Physics II Lab
Data Structures Students in this course will study various data structures including binary trees, balanced trees, B-trees, hashing, and heaps. Additional topics include advanced data structures such as splay trees, tree representations, graphs, dynamic memory, and algorithms for sorting and searching. Students are expected to complete projects using object-oriented programming. .
Legal and Ethical Issues in Computing  This course provides an opportunity to discuss and analyze the legal and ethical issues facing today computing professionals, as well as the legal and ethical issues computing professionals may face in the future. Legal and ethical issues are considered from local, as well as global perspectives.
Prob/Statistics for Engineers  This course is a survey of the basic concepts in probability and statistics with applications in electrical, mechanical, and civil engineering. Topics include probability, common discrete and continuous probability distributions, estimation and hypothesis testing, and simple regression.
Introduction to Databases This course covers database modeling with emphasis on the relational data model. Principles of relational database design, normal forms, constraints, and SQL programming will be discussed extensively. Additionally, topics related to indexing, views, transactions, XML and No-SQL databases will also be discussed. The course will cover aspects of information security and assurance as they relate to data management.
Theory of Computation his course will cover the theory of computation using formal methods for describing and analyzing programming languages and algorithms. Topics include finite automata and regular expressions; formal languages and syntactic analysis; pushdown automata and Turing machines; and computational complexity.
Computer Networks In this course, students will study architectures, protocols, and layers in computer networks and develop client-server applications. Topics include the OSI and TCP/IP models, transmission fundamentals, flow and error control, switching and routing, network and transport layer protocols, local and wide-area networks, wireless networks, client-server models, and network security.
Introduction to Artificial Intelligence Course topics include heuristic techniques for problem-solving and decision making, control and search strategies, knowledge representation, logic, AI languages, and tools. Applications such as machine learning, natural language understanding, planning, and robotics will be included.
Computer Arch. and Org. This course will cover the fundamental ideas in computer architecture and organization. Topics include machine-level data representation; digital logic; computer arithmetic; processor design; system components and inter-communication; memory hierarchy; multi-core processors; GPU; and modern technological advancements.
Linear Algebra This course covers matrix algebra, Gaussian elimination, determinants, Euclidean spaces, linear transformations, eigenvalues, eigenvectors, and vector spaces.
Intro to Systems Software This course covers computer structure, machine language, instruction execution, addressing techniques, system and utility programs including linking, loading, assembly and macro processing.
Design and Analysis of Algori This course will introduce fundamental techniques for designing and analyzing algorithms, including asymptotic analysis; divide-and-conquer algorithms and recurrences; greedy algorithms; dynamic programming; and graph algorithms.
Operating Systems Topics in this course will include process management, memory management, file management, input/output device management, and distributed systems issues
Software Engineering This course introduces students to fundamental Software Engineering concepts and current practices. Topics covered include: software process models; agile software development; requirements engineering; domain modeling; model-driven development; software architectures; design paradigms and patterns; project management, tracking, and release planning; collaborative development, testing, deployment, maintenance and evolution.
Constr of Language Translators This course introduces students to the theoretical foundations and practical issues of designing language translators.
Introduction to Visual and Procedural Programming  This course provides an introduction to the fundamentals of visual programming as well as procedural language structure and capabilities. Students learn about visual programming development, including problem definition, problem solving and algorithms, procedures, controls, arrays, structures, coding, visual interface design, testing, and debugging.
Web Systems Development  Students learn about the influence of local and global transaction processing, Internet, Web design and development, and Electronic Data Interchange on information systems. This course discusses the concepts and skills required to design and implement Web application systems using Model view controller (MVC) architecture. Students learn about how Web applications are developed using client-side and server-side scripting to implement internal and external business processes. After an introduction to the basic concepts of relational database systems and Object Relational Mapping (ORM) students will practice for storing and accessing data in the database.
Gaming and Mobile Apps Capstone I This is the first of a sequence of two courses where students will have the opportunity to analyze, implement, and deploy complex software systems as enterprise mobile applications, as computer games, and as an appropriate combination of both.
Fundamentals of Computer Science Basic principles of algorithmic problem solving and programming using methods of top-down design, stepwise refinement and procedural abstraction. Basic control structures, data types, and input/output. Introduction to the software development process: design, implementation, testing and documentation. The syntax and semantics of a modern programming language.
Introduction to Computing Use of a supportive software development environment to design, develop, and test applications in a selected topic domain that demonstrates the potential of careers in computing. An introduction to computing and to the selected topic domain.
Accelerated Introduction to Computer Science Accelerated introduction to basic principles of algorithmic and object-oriented problem solving and programming. Introduction to programming language concepts including control structures, data types, classes, and inheritance. Program design principles. Use and implementation of algorithms (searching, sorting, recursion) and data structures (lists, stacks, and queues).
Data Structures Introduction to data structures and analysis of algorithms. Abstract datatypes. Specification and implementation of advanced data structures. Theoretical and empirical analysis of recursive and iterative algorithms. Software performance evaluation and testing techniques.
Project-Based Object-Oriented Programming and Design Object-oriented programming and design with applications to project construction. Introduction to class design, interfaces, inheritance, generics, exceptions, streams, and testing.
Introduction to Computer Organization Introduction to computer systems. Simple instruction set architecture and the computer hardware needed to implement that architecture. Machine and assembly language programming.
Professional Responsibilities The responsibilities of the computer science professional. The ethics of science and the IEEE/ACM Software Engineering Code of Ethics. Quality tradeoffs, software system safety, intellectual property, history of computing and the social implications of computers in the modern world. Applications to ethical dilemmas in computing.
Introduction to Software Engineering Requirements, specification, design, implementation, testing and verification of large software systems. Study and use of the software process and software engineering methodologies; working in project teams.
Computer Architecture In-depth study of the instruction set architecture and hardware design of a specific CPU. Introduction to pipelines, input/output and multi-processors. Computer abstractions and performance measurement.
Discrete Structures Structures of computer science: logic, sets, relations, functions, graphs and trees. Propositional and predicate logic. Applications of predicate logic to preconditions, postconditions, and proof techniques. Complexity of algorithms.
Design and Analysis of Algorithms Intermediate and advanced algorithms and their analysis. Mathematical, geometrical, and graph algorithms. NP-complete problems. Additional topics will be chosen from pattern matching, file compression, cryptology, dynamic and linear programming, and exhaustive search. Course may be offered in classroom-based or online format.
Systems Programming C programming language from a system programming perspective. Standard C language including operators, I/O functions, and data types in the context of system functions. Unix commands, shell scripting, file system, editors.
Programming Languages Programming language design through evaluator implementation. Expressions, functions, environments, closures, mutation, objects, type systems, and syntactic abstraction. Syntactic, semantic, and static analysis properties.
Compiler Construction Intermediate code representations, memory management, functions and parameter passing, code transformations and optimizations, code generation, register allocation.
Theory of Computation I Theory of formal languages and automata. Turing machines. Chomsky hierarchy. Theory of decidability and computability.
Introduction to Operating Systems Introduction to sequential and multiprogramming operating systems; kernel calls, interrupt service mechanisms, scheduling, files and protection mechanisms, conventional machine attributes that apply to operating system implementation, virtual memory management, and I/O control systems.
Senior Project I Selection and completion of a project by individuals or team which is typical of problems which graduates must solve in their fields of employment. Project may include students from other disciplines. Formulation of outline, literature review, and project schedule.
Senior Project II Selection and completion of a project by individuals or team which is typical of problems which graduates must solve in their fields of employment. Project may include students from other disciplines. Project results are presented in a formal report.
Technical Writing for Engineers The principles of technical writing. Discussion and application of rhetorical principles in technical environments. Study of methods, resources and common formats used in corporate or research writing.
Calculus I Limits, continuity, differentiation. Introduction to integration.
Calculus II Techniques of integration, applications to physics, transcendental functions.
Calculus III Infinite sequences and series, vector algebra, curves.
Linear Algebra I Systems of linear equations. Matrix algebra, including inverses and determinants. Vectors, vector spaces, bases and linear transformations in real coordinate space of n dimensions. Eigenvalues, eigenvectors and diagonalization. Applications of linear algebra. Introduction to inner products and orthogonality.
Statistical Methods for Engineers Descriptive and graphical methods. Discrete and continuous probability distributions. One and two sample confidence intervals and hypothesis testing. Single factor analysis of variance. Quality control. Introduction to regression and to experimental design. Substantial use of statistical software.
General Biology Principles of cellular biology, heredity, ecology, biological diversity, and evolution, with emphasis on their relationships to human affairs. Not open for major credit in Biological Sciences, Microbiology or Marine Sciences.
Introduction to Cell and Molecular Biology Fundamentals of cellular biology with an emphasis on the molecular perspective of life: metabolism, photosynthesis, cell structure and reproduction, meiosis, immunology, classical and molecular genetics, gene regulation.
Life Science for Engineers Fundamentals of life sciences: energetics, cell biology, molecular and classical genetics, microbiology, organismal biology, and ecology.
Bioengineering Fundamentals Treatment of the engineering applications of biology. Genetic engineering and the industrial application of microbiology. Systems physiology with engineering applications. Structure and function relationships in biological systems. The impact of life on its environment. Course may be offered in classroom-based or online format.
General Botany The anatomy, physiology, reproduction, and importance of plants.
Microbiology Morphology, metabolism, classification, and identification; microbiology of air, soil, water, and foods with applications to industry, agriculture, medicine, and public health.
General Microbiology I Microbial cellular structure and function, nutrition and growth dynamics, control of microbial growth, metabolism, genetics, and viruses. Both prokaryotic and eukaryotic microorganisms emphasized.
Calculus IV Partial derivatives, multiple integrals, introduction to vector analysis.
Software Evaluation Theory and practice of evaluation of software and software systems. Design of experiments for measuring software performance, measuring software output quality, comparing multiple implementations of the same algorithm, and evaluation of software heuristics. Selection of appropriate software evaluation measures and criteria.
Network and Web Security Introduction to network and web security, including denial of service, botnets, access control, routing attacks, transport layer attacks, tunneling mechanisms, VPNs, IDS, firewalls, penetration testing, key distribution, browser security, social network security, email security, jamming, and wireless security.
Software Security Principles behind secure software design including threat models, trust management, common vulnerabilities and mitigation techniques, robust software development, isolation of untrusted code, auditability, and testing.
Current Topics in Computer Security Selected topics in emerging areas of computer security. Potential topics include: network and web security, critical infrastructure protection, embedded systems security, malware analysis, mobile security, and digital forensics, among others.
Mobile Application Development Inception, development, testing, and deployment of mobile applications. Introduction to tools, libraries, and frameworks for one or more mobile platforms and devices. Emphasis on software engineering best practices for developing entrepreneurial or humanitarian mobile-centric applications.
Dynamic Web Development Project-based study of web-based three-tiered applications, including current best practices and tools for design, implementation and testing of browser interface, serverside business logic, object-relational mapping, databases, and web services.
Bioinformatics Algorithms Introduction to the use of computers to solve problems in molecular biology. The algorithms, languages, and databases important in determining and analyzing nucleic and protein sequences and their structure.
Game Design In-depth study of game design including rules, player interaction, and storytelling. Exploration of effective use of sound, art, and game controls in creating meaningful play. Development of fully functioning and engaging games, following standard domain-specific software development processes and using physical prototyping and playtesting. Current, industry-tested game engines.
Special Problems Individual investigation, research, studies or surveys of selected problems.
Distributed Systems Foundations of distributed systems, distributed hash tables (peer-to-peer systems), failure detectors, synchronization, election, inter-process communication, consensus, replication, key-value stores, and measurements.
Introduction to Computing for Engineers Introduction to computing logic, algorithmic thinking, computing processes, a programming language and computing environment. Knowledge obtained in this course enables use of the computer as an instrument to solve computing problems. Representative problems from science, mathematics, and engineering will be solved.
Introduction to Principles of Programming Introduction to computer programming in a structured programming language including fundamental elements of program design and analysis. Data and functional abstraction as tools for constructing correct, efficient, and intelligible programs for a variety of common computing problems.
Data Structures and Object-Oriented Design Introduction to fundamental data structures and algorithms. The emphasis is on understanding how to efficiently implement different data structures, communicate clearly about design decisions, and understand the relationships among implementations, design decisions, and the four pillars of object-oriented programming: abstraction, encapsulation, inheritance, and polymorphism.
Computer Architecture Structure and operation of digital systems and computers. Fundamentals of digital logic. Machine organization, control and data paths, instruction sets, and addressing modes. Hardwired and microprogrammed control. Memory systems organization. Discussion of alternative architectures such as RISC, CICS, and various parallel architectures.
Introduction to Discrete Systems Mathematical methods for characterizing and analyzing discrete systems. Modern algebraic concepts, logic theory, set theory, grammars and formal languages, and graph theory. Application to the analysis of computer systems and computational structures.
Contemporary Issues in Computer Science and Engineering Information management, the global and societal impact of computer science and engineering decisions, professional and ethical responsibility.
Systems Programming Introduction to system-level programming with an emphasis on C programming, process management and small scale concurrency with multi-threaded programming. Special attention will be devoted to proficiency with memory management and debugging facilities both in a sequential and parallel setting.
Cybersecurity Lab Introduction to the design of secure systems. Explores issues that arise in multiple design phases to understand the limitations of the platform and the source of opportunities for attackers. Each unit will explore a system, its design, its vulnerabilities and how to exploit them, culminating with the creation, implementation and deployment of counter-measures to eliminate the vulnerabilities and nullify the threat.
Algorithms and Complexity Design and analysis of efficient computer algorihms. Algorithm design techniques, including divide-and-conquer, depth-first search, and greedy approaches. Worst-case and average-case analysis. Models of computation. NP-complete problems.
Computer Science and Engineering Design Project I The first semester of the required two-semester major design experience. Working on a team, students will propose, design, produce, and evaluate a software and/or hardware system. Will culminate in the delivery of the design, analysis, and initial working system, to be used as a basis for CSE 4940, formal public presentation, and written documentation. Oral and written progress reports are required.
Computer Science and Engineering Design Project II The second semester of the required year long major design experience. The semester will be spent developing, testing, and evaluating the software and/or hardware system. The project will culminate in the delivery of a working system and will include a formal public presentation, and written documentation. Oral and written progress reports are required.
Theory of Computation Formal models of computation, such as finite state automata, pushdown automata, and Turing machines, and their corresponding elements in formal languages (regular, context-free, recursively enumerable). The complexity hierarchy. Church's thesis and undecidability. NP completeness. Theoretical basis of design and compiler construction.
Numerical Methods in Scientific Computation Introduction to the numerical algorithms fundamental to scientific computation. Equation solving, function approximation, integration, difference and differential equations, special computer techniques. Emphasis is placed on efficient use of computers to optimize speed and accuracy in numerical computations. Extensive digital computer usage for algorithm verification.
Programming Language Translation Introduction to the formal definition of programming language syntax and semantics. Design and realization of programming language processing systems such as assemblers, compilers, and interpreters.
Parallel Systems Introduction to parallel systems. Fundamentals of the theory of parallel systems. Models of parallel machines. Limitations of parallel systems. Paradigmatic algorithms. Vectorization. Arithmetic structures. Classical parallel architectures.
Introduction to Modern Cryptography Covers the foundations of modern cryptography introducing basic topics such as one-way functions, pseudorandom generators, and computational hardness assumptions based on number theory. The course will cover fundamental cryptographic constructions such as hard-core predicates, secure symmetric encryption and message-authentication codes, and public-key cryptography.
Computational Geometry An extension of sorting, searching, selection, and graph algorithms to geometric problems. This includes algorithms and data structures for constructing geometric objects, computing geometric properties, and answering geometric queries as well as techniques for the analysis of their correctness and complexity.
Introduction to Machine Learning An introduction to the basic tools and techniques of machine learning, including models for both supervised and unsupervised learning, related optimization techniques, and methods for model validation. Topics include linear and logistic regression, SVM classification and regression, kernels, regularization, clustering, and on-line algorithms for regret minimization.
Computer Networks and Data Communication Introduction to computer networks and data communications. Network types, components and topology, protocol architecture, routing algorithms, and performance. Case studies including LAN and other architectures.
Applied Linear Algebra Systems of equations, matrices, determinants, linear transformations on vector spaces, characteristic values and vectors, from a computational point of view. The course is an introduction to the techniques of linear algebra with elementary applications.
Multivariable Calculus Two- and three-dimensional vector algebra, calculus of functions of several variables, vector differential calculus, line and surface integrals.
Statistical Methods  Basic probability distributions, point and interval estimation, tests of hypotheses, correlation and regression, analysis of variance, experimental design, non-parametric procedures.
General Chemistry I Designed to provide a foundation for more advanced courses in chemistry. Atomic theory, laws and theories concerning the physical and chemical behavior of gases, liquids, solids, and solutions. Quantitative measurements illustrating the laws of chemical combination in the laboratory component.
General Chemistry II Equilibrium, thermodynamics, nuclear chemistry, and kinetics. Properties of some of the more familiar elements and their compounds. Equilibrium in solutions and reactions of the common cations and anions in the laboratory component.
General Physics with Calculus I Quantitative study of the basic facts and principles of physics with an emphasis on mechanical phenomena. Concepts such as work, mechanical energy, linear and angular momentum, and energy conservation are explained. The laboratory offers fundamental training in physical measurements. Recommended for non-engineering students who desire to have a calculus-based physics sequence.
General Physics with Calculus II Quantitative study of the basic facts and principles of physics with an emphasis on electromagnetic phenomena, including electromagnetic radiation and waves and electric circuits. The laboratory offers fundamental training in physical measurements. Recommended for non-engineering students who desire to have a calculus-based physics sequence.
Physics for Engineers II Introduction to principles of electromagnetism and Maxwell?s equations, including electric circuits, electromagnetic wave propagation, optics, and other relevant applications to engineering. Basic concepts of calculus are used.
Fundamentals of Physics I Foundational principles of mechanics: kinematics, forces, energy, momentum, angular momentum, torque, gravitation, waves, harmonic motion and nonlinear dynamics. Basic concepts of calculus are used.
Fundamentals of Physics II Foundational principles of electromagnetism: electrostatics, magnetostatics, electrodynamics, Maxwell?s equations, electromagnetic wave propagation, and optics, including some of their relevant applications to physics. Basic concepts of calculus are used
Navy STEM Professional Development Seminar Seminar series focusing on science, engineering and technology concepts in the design, construction, operation and maintenance of surface ships and submarines. Provides industry-specific knowledge for engineering students interested in pursuing Navy-related careers in the public or private sectors.
Special Topics in Computer Science and Engineering Special Topics in Computer Science and Engineering
Independent Study in Computer Science and Engineering Independent Study in Computer Science and Engineering
Introduction to Software Engineering Software engineering concepts including the software life cycle and other software-development process models. Specification techniques, design methodologies, performance analysis, and verification techniques. Team-oriented software design and development, and project management techniques.Use of appropriate design and debugging tools for a modern programming language. Homework and laboratory projects that emphasize design and the use/features of a modern programming language.
Computer Networks and Data Communication Introduction to computer networks and data communications. Network types, components and topology, protocol architecture, routing algorithms, and performance. Case studies including LAN and other architectures.
What is a Good Society Pacific Seminar 1 introduces students to the intellectual life of the university by exploring the intersection of who we are as individuals and who we are as communities.
Topical Seminar on a Good Society Topical Seminar on a Good Society
What is an Ethical Life? In their senior year, students take Pacific Seminar 3: What is an Ethical Life? This course is a culminating general education experience and the final component of the university writing requirement. What is an Ethical Life? 3 Units.
Introduction to Interpersonal Communication Introduction to the study of human interaction that occurs in relatively informal, everyday social contexts. Using models, theories, and skills of communication as takeoff points, the course introduces students to dimensions related to trust, openness, listening, perception, language, nonverbal communication, conflict, social influence, and communication competence.
Political Advocacy Principles of persuasion in political contexts in the U.S. (types and characteristics of political audiences, official and unofficial advocacy campaigns, media framing of political news & commentary) from historical and theoretical perspectives.
Engineering and Computing Ethics in Society Topics include societal needs, personal rights, whistle blowing, conflicts of interest, professional autonomy, risk assessment, sustainable development and the application of engineering codes of ethics.
English 25  Students are expected to write about and discuss various topics that arise in the study of literary works.
History Goes To Hollywood This course examines how films shape our understanding of certain historical events. It will provide students with the tools to watch films critically and to place them in the context of a broader historical time period.
United States History I This is an introductory level course in U.S. history. It begins with Native American societies at the time of European contact and examines major social, political, and cultural issues in U.S. history through colonial settlement, the American Revolution, the early national period, the antebellum era, the Civil War, and Reconstruction. The course considers dominant cultural traditions and perspectives as well as minority cultures and dissent.
Elements of Calculus Polynomial, rational, exponential and logarithmic functions. Differentiation. Integration. Maxima/minima of functions of several variables. Elementary differential equations. Applications to natural sciences, social sciences and other fields.
Discrete Math for Computer Science This course is designed to develop skills in deductive reasoning and to apply concepts of discrete mathematics to computer science. Topics include logic, deductive reasoning, mathematical induction, set theory, functions, recurrence relations, combinatorics and probability, graphs, trees, and Boolean Algebra.
Computing Theory Students study automata, formal languages and computability. Topics include finite state automata, regular languages, pushdown automata, context-free languages, Turing machines; decidability, reducibility, and time complexity that includes NP-completeness and intractability.
Random Signals This course is an introduction to probability and statistics in engineering applications.
Discrete and Combinatorial Mathematics The fundamental principles of discrete and combinatorial mathematics are covered. Topics include the fundamental principles of counting, the Binomial Theorem, generating functions, recurrence relations and introductory graph theory, that includes trees and connectivity.
Introduction to Statistics and Probability Students study elements of descriptive statistics: graphs, tables, measures of central tendency and dispersion. Probability models including binomial and normal are covered.
Probability with Applications to Statistics Probability concepts in discrete and continuous spaces is explored in some depth as well as important probability models (e.g., binomial, Poisson, exponential, normal, etc.), mathematical expectation and generating functions. Applications to statistical inference includes maximum likelihood, moment and least squares estimation.
Introduction to Finite Mathematics and Calculus This course introduces calculus, applications to problems in economics, management and other fields. Students study systems of equations, elements of matrix algebra, and elementary linear programming.
Calculus I Students study differential calculus of algebraic and elementary transcendental functions, anti-derivatives, introductory definite integrals, and the Fundamental Theorem of Calculus. Applications include the first and second derivative tests and optimization.
Introduction to Computer Science The course emphasizes program design and problem solving techniques that use a high-level programming language. The course introduces basic concepts such as assignment, control flow, iteration, and basic data structures in addition to a supervised lab.
Data Structures The course continues the development of program design and problem solving techniques. Topics include development of fundamental data structures and their associated algorithms as well as array-based algorithms, recursion, lists, generics, dynamic memory, binary trees, and associative structures.
Application Development This course develops the skills and techniques required for the creation of contemporary software applications. Contemporary software applications are complex systems that involve the interaction of multiple subsystems that require teams of developers working together for extended periods of time. Topics include teamwork and communication skills, current development methodologies, analysis and design documentation and the use of libraries.
Programming Languages Topics in evaluation, design, and development of programming languages. Topics include type systems, variables and scope, functions, parameter passing, data hiding and abstractions, recursion, memory allocation, grammars and parsing, compiler architecture, programming paradigms, and comparison of programming languages and environments.
Design and Analysis of Algorithms Topics for this course include complexity analysis, algorithms for searching, sorting, pattern matching, combinatorial problems, optimization problems, backtracking, algorithms related to number theory, graph algorithms, and the limitations of algorithm power.
Operating Systems Students are introduced to the fundamental concepts of modern operating systems.
Operating Systems Students are introduced to the fundamental concepts of modern operating systems.
Digital Design Students study number systems, binary arithmetic, and Boolean logic. Topics include the analysis and synthesis of combinational and sequential circuits and the use of MSI, LSI, FPGA and CPLD devices.
Computer Systems and Networks This course is a comprehensive and holistic examination of the modern computing environment. Students gain an understanding of the various hardware and software components that enable computers and networks to process information and execute applications.
Dean's Seminar This course is a survey of the profession and practice of engineering and computer science. It is an overview of the programs and methodologies of the School of Engineering and Computer Science that includes educational requirements, professional and career opportunities, introduction to the history of engineering and computing, and entrepreneurship. Hands-on activities and guest lecturers are included to complement the discussion sessions.
Professional Practice Seminar This course is designed to prepare students for the Cooperative Education experience. Presentations are from representatives of industry, government, education and former Co-op students. Topics include engineering ethics, professionalism, time management and mock interviewing.
Web Applications The World-Wide Web consists of client-server applications operating over the Internet. This course introduces the skills and techniques for designing and developing web applications. Topics include: client-server architectures, web servers and web browsers, server-side programming, client-side programming, form processing, state management and multimedia.
System Administration and Security Students are introduced to an operating system from an administrator's standpoint. Topics include installation with the proper allocation of disk resources, maintaining the operating system and various subsystems, security issues that include server hardening, host firewalls and network security issues.
Computer Networking Topics examined in this course include computer networks and the internet, LAN and WAN architectures, and packet switched networks and routing. Students learn about the 7-layer OSI model and internet protocol stack, socket programming and client/server systems, wireless and security.
Computer Network Security This course is an examination of the pervasive security threats related to the Internet, data communications and networking. Topics include TCP/IP protocols, authentication, encryption, malware, cybercrime, and social engineering. Emphasis is on computer and network attack methods, their detection, prevention and analysis, and the integration of the tools and techniques employed in this effort.
Human-Computer Interface Design Human-Computer Interface (HCI) Design focuses on the relationship between humans and computers or other physical devices. This course helps students develop an understanding of the common problems in designing these interfaces and presents a set of design techniques to ensure that designs are both useful and useable.


General Chemistry General principles of chemistry for science and engineering students. Composition and structure of matter, chemical reactions, bonding, solution chemistry, and kinetics. Thermodynamics, equilibrium, acids and bases, electrochemistry, and coordination compounds.
General Chemistry Laboratory AGeneral Chemistry Laboratory
General Physics I Calculus-based introduction to general physics and its applications. Mechanics, heat, and sound.
General Physics I Laboratory General Physics I Laboratory
Database Management Systems Logical and physical organization of databases. Data models and query languages, with emphasis on the relational model and its semantics. Data independence, security, integrity, concurrency.
Accelerated Single-Variable Calculus I Functions, limits, differentiation of algebraic functions, integration, applications including extrema problems, areas, volumes, centroids, and work.
Accelerated Single-Variable Calculus II – 4 Differentiation and integration of transcendental functions, applications, methods of integration, coordinate geometry, polar coordinates, infinite series
Introduction to Engineering, Module 1 Introduction to Engineering, Module 1
Introduction to Engineering, Module 3 Introduction to Engineering, Module 3
Programming and Problem Solving An intensive introduction to algorithm development and problem solving on the computer. Structured problem definition, top down and modular algorithm design. Running, debugging, and testing programs. Program documentation.
Myth, Ritual, Belief: The Anthropology of Religion Cross-cultural survey of religious and ritual beliefs in light of theories of religion. Topics include sacrifice, myth, witchcraft, divination, religious change, and millenarian movements.
General Physics II Calculus-based introduction to general physics and its applications. Electricity and magnetism, optics, modern physics.
General Physics II Laboratory General Physics II Laboratory
Multivariable Calculus Vectors, curves, and surfaces in space. Functions of several variables, partial derivatives, multiple integrals. Vector integral calculus, including line and surface integrals.
Digital Systems Digital systems and computer architectures and digital systems, from transistor circuits and logic gates, to simple machine (e.g. von Neumann) models. Boolean algebra, Information representation, state machines, processors, process handling, I/O handling, and assembler concepts.
Digital Systems Laboratory Digital Systems Laboratory
Program Design and Data Structures  The study of elementary data structures, their associated algorithms and their application in problems; rigorous development of programming techniques and style; design and implementation of programs with multiple modules, using good data structures and good programming style.
Discrete Structures  Survey of the mathematical tools necessary for an understanding of computer science. Sets, relations, functions, basic counting techniques, permutations, combinations, graphs, recurrence relations, simple analysis of algorithms, O-notation, Boolean algebra, propositional calculus, and numeric representation.
Intermediate Software Design  High quality development and reuse of architectural patterns, design patterns, and software components. Theoretical and practical aspects of developing, documenting, testing, and applying reusable class libraries and object-oriented frameworks using object-oriented and component-based programming languages and tools.
Crafting Pottery in the Ancient World Pottery as craft or locally grounded knowledge of making. Practice-based versus formal textbook learning. Hands-on experience of making and studying ceramic vessels. Diversity of pottery in ancient societies. Qualitative and quantitative analysis of ceramic forms, fabrics, and decorations.
Foundations of Machine Learning Theoretical and algorithmic foundations of supervised learning, unsupervised learning, and reinforcement learning. Linear and nonlinear regression, kernel methods, support vector machines, neural networks and deep learning methods, instance-based methods, ensemble classifiers, clustering and dimensionality reduction, value and policy iteration. Explainable AI, ethics, and data privacy.
Methods of Linear Algebra Vectors and matrix operations. Linear transformations and fundamental properties of finite dimensional vector spaces. Solutions of systems of linear equations. Eigenvalues and eigenvectors.
Introduction to Probability and Mathematical Statistics Discrete and continuous probability models, mathematical expectation, and joint densities. Laws of large numbers, point estimation, and confidence intervals. Hypothesis testing and applications. Students taking 2820 are encouraged to take 2820L concurrently.
Algorithms Advanced data structures, systematic study and analysis of important algorithms for searching; sorting; string processing; mathematical, geometrical, and graph algorithms, classes of P and NP, NP-complete and intractable problems.
Programming Languages  General criteria for design, implementation, and evaluation of programming languages. Historical perspective. Syntactic and semantic specification, compilations, and interpretation processes. Comparative studies of data types and data control, procedures and parameters, sequence control, nesting, scope and storage management, run-time representations.
Principles of Operating Systems I  Resource allocation and control functions of operating systems. Scheduling of processes and processors. Concurrent processes and primitives for their synchronization. Use of parallel processes in designing operating system subsystems. Methods of implementing parallel processes on conventional computers. Virtual memory, paging, protection of shared and non-shared information. Structures of data files in secondary storage. Security issues. Case studies.
Artifcial Intelligence Principles and programming techniques of artificial intelligence. Strategies for searching, representation of knowledge and automatic deduction, learning, and adaptive systems.
Maymester Contemporary Art Blitz Intensive review of contemporary art through excursions to museums, galleries, and artists’ studios. Insights from curators, dealers, and films. Cities vary each year.
Technical Communications. Instruction and practice in written and oral communication. Emphasis is on organization and presentation of information to a specific audience for a specific purpose. Course includes writing and editing reports of various lengths, preparing and using visual aids, and presenting oral reports.
Computer Science Seminar  Elements of professional engineering practice, professional education and lifelong learning, intellectual property and software patents, open source and crowd source software development, liability, soft risk safety and security, privacy issues, interdisciplinary teams and team tools, professional organization, careers, entrepreneurship, human computer interaction.
Project in Computer Animation Design and Technology Principles and techniques of computer animation. Topics include storyboarding, camera control, skeletons, inverse kinematics, splines, keyframing, motion capture, dynamic simulation, particle systems, facial animation, and motion perception.
Image Processing Theory of signals and systems is extended to two dimensions. Filtering, 2-D FFTs, edge detection, and image enhancement.
Single-Variable Calculus I Review of algebra and trigonometry. Exponential functions; inverse functions and logarithms. Limits; differentiation of algebraic and transcendental functions; rules of differentiation; related rates.
Applied Behavioral Science Leadership styles, power team building, conflict resolution, management resolution, interviewing techniques.
Comparative Writing Systems.  The origins, development, and social uses of writing in the ancient Middle East, Mediterranean, and Mesoamerica. Decipherments of hieroglyphic systems. Literacy, historiography, and cross-cultural translation.
Computer Graphics 2D rendering and image-based techniques, 2D and 3D transformations, modeling, 3D rendering, graphics pipeline, ray-tracing, and texture-mapping
Composition I A review of grammar, introduction to research methods, and practice in writing exposition using reading to provide ideas and patterns.
Experiencing Art This course is designed to provide a background in art and the related processes so that a student may develop powers of observation and thereby respond to a work of art.
Survey of American History Survey of American History. An overview of American history from the pre-colonial period to the present.
Orientation to the University A course designed to provide information and enhance skills that will enable students to take responsibility for a successful transition to college.
Orientation to Computing, Information, and Technology An overview of hardware, software, technology, and information systems concepts and terms as well as ethics and opportunities within the three fields.
Computer and Information Science Lab An introduction to the computing resources of the department and the university.
Composition II Composition II
Principles of Agricultural Macroeconomics A study of macroeconomic variables that affect agriculture with emphasis on consumption, unemployment, inflation, government spending and taxes, investments, national income, and money and banking.
Calculus I The content covers differentiation of all single variable functions and introduces integration of functions.
Microcomputer Applications This course provides hands-on experience with several software applications. Topics include intermediate and advanced word processing; spreadsheet design, formulas, and charts; database design principles and implementation; presentation design and techniques; and integration among these applications.
Foundations of Computer Programming I An introduction to the foundational concepts of programming using structured programming concepts of C++ as an implementation tool. Programming principles covered in lecture are practiced in lab. Major topics include sequential, selection, and iterative control structures, functions, parameter passing, and file processing.
Digital Logic Design Lab A study of basic digital logic circuit design and implementation. Circuit schematic development utilizing computerized automated design tools. Computer modeling and simulation of digital systems. Emphasis will be placed on proper laboratory techniques, including data collection, data reduction, and report preparation.
Digital Logic Design Binary numbers and codes, Boolean algebra, combinational and sequential logic including: minimization techniques, memory systems, register transfers, control logic design, and state machines.
Calculus II This is the second of two courses covering the calculus of functions of a single variable.
Foundations of Computer Programming II Topics include multi-dimensional arrays, functions, string processing, classes, and records. Students are introduced to object oriented programming using C++.
Discrete Structures for Technical Majors Fundamental mathematical concepts related to computing, including logic and proof techniques; sets, sequences, relations, and functions; combinatorics; algebraic structures and Boolean algebra ; trees and graphs.
Technical Writing Practice in composing abstracts, instructions, visuals, proposals, questionnaires, letters, memos, and a variety of informal and formal reports.
Data Structures This course involves a study of abstract data structures and the implementation of these abstract concepts as computer algorithms.
Computer Organization and Programming Introduction to organizing and structuring hardware components of computers. Topics include internal data representation, data transfer and control, I/O, memory hierarchy, and programming in assembly.
Advanced Discrete Structures Advanced topics in discrete mathematics applicable to modeling, analysis, and computer theory. Topics include relations, graphs, analysis of algorithms, and computability.
Applied Statistics A balanced approach emphasizing both theory and applications will be taken. Topics include descriptive statistics, exploratory data analysis, probability and probability models, discrete and continuous random variables, confidence intervals, hypothesis testing, and control charts. Students will be required to collect data, use a current statistical software package to analyze the data, and make inferences based upon the data analysis as part of an individual and/ or group project.
Computer Architecture and Networks Laboratory Laboratory exercises repairing and networking computers.
Advanced Data Structures and Algorithm Design Concepts, implementation, and application of trees, hashing, graphs, and other advanced data structures will be studied.
Database Design and Implementation This course focuses on the design and implementation of relational database systems. Fundamental principles of databases such as relational model, conceptual design and normalization are covered. Students will also gain experience in database and query implementation using a DBMS and SQL.
Experiencing Art This course is designed to provide a background in art and the related processes so that a student may develop powers of observation and thereby respond to a work of art.
Business and Professional Speaking An introduction to a variety of communication skills to help achieve effectiveness on the job including skill sets such as verbal and listening skills, oral presentation techniques, small group problem solving/leadership, interviewing, and organizational communication.
Operating Systems This course explores the fundamental concepts upon which modern operating systems are based. Topics include CPU, memory, file and device management, concurrent processes, protection mechanisms, and distributed systems.
Personal Software Engineering Formal methods for software specification. Program analysis, verification, and testing. Principles of software design. Object-oriented program implementation. Personal software process and product measurements. Program documentation. Software tools.
Data Communications and Networking Lab Data Communications and Networking Lab
Data Communications and Networks Basic elements and functional aspects of the hardware and software required to establish and control data communications in a stand-alone or network environment. Topics include communication protocols, media, network topologies, and system support software.
American Studies An exploration of American culture through study of significant ideas, social issues and literary texts.
Linear Algebra I Matrices and matrix algebra, systems of linear equations, determinants, eigenvalues, eigenvectors, general vector spaces, linear transformations.
Implications of Technology on Society This course explores ethical issues faced by members of a complex technological society and by professionals in a technology-related field. Topics covered include professional ethics, ethical decision making, privacy issues, intellectual property, and technology issues relating to software development, productivity, and computer crime.
Systems Analysis and Design I The application of concepts, tools, procedures, and techniques involved in the development of information systems. Emphasis is placed on the systems approach to problem solving, user involvement, the management of quality, project control, and teamwork.
Organization of Programming Languages This course emphasizes the comparative structures and capabilities of several programming languages. Major emphasis will be placed on language constructs and the run-time behavior of programs.
Systems Analysis and Design II Students will research, analyze, design, implement, test and document a complete system.
Compiler Design This course covers syntax translation, grammars and parsing, symbol tables, data representation, translating control structures, translating procedures and functions, processing expressions and data structures, and multipass translation. Students will design a computer language and implement the compiler.
Information Systems Resource Management A study of the principles and concepts involved in the management of organizational maintenance of all information resources, including hardware, software, and personnel. Includes coverage of departmental functions within computer/information services, as well as legal, ethical, and professional issues, quality management, and the strategic impact of information systems.
Orientation to Mathematics This course is designed to provide information and enhance skills that will enable students to make a successful transition to college. The course will expose students to college resources, requirements, and promote the development of practical skills for college success
Introduction to Problem Solving and Software Development Introduces a broad overview of problem solving, computing topics, and fundamental concepts and methodologies of software development designed to provide students with awareness of the computing field's many aspects. Topics include fundamentals of computer architecture, operating systems, applications, problem-solving. It emphasizes the main phases of the software development lifecycle, such as requirements, design, implementation, testing, project planning. Also, it stresses the difference between the software product and process. Introduces social and ethical issues related to computing and explores the local and global impact of computing on individuals, organizations and society.
Introduction to Computer Science I Introductions to the basic concepts of program development in a modern object-oriented language; problem-solving methods and algorithm development; basic primitive and object data types; language syntax; style and documentation; and coding and testing of programs
Introduction to Computer Science I lab Introductions to the basic concepts of programming and program development in a modern Software Development Environment with debugger and source code control.
CS-176Introduction to Computer Science II Introduction to polymorphism, inheritance, and interfaces.
CS-176LIntroduction to Computer Science II Lab Introduction to advanced concepts of programming and program development in a modern Software Development Environment with debugger and source code control.
CS-201Introduction to Computer Programming for Data Science This course introduces the most important data structures available in R and their practical application. Methodologies to import data from external sources (files, databases, on-line resources), to manipulate and transform data, and to save\export data to data repositories are described. The course also describes how to compute descriptive statistics and how to build chart for effective data visualization tasks. The students will become familiar in using some R data manipulation and visualization libraries.
CS-205Data Structures and Algorithms Introduction to the design, implementation, and use of fundamental data structures (lists, stacks, queues, trees); extensions of these structures and associated algorithms; informal complexity analysis.
CS-205LData Structures and Algorithms Lab Introductions to the basic concepts of programming and program development in a modern Software Development Environment with debugger and source code control.
CS-286Computer Architecture I Number representations and operations. Processor data path. Pipelining. Memory hierarchy. Input/Output. Assembly language programming.
CS-305Advanced Computing Introduction to fundamental concepts of computer science theory and methods of parallel and distributed programming, The course covers automata theory (including finite-state machines and Turing machines, algorithm complexity (including the distinction between P and NP problems), BNF specification of programming languages, methods of parallel programming, methods of distributed programming, measuring the speedup obtained by parallelization, and methods of addressing NP completeness through approximation.
CS-310Advanced Object-Oriented Programming and Design Use of classes, inheritance, polymorphism, and libraries. Topics will include flexible system design for such requirements as globalization. This is a writing-intensive course.
CS-325Software Engineering Concepts Overview of software engineering concepts, analysis/design techniques, Unified Modeling Language (UML), software documentation, and group development of software.
CS-414Computer Networks An introductory-level course on the hierarchy of networking software and hardware. Emphasis on the; description of protocols in the Internet, specifically, client-server Application Layer Protocols such as HTTP, SMTP, DNS, DHCP; Transport Layer Protocols such as UDP/TCP, Network Layer Protocols such as IP, ICMP, as well as Network Layer Routing and Forwarding techniques, such as RIP and OSPF for IPv4 and Tunneling for IPv6.
CS-432Database Systems Overview of database system concepts; data modeling; ER and UML diagrams; relational database schema definition; database design; query languages; introduction to NoSQL and comparison between relational and non-relational databases; hand-on experience of SQL, Oracle, and NoSQL.
CS-438Operating Systems Analysis Management of memory, processes, files, and devices. OS design principles and performance measures. Multiprogramming, multiprocessing, concur-ency, deadlock, virtual machines. Competitive and cooperating processes. Programs will be written in C or in Java.
CS-450Cyber Security Cover fundamental theory and practice of cyber security. Review cryptographic tools used to provide security, such as shared key encryption; public key encryption, key exchange, authentication, digital signature, and intrusion detection. Learn implementation of secure mechanisms in object-oriented programming languages.
CS-492AComputer Science Senior Project A Affords the student an opportunity to integrate topics and techniques from previous coursework in a capstone project. The project will combine investigation into computer science literature and actual implementation, either in an area of current research or an application area of interest to industry. Implementation might involve collaboration with other students.
CS-492BComputer Science Senior Project B Affords the student an opportunity to integrate topics and techniques from previous coursework in a capstone project. The project will combine investigation into computer science literature and actual implementation, either in an area of current research or an application area of interest to industry. Implementation might involve collaboration with other students.
Calculus with Analytic Geometry I4 Functions, limits, continuity, and the differential and integral calculus of algebraic, trigonometric, and exponential functions.
MA-126Calculus with Analytic Geometry II4 Functions, limits, continuity, and the differential and integral calculus of algebraic, trigonometric, exponential functions.
MA-130Applied Discrete Mathematics3 Introduction to reasoning, proof, and exposition in mathematics. Topics include: Boolean logic, set theory, counting techniques, functions, mathematical induction, permutations, and the proofs of various elementary theorems.
MA-220Probability and Statistics I The course is built around the process of performing a statistical analysis; posing the question, collecting the data, describing the data, analyzing and modeling the data, and drawing inferences from the data regarding the original question. Specific topics covered include sampling, descriptive analysis of data, probability, random variables, discrete and continuous distributions, expectation, confidence intervals, one sample hypothesis testing, chi-square analyses, correlation and regression
General Chemistry I Principles and theories of chemical problem solving, stoichiometry and chemical reactions, states of matter, periodic properties of the elements, atomic and molecular structure, introductory quantum mechanics, thermochemistry, and the properties of gases are covered.
General Chemistry II Properties of liquids and solutions, chemical kinetics and equilibrium, thermodynamics, electrochemistry and nuclear chemistry.
General Physics with Calculus I Topics covered include: one- and two-dimensional motion, Newton's laws and their applications, energy, momentum and impulse, rotational motion, gravitation, and thermodynamics.
General Physics with Calculus II Topics covered include: sound and wave mechanics, electrostatics, circuits, magnetic forces and fields, Faraday's Law, reflection and refraction, and optics.
Introduction to Biodiversity and Evolution An introductory course for biology majors. Focus is on evolution, phylogeny, taxonomy, origin and diversity of life, physiology of plant and animal systems, and ecological principles.
Introduction to Cell and Molecular Biology Includes an introduction to cell structure and function, biochemistry and metabolism, bioenergetics, genetics and cell division, and molecular biology.
Morality and Community Problems involved in making moral decisions in complex situations. Focuses on lying and deceit, deleterious effects on the life of the community, and also on clarifying codes of ethical behavior.
Ethics and Professionalism in Science and Engineering Provides a broad view of ethics and professionalism in the context of Science and Engineering. Teaches valuable practical skills, as well as the basic analytic tools required to make the ethical decisions confronted by professionals in any field. Describes the special role of professionals in society and uses the key perspectives of engineering and philosophy to explore their responsibilities. Additional perspectives, e.g., organizational psychology and law, will be incorporated as appropriate.
The Helping Professions in Film and Media Provides students an opportunity to look at ethical and social issues from a multidisciplinary perspective. Looks at the helping professions (for example: teachers, counselors, and medical professions), how the codes of ethics for these professions are similar but different, and how these professions have been villainized and romanticized in film.
Modern Physics Topics from physics of the twentieth century, including special relativity, the origins of quantum theory, quantum mechanics, atomic structure, nuclear physics, and elementary particles.
Computer Science Principles  Computer Science Principles introduces students to the central ideas of computer science vital for success in today’s world.  Students are invited to develop the computational thinking skills that apply across disciplines, as we explore computing from multiple perspectives, including: cognitive, economic, ethical, legal, mathematical, philosophical, social, and technical.  The course integrates computational thinking practices with big ideas in computing to address: collaborative teamwork, communication, creativity, critical thinking, innovation, problem solving, and programming.
Computer Science 1  This is the first course in the computer science core sequence. Students learn a modern programming language and the basic skills needed to analyze problems and construct programs for their solutions. The emphasis of the course is on the techniques of algorithm development, correctness, and programming style. Students are also introduced to the fundamentals of software engineering and the software-development life cycle.
Computer Organization 1  In this course, students will study the internal organization, characteristics, performance and interactions of a computer system’s functional components. Binary codes and binary arithmetic, digital logic, central processor organization, instruction set architecture, input/output fundamentals, and memory architecture are covered.
Computer Science 2  This course, a continuation of CS 1050, further emphasizes the concepts of the software development cycle and introduces the concept of an abstract data type (ADT). The topics covered include linked-lists, trees, stacks, queues, classes, recursion, and a variety of data representation methods. Further topics in software engineering and programming style as well as algorithms for sorting and searching are included.
Computer Organization 2  The course presents the functional organization of computers, multicore and multithreaded processors, high-performance storage, multiprocessor and multicomputer parallel architectures, and error detecting/correcting codes. Students learn assembly language programming and create software using a contemporary development environment.
Principles of Programming Languages  This course traces the evolution of programming languages and identifies and analyzes the contributions made by several significant languages and their successors. Specific issues of programming language implementation such as creation of activation records for block structured languages and static and dynamic scoping as methods for defining program object visibility are studied in depth. All four of the modern programming language paradigms (procedural, functional, object-oriented, and logical) are studied.
Introduction to the Theory of Computation  This course explores language theory and computability. Language theory includes: regular expressions, regular languages, and finite automata (deterministic and nondeterministic); context-free languages and pushdown automata; and language grammars. Computability includes: Tuning machines and their computing power; unsolvable problems; and intractable problems (NP-Completeness).
Software Development Methods and Tools  This course introduces the basics of large-scale software development. As software size increases, so does the need to use appropriate tools and development techniques. The phases of traditional software development and several current software development lifecycles are introduced. The use of object-oriented techniques for large projects is covered. Creating appropriate and sufficient tests for test-driven and behavior-driven development is discussed. Students learn how to analyze their programs to detect errors and increase performance.  The various types of automation used in creating a product are introduced.  Students learn about group dynamics and work on a significant project in groups.
Operating Systems  This course provides an introduction to modern computer operating systems, their use, design, development, and implementation. Topics covered include: operating system modes, structuring methods, process and thread scheduling and dispatch, concurrency, inter-process communication, memory management, file system organization (in both stand-alone and networked environments), and system security.  Students are required to write programs that implement some operating system functions.
Algorithms and Algorithm Analysis The emphasis of this course is on the design, analysis, and evaluation of efficient algorithms for a wide variety of computing problems.
Calculus I This is a first course in calculus for science and engineering. The topics covered include derivatives of polynomials, trigonometric, exponential and logarithmic functions, applications of the derivative, the definite integral, and the fundamental theorem of calculus.
Computational Matrix Algebra 1 This course is an introduction to computational matrix algebra. The computations will be done by hand and by using an appropriate software package. The course will include the following topics: matrix operations, determinants, solutions of linear systems of equations, and eigenvalues and eigenvectors.
Calculus II   The topics covered include techniques of integration, applications of the integral and infinite series, including Taylor’s series.
Discrete Mathematics for Computer Science  This course provides a foundation in mathematical proofs and abstract mathematics in the context of discrete mathematics. Mathematical topics in the course are chosen for their relevance to computer science, and include combinatorics, set theory, graph theory, and recurrence relations.
Probability and Statistics This is a course in the application and theory of the principles of probability and statistics in the sciences and engineering. It includes descriptive statistics, linear regression, probability, random variables and their distributions, estimation, and tests of hypotheses.
General Biology I  This introductory course serves as the foundation for all other biology courses. Emphasis is placed on cellular and molecular biology, biochemical pathways, and genetics.
General Biology Laboratory I  This course introduces biology laboratory techniques, specifically exploring the scientific method.
Software Engineering Practices This course continues the software engineering emphasis of CS 4250, Software Engineering Principles. Students work in teams and apply software engineering principles and best practices to the development of real-world projects for which the quality of the software products is significant. Some projects have been solicited from external constituents (industry, non-profit organizations, etc.) with progress evaluated in conjunction with constituent representatives.
Public Speaking This course integrates both the theory and practical skills of topic research, composition, delivery, and criticism of public speaking. Skill development includes effective public presentation strategies and audience analysis. Students develop critical listening skills by evaluating their own public-speaking style, as well as the effectiveness of their peers and professional speakers.
Introduction to Technical Writing This course provides students with the skills to analyze and produce clear and effective technical and scientific documents and materials.  Students determine the style, purpose, content, and format for numerous industry-specific reports and technical support documents.  Students analyze and produce accessible materials for expert, technical, lay, and intercultural audiences.  Students also develop, incorporate, and cite visual elements, including images, tables, and the representation of numeric data, to support the message delivered towards a specific audience.
Computers, Ethics, and Society  The course discusses various ethical frameworks in which to consider issues that computers raise with regard to concepts of personhood, privacy, property. Additionally, it considers the wider social, legal, and political implications of computers as they pertain to the nature of work, professionalism, and the determination of risk and liability.
Software Product Engineering This course surveys fundamental topics necessary for successful software product engineering, including usability engineering, software configuration management (SCM), and an overview of legal issues for software engineers.
Best Practices in Software Development This course exposes the student to current best practices and emerging methodologies in software engineering and software product development. Topics are chosen to reflect the current state of the care and practice. (A typical set of such topics includes: software architecture as a discipline, design patterns, eXtreme Programming, recent technology in security, and aspect-oriented programming.)
PHYSICS I Kinematics, Newton's laws of motion, gravitation, Coulomb's law, Lorentz force law, strong and weak nuclear forces, conservation of energy and momentum, relevant laboratory experiments.
CALCULUS I Calculus and analytic geometry in the plane. Algebraic and transcendental functions. Limits and continuity. Differentiation, geometric and physical interpretations of the derivative, Newtons method. Introduction to integration and the Fundamental Theorem of Calculus.
INTRODUCTION TO SOFTWARE DEVELOPMENT An introduction to procedural and object-oriented programming with an emphasis on problem solving. Problems may include visualizing scientific or commercial data, interfacing with external hardware such as robots, or solving numeric problems from a variety of engineering disciplines. Procedural programming concepts covered include data types, variables, control structures, arrays, and data I/O. Object-oriented programming concepts covered include object creation and use, object interaction, and the design of simple classes. Software engineering concepts covered include testing, incremental development, understanding requirements, and teamwork.
RHETORIC & COMPOSITION Emphasizes rhetorical analysis oftexts and images,research methods, and theconventions of academic writing, including argumentation.
ART AND MATHEMATICS Explores the interplay between art and math with emphasis on hands-on projects. Applies students' existing mathematical knowledge to reinforce new artistic experiences. Increases students' appreciation for both disciplines.
OBJECT-ORIENTED SOFTWARE DEVELOPMENT Object-oriented programming concepts, including the use of inheritance, interfaces, polymorphism, abstract data types, and encapsulation to enable software reuse and assist in software maintenance. Recursion, GUIs and event handing. Use of common object-based data structures, including stacks, queues, lists, trees, sets, maps, and hash tables. Space/time efficiency analysis. Testing. Introduction to UML.
CALCULUS II Techniques of integration, numerical integration, applications of integration. LHopitals rule and improper integrals. Separable first order differential equations, applications of separable first order differential equations. Series of constants, power series, Taylor polynomials, Taylor and McLaurin series.
PHYSICS II Torque and angular momentum, oscillations, one-dimensional waves, electric fields and potentials, electric current and resistance, DC circuits, capacitance, relevant laboratory experiments.
Science I Science I
CALCULUS III Vectors and parametric equations in three dimensions. Functions of several variables, partial derivatives, maxima and minima of functions of several variables, multiple integrals, and other coordinate systems. Applications of partial derivatives and multiple integrals.
INTRODUCTION TO COMPUTER SYSTEMS Provides students with an understanding of system level issues and their impact on the design and use of computer systems. Examination of both hardware and software layers. Basic computation structures and digital logic. Representation of instructions, integers, floating point numbers and other data types. System requirements, such as resource management, security, communication and synchronization, and their hardware and/or software implementation. Exploration of multiprocessor and distributed systems. Course topics will be explored using a variety of hands-on assignments and projects.
MATHEMATICAL ECONOMICS Illustrates the use of mathematics in economic analysis. Includes discussion of mathematical programming, decision theory, the applications of differential and integral calculus, differential and difference equations.
GENERAL CHEMISTRY I Topics include stoichiometry, nomenclature, phases, and writing balanced chemical equations. Quantum theory is introduced in relation to chemical applications. Atomic structure is introduced. Bonding principles and molecular structure are discussed in terms of Lewis Dot Structures, Valence Bond Theory, VSEPR Theory, Hybridization, and Molecular Orbital Theory.
MATRIX ALGEBRA & SYSTEMS OF DIFFERENTIAL EQUATIONS Basic matrix algebra with emphasis on understanding systems of linear equations from algebraic and geometric viewpoints, and eigenvalues and eigenvectors. Solution of systems of first order linear differential equations by eigensystems and investigation of their solution structure determined by eigensystems. Phase portrait analysis and classification of the nature of the stability of critical points for linear and nonlinear systems. Fourier series. Introduction to complex arithmetic, as needed. Applications to problems in science and engineering.
DISCRETE & COMBINATORIAL ALGEBRA I An introduction to enumeration and discrete structures. Permutations, combinations and the pigeonhole principle. Elementary mathematical logic and proof techniques, including mathematical induction. Properties of the integers. Set theory. Introduction to functions.
COMPUTER ARCHITECTURE I Computer instruction set architecture and implementation. Specific topics include historical perspectives, performance evaluation, computer organization, instruction formats, addressing modes, computer arithmetic, single-cycle and multi-cycle data paths, and processor control. Assembly language programming is used as a means of exploring instruction set architectures. The final project involves the complete design and implementation of a miniscule instruction set processor.
TECHNICAL & PROFESSIONAL COMMUNICATION Provides students with instruction and practice in analyzing contexts, audiences, and genres; crafting documents to meet the demands and constraints of professional situations; integrating all stages of the writing process; and collaborating effectively within and across teams.
OPERATING SYSTEMS Students learn fundamental concepts of modern operating systems by studying how and why operating systems have evolved. Topics include CPU scheduling, process synchronization, memory management, file systems, I/O systems, privacy and security, and performance evaluation. Students implement parts of an operating system as a means of exploring the details of some of these topics.
DATA STRUCTURES AND ALGORITHM ANALYSIS This course reinforces and extends students ability to independently design, develop, and debug object-oriented software that uses correct, clear, and efficient algorithms and data structures. Students study and implement classical data structures such as list, stack, queue, tree, priority queue, hash table, graph, set, and dictionary. Formal efficiency analysis is used to evaluate the complexity of algorithms for these data structures. Students gain proficiency in writing recursive methods. Students design and implement software individually, in small groups, and in a challenging multi-week team project.
DISCRETE & COMBINATORIAL ALGEBRA II A continuation of MA 275. Relations. An introduction to finite state machines. More advanced enumeration techniques including recurrence relations, generating functions and the principle of inclusion and exclusion.
COMBINATORICS A first course in combinatorics. Basic counting principles, permutations, combinations. Combinatorial proof. The pigeonhole principle. The principle of inclusion/exclusion. Generating functions. Recurrence relations. Additional topics in combinatorics, which may include permutation groups and Burnside's Lemma, Polya enumeration, multivariate generating functions, combinatorial designs, Ramsey theory, order relations, or other topics at the discretion of the instructor.
DATABASE SYSTEMS Relational database systems, with emphasis on entity relationship diagrams for data modeling. Properties and roles of transactions. SQL for data definition and data manipulation. Use of contemporary API's for access to the database. Enterprise examples provided from several application domains. The influence of design on the use of indexes, views, sequences, joins, and triggers. Physical level data structures: B+ trees and RAID. Survey of object databases.
SOFTWARE QUALITY ASSURANCE Theory and practice of determining whether a product conforms to its specification and intended use. Topics include software quality assurance methods, test plans and strategies, unit level and system level testing, software reliability, peer review methods, and configuration control responsibilities in quality assurance.
ARTIFICIAL INTELLIGENCE Students investigate how to model and implement intelligent behavior using computers. Topics are chosen from how machines can: solve problems; reason and use knowledge; learn from experience; and perceive and act. Students explore these topics by implementing many of the ideas in software. Readings are drawn both from a textbook and from technical papers in recent conferences and journals.
COMPUTER VISION An introduction to 3D computer vision techniques. Both theory and practical applications will be covered. Major topics include image features, camera calibration, stereopsis, motion, shape from x, and recognition.
IMAGE RECOGNITION Introduces statistical pattern recognition of visual data; low-level visual feature extraction (color, shape, edges); clustering and classification techniques. Applies knowledge to various application domains through exercises, large programming projects in Matlab, and an independent research project. Familiarity with probability distributions will be helpful, but not required.
CRYPTOGRAPHY Introduction to basic ideas of modern cryptography with emphasis on mathematical background and practical implementation. Topics include: the history of cryptography and cryptanalysis, public and private key cryptography, digital signatures, and limitations of modern cryptography. Touches upon some of the societal issues of cryptography
INTRODUCTION TO PROBABILITY WITH APPLICATIONS TO STATISTICS Introduction to probability theory; axioms of probability, sample spaces, and probability laws (including conditional probabilities). Univariate random variables (discrete and continuous) and their expectations including these distributions: binomial, Poisson, geometric, uniform, exponential, and normal. Introduction to moment generating functions. Introduction to jointly distributed random variables. Univariate and joint transformations of random variables. The distribution of linear combinations of random variables and an introduction to the Central Limit Theorem. Applications of probability to statistics.
SOFTWARE REQUIREMENTS ENGINEERING Basic concepts and principles of software requirements engineering, its tools and techniques, and methods for modeling software systems. Topics include requirements elicitation, prototyping, functional and non-functional requirements, object-oriented techniques, and requirements tracking.
SOFTWARE PROJECT MANAGEMENT Major issues and techniques of project management. Project evaluation and selection, scope management, team building, stakeholder management, risk assessment, scheduling, quality, rework, negotiation, and conflict management. Professional issues including career planning, lifelong learning, software engineering ethics, and the licensing and certification of software professionals.
PROGRAMMING LANGUAGE CONCEPTS Syntax and semantics of programming languages. Grammars, parsing, data types, control flow, parameter passing, run-time storage management, binding times, functional programming and procedural abstraction, syntactic extensions, continuations, language design and evaluation. Students will explore several language features by writing an interpreter that implements them.
SOFTWARE DESIGN Introduction to the architecture and design of complete software systems, building on components and patterns. Topics include architectural principles and alternatives, design documentation, and relationships between levels of abstraction.
SOFTWARE CONSTRUCTION AND EVOLUTION Issues, methods and techniques associated with constructing software. Topics include detailed design methods and notations, implementation tools, coding standards and styles, peer review techniques, and maintenance issues.
FORMAL METHODS IN SPECIFICATION AND DESIGN Introduction to the use of mathematical models of software systems for their specification and validation. Topics include finite state machine models, models of concurrent systems, verification of models, and limitations of these techniques.
Senior Research I Senior Research I
SOFTWARE ARCHITECTURE This is a second course in the architecture and design of complete software systems, building on components and patterns. Topics include architectural principles and alternatives, design documentation, relationships between levels of abstraction, theory and practice of human interface design, creating systems which can evolve, choosing software sources and strategies, prototyping and documenting designs, and employing patterns for reuse. How to design systems which a team of developers can implement, and which will be successful in the real world.
Senior Research II Senior Research II
Senior Research III Senior Research III
THEORY OF COMPUTATION Students study mathematical models by which to answer three questions: What is a computer? What limits exist on what problems computers can solve? What does it mean for a problem to be hard? Topics include models of computation (including Turing machines), undecidability (including the Halting Problem) and computational complexity (including NP-completeness)
CRYPTOGRAPHY Introduction to basic ideas of modern cryptography with emphasis on mathematical background and practical implementation. Topics include: the history of cryptography and cryptanalysis, public and private key cryptography, digital signatures, and limitations of modern cryptography. Touches upon some of the societal issues of cryptography.
COMPUTER SECURITY This course introduces ethical, theoretical, and practical issues of information security in computing systems. Implications of relevant professional codes of ethics are a recurring theme of the course. Foundational topics include access control matrices and standard system models, as well as policies for security, confidentiality, and integrity. Implementation issues include key management, cipher techniques, authentication, principles of secure design, representation of identity, access control mechanisms, information flow, life cycle issues, and formal evaluation and certification techniques. Additional topics include malicious logic, vulnerability analysis, and auditing. Computer network attack techniques are discussed and explored in a closed environment to motivate and inform discussion and exploration of computer network defense techniques.
TOPICS IN ARTIFICIAL INTELLIGENCE TOPICS IN ARTIFICIAL INTELLIGENCE
COMPILER CONSTRUCTION Theory and practice of programming language translation. Lexical analysis, syntax analysis, parser generators, abstract syntax, symbol tables, semantic analysis, intermediate languages, code generation, code optimization, run-time storage management, error handling. Students will construct a complete compiler for a small language.
﻿Principles in System Design Library.  Principles in System Design Library.
Introduction to Optimization.   A broad introduction to optimization. Unconstrained and constrained optimization. Equality and inequality constraints. Linear and integer programming. Stochastic dynamic programming.
Computational Photography and Vision.   Introduces the problems of computer vision through the application of computational photography. Specific topics include photo-editing (image warping, compositing, hole filling), panoramic image stitching, and face detection for digital photographs.
Computational Systems Biology.   Computational inference and modeling of gene regulation networks, signal transduction pathways, and the effects of regulatory networks in cellular processes, development, and disease. Introduction of required mathematical, computational, and data handling tools.
Computational Linear Algebra.  Matrices and linear transformations, systems of linear equations, determinants, linear vector spaces, eigenvalues and eigenvectors, orthogonal matrices, diagonalization, and least squares. Topics will be taught primarily from an algorithmic perspective, including computational solutions, applications, and numerical error analysis.
Boolean Logic and Discrete Structures.   Relations and their properties; Boolean algebras, formal languages; finite automata.
Python Programming and Libraries (Accelerated). Introduces Python syntax and semantics for fundamental programming concepts.  Constructing programs for varied problems and environments. Using library modules for applications such as graphics, sound, GUI, database, Web, and network programming. Accelerated course for students with previous programming background.
Principles of Data Management.  Covers fundamental principles underlying data management systems. Content includes key techniques including storage management, buffer management, record-oriented file system, access methods, query optimization, and query processing.
Advanced Computer Networks.  Fundamental principles in computer networks are applied to obtain practical experience and skills necessary for designing and implementing computer networks, protocols, and network applications. Various network design techniques, simulation techniques, and UNIX network programming are covered.
Project In Algorithms And Data Structures.  Design, implementation, execution, and analysis of algorithms for problems such as sorting, searching, data compression, and data encryption. Time-space-structure trade-offs.
Single-Variable Calculus. Definite integrals; the fundamental theorem of calculus. Applications of integration including finding areas and volumes. Techniques of integration. Infinite sequences and series.
Programming with Software Libraries.   Construction of programs for problems and computing environments more varied than in I&C SCI 31. Using library modules for applications such as graphics, sound, GUI, database, Web, and network programming. Language features beyond those in I&C SCI 31 are introduced as needed.
Project in User Interaction Software.   Students complete an end-to-end user interface programming project based on an iterative design paradigm. Topics may include requirements brainstorming, paper prototyping, iterative development, cognitive walk-through, quantitative evaluation, and acceptance testing. Materials fee.
Human Computer Interaction.  Basic principles of human-computer interaction (HCI). Introduces students to user interface design techniques, design guidelines, and usability testing. Students gain the ability to design and evaluate user interfaces and become familiar with some of the outstanding research problems in HCI.
Embedded Software Laboratory. Laboratory section to accompany COMPSCI 145.
Software Testing, Analysis, and Quality Assurance.  Preparation for developing high-quality software through successful veriﬁcation and validation techniques. Fundamental principles of software testing, implementing software testing practices, ensuring the thoroughness of testing to gain conﬁdence in the correctness of the software.
Project in Artificial Intelligence.   Construction of a working artificial intelligence system. Evaluation of capabilities of the system including impact of knowledge representation.
Information Retrieval.   An introduction to information retrieval including indexing, retrieval, classifying, and clustering text and multimedia documents.
Introduction to Probability and Statistics for Computer Science. Introduction to the basic concepts of probability and statistics with discussion of applications to computer science.
Introduction to Programming.  Introduction to fundamental concepts and techniques for writing software in a high-level programming language. Covers the syntax and semantics of data types, expressions, exceptions, control structures, input/output, methods, classes, and pragmatics of programming.
Projects in Advanced 3D Computer Graphics.   Projects in advanced 3D graphics such as illumination, geometric modeling, visualization, and animation. Topics include physically based and global illumination, solid modeling, curved surfaces, multiresolution modeling, image-based rendering, basic concepts of animation, and scientific visualization.
Design and Analysis of Algorithms. Techniques for efficient algorithm design, including divide-and-conquer and dynamic programming, and time/space analysis. Fast algorithms for problems applicable to networks, computer games, and scientific computing, such as sorting, shortest paths, minimum spanning trees, network flow, and pattern matching.
Introduction to Data Management.  Introduction to the design of databases and the use of database management systems (DBMS) for applications. Topics include entity-relationship modeling for design, relational data model, relational algebra, relational design theory, and Structured Query Language (SQL) programming.
Computer Networks.  Computer network architectures, protocols, and applications.  Internet congestion control, addressing, and routing. Local area networks. Multimedia networking.
Internet Applications Engineering.  Concepts in Internet applications engineering with emphasis on the Web. Peer-to-Peer and Interoperability. Topics include HTTP and REST, Remote Procedure/Method Calls, Web Services, data representations, content distribution networks, identity management, relevant W3C/IETF standards, and relevant new large-scale computing styles.
Parallel and Distributed Computing.  Parallel and distributed computer systems. Parallel programming models. Common parallel and distributed programming issues. Specific topics include parallel programming, performance models, coordination and synchronization, consistency and replication, transactions, fault tolerance.
Programming in C/C++ as a Second Language.  An introduction to the lexical, syntactic, semantic, and pragmatic characteristics of the C/C++ languages for experienced programmers. Emphasis on object-oriented programming, using standard libraries, and programming with manual garbage collection.
Digital Logic Design. Boolean algebra. Design/analysis of combinational and sequential systems using SSI/MSI/LSI modules. Number systems. Error detecting and correction codes. Arithmetic algorithms. Hardware/ firmware implementation of algorithms.
Internet Applications Engineering. Concepts in Internet applications engineering with emphasis on the Web. Peer-to-Peer and Interoperability. Topics include HTTP and REST, Remote Procedure/Method Calls, Web Services, data representations, content distribution networks, identity management, relevant W3C/IETF standards, and relevant new large-scale computing styles.
Digital Image Processing.  Introduction to the fundamental concepts of digital signal and image processing as applicable in areas such as multimedia, graphics, AI, data mining, databases, vision, or video games. Topics include image representation, space- and frequency-domain transformations, filters, segmentation, and compression.
Introduction to Linear Algebra. Systems of linear equations, matrix operations, determinants, eigenvalues and eigenvectors, vector spaces, subspaces, and dimension.
Computer Game Development.  Introduction to the principles of interactive 2D and 3D computer game development. Concepts in computer graphics, algorithms, software engineering, art and graphics, music and sound, story analysis, and artificial intelligence are presented and are the basis for student work.
Project in Computer Vision. Students undertake construction of a computer vision system. Topics include automatically building 3D models from photographs, searching photo collections, robot navigation, and human motion tracking.
Computer Graphics.  Introduction to the fundamental principles of 3D computer graphics including polygonal modeling, geometric transformations, visibility algorithms, illumination models, texturing, and rasterization. Use of an independently-learned 3D graphics API to implement these techniques.
Representations and Algorithms for Molecular Biology.   Introduction to computational methods in molecular biology, aimed at those interested in learning about this interdisciplinary area. Covers computational approaches to understanding and predicting the structure, function, interactions, and evolution of DNA, RNA, proteins, and related molecules and processes.
Algorithms for Probabilistic and Deterministic Graphical Models.  Graphical model techniques dealing with probabilistic and deterministic knowledge representations. Focuses on graphical models such as constraint networks, Bayesian networks, and Markov networks that have become a central paradigm for knowledge representation and reasoning in AI and general computer science.
Principles of Operating Systems. Principles and concepts of process and resource management, especially as seen in operating systems. Processes, memory management, protection, scheduling, file systems, and I/O systems are covered. Concepts illustrated in the context of several well-known systems.
Neural Networks and Deep Learning  Neural network and deep learning from multiple perspectives. Theory of parallel distributed processing systems, algorithmic approaches for learning from data in various manners, applications to difficult problems in AI from computer vision, to natural language understanding, to bioinformatics and chemoinformatics.
Single-Variable Calculus.  Introduction to derivatives, calculation of derivatives of algebraic and trigonometric functions; applications including curve sketching, related rates, and optimization. Exponential and logarithm functions.
New Students Seminar.  Introduces students to the Donald Bren School of Information and Computer Sciences. Focuses on advising students making the transition to UCI, community building, and mostly surveying the technical areas within departments in ICS, via talks by faculty on their research.
Embedded Software.  Principles of embedded computing systems: embedded systems architecture, hardware/software components, system software and interfacing, real-time operating systems, hardware/software co-development, and communication issues. Examples of embedded computing in real-world application domains. Simple programming using an embedded systems development environment.
Project in Software System Design.  Specification, design, construction, testing, and documentation of a complete software system. Special emphasis on the need for and use of teamwork, careful planning, and other techniques for working with large systems.
Programming in Java as a Second Language.   An introduction to the lexical, syntactic, semantic, and pragmatic characteristics of the Java language for experienced programmers. Emphasis on object-oriented programming, using standard libraries, and programming with automatic garbage collection.
Concepts of Programming Language II.  In-depth study of major programming paradigms: imperative, functional, declarative, object-oriented, and aspect-oriented. Understanding the role of programming languages in software development and the suitability of languages in context. Domain-specific languages. Designing new languages for better software development support.
Computational Geometry and Geometric Modeling.   Algorithms and data structures for computational geometry and geometric modeling, with applications to game and graphics programming. Topics: convex hulls, Voronoi diagrams, algorithms for triangulation, motion planning, and data structures for geometric searching and modeling of 2D and 3D objects.
Data Structure Implementation and Analysis.  Focuses on implementation and mathematical analysis of fundamental data structures and algorithms. Covers storage allocation and memory management techniques.
Critical Writing on Information Technology.  Study and practice of critical writing and oral communication as it applies to information technology. Each student writes assignments of varying lengths, totaling at least 4,000 words.
Project in Operating System Organization.   Detailed specification and design of critical components of an actual operating system including a memory manager, a process server, and a file/IO subsystem. Hardware/software tradeoffs. Emphasis on logical organization of system and communication.
Introduction to Software Engineering. Concepts, methods, and current practice of software engineering. Large-scale software production, software life cycle models, principles and techniques for each stage of development.
Intermediate Programming.  Intermediate-level language features and programming concepts for larger, more complex, higher-quality software. Functional programming, name spaces, modules, class protocols, inheritance, iterators, generators, operator overloading, reflection. Analysis of time and space efficiency.
Computer Design Laboratory.  Underlying primitives of computer instruction sets. Principles of microprogramming. Microprogramming. Microprograms written for one or more systems. Typical microprogramming applications discussed and implemented or simulated.
Computer and Network Security.  Overview of modern computer and networks security, attacks, and countermeasures. Authentication, identification, data secrecy, data integrity, authorization, access control, computer viruses, network security. Also covers secure e-commerce and applications of public key methods, digital certificates, and credentials.
Computer Systems Architecture.   Design of computer elements; ALU, control unit, and arithmetic circuits. Memory hierarchy and organization. Caches. Function unit sharing and pipelining. I/O and interrupt processing. RTL and behavioral modeling using hardware description languages. Microprocessor organization and implementation techniques.
Software Design: Applications.   Introduction to application design: designing the overall functionality of a software application. Topics include general design theory, software design theory, and software architecture. Includes practice in designing and case studies of existing designs.
Project in Databases and Web Applications.   Introduces students to advanced database technologies and Web applications. Topics include database connectivity (ODBC/JDBC), extending databases using stored procedures, database administration, Web servers, Web programming languages (Java servlets, XML, Ajax, and mobile platforms).
Concepts in Programming Languages I.   In-depth study of several contemporary programming languages stressing variety in data structures, operations, notation, and control. Examination of different programming paradigms, such as logic programming, functional programming and object-oriented programming; implementation strategies, programming environments, and programming style.
Graph  Algorithms.   Algorithms for solving fundamental problems in graph theory. Graph representations, graph traversal, network flow, connectivity, graph layout, matching problems.
Machine Learning and Data-Mining.  Introduction to principles of machine learning and data-mining applied to real-world datasets. Typical applications include spam filtering, object recognition, and credit scoring.
Modeling and World Building.  Use of 3D modeling software and related tools to design and create animated, textured models, and expansive virtual worlds incorporating objects, scenes, and venues for activity within game worlds and online environments.
Introductory Computer Organization.   Multilevel view of system hardware and software. Operation and interconnection of hardware elements. Instruction sets and addressing modes. Virtual memory and operating systems. Laboratory work using low-level programming languages.
Language Processor Construction.   Project course which provides working laboratory experience in construction and behavior of compilers and interpreters. Students build actual language processors and perform experiments which reveal their behaviors.
Formal Languages and Automata. Formal aspects of describing and recognizing languages by grammars and automata.  Parsing regular and context-free languages. Ambiguity, nondeterminism. Elements of computability; Turning machines, random access machines, undecidable problems, NP-completeness.
Requirements Analysis and Engineering. Equips students to develop techniques of software-intensive systems through successful requirements analysis techniques and requirements engineering. Students learn systematic process of developing requirements through cooperative problem analysis, representation, and validation.
Software Design: Structure and Implementation.   Introduction to implementation design: designing the internals of a software application. Topics include design aesthetics, design implementation, design recovery, design patterns, and component reuse. Includes practice in designing and case studies of existing designs.
Logic Design Laboratory.  Introduction to standard integrated circuits. Construction and debugging techniques. Design of digital systems using LSI and MSI components. Practical use of circuits in a laboratory environment, including implementation of small digital systems such as arithmetic modules, displays, and timers.
Compilers and Interpreters.  Introduction to the theory of programming language processors covering lexical analysis, syntax analysis, semantic analysis, intermediate representations, code generation, optimization, interpretation, and run-time support.
Introduction to Applied Cryptography.   An introduction to the essential aspects of applied cryptography, as it is used in practice. Topics include classical cryptography, block ciphers, stream ciphers, public-key cryptography, digital signatures, one-way hash functions, basic cryptographic protocols, and digital certificates and credentials.
Discrete Mathematics for Computer Science.   Covers essential tools from discrete mathematics used in computer science with an emphasis on the process of abstracting computational problems and analyzing them mathematically. Topics include mathematical induction, combinatorics, and recurrence relations.
User Interaction Software.  Introduction to human-computer interaction programming. Emphasis on current tools, standards, methodologies for implementing effective interaction designs. Widget toolkits, Web interface programming, geo-spatial and map interfaces, mobile phone interfaces.
Game Engine Lab.  The use of an open source game or graphics engine in the design and implementation of a computer game. Principles of game engine design. Students work on teams to design, implement, and evaluate new computer games based on an engine.
Introduction to Artificial Intelligence.  Different means of representing knowledge and uses of representations in heuristic problem solving. Representations considered include predicate logic, semantic nets, procedural representations, natural language grammars, and search trees.
Applications of Probability in Computer Science.   Application of probability to real-world problems in computer science. Typical topics include analysis of algorithms and graphs, probabilistic language models, network traffic modeling, data compression, and reliability modeling.
Principles in System Design.  Principles and practice of engineering of computer software and hardware systems. Topics include techniques for controlling complexity; strong modularity using client-server design, virtual memory, and threads; networks; coordination of parallel activities; security and encryption; and performance optimizations.
Next Generation Search Systems. Discusses concepts and techniques related to all aspects of search systems. After considering basic search technology and the state-of-art systems, rapidly developing techniques for multimedia search, local search, event-search, and video-on-demand are explored.
Calculus Functions, limits, continuity. Slope and derivative. Differentiation of algebraic and transcendental functions. Applications to motion, natural growth, graphing, extrema of a function. Differentials. L'Hopital's rule.
Calculus II Definition of definite integral, fundamental theorem of calculus, techniques of integration. Application to area, volume, arc length, average of a function, improper integral, surface of revolution.
Calculus III Sequences, series, tests for convergence, Taylor expansions. Vector algebra, vector calculus, scalar and vector fields. Partial derivatives, total differentials. Applications to maximum and minimum problems in two or more variables. Applications to physical systems.
Vector Analysis Definite integrals over plane and solid regions in various coordinate systems. Line and surface integrals. Green's theorem, Stoke's theorem, divergence theorem.
Linear Algebra Matrices and linear transformations, determinants, eigenvalues, eigenvectors, diagonalization, factorization.
Modern Linear Algebra Rigorous treatment of linear algebra; topics include vector spaces, bases and dimensions, orthogonal projections, eigenvalues and eigenvectors, similarity transformations, singular value decomposition and positive definiteness.
Differential Equations Solutions of elementary differential equations.
Classical Physics I Introduction to general principles and analytical methods used in physics for physical science and engineering majors. Classical mechanics
Classical Physics II Fluid mechanics, thermodynamics, wave phenomena, optics.
Classical Physics III Electricity and magnetism including circuits and Maxwell's equations.
Modern Physics Introduction to physics concepts developed since 1900. Special relativity, quantum mechanics, atoms, molecules, condensed matter, nuclear and particle physics
General Chemistry' Periodic table, stoichiometry, chemical equations, physical properties and kinetic theory of gases, atomic and molecular structure and chemical bonding. Laboratory experiments in stoichiometric relations, properties and collection of gases, atomic spectroscopy, and introductory quantitative analysis
Discrete Mathematics For Computer Science Propositional and first-order logic. Sets, functions, and relations. Big-O and related notations. Recursion and solutions of recurrence relations. Combinatorics. Probability on finite probability spaces. Graph theory.
Programming and Problem Solving Computers and computer programming for students with some prior experience, algorithm design, and debugging. Good programming style. Use of basic UNIX tools.
Software Development & Object-Oriented Programming in C++ Object-oriented programming in C++. Basic data structures and their use. Writing good programs of increased complexity and efficiency. Methods for debugging and verification
Computer Organization & Machine-Dependent Programming  Comparative study of different hardware architectures via programming in the assembly languages of various machines. Role of system software in producing an abstract machine
Introduction to Public Speaking Practice in the preparation and delivery of speeches based on principles and strategies of informing and persuading audiences drawn from the social sciences and humanities
Circuits I Basic electric circuit analysis techniques, including electrical quantities and elements, resistive circuits, transient and steady-state responses of RLC circuits, sinusoidal excitation and phasors, and complex frequency and network functions
Writers' Workshop Focuses on the development of writing and revision strategies, exploring ways to understand a writing task; to develop appropriate content for a writing task; to revise content to reflect competence as a communicator.
Introduction to Academic Literacies Introduction to reading and composing processes and key rhetorical concepts for academic literacies.
Major Works of the Ancient World Introduction, through class discussion and frequent written assignments, to some of the major books of western civilization such as The Odyssey, Aeneid, Bible, and Augustine's Confessions
Introduction to Native American Literature Intensive focus on analysis of Native American literary texts, with frequent writing assignments to develop critical thinking and composition skills
Probability & Statistical Modeling for Computer Science Univariate and multivariate distributions. Estimation and model building. Markov/Hidden Markov models. Applications to data mining, networks, security, software engineering and bioinformatics.
Programming Languages Syntactic definition of programming languages. Introduction to programming language features including variables, data types, data abstraction, object-orientedness, scoping, parameter disciplines, exception handling. Non-imperative programming languages. Comparative study of several high-level programming languages
Operating Systems & System Programming Basic concepts of operating systems and system programming. Processes and interprocess communication/synchronization; virtual memory, program loading and linking; file and I/O subsystems; utility programs
Computer Networks TCP/IP protocol suite, computer networking applications, client-server and peer-to-peer architectures, application-layer protocols, transport-layer protocols, transport-layer interfaces, sockets, network programming, remote procedure calls, and network management
Computer Architecture Introduction to digital design. Interfacing of devices for I/O, memory and memory management. Input/output programming, via wait loops, hardware interrupts and calls to operating system services. Hardware support for operating systems software.
Computer Architecture II Hardwired and microprogrammed CPU design. Memory hierarchies. Uniprocessor performance analysis under varying program mixes. Introduction to pipelining and multiprocessors
Software Engineering extensive programming experience recommended. Pass One open to Computer Science and Computer Science Engineering Majors only. Requirements, specification, design, implementation, testing, and verification of large software systems. Study and use of software engineering methodologies.
Ethics in an Age of Technology Foundations of ethics. Views of technology. Technology and human values. Costs and benefits of technology. Character of technological change. Social context of work in computer science and engineering.
Senior Design Project Senior Design Project
Advanced Composition Instruction in advanced principles of expository writing. Writing tasks within and beyond the University. Different writing modes, including narrative, analysis, explanation, argument, critique.
Internship in Computer Science Internship in Computer Science
Geometric Modeling Interactive graphics techniques for defining and manipulating geometrical shapes used in computer animation, car body design, aircraft design, and architectural design
Scientific Visualization Computer graphics techniques for generating images of various types of measured or computer-simulated data. Typical applications for these graphics techniques include study of air flows around car bodies, medical data, and molecular structures
Computer Graphics Current graphics hardware, elementary operations in two-and three-dimensional space, geometric transformations, camera models and interaction, graphics system design, standard graphics APIs, individual projects.
Computer Vision Computer vision is the study of enabling machines to "see" the visual world; e.g., understand images and videos. Explores several fundamental topics in the area, including feature detection, grouping and segmentation, and recognition.
Image Processing & Analysis Techniques for automated extraction of high-level information from images generated by cameras, three-dimensional surface sensors, and medical devices. Typical applications include detection of objects in various types of images and describing populations of biological specimens appearing in medical imagery
Machine Learning Introduction to machine learning. Supervised and unsupervised learning, including classification, dimensionality reduction, regression and clustering using modern machine learning methods. Applications of machine learning to other fields.
Introduction to Artificial Intelligence Design and implementation of intelligent computer systems. Knowledge representation and organization. Memory and inference. Problem solving. Natural language processing.
Database Systems Data modeling (object-relational, graph-based, spatiotemporal models). Querying semistructured data (XML). Database theory (normalization, integration, provenance). Database programming (stored procedures, embedded SQL, web programming). Advanced topics (data warehousing, parallel data processing).
Human-Computer Interaction Introduction to concepts and practice of modern human-computer interaction design
Web Programming Technical aspects of building websites, including both server-side and client-side software development
Programming on Parallel Architectures Techniques for software development using the shared-memory and message-passing paradigms, on parallel architectures and networks of workstations. Locks, barriers, and other techniques for synchronization. Introduction to parallel algorithms
Compilers Principles and techniques of lexical analysis, parsing, semantic analysis, code generation, and code optimization. Implementation of compilers.
Scientific Computation Matrix-vector approach using MATLAB for floating-point arithmetic, error analysis, data interpolation, least squares data fitting, quadrature, zeros, optimization and matrix eigenvalues and singular values. Parallel computing for matrix operations and essential matrix factorizations
Cryptography  Introduction to the theory and practice of cryptographic techniques used in computer security. Encryption (secret-key and public-key), message authentication, digital signatures, entity authentication, key distribution, and other cryptographic protocols. The social context of cryptography.

Composition I Focuses on skills required for effective writing in a variety of contexts, with emphasis on exposition, analysis, and argumentation. Also includes introductory use of a variety of research skills.
Composition II Focuses on developing writing skills beyond the levels of proficiency required by ENGL 1101. Emphasizes interpretation and evaluation and advanced research methods
College Trigonometry This course is an in-depth study of the properties of trigonometric functions and their inverses. Emphasis is placed on the unit circle approach to the study of trigonometric functions and their graphs. Topics include circular functions, special angles, solutions of triangles, trigonometric identities and equations, graphs of trigonometric functions, inverse trigonometric functions and their graphs, Law of Sines, Law of Cosines, and vectors.
Precalculus This course is an intensive study of the basic functions needed for the study of calculus. Topics include algebraic, functional, and graphical techniques for solving problems with algebraic, exponential, logarithmic, and trigonometric functions and their inverses.
Contemporary Economic Issues This course provides students with the knowledge and tools necessary to critically examine social and policy issues from an economic perspective. Fundamental economic questions as they relate to individuals, firms, and society in the modern global world are addressed. Students learn about different economic systems, how markets function, the role of government in the economy, the basis for international trade, measurement of macroeconomic performance, and the impact of globalization on living standards and economic growth.
Human Communication This course is an overview of the communication discipline that identifies and explores the various components, situations, and channels involved in the communication process. The main objective is for students to critically assess and improve their personal and professional communication skills with others.
World Literature This course is a survey of world literature that explores human experience by examining diverse aesthetic and cultural perspectives from ancient to modern times.
Early World Literature This course is a survey of important works of world literature from ancient times through the mid-seventeenth century
World Literature mid 1600s to Present This course is a survey of important works of world literature from the mid-seventeenth century to the present.
British Literature This course is a survey of important works of British literature.
Early British Literature This course is a survey of important works of British literature from the Old English period through the neoclassical age.
British Literature late 1700s to Present This course is a survey of important works of British literature from the Romantic era to the present.
American Literature This course is a survey of important works of American literature.
Early American Literature This course is a survey of American literature from the pre-colonial age to the mid-nineteenth century.
American Literature mid 1800s to Present This course is a survey of American literature from the mid-nineteenth century to the present.
African-American Literature This course is a survey of important works of African-American literature.
Art in Society This interactive course is an introduction to the role of visual art in global societies, from antiquity through the present day. It examines various media within their social, historical, and intellectual contexts; explores a variety of art-historical, art-critical, and theoretical issues; and facilitates critical and analytical thinking. It also teaches students how to analyze the basic elements of art and design and how to visit a museum.
Music in Society This course examines the role of music in society through a study of musical works within their cultural and historical contexts. Course assignments develop skills in critical analysis and global perspectives as well as an understanding of the creative process. Required attendance at live performances provides the experiential component so crucial to the understanding and enjoyment of music.
Dance in Society Through an examination of the role of arts in society, and an in-depth study of selected dance events, this interactive course provides an understanding of the creative process and develops skills in creativity and critical analysis. Heightened perceptual abilities will be developed through class experiences and field visits to a variety of arts events in dance, music, visual arts, and theater.
Theatre in Society This interactive course examines the role of theatre in society through the study of dramatic works and performance events within their cultural and historical contexts. Course assignments promote understanding of the creative process and develop skills in critical analysis, global perspectives, and collaboration. Attendance is required at live performances, including some events with paid admission.
Calculus I This course is the first in the calculus curriculum and introduces the central concepts of calculus. Topics include limits, continuity, derivatives of algebraic and transcendental functions of one variable, applications of these concepts and a brief introduction to the integral of a function.
Biological Principles I The course is an introduction to cell and molecular biology as well as molecular and population genetics. Students who successfully complete the class should be able to describe the fundamental biology of the cell, including cellular anatomy and cellular metabolic processes in both plants and animals. Students will also use molecular genetics to describe the basis for heredity and how this is expressed in populations as well as how it informs evolutionary principles.
Biological Principles II This is the second course in a two-semester sequence covering the fundamental principles of biology. Students will explore the evolution and diversity of life in this course. Students will have additional focus on organismal anatomy and physiology as well as learning basic principles of ecology.
General Chemistry I This course is the first in a two-semester sequence covering the fundamental principles and applications of chemistry for science majors. Course content includes electronic structure of atoms and molecules, bonding fundamentals, fundamentals of chemical reactions, and gas laws.
General Chemistry II This course is the second in a two-semester sequence covering the fundamental principles and applications of chemistry for science majors. Course content includes chemical kinetics, chemical thermodynamics, liquids and solids, properties of solutions, chemical equilibrium, acids and bases, electrochemistry, and qualitative analysis.
Principles of Physics I This course is an introductory calculus-based course on classical mechanics, waves, and special relativity. The student will be able to apply Newton’s laws and conservation of energy and momentum to various problems in kinematics and dynamics, use the law of universal gravitation to analyze the behavior of falling objects and objects in orbital motion, describe simple harmonic motion, oscillations, and waves, and explain the basic ideas of special relativity.
Principles of Physics II This course is an introductory calculus-based course on electromagnetism, physical optics, and quantum physics. The student will be able to apply the concepts of electric field and electric potential to problems in electrostatics and with electric currents, describe the motion of charged particles in magnetic fields and induction, explain the origin of electromagnetic waves and properties of light, determine the behavior of light waves passing through single or multiple slits, and understand elementary principles of quantum physics.
American Government This course examines the institutions and processes of American government and Georgia State government. Global comparisons are made between the governments of the U.S. and other modern nation-states.
United States History to 1877 This course explores major themes in the social, cultural, political, and economic history of the peoples of North America to 1877. Topics include the intersections of cultures in colonial America, the origin and development of the American republic, the evolution of democratic ideas and institutions, western expansion, slavery, sectional conflict, and emancipation and its aftermath.
United States History Since 1877 This course examines the major themes in the social, cultural, political, and economic history of the United States since 1877, the multicultural nature of contemporary U.S. civilization, and the nation’s role in the global arena.
Introduction to World History An overview of world history that provides an introduction to the origin and development of the world’s societies and their political, cultural, and economic traditions.
Pre-Modern World History This course is a survey of world history to early modern times. The course examines the political, economic, social, and cultural history of the world with a focus on connections and interactions.
Modern World History This course is a survey of world history from early modern times to the present. The course examines themes, events, trends, institutions, and ideas with a focus on global connections and interactions.
Foundations of Criminal Justice This course provides an overview of the American criminal justice system including law enforcement, the court system, and the correctional system. Emphasis is placed on crime in the U.S., the criminal justice process from arrest through sentencing, and the roles and responsibilities of criminal justice actors. Current topics in the criminal justice system are addressed such as the death penalty, offender treatment, and criminal justice reform among others.
Introduction to Human Geography This course is a survey of global patterns of resources, population, culture, and economic systems. Emphasis is placed upon the factors contributing to these patterns and the distinctions between the technologically advanced and less advanced regions of the world.
Introduction to General Psychology This course is an introduction to the theoretical and scientific study of behavior that emphasizes historical and current theories, methods, and research findings related to the influences of biological, cognitive, and social factors on behavior.
Introduction to Sociology This course is an overview of sociology, which emphasizes the social nature of human behavior, including an introduction to culture, social structure, socialization, deviance, stratification, family, gender, religion, demography, and complex organization.
Science, Technology, and Society This course provides students with the knowledge and tools necessary to critically examine the development and integration of science, technology, and society. The course seeks to help students better understand the world in which they live, the broader implications of their major course of study, and the complex social, ethical, and moral choices presented by modern science and technology in human relationships.
Introduction to Anthropology This course is an introduction to anthropology’s four major subfields: biological anthropology, archeology, cultural anthropology, and linguistics.
Principles of Microeconomics Analysis of price and output determination under various market structures, income distribution, resource allocation, domestic problems and international trade. This course is required for Business majors and International Affairs majors
Programming and Problem Solving I This course provides an introduction to computing with a focus on programming. Instruction centers on an overview of programming, problem-solving, and algorithm development. Particular topics include object-oriented design/programming, primitive data types, arithmetic and logical operators, selection and repetition structures, interactive user input, exception handling, using and designing basic classes, single-dimensional data structures with searching and sorting, and arrays. Programming assignments focus on techniques of good programming style including proper documentation. The student is taught to efficiently design, code, and debug problem solutions and the relationship between correct code and security.
Programming and Problem Solving II The second course in computing provides coverage of more advanced topics of object-oriented programming. This includes the use of static variables and classes, non-linear data structures, inheritance and polymorphism, file input/output, exception handling, recursion, and parameterized types. Elementary data structures (linked lists, stacks, and queues) are introduced to solve application problems. Graphical user interfaces, parallel programming, database programming, and event-driven programming are also introduced. Students will use good programming style including proper documentation.
Calculus II This course is the second in the calculus curriculum and consists of two parts. The first part is concerned with the techniques of integration and applications of the integral. The second part is concerned with infinite sequences and series.
Professional Practices and Ethics This course covers the historical, social and economic consideration of the discipline. It includes studies of professional conduct, risks, and liabilities, and intellectual property relative to the software engineering and computing professions. Software engineering/computing case studies will be used.
Discrete Mathematics An introduction to the fundamentals of discrete mathematics. Topics include sets, formal logic, methods of proof, counting relations, functions, graphs and trees, and finite state automata.
Probability and Inference This course is an introduction to probability and statistical inference. Topics include counting techniques, discrete and continuous univariate and multivariate random variables, expectation, moment generating functions, the Central Limit Theorem, estimation, and confidence intervals.
Technical Writing The course is an introduction to organization, style, and mechanics of technical writing. It includes practice in writing such typical documents as technical descriptions, instructions, proposals, and recommendation reports. Emphasis is placed on incorporating rhetorical theory into planning, organizing, and writing reports; designing visual aids; and editing.
Introduction to Software Engineering This course provides an overview of the software engineering discipline, introducing the student to the fundamental principles and processes of software engineering. This course highlights the need for an engineering approach (both personal and team) to software with understanding of the activities performed at each stage in the development cycle. In this course, students will perform requirements analysis, design, implementation and testing.
Software Architecture and Design This course covers the fundamental design principles and strategy for software architecture and design. Architectural styles, quality attributes, design notations and documents, reference architecture, domain specific architecture in architecture process and pattern-oriented design, component-oriented design, and interface design in detailed design process are discussed.
Software Testing & Quality Assurance This course will show how software quality assurance and configuration management is performed and how software process improvement is maintained in order to assure the highest possible quality. Topics include software process metrics and their use in QA, testing approaches, methods and techniques. Development of QA plans, reviews, inspections and audits will be done.
Embedded Systems Analysis and Design The analysis and design course focuses on using modern methods, techniques, and tools for specification and design of embedded systems. Topics include analytical methods such as RMA, development methods such as HOOD, and notations like UML, Petri-nets, etc. are covered. Performance evaluation based on modeling and simulation techniques is also covered
Embedded Systems Construction and Testing This course covers fundamental principles and techniques for embedded software engineering. It focuses on a component-based development approach to designing, implementing, and testing embedded programs. Topics include building standard-along and networked embedded systems, validation and verification of trustworthy embedded software, testing tools and environment, quality assurance and metrics for embedded systems, and hardware/software co-design and co-testing.
Component-Based Software Development This course covers the concepts and foundations of component-based software development (CBSD) and its related technologies. Component-oriented tools and languages, approaches for implementation of CBSD, including designing, building, assembling, and deploying reusable COTS components are discussed in depth. The current component technologies such as Microsoft .NET components, Sun JavaBeans and Enterprise JavaBeans components, and web services components will be explored.
Data Structures This course introduces data structures, specification, application, and implementation. The case studies will illustrate how data structures are used in computing applications. The emphasis of the course is on linear and some nonlinear data structures and object oriented principles. Topics include: abstract data types, stacks, queues, lists, binary search trees, priority queues, recursion, algorithm efficiency, trees, heaps, hash tables, and analysis of search and sort algorithms and their performance for implementation and manipulation. The programming language to be used in this course is any standard high-level object-oriented programming language such as C++, Java, and Ada.
Introduction to Database Systems Introduction to the database management systems, database processing, data modeling, database design, development, and implementation. Contrasts alternative modeling approaches. Includes implementation of current DBMS tools and SQL.
Computer Organization and Architecture Introduction and overview of basic computer organization. Computer arithmetic: binary, hexadecimal and decimal number conversions, binary number arithmetic and IEEE binary floating point number standard. Basic computer logic: gates, combinational circuits, sequential circuits, adders, ALU, SRAM and DRAM. Basic assembly language programming, basic Instruction Set Architecture (ISA), and the design of single cycle CPU. Hardware security will be introduced.
Operating Systems This course introduces the fundamental concepts and principles of operating systems. Topics covered include system performance, processes and threads, multiprogramming, scheduling, memory management, synchronization, deadlocks, file systems, Input/output systems. Additional topics: security and protection, network and distributed OS.
Distributed Computing A course that introduces students to the fundamental principles common to the design and implementation of programs that run on two or more interconnected computer systems. The subtopics, which are based on these principles, include: distributed operating system and network protocols for process communication, synchronization, scheduling, and exception and deadlock resolution; understanding of client-server, web-based collaborative systems; parallel computing; concurrency issues; and API’s for distributed application development. Several distributed computing environments, like MPI, PVM, and Java RMI are discussed and used in developing experimental projects in a cluster of networked computers.
Internet Programming This course introduces current technologies for modeling, designing, implementing, and developing Web applications. Topics include developing for the server and the client, programming frameworks, server administration and integration with databases. Practice will involve platforms and language such as Linux, Python, PHP, Ruby and JavaScript.
Concepts of Programming Languages This course covers the fundamental concepts on which programming languages are based and the execution models supporting them. Topics include values, variables, bindings, type systems, control structures, exceptions, concurrency, and modularity. Languages representing different paradigms are introduced.
Artificial Intelligence The primary objective of this course is to provide a introduction to the basic principles and applications of Artificial Intelligence. It covers the basic areas of artificial intelligence including problem solving, knowledge representation, reasoning, decision making, planning, perception and action, and learning – and their applications. Students will design and implement key components of intelligent agents of modern complexity and evaluate their performance. Students are expected to develop familiarity with current research problems, research methods, and the research literature in AI.
Big Data Analytics This course covers algorithms and tools that are needed to build MapReduce applications with Hadoop or Spark for processing gigabyte, terabyte, or petabyte-sized datasets on clusters of commodity hardware. A wide range of data algorithms will be discussed in this course.
Machine Learning This course covers the-state-of-the-art machine learning techniques. Focuses will be put on deep learning, kernel methods and ensemble learning. Students will learn applying advanced machine learning techniques to solve challenging problems, especially big data problems.
Intelligent Systems in Bioinformatics Biological sciences are undergoing a revolution in how they are practiced. In the last decade, a vast amount of biological data has become available, and computational methods are playing a fundamental role in transforming this data into scientific understanding. Bioinformatics involves developing and applying computational methods for managing and analyzing information about the sequence, structure and function of biological molecules and systems. This course covers a wide range of machine learning, data mining, and computational algorithms to solve various bioinformatics research problems.
Mobile Software Development This course primarily focuses on mobile sensor application development and security of smartphones and mobile telecommunication systems. The goals of the course is to provide students with real world relevant mobile sensor app development and improve their knowledge and skills on mobile application development and mobile security.
Directed Studies This course covers special topics of an advanced nature that are not in the regular course offerings. Up to three hours may be applied to the major area
Data Mining This course covers fundamental data mining concepts and techniques for discovering interesting patterns from data in various applications. Topics include data preprocessing, data warehousing and OLAP, mining frequent patterns, classification, clustering, and tend analysis.
Advanced Topics in Computer Science Advanced Topics in Computer Science
Systems Programming This course presents an introduction to systems programming in Linux/Unix. Topics include file I/O, process control and communication, threading, and network-aware systems programs.
Real-Time Systems This course covers the software-development life cycle as it applies to real-time systems. Alternatives: • Including labs that involve the use of a real-time operating system and an associated development environment, or • Modeling with UML, and object oriented simulation. Introduction to formal specification of real-time systems. A course project is required to be completed by the end of the semester.
HPC & Parallel Programming This course will introduce parallel programming techniques for shared memory and distributed memory systems. Topics include threading, OpenMP, and MPI.
Programming Massively Parallel Processors A study of practical parallel algorithms with an emphasis on implementation and performance issues on massively parallel processors. Design and implement high performance computing applications using CUDA running on Graphics Processing Unit (GPU). Topics include heterogeneous parallel programming, hardware threading models, synchronization, parallel blocking algorithms, register allocations, memory performance, and inter-thread communication.
Cloud Computing This course discusses the fundamental concepts and techniques of cloud computing. Students will develop an understanding of cloud computing architecture, Infrastructure as a Service (IaaS), Platform-as-a-Service (PaaS), Software as a Service (SaaS), Virtualization, and Application Development on Cloud.
Secure Software Development This course covers the design and implementation of secure software. Some of the topics covered are the characteristics of secure software, the role of security in the development lifecycle, designing secure software, and best security programming practices. Security for web and mobile applications will be covered.
Computer Networks This course covers computer networking and includes software application-related, protocol-related and security-related issues involved in the Internet. Topics include basic network structures, mechanisms for application-to-application communications, protocol layering, Internet addressing, unicast and multicast routing, connection establishment and termination, data flow and congestion control, and error handling. A specific protocol suite will be examined in detail. More advanced topics that build on the student’s understanding of network protocols are also introduced, such as network security, mobile networks and the future Internet.
Modeling and Simulation This course covers the modeling and simulation of the structure and behavior of real-world systems using object-oriented discrete-event simulation techniques. The course emphasizes the modeling and computer programming perspective of simulation; design and implementation of simulation models. The fundamental concepts of object-oriented simulation are introduced. Model implementation will require programming in an object-oriented simulation language such as OOSimL, or in a general purpose programming language (Java or C++). Students will also be exposed to a commercial integrated simulation software tool: Arena.
User Interface Engineering A comprehensive study of techniques in design and implementation of user interfaces engineering. Topics include the foundation of human-computer interaction and interface related to software lifecycle, building a graphic user interface engineering, interaction devices and technologies, human-computer dialogue, cognitive models, usability, the design and development process, user interface management systems (UIMS), interface style and techniques, user learning, and diversity in interaction styles. Major research and the building of a working graphic user interface are included.
Computer Graphics and Multimedia The basic principles and practices of interactive computer graphics and multimedia systems are covered in this introductory course. The design and implementation of state-of-the-art computer graphic rendering and visual multimedia systems are the main part of the course. The sub-topics of the course deal with specific input/output hardware devices and their technology, software and hardware standards, programming methods for implementing 3-dimensional graphical applications and interactive multimedia applications, and a study and evaluation of the effectiveness of graphic/multimedia communications. A large component of the class is the building of a large-scale application.
Machine Vision This course introduces concepts and techniques in machine vision. Students successfully completing this course will be able to apply a variety of image processing techniques for the design and analysis of efficient algorithms for real-world applications, such as optical character recognition, face detection and recognition, motion estimation, human tracking, and gesture recognition.

﻿
Evolution of the Human Brain  Introduction to comparative vertebrate brain anatomy, neural development, and sensory-motor functions that are relevant to the study of human brain evolution and the evolution of uniquely human mental and behavioral capacities. Emphasis is on understanding the processes of evolution that are responsible for species differences in brain structure and function. Special attention will be given to animal communication, vocalization, neurolinguistics, and theories of language evolution.
Information Technology Economics, Strategy, and Policy  Application of economic tools and principles, including game theory, industrial organization, information economics, and behavioral economics, to analyze business strategies and public policy issues surrounding information technologies and IT industries. Topics include: economics of information; economics of information goods, services, and platforms; strategic pricing; strategic complements and substitutes; competition models; network industry structure and telecommunications regulation; search and the "long tail"; network cascades and social epidemics; network formation and network structure; peer production and crowdsourcing; interdependent security and privacy. /  Introduction to Business Analytics  This course provides an introduction to several quantitative methods used to facilitate complex decision-making in business, with applications in many different industries, at different levels in the organization, and with different scopes of decisions. The power of the methods covered in this class is further enhanced by implementing them in spreadsheet software, which allows complex problems to be approached and solved in a straightforward and understandable manner.
Introduction to Embedded Systems  This course introduces students to the basics of modeling, analysis, and design of embedded, cyber-physical systems. Students learn how to integrate computation with physical processes to meet a desired specification. Topics include models of computation, control, analysis and verification, interfacing with the physical world, real-time behaviors, mapping to platforms, and distributed embedded systems. The course has a strong laboratory component, with emphasis on a semester-long sequence of projects.
Calculus  Continuation of 1A. Techniques of integration; applications of integration. Infinite sequences and series. First-order ordinary differential equations. Second-order ordinary differential equations; oscillation and damping; series solutions of ordinary differential equations.
Calculus  This sequence is intended for majors in engineering and the physical sciences. An introduction to differential and integral calculus of functions of one variable, with applications and an introduction to transcendental functions.
Economic Analysis--Macro  A study of the factors which determine national income, employment, and price levels, with attention to the effects of monetary and fiscal policy.
Special Topics in Digital Design Theories and Methods  Selected topics in digital design theories and methods. For current offerings, see departmental website.
Microfabrication Technology  Integrated circuit device fabrication and surface micromachining technology. Thermal oxidation, ion implantation, impurity diffusion, film deposition, expitaxy, lithography, etching, contacts and interconnections, and process integration issues. Device design and mask layout, relation between physical structure and electrical/mechanical performance. MOS transistors and poly-Si surface microstructures will be fabricated in the laboratory and evaluated.
Game Theory in the Social Sciences  A non-technical introduction to game theory. Basic principle, and models of interaction among players, with a strong emphasis on applications to political science, economics, and other social sciences.
The Structure and Interpretation of Computer Programs  An introduction to programming and computer science focused on abstraction techniques as means to manage program complexity. Techniques include procedural abstraction; control abstraction using recursion, higher-order functions, generators, and streams; data abstraction using interfaces, objects, classes, and generic operators; and language abstraction using interpreters and macros. The course exposes students to programming paradigms, including functional, object-oriented, and declarative approaches. It includes an introduction to asymptotic analysis of algorithms. There are several significant programming projects.
Power Electronics  Power conversion circuits and techniques. Characterization and design of magnetic devices including transformers, reactors, and electromagnetic machinery. Characteristics of bipolar and MOS power semiconductor devices. Applications to motor control, switching power supplies, lighting, power systems, and other areas as appropriate.
Introduction to Microelectromechanical Systems (MEMS)  This course will teach fundamentals of micromachining and microfabrication techniques, including planar thin-film process technologies, photolithographic techniques, deposition and etching techniques, and the other technologies that are central to MEMS fabrication. It will pay special attention to teaching of fundamentals necessary for the design and analysis of devices and systems in mechanical, electrical, fluidic, and thermal energy/signal domains, and will teach basic techniques for multi-domain analysis. Fundamentals of sensing and transduction mechanisms including capacitive and piezoresistive techniques, and design and analysis of micmicromachined miniature sensors and actuators using these techniques will be covered.
Signals and Systems  Continuous and discrete-time transform analysis techniques with illustrative applications. Linear and time-invariant systems, transfer functions. Fourier series, Fourier transform, Laplace and Z-transforms. Sampling and reconstruction. Solution of differential and difference equations using transforms. Frequency response, Bode plots, stability analysis. Illustrated by analysis of communication systems and feedback control systems.
Methods for Research in Psychological Sciences  Lecture and computer lab course on advanced data analysis techniques used by researchers in psychology. The course will cover programming techniques in R and data analysis methods that include modeling, multivariate statistics, and data reduction and visualization techniques. The following topics will be covered: generalized linear model (includes logistic regression), discriminant analysis (includes multivariate ANOVA), principal component analysis, and factor analysis.
Special Topics in New Media  Special Topics in New Media
Hydrology for Planners  This course presents an overview of relevant hydrologic, hydraulic, and geomorphic processes, to provide the planner and ecologist with insight sufficient to coordinate with technical specialists in the field of hydrology. In addition, relevant regulations and policies are reviewed.
Game Theory in the Social Sciences  This course provides an introduction to game theory and its application in social science, especially political science and economics. The purposes of the course are to give students a sense of the field of game theory and how political scientists use it in making arguments about how government and politics work, to develop students' intuition about strategic situations in everyday life, and to develop students' analytical capabilities generally. Upon completion of the course, students will be able to depict social situations as simple game theoretic models, analyze those models to understand how the behaviors of the individuals involved are mutually reinforcing, and apply computer-based tools to evaluate under conditions of uncertainty.
Topical Seminars in Cognitive Psychology  Topical Seminars in Cognitive Psychology
Computational Models of Cognition  This course will provide advanced students in cognitive science and computer science with the skills to develop computational models of human cognition, giving insight into how people solve challenging computational problems, as well as how to bring computers closer to human performance. The course will explore three ways in which researchers have attempted to formalize cognition -- symbolic approaches, neural networks, and probability and statistics -- considering the strengths and weaknesses of each.
Intermediate Financial Accounting 2  This course expands students’ knowledge of the concepts, theory, and application of financial accounting. It continues the technical accounting sequence, which also includes UGBA 120AA, Intermediate Accounting 1 and UGBA 120B, Advanced Financial Accounting. Topics include an in-depth treatment of the financing elements of the balance sheet and the income statement, as well as a detailed examination of the statement of cash flows.
Feedback Control Systems  Analysis and synthesis of linear feedback control systems in transform and time domains. Control system design by root locus, frequency response, and state space methods. Applications to electro-mechanical and mechatronics systems.
Operating Systems and System Programming  Basic concepts of operating systems and system programming. Utility programs, subsystems, multiple-program systems. Processes, interprocess communication, and synchronization. Memory allocation, segmentation, paging. Loading and linking, libraries. Resource allocation, scheduling, performance evaluation. File systems, storage devices, I/O systems. Protection, security, and privacy.
Efficient Algorithms and Intractable Problems  Concept and basic techniques in the design and analysis of algorithms; models of computation; lower bounds; algorithms for optimum search trees, balanced trees and UNION-FIND algorithms; numerical and algebraic algorithms; combinatorial algorithms. Turing machines, how to count steps, deterministic and nondeterministic Turing machines, NP-completeness. Unsolvable and intractable problems.
Intermediate Logic  Major concepts, results, and techniques of modern logic. Basic set theoretic tools. Model theoretic treatment of propositional and first-order logic (completeness, compactness, Lowenheim-Skolem). Philosophical implcations of these results.
Theory and Practice of Tangible User Interfaces  This course explores the theory and practice of Tangible User Interfaces, a new approach to Human Computer Interaction that focuses on the physical interaction with computational media. The topics covered in the course include theoretical framework, design examples, enabling technologies, and evaluation of Tangible User Interfaces. Students will design and develop experimental Tangible User Interfaces using physical computing prototyping tools and write a final project report.
User Experience Research  This course addresses concepts and methods of user experience research, from understanding and identifying needs, to evaluating concepts and designs, to assessing the usability of products and solutions. We emphasize methods of collecting and interpreting qualitative data about user activities, working both individually and in teams, and translating them into design decisions. Students gain hands-on practice with observation, interview, survey, focus groups, and expert review. Team activities and group work are required during class and for most assignments. Additional topics include research in enterprise, consulting, and startup organizations, lean/agile techniques, mobile research approaches, and strategies for communicating findings.
Game Design Methods  This course offers an introduction to game design and game studies. Game studies has five core elements: the study of games as transmitters of culture, the study of play and interactivity, the study of games as symbolic systems; the study of games as artifacts; and methods for creating games. We will study these core elements through play, play tests, play analysis, and comparative studies. Our reading list includes classic game studies theory and texts which support game design methods. After weekly writing and design exercises, our coursework will culminate in the design and evaluation of an original code-based game with a tangible interface.
Laboratory in the Mechanics of Organisms  Introduction to laboratory and field study of the biomechanics of animals and plants using fundamental biomechanical techniques and equipment. Course has a series of rotations involving students in experiments demonstrating how solid and fluid mechanics can be used to discover the way in which diverse organisms move and interact with their physical environment. The laboratories emphasize sampling methodology, experimental design, and statistical interpretation of results. Latter third of course devoted to independent research projects. Written reports and class presentation of project results are required.
Modal Logic  An introduction to the logical study of modality in its many forms: reasoning about necessity, knowledge, obligation, time, counterfactuals, provability, and other modal notions. Covers core concepts and basic metatheory of propositional modal logic, including relations to first-order logic; basics of quantified modal logic; selected philosophical applications ranging from epistomology to ethics, metaphysics to mathematics.
Introduction to Electric Power Systems  Overview of recent and potential future evolution of electric power systems with focus on new and emerging technologies for power conversion and delivery, primarily at the distribution level. Topics include power electronics applications, solar and wind generation, distribution system design and operation, electric energy storage, information management and communications, demand response, and microgrids.
Introductory Microcomputer Interfacing Laboratory  Laboratory exercises constructing basic interfacing circuits and writing 20-100 line C programs for data acquisition, storage, analysis, display, and control. Use of the IBM PC with microprogrammable digital counter/timer, parallel I/O port. Circuit components include anti-aliasing filters, the S/H amplifier, A/D and D/A converters. Exercises include effects of aliasing in periodic sampling, fast Fourier transforms of basic waveforms, the use of the Hanning filter for leakage reduction, Fourier analysis of the human voice, digital filters, and control using Fourier deconvolution. Lectures cover principles explored in the lab exercises and design of microcomputer-based systems for data acquisitions, analysis and control.
Introduction to Finance  Analysis and management of the flow of funds through an enterprise. Cash management, source and application of funds, term loans, types and sources of long-term capital. Capital budgeting, cost of capital, and financial structure. Introduction to capital markets.
Project Management  The primary objective of this course is to develop the critical skills and knowledge needed to successfully pitch and lead projects, and to deliver those projects on time and within budget. The course delves into formal planning and scheduling techniques including: project definition, project selection, Work Breakdown Structure (WBS), Resource Estimation, Critical Path Method (CPM), Pert, Gantt Charts, Resource Constrained Scheduling, Project Monitoring and Project Closing.
Economic Theory--Macro  A study of theories of the determination of national income, employment, and price levels, with attention to the effects of monetary and fiscal policy.
Geographic Information Analysis  A spatial analytic approach to digital mapping and GIS. Given that recording the geolocation of scientific, business and social data is now routine, the question of what we can learn from the spatial aspect of data arises. This class looks at challenges in analyzing spatial data, particularly scale and spatial dependence. Various methods are considered such as hotspot detection, interpolation, and map overlay. The emphasis throughout is hands on and practical rather than theoretical.
Microelectronic Devices and Circuits  This course covers the fundamental circuit and device concepts needed to understand analog integrated circuits. After an overview of the basic properties of semiconductors, the p-n junction and MOS capacitors are described and the MOSFET is modeled as a large-signal device. Two port small-signal amplifiers and their realization using single stage and multistage CMOS building blocks are discussed. Sinusoidal steady-state signals are introduced and the techniques of phasor analysis are developed, including impedance and the magnitude and phase response of linear circuits. The frequency responses of single and multi-stage amplifiers are analyzed. Differential amplifiers are introduced.
Natural Language Processing  This course introduces students to natural language processing and exposes them to the variety of methods available for reasoning about text in computational systems. NLP is deeply interdisciplinary, drawing on both linguistics and computer science, and helps drive much contemporary work in text analysis (as used in computational social science, the digital humanities, and computational journalism). We will focus on major algorithms used in NLP for various applications (part-of-speech tagging, parsing, coreference resolution, machine translation) and on the linguistic phenomena those algorithms attempt to model. Students will implement algorithms and create linguistically annotated data on which those algorithms depend.
Hydrology for Planners  This course presents an overview of relevant hydrologic, hydraulic, and geomorphic processes, to provide the planner and ecologist with insight to incorporate these processes into the planning process and coordinate with specialists in the field of hydrology. Relevant government regulations and policies are also reviewed. The course is not intended to duplicate more specialized courses offered in such fields as engineering hydrology, coastal engineering, or geology, but rather to provide an integrated understanding. The course takes a process- and field-based approach to hydrology, and emphasizes interdisciplinary perspectives.
Digital Signal Processing  Discrete time signals and systems: Fourier and Z transforms, DFT, 2-dimensional versions. Digital signal processing topics: flow graphs, realizations, FFT, chirp-Z algorithms, Hilbert transform relations, quantization effects, linear prediction. Digital filter design methods: windowing, frequency sampling, S-to-Z methods, frequency-transformation methods, optimization methods, 2-dimensional filter design.
Syntax  An introduction to the study of the structural properties of sentences and the connections between sentence structure and sentence meaning.
Econometric Analysis  Introduction to problems of observation, estimation, and hypothesis testing in economics. This course covers the statistical theory for the linear regression model and its variants, with examples from empirical economics.
Public Health Microbiology  Introduction to properties of microorganisms; their relationships with humans in causing infectious diseases and in maintaining health. With 162L, satisfies most requirements for a laboratory course in microbiology. May be taken without 162L.
Fundamental Algorithms for Systems Modeling, Analysis, and Optimization  The modeling, analysis, and optimization of complex systems requires a range of algorithms and design software. This course reviews the fundamental techniques underlying the design methodology for complex systems, using integrated circuit design as example. Topics include design flows, discrete and continuous models and algorithms, and strategies for implementing algorithms efficiently and correctly in software. Laboratory assignments and a class project will expose students to state-of-the-art tools.
Great Ideas of Computer Architecture (Machine Structures)  The internal organization and operation of digital computers. Machine architecture, support for high-level languages (logic, arithmetic, instruction sequencing) and operating systems (I/O, interrupts, memory management, process switching). Elements of computer logic design. Tradeoffs involved in fundamental architectural design decisions.
Global Change Biogeochemistry  How does the chemical makeup of Earth make it suitable for life? And how does life in turn alter the chemistry of our planet? Biogeochemistry is the field of science that explores the imprint of biota (including humans) on the chemistry of the ocean, land and atmosphere. This interdisciplinary field addresses global problems, including climate change feedbacks, air quality, land use change, and marine ecosystem health. We will provide an overview of the major biogeochemical cycles, discuss the biogeochemistry of major ecosystems, and introduce the major biogeochemical questions being asked today. We also cover measurement techniques, including hands-on activities to introduce students to experimental methods and data analysis.
Music Perception and Cognition  A review of the sensory, perceptual, and cognitive foundations of listening, performing, and composing. Topics include relations among various acoustical and perceptual characterizations of sound; perceptions of pitch, time, temporal relations, timbre, stability conditions, and auditory space; auditory scene analysis and perceptual grouping mechanisms; perceptual principles for melodic, rhythmic, and harmonic organization; orchestration as spectral composition. A course research project is required.
Perception  An introduction to principal theoretical constructs and experimental procedures in visual and auditory perception. Topics will include psychophysics; perception of color, space, shape, and motion; pattern recognition and perceptual attention.
User Interface Design and Development  The design, implementation, and evaluation of user interfaces. User-centered design and task analysis. Conceptual models and interface metaphors. Usability inspection and evaluation methods. Analysis of user study data. Input methods (keyboard, pointing, touch, tangible) and input models. Visual design principles. Interface prototyping and implementation methodologies and tools. Students will develop a user interface for a specific task and target user group in teams.
Machine Learning in Education  This course covers computational approaches to the task of modeling learning and improving outcomes in Intelligent Tutoring Systems (ITS) and Massive Open Online Courses (MOOCs). We will cover theories and methodologies underpinning current approaches to knowledge discovery and data mining in education and survey the latest developments in the broad field of human learning research. The course is project based; teams will be introduced to online learning platforms and their datasets with the objective of pairing data analysis with theory or implementation. Literature review will add context and grounding to projects.
Basic Issues in Cognition  Theoretical foundations and current controversies in cognitive science will be discussed. Basic issues in cognition--including perception, imagery, memory, categorization, thinking, judgment, and development--will be considered from the perspectives of philosophy, psychology, computer science, and physiology. Particular emphasis will be placed on the nature, implications, and limitations of the computational model of mind.
Mechatronic Design Laboratory  Design project course, focusing on application of theoretical principles in electrical engineering to control of a small-scale system, such as a mobile robot. Small teams of students will design and construct a mechatronic system incorporating sensors, actuators, and intelligence.
Principles & Techniques of Data Science  In this course, students will explore the data science lifecycle, including question formulation, data collection and cleaning, exploratory data analysis and visualization, statistical inference and prediction​, and decision-making.​ This class will focus on quantitative critical thinking​ and key principles and techniques needed to carry out this cycle. These include languages for transforming, querying and analyzing data; algorithms for machine learning methods including regression, classification and clustering; principles behind creating informative data visualizations; statistical concepts of measurement error and prediction; and techniques for scalable data processing.
Introduction to Electric Power Systems  Overview of conventional electric power conversion and delivery, emphasizing a systemic understanding of the electric grid with primary focus at the transmission level, aimed toward recognizing needs and opportunities for technological innovation. Topics include aspects of a.c. system design, electric generators, components of transmission and distribution systems, power flow analysis, system planning and operation, performance measures, and limitations of legacy technologies.
Intermediate Logic  Major concepts, results, and techniques of modern logic. Turing machines, computability theory, undecidability of first-order logic, proof theory, Godel's first and second inompleteness theorms. Philosophical implications of these results.
Introduction to Computational Biology and Precision Medicine  Computational biology is an interdisciplinary field that develops and/or applies computational methods including bioinformatics to analyze large collections of biological data such as genomic data with a goal of making new predictions or discoveries. Precision medicine is an emerging approach for human disease treatment and prevention that takes into account individual variability in genes, environment, and lifestyle for each person. Computational biology and bioinformatics tools are critical for advancing precision medicine. This survey course introduces computational tools for the analysis of genomic data and approaches to understanding and advancing precision medicine.
Geographic Information Systems  This course introduces the student to the rapidly expanding field of Geographic Information Systems (GIS). It addresses both theory and application and provides the student with a dynamic analytical framework within which temporal and spatial data and information is gathered, integrated, interpreted, and manipulated. It emphasizes a conceptual appreciation of GIS and offers an opportunity to apply some of those concepts to contemporary geographical and planning issues.
Data Mining and Analytics  This course introduces students to practical fundamentals of data mining and machine learning with just enough theory to aid intuition building. The course is project-oriented, with a project beginning in class every week and to be completed outside of class by the following week, or two weeks for longer assignments. The in-class portion of the project is meant to be collaborative, with the instructor working closely with groups to understand the learning objectives and help them work through any logistics that may be slowing them down. Weekly lectures introduce the concepts and algorithms which will be used in the upcoming project. Students leave the class with hands-on data mining and data engineering skills they can confidently apply.
User Interface Design and Development  User interface design and human-computer interaction. Examination of alternative design. Tools and methods for design and development. Human computer interaction. Methods for measuring and evaluating interface quality.
Neural Computation  This course provides an introduction to the theory of neural computation. The goal is to familiarize students with the major theoretical frameworks and models used in neuroscience and psychology, and to provide hands-on experience in using these models. Topics include neural network models, supervised and unsupervised learning rules, associative memory models, probabilistic/graphical models, and models of neural coding in the brain.
Integrated Circuits for Communications  Analysis and design of electronic circuits for communication systems, with an emphasis on integrated circuits for wireless communication systems. Analysis of noise and distortion in amplifiers with application to radio receiver design. Power amplifier design with application to wireless radio transmitters. Radio-frequency mixers, oscillators, phase-locked loops, modulators, and demodulators.
Sound and Music Computing with CNMAT Technologies  Explores the intersection of music and computers using a combination of scientific, technological, and artistic methodologies. Musical concerns within a computational frame are addressed through the acquisition of basic programming skills for the creation and control of digital sound. Will learn core concepts and techniques of computerbased music composition using the Cycling74/MaxMSP programming environment in combination with associated software tools and programming approaches created by the Center for New Music and Audio Technologies. Included will be exposure to the essentials of digital audio signal processing, musical acoustics and psychoacoustics, sound analysis and synthesis. The course is hands-on and taught from the computer lab.
Computational Models of Cognition  This course will provide advanced students in cognitive science and computer science with the skills to develop computational models of human cognition, giving insight into how people solve challenging computational problems, as well as how to bring computers closer to human performance. The course will explore three ways in which researchers have attempted to formalize cognition -- symbolic approaches, neural networks, and probability and statistics -- considering the strengths and weaknesses of each.
Perception  An introduction to principal theoretical constructs and experimental procedures in visual and auditory perception. Topics will include psychophysics; perception of color, space, shape, and motion; pattern recognition and perceptual attention.
Challenge Lab  This course is meant for students in engineering and other disciplines who seek a challenging, interactive, team-based, and hands-on learning experience in entrepreneurship and technology. In this highly experiential course, students work in simulated start-up teams to create products or start-up ideas to address a broadly-defined need of an industry partner or social challenge.
Computer Architecture and Engineering  Instruction set architecture, microcoding, pipelining (simple and complex). Memory hierarchies and virtual memory. Processor parallelism: VLIW, vectors, multithreading. Multiprocessors.
Critical Making  Critical Making will operationalize and critique the practice of “making” through both foundational literature and hands on studio culture. As hybrid practitioners, students will develop fluency in readily collaging and incorporating a variety of physical materials and protocols into their practice. Students will envision and create future computational experiences that critically explore social and culturally relevant technological themes. No previous technical knowledge is required to take this course. Class projects involve basic programming, electronic circuitry, and digital fabrication design. Tutorials and instruction will be provided, but students will be expected to develop basic skills in these areas to complete course projects.
Introduction to Artificial Intelligence  Ideas and techniques underlying the design of intelligent computer systems. Topics include search, game playing, knowledge representation, inference, planning, reasoning under uncertainty, machine learning, robotics, perception, and language understanding.
Database Management  Introduction to relational, hierarchical, network, and object-oriented database management systems. Database design concepts, query languages for database applications (such as SQL), concurrency control, recovery techniques, database security. Issues in the management of databases. Use of report writers, application generators, high-level interface generators.
Introduction to Epidemiology and Human Disease  This course introduces epidemiological methods with the goal of teaching students to read critically and interpret published epidemiologic studies in humans. The course also exposes students to the epidemiology of diseases and conditions of current public health importance in the United States and internationally.
Introduction to Real Estate and Urban Land Economics  The nature of real property; market analysis; construction cycles; mortgage lending; equity investment; metropolitan growth; urban land use; real property valuation; public policies.
Cognitive Linguistics  Conceptual systems and language from the perspective of cognitive science. How language gives insight into conceptual structure, reasoning, category-formation, metaphorical understanding, and the framing of experience. Cognitive versus formal linguistics. Implications from and for philosophy, anthropology, literature, artificial intelligence, and politics.
Introduction to Machine Learning  Theoretical foundations, algorithms, methodologies, and applications for machine learning. Topics may include supervised methods for regression and classication (linear models, trees, neural networks, ensemble methods, instance-based methods); generative and discriminative probabilistic models; Bayesian parametric learning; density estimation and clustering; Bayesian networks; time series models; dimensionality reduction; programming projects covering a variety of real-world applications.
Computability and Complexity  Finite automata, Turing machines and RAMs. Undecidable, exponential, and polynomial-time problems. Polynomial-time equivalence of all reasonable models of computation. Nondeterministic Turing machines. Theory of NP-completeness: Cook's theorem, NP-completeness of basic problems. Selected topics in language theory, complexity and randomness.
Planetary Astrophysics  Physics of planetary systems, both solar and extra-solar. Star and planet formation, radioactive dating, small-body dynamics and interaction of radiation with matter, tides, planetary interiors, atmospheres, and magnetospheres. High-quality oral presentations may be required in addition to problem sets and a final exam.
Front-End Web Architecture  This course is a survey of technologies that power the user interfaces of web applications on a variety of devices today, including desktop, mobile, and tablet devices. This course will delve into some of the core Front-End languages and frameworks (HTML/CSS/JS/React/Redux), as well as the underlying technologies enable web applications (HTTP, URI, JSON). The goal of this course is to provide an overview of the technical issues surrounding user interfaces powered by the web today, and to provide a solid and comprehensive perspective of the Web's constantly evolving landscape.
Programming Languages and Compilers  Survey of programming languages. The design of modern programming languages. Principles and techniques of scanning, parsing, semantic analysis, and code generation. Implementation of compilers, interpreters, and assemblers. Overview of run-time organization and error handling.
Data Structures  Fundamental dynamic data structures, including linear lists, queues, trees, and other linked structures; arrays strings, and hash tables. Storage management. Elementary principles of software engineering. Abstract data types. Algorithms for sorting and searching. Introduction to the Java programming language.
Economic Demography  A general introduction to economic demography, addressing the following kinds of questions: What are the economic consequences of immigration to the U.S.? Will industrial nations be able to afford the health and pension costs of the aging populations? How has the size of the baby boom affected its economic well being? Why has fertility been high in Third World countries? In industrial countries, why is marriage postponed, divorce high, fertility so low, and extramarital fertility rising? What are the economic and environmental consequences of rapid population growth?
Cartographic Representation  Problems in the representation of quantitative and qualitative data on thematic maps.
Physics of the Earth and Planetary Interiors  Gravity field, density distribution, and internal seismic structure of the Earth and planets. Constitution, composition, temperature distribution, and energetics of the Earth's interior. The geomagnetic field and the geodynamo, and concepts in seismic imaging and geophysical fluid dynamics. This course welcomes physics, computer science, engineering and applied maths majors.
Applied Natural Language Processing  This course examines the state-of-the-art in applied Natural Language Processing (also known as content analysis and language engineering), with an emphasis on how well existing algorithms perform and how they can be used (or not) in applications. Topics include part-of-speech tagging, shallow parsing, text classification, information extraction, incorporation of lexicons and ontologies into text analysis, and question answering. Students will apply and extend existing software tools to text-processing problems.
Probability and Random Processes  This course covers the fundamentals of probability and random processes useful in fields such as networks, communication, signal processing, and control. Sample space, events, probability law. Conditional probability. Independence. Random variables. Distribution, density functions. Random vectors. Law of large numbers. Central limit theorem. Estimation and detection. Markov chains.
Economic Statistics and Econometrics  Introduction to problems of observation, estimation, and hypothesis testing in economics. This course covers the linear regression model and its application to empirical problems in economics.
Introduction to Communication Networks  This course focuses on the fundamentals of the wired and wireless communication networks. The course covers both the architectural principles for making these networks scalable and robust, as well as the key techniques essential for analyzing and designing them. The topics include graph theory, Markov chains, queuing, optimization techniques, the physical and link layers, switching, transport, cellular networks and Wi-Fi.
Special Topics in Digital Design Theories and Methods  Topics cover advanced and research-related issues in digital design and New Media, related to architecture.
Intermediate Financial Accounting 1  This Course introduces the student to concepts, theory and applications of financial accounting. The topics covered include accrual accounting concepts, financial statement analysis, inventory valuations, capital assets and their corresponding depreciation and impairment. Attention is given to examples on current reporting practices and to the study of reporting requirements promulgated by the Financial Accounting Standards Board (“FASB”) with comparison to the International Accounting Standards Board (“IASB”).
Integrated-Circuit Devices  Overview of electronic properties of semiconductor. Metal-semiconductor contacts, pn junctions, bipolar transistors, and MOS field-effect transistors. Properties that are significant to device operation for integrated circuits. Silicon device fabrication technology.
Optimization Models in Engineering  This course offers an introduction to optimization models and their applications, ranging from machine learning and statistics to decision-making and control, with emphasis on numerically tractable problems, such as linear or constrained least-squares optimization.
International Trade  This course will develop models for understanding the economic causes and effects of international trade, will investigate the effects of economic policies that inhibit trade, and will examine the political economy of trade. By integrating the findings of the latest theoretical and empirical research in international economics, this course help students learn how to explore the current political debates in the U.S. and elsewhere regarding the benefits and costs of international trade.
Climate Dynamics  The course presents a conceptual basis for understanding of the workings of the global climate system, and how they conspire to bring about change. The goal is to give the student a climate dynamics basis for understanding global climate change. Covered topics include observations of the climate system; the earth's energy balance; atmospheric radiative transfer; atmospheric circulation; the role of the ocean and the cryosphere; climate variability on various timescales; climate feedbacks and climate change.
Epidemiology and Control of Infectious Diseases  A discussion of major infectious diseases with emphasis on disease surveillance, investigative procedures, and prevention programs. Emphasis is on current problems in health agencies at a state, national, and international level.
Managerial Accounting  The uses of accounting systems and their outputs in the process of management of an enterprise. Classification of costs and revenue on several bases for various uses; budgeting and standard cost accounting; analyses of relevant costs and other data for decision making.
Mathematical Methods in Geophysics  Linear systems. Linear inverse problems, least squares; generalized inverse, resolution; Fourier series, integral transforms; time series analysis, spherical harmonics; partial differntial equations of geophysics; functions of a complex variable; probability and significance tests, maximum likelihood methods. Intended for students in geophysics and other physical sciences.
Linear Algebra and Differential Equations  Basic linear algebra; matrix arithmetic and determinants. Vector spaces; inner product spaces. Eigenvalues and eigenvectors; orthogonality, symmetric matrices. Linear second-order differential equations; first-order systems with constant coefficients. Fourier series, application to partial differential equations.
Cognitive Linguistics  Conceptual systems and language from the perspective of cognitive science. How language gives insight into conceptual structure, reasoning, category-formation, metaphorical understanding, and the framing of experience. Cognitive versus formal linguistics. Implications from and for philosophy, anthropology, literature, artificial intelligence, and politics.
Quantum Information Science and Technology  This multidisciplinary course provides an introduction to fundamental conceptual aspects of quantum mechanics from a computational and informational theoretic perspective, as well as physical implementations and technological applications of quantum information science. Basic sections of quantum algorithms, complexity, and cryptography, will be touched upon, as well as pertinent physical realizations from nanoscale science and engineering.
Introduction to Digital Communication Systems  Introduction to the basic principles of the design and analysis of modern digital communication systems. Topics include source coding, channel coding, baseband and passband modulation techniques, receiver design, and channel equalization. Applications to design of digital telephone modems, compact disks, and digital wireless communication systems. Concepts illustrated by a sequence of MATLAB exercises.
Introduction to Probability and Statistics in Biology and Public Health  Descriptive statistics, probability, probability distributions, point and interval estimation, hypothesis testing, chi-square, correlation and regression with biomedical applications.
Economic Analysis--Micro  Resource allocation and price determination.
Medical Imaging Signals and Systems  Biomedical imaging is a clinically important application of engineering, applied mathematics, physics, and medicine. In this course, we apply linear systems theory and basic physics to analyze X-ray imaging, computerized tomography, nuclear medicine, and MRI. We cover the basic physics and instrumentation that characterizes medical image as an ideal perfect-resolution image blurred by an impulse response. This material could prepare the student for a career in designing new medical imaging systems that reliably detect small tumors or infarcts.
Basic Issues in Cognition  Theoretical foundations and current controversies in cognitive science will be discussed. Basic issues in cognition--including perception, imagery, memory, categorization, thinking, judgment, and development--will be considered from the perspectives of philosophy, psychology, computer science, and physiology. Particular emphasis will be placed on the nature, implications, and limitations of the computational model of mind.
Special Topics in New Media  See Schedule of Classes for current section offerings. Topics deal with new media and related issues.
Introduction to the Internet: Architecture and Protocols  This course is an introduction to the Internet architecture. We will focus on the concepts and fundamental design principles that have contributed to the Internet's scalability and robustness and survey the various protocols and algorithms used within this architecture. Topics include layering, addressing, intradomain routing, interdomain routing, reliable delivery, congestion control, and the core protocols (e.g., TCP, UDP, IP, DNS, and HTTP) and network technologies (e.g., Ethernet, wireless).
Computational Models of Cognition  This course will provide advanced students in cognitive science and computer science with the skills to develop computational models of human cognition, giving insight into how people solve challenging computational problems, as well as how to bring computers closer to human performance. The course will explore three ways in which researchers have attempted to formalize cognition -- symbolic approaches, neural networks, and probability and statistics -- considering the strengths and weaknesses of each.
Production and Operations Management  A survey of the concepts and methodologies for management control of production and operations systems. Topics include inventory control, material requirements planning for multistage production systems, aggregate planning, scheduling, and production distribution.
Computer Security  Introduction to computer security. Cryptography, including encryption, authentication, hash functions, cryptographic protocols, and applications. Operating system security, access control. Network security, firewalls, viruses, and worms. Software security, defensive programming, and language-based security. Case studies from real-world systems.
Linear Integrated Circuits  Single and multiple stage transistor amplifiers. Operational amplifiers. Feedback amplifiers, 2-port formulation, source, load, and feedback network loading. Frequency response of cascaded amplifiers, gain-bandwidth exchange, compensation, dominant pole techniques, root locus. Supply and temperature independent biasing and references. Selected applications of analog circuits such as analog-to-digital converters, switched capacitor filters, and comparators. Hardware laboratory and design project.
Economic Theory--Micro  Theory of resource allocation and price determination with an emphasis on microeconomic principles.
Electromagnetic Fields and Waves  Review of static electric and magnetic fields and applications; Maxwell's equations; transmission lines; propagation and reflection of plane waves; introduction to guided waves, microwave networks, and radiation and antennas. Minilabs on statics, transmission lines, and waves. Explanation of cellphone antennas, WiFi communication, and other wireless technologies.
Special Topics  Topics will vary semester to semester. See the Computer Science Division announcements.
Advanced Topics in Computer Music  Technical and musical issues in the design and development of computer-based music systems including digital signal processing for the analysis and synthesis of sound, scheduling of multiple musical control processes, perceptual and cognitive models, user-interface design, reactive real-time control, and the analysis and representation of musical structure.
Introduction to Linguistic Science  An intensive introduction of linguistic analysis, including core areas such as phonetics and phonology, morphology, and syntax and semantics, with data from a range of languages. Argumentation and writing skills are developed through substantial weekly homework assignments.
Software Engineering  Ideas and techniques for designing, developing, and modifying large software systems. Function-oriented and object-oriented modular design techniques, designing for re-use and maintainability. Specification and documentation. Verification and validation. Cost and quality metrics and estimation. Project team organization and management. Students will work in teams on a substantial programming project.
Algorithms for Computational Biology  Algorithms and probabilistic models that arise in various computational biology applications: suffix trees, suffix arrays, pattern matching, repeat finding, sequence alignment, phylogenetics, genome rearrangements, hidden Markov models, gene finding, motif finding, stochastic context free grammars, RNA secondary structure. There are no biology prerequisites for this course, but a strong quantitative background will be essential.
Computational Methods  An introduction to computational methods for linguists. No prior programming experience required. Students will learn how to program, and will use that knowledge to manipulate and analyze linguistic datasets, including corpora. The course will also prepare students for further study in computational modeling.
Introduction to Optical Engineering  Fundamental principles of optical systems. Geometrical optics and aberration theory. Stops and apertures, prisms, and mirrors. Diffraction and interference. Optical materials and coatings. Radiometry and photometry. Basic optical devices and the human eye. The design of optical systems. Lasers, fiber optics, and holography.
Modeling the Dynamics of Infectious Disease Processes  This course will cover the basic tools required to both critically read modeling papers and to develop and use models as research tools. Emphasis will be placed on using models to understand infectious disease processes and to evaluate potential control strategies. The class meeting will consist of both lecture material covering conceptual issues and a computer lab to apply these concepts using standard infectious disease models.
Neural and Nonlinear Information Processing  Principles of massively parallel real-time computation, optimization, and information processing via nonlinear dynamics and analog VLSI neural networks, applications selected from image processing, pattern recognition, feature extraction, motion detection, data compression, secure communication, bionic eye, auto waves, and Turing patterns.
Sound Design for Performance  In this course, undergraduate students will learn to construct sound cues and soundtracks for theater performances and videos using industry standard software, and will learn fundamental principles of incorporating video and sound into stage productions. Students will be exposed to the writings and works of prominent sound theorists, designers, and engineers and multimedia performance artists. The most successful students may be invited to participate in UC Berkeley theater productions as sound designers.
Robotic Manipulation and Interaction  This course will cover dynamics and control of groups of robotic manipulators coordinating with each other and interacting with the environment. Concepts will include an introduction to grasping and the constrained manipulation, contacts and force control for interaction with the environment. We will also cover active perception guided manipulation, as well as the manipulation of non-rigid objects. Throughout, we will emphasize design and human-robot interactions, and applications to applications in manufacturing, service robotics, tele-surgery, and locomotion.
Cognitive Neuroscience  This course will examine research investigating the neurological basis of cognition. Material covered will include the study of brain-injured patients, neurophysiological research in animals, and the study of normal cognitive processes in humans with non-invasive behavioral and physiological techniques such as functional Magnetic Resonance Imaging (fMRI), electroencephalography (EEG), and transcranial magnetic stimulation (TMS). Topics to be covered include perception, attention, memory, language, motor control, executive control, and emotion.
Designing Information Devices and Systems II  This course is a follow-on to EECS 16A, and focuses on the fundamentals of designing and building modern information devices and systems that interface with the real world. The course sequence provides a comprehensive introduction to core EECS topics in machine learning, circuit design, control, and signal processing while developing key linear-algebraic concepts motivated by application contexts. Modeling is emphasized in a way that deepens mathematical maturity, and in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper exercises. The courses are aimed at entering students as well as non-majors seeking a broad introduction to the field.
Discrete Mathematics and Probability Theory  Logic, infinity, and induction; applications include undecidability and stable marriage problem. Modular arithmetic and GCDs; applications include primality testing and cryptography. Polynomials; examples include error correcting codes and interpolation. Probability including sample spaces, independence, random variables, law of large numbers; examples include load balancing, existence arguments, Bayesian inference.
Introductory Electronic Transducers Laboratory  Laboratory exercises exploring a variety of electronic transducers for measuring physical quantities such as temperature, force, displacement, sound, light, ionic potential; the use of circuits for low-level differential amplification and analog signal processing; and the use of microcomputers for digital sampling and display. Lectures cover principles explored in the laboratory exercises; construction, response and signal to noise of electronic transducers and actuators; and design of circuits for sensing and controlling physical quantities.
Introduction to Digital Design and Integrated Circuits  An introduction to digital and system design. The material provides a top-down view of the principles, components, and methodologies for large scale digital system design. The underlying CMOS devices and manufacturing technologies are introduced, but quickly abstracted to higher-levels to focus the class on design of larger digital modules for both FPGAs (field programmable gate arrays) and ASICs (application specific integrated circuits). The class includes extensive use of industrial grade design automation and verification tools for assignments, labs and projects. The class has two lab options: ASIC Lab (EECS 151LA) and FPGA Lab (EECS 151LB). Students must enroll in at least one of the labs concurrently with the class.
Basic Issues in Cognition  Theoretical foundations and current controversies in cognitive science will be discussed. Basic issues in cognition--including perception, imagery, memory, categorization, thinking, judgment, and development--will be considered from the perspectives of philosophy, psychology, computer science, and physiology. Particular emphasis will be placed on the nature, implications, and limitations of the computational model of mind.
Computer Programming for Music Applications  Software engineering for musical applications covering programming concepts for live-performance real-time systems as well as cloud-based music information retrieval applications. Topics include the software representation of sound and music, real-time scheduling, analysis of gestures from systems of sensors, common design patterns, analysis and controlled synthesis, and machine learning applications for music understanding and creation. Behavior driven design and test driven development are core ideas that permeate the course.
Foundations of Computer Graphics  Techniques of modeling objects for the purpose of computer rendering: boundary representations, constructive solids geometry, hierarchical scene descriptions. Mathematical techniques for curve and surface representation. Basic elements of a computer graphics rendering pipeline; architecture of modern graphics display devices. Geometrical transformations such as rotation, scaling, translation, and their matrix representations. Homogeneous coordinates, projective and perspective transformations. Algorithms for clipping, hidden surface removal, rasterization, and anti-aliasing. Scan-line based and ray-based rendering algorithms. Lighting models for reflection, refraction, transparency.
Financial Economics  Analysis of financial assets and institutions. The course emphasizes modern asset valuation theory and the role of financial intermediaries, and their regulation, in the financial system.
Privacy, Security, and Cryptography  Policy and technical issues related to insuring the accuracy and privacy of information. Encoding and decoding techniques including public and private key encryption. Survey of security problems in networked information environment including viruses, worms, trojan horses, Internet address spoofing.
Introduction to Financial Accounting  The identification, measurement, and reporting of financial effects of events on enterprises, with a particular emphasis on business organization. Preparation and interpretation of balance sheets, income statements, and statements of cash flows.
Introduction to Robotics  An introduction to the kinematics, dynamics, and control of robot manipulators, robotic vision, and sensing. The course covers forward and inverse kinematics of serial chain manipulators, the manipulator Jacobian, force relations, dynamics, and control. It presents elementary principles on proximity, tactile, and force sensing, vision sensors, camera calibration, stereo construction, and motion detection. The course concludes with current applications of robotics in active perception, medical robotics, and other areas.
Designing Information Devices and Systems I  This course and its follow-on course EECS16B focus on the fundamentals of designing modern information devices and systems that interface with the real world. Together, this course sequence provides a comprehensive foundation for core EECS topics in signal processing, learning, control, and circuit design while introducing key linear-algebraic concepts motivated by application contexts. Modeling is emphasized in a way that deepens mathematical maturity, and in both labs and homework, students will engage computationally, physically, and visually with the concepts being introduced in addition to traditional paper/pencil exercises. The courses are aimed at entering students as well as non-majors seeking a broad foundation for the field.
Introduction to Database Systems  Access methods and file systems to facilitate data access. Hierarchical, network, relational, and object-oriented data models. Query languages for models. Embedding query languages in programming languages. Database services including protection, integrity control, and alternative views of data. High-level interfaces including application generators, browsers, and report writers. Introduction to transaction processing. Database system implementation to be done as term project.
Fundamentals of Photovoltaic Devices  This course is designed to give an introduction to, and overview of, the fundamentals of photovoltaic devices. Students will learn how solar cells work, understand the concepts and models of solar cell device physics, and formulate and solve relevant physical problems related to photovoltaic devices. Monocrystalline, thin film and third generation solar cells will be discussed and analyzed. Light management and economic considerations in a solar cell system will also be covered.
Calculus I Limits, continuity, differentiation and integration of algebraic and transcendental functions, applications of the derivative to curve sketching, optimization and related rates.
Calculus II Applications of integration, techniques of integration, sequences and series, Taylor polynomials, and elementary differential equations.
Introduction to Discrete Mathematics Set theory, logic divisibility, induction, combinatorics, relations, functions, graphs, digraphs, and Boolean algebra. F, S.
Elementary Statistics An introductory course in the fundamentals of modern statistical methods. Topics include descriptive statistics, introduction to probability, random variables and sampling distribution, linear regression and correlation, testing of hypothesis concerning one and two population samples, confidence interval estimation of parameters and introduction to one way ANOVA (analysis of variance).
Elementary Statistics Computer Laboratory
Modeling for Scientists I The class is designed to introduce students to concepts in mathematical modeling and scientific computing. The course is project based, and Computer Software will be used extensively to implement models, solve problems, and visualize results.
Modeling for Scientists I Laboratory
Mathematical Proofs and Problem Solving Detailed investigation of the methods of mathematical proof: direct, indirect, induction, contradiction, case analysis and counter examples.
Calculus III Lines, planes and surfaces in space; spherical and cylindrical coordinate systems; vector valued functions; differentiation of functions of several variables; multiple integration and applications; topics in vector analysis.
Combinatorics This course covers the basics of combinatorics: enumeration, recurrence, generating functions, as well as some applications to probability. S, odd years.
Graph Theory This course will introduce students to the basic concepts and applications of graph theory. This will be achieved via examples, algorithms and proofs. F, odd years.
Elementary Differential Equations This course represents a systematic introduction to ordinary differential equations.
Linear Algebra Vector spaces, linear transformations, matrices, systems of equations, determinants, eigenvectors and eigenvalues. F, S.
Coding Theory This course covers the issues involved in designing efficient codes, including error detection/correction. Topics to be covered include distance, nearest neighbor decoding, hamming codes and linear codes.
Biological Science I An introduction to biological principles for students majoring in biology and related fields of study.
Biological Science II An introduction to biological principles for students majoring in biology and related fields of study.
Business and Professional Communication Designed to improve practical communication, both written and oral. Students learn business style and formats (the letter, memo, resume, and report), as well as strategies for presenting neutral, negative, and persuasive messages.
Introduction to Web Interface Development An introduction to the design and development of interactive Web 2.0 user interfaces using client-side programming languages.
Introduction to Computer Science Designed as a communication intensive introduction to Computer Science; provides a comprehensive overview of the field of Computer Science in areas such as machine architecture, data storage, data manipulation, operating systems, algorithms, programming languages, data structures, database structures, computational complexity, and artificial intelligence; includes a brief introduction to programming.
Introduction to Algorithmic Design I An introduction to problem solving and algorithmic design methodology using a high-level programming language. Topics include problem solving techniques; subprograms and modularity; fundamental data types and structures; flow of control statements; and file input/output.
Introduction to Algorithmic Design I Laboratory Introduction to Algorithmic Design I Laboratory
Introduction to Algorithmic Design II Continued development of discipline in program design, style and expression, debugging and testing. Topics include object oriented programming and algorithm design; elementary data structures; user-defined data types, inheritance, and encapsulation.
Introduction to Algorithmic Design II Laboratory Introduction to Algorithmic Design II Laboratory
Ethics in Computer Science Provides real-world experiences that stimulate discussion of ethical issues in the technical work place. Topics include: ACM Code of Ethics, general moral responsibilities, privacy security, copyright and ownership agreements, computer crimes, and personal ethics.
Computer Organization and Programming  Logical basis of computer structure, machine representation of information, flow of control, instruction codes, arithmetic and logical operations, indexing, indirect addressing, input-output, sub-routines, linkages, macros. Interpretive and assembly systems, and pushdown stacks.
Data Structures Topics include analysis of algorithms, with emphasis on computational complexity and advanced algorithms including self-adjusting trees, hashing, graphs, sorting, searching, hashing methods, and greedy algorithms.
Information Management This course covers the key aspects of information management including the acquisition, classification, storage, analysis, presentation, and archival of information. Privacy and security of information are also addressed.
Data Communication Systems and Networks Fundamentals of data communications, including hardware, basic components of communications, configurations, networks and applications, protocols and software are discussed.
Systems Analysis & Software Engineering  A thorough introduction to requirements management, and best practices in eliciting, documenting, and verifying requirements for programming systems.
Organization of Programming Languages Formal language concepts, statement types, control structures, compilation vs. interpretation, list processing and string manipulation languages.
Operating Systems Basic concepts and terminology of operating systems, I/0 and interrupt structures, system structures, processor scheduling, processes and process synchronization, deadlocks, memory management, and other concepts.
Introduction to the Analysis of Algorithms An introductory course in the analysis of algorithms, with emphasis on computational complexity including practical applications and the analysis of specific problems and algorithms, course investigates most commonly used algorithm design techniques and also introduces the notion of hard problems and approximate solutions.
Theory of Computation General models of computation, formal languages and automa theory and algorithmic unsolvability.
Senior Assessment This course provides various resources to graduating seniors including strategies for job searching and/or entry to graduate school.
Introduction to Parallel Systems  This course introduces parallel computer architectures and their programming. It includes an introduction to MPI and OpenMP and a number of engineering problems, including numerical simulations.
Introduction to Computer Architecture An introduction to the fundamental aspects of a computer systems structure and behavior; binary arithmetic, combinational logic, circuit design, instruction sets, register operations and flip-flops, control system functions, memories, interrupt structures, processors, and performance measures will be covered.
Database Systems Design An exploration of advanced database topics will be covered. Topics may include the efficiency of advanced queries, indexing structures, database and SQL optimizations, backup and recovery, NoSQL and big data concepts.
Introduction to Computer Graphics An overview of the elements of 2D and 3D graphics, includes topics on raster graphics, geometrical transformations, parallel and perspective projections for 3D viewing, interaction techniques, representation of curves and surfaces, solid modeling and topics on visual realism.
Image Processing and Analysis This course introduces the theoretical foundations and methodologies of digital image processing and analysis. Topics include intensity transformations, contrast enhancement, filtering in the spatial and frequency domains, restoration and reconstruction, edge detection, feature extraction, morphological operations, image segmentation, object recognition, and color image processing.
Informatics and Knowledge Discovery Students will explore the basic techniques of data mining and data stream mining and then apply them on real world datasets taken from different domain experts. This class will teach students how to obtain patterns, trends, and behavior from different datasets to enable domain experts to discover new knowledge without the need to conduct expensive experiments or complex modeling procedures.
Machine Learning This course provides an introduction to pattern recognition and machine learning. Topics may include probabilistic learning, linear discriminants, neural networks, unsupervised learning, decision trees, Bayesian networks, support vector machines, and reinforcement learning.
Introduction to Robotics An introduction to the fundamentals of mobile robotics including robot hardware, sensors, obstacle avoidance, navigation, mapping, path planning and robot architectures.
Software Engineering II Topics include project requirements, design specifications, testing, project management and group dynamics. Student will design, code, test and implement an information system as part of a team project.
Computer Science I An introduction to computer programming from an object-oriented perspective. Students will complete several programs with an emphasis placed on good software engineering principles and development of good programming skills. Students will implement complete programs using an object-oriented programming language and development environment.
Computer Science II Students will apply new techniques such as pointers, structures and unions to create advanced programs and solutions. Students will also need to improve their solutions to enhance efficiency and soundness.
Design and Analysis of Algorithms Examines various techniques for designing algorithms and analyzing their efficiencies, and examines and compares their efficiency of execution. Studies the theoretical foundations for analysis of algorithms and the ramifications of design strategies on efficiency.
Theoretical Foundations of Computer Science Topics include finite automata, regular languages, regular expressions, and regular grammars; pushdown automata and context-free languages; Turing machines; Church-Turing Thesis; the Halting Problem; undecidability; classes of languages, including the Chomsky hierarchy and the classes P, NP, and NP-Complete.
Computer Science Senior Research Methods Students will learn basic research strategies including conducting literature reviews, designing experiments, defining hypotheses, and writing proposals. The course will include topics including finding and evaluating sources of information, defining topics, developing and supporting a hypotheses, and acceptable research and experimental practices.
Computer Science Senior Research and Development Students will conduct the experiments outlined in their testing / implementation plan. Students will then analyze the results and determine if their hypothesis was supported or not.
Design Patterns  Provides an advanced study of the concepts of object-oriented programming, with an emphasis on applying those concepts to software development. Many object design patters have emerged as proven ways to structure object-oriented solutions to a wide range of key problems. This course provides hands-on experience with using object design patterns to solve a number of problems that recur in computer science.
Computer Organization Introduces organization and architecture of computer systems from the standard von Neumann model to more recent architectural concepts. Internal structure and organization of a computer leads to significant differences in performance and functionality, giving rise to an extraordinary range of computing devices from hand-held computer to large-scale, high performance machines. To gain a better understanding of exactly how a computer functions, students will write programs in a common assembly language.
Operating Systems An operating system provides an abstract interface with which programmers can control hardware. The study of this area includes both the use of operating systems (externals) and their design and implementation (internals).
Calculus I Introduction to study of differential and integral calculus from algebraic, numerical, and graphical points of view. Concept of limit and applications of derivatives will be covered.
Discrete Mathematics Study of topics usually associated with analysis of discrete and/or finite mathematical models. Topics from logic, set theory, Boolean algebra, mathematical proof, recursion, induction, combinatorics, discrete probability, matrices and graph theory covered.
Statistics I Topics include exploratory data analysis, basic probability, the Central Limit Theorem, confidence intervals, hypothesis testing, linear regression, experimental design, analysis of variance and goodness of fit tests. A statistical software package will be utilized throughout course.
Elementary Linear Algebra Introduction to the study of matrices, linear systems, determinants, eigenvalues, and the geometry of linear operators. Topics from Euclidean n-space include linear transformations, linear independence, span, bases, inner product, and vector spaces.
Introduction to Computer Graphics Provides a non-mathematical introduction to the basic concepts and techniques of computer graphics. Topics include real-world vs. synthetic image creation; graphics primitives; interaction and animation; I/O hardware environment; 3-D modeling and viewing; color, light, and shading; segments; textures; realistic effects. A typical graphics API (e.g., OpenGL) is used to create computer-generated images.
Video Game Programming This course will look at the key concepts needed to build 2D and 3D video games using an existing game engine. The course will look at asset management, animation, collision detection physics, and user input. Additionally, It will look at some key design patterns related to game programming.
Big Data Analysis We are living in data-intensive world. Efficiently extracting, interpreting, and learning from very large datasets requires efficient and scalable algorithms as well as new data management technologies. Machine learning techniques and high performance computing make the efficient analysis of large volumes of data. In this course we explore big dataset analysis techniques and apply it to the distributed.
Machine Learning This introductory course gives an overview of machine learning. This is a wide ranging field including topics such as: classification, linear regression, Principal Component Analysis (PCA), neural networks, bagging and boosting, support vector machines, hidden Markov models, Bayesian networks, Q-learning, reinforcement learning.
Theoretical Foundations of Computer Science Topics include finite automata, regular languages, regular expressions, and regular grammars; pushdown automata and context-free languages; Turing machines; Church-Turing Thesis; the Halting Problem; undecidability; classes of languages, including the Chomsky hierarchy and the classes P, NP, and NP-Complete.
Computer Networks Studies protocol suites, emphasizing the TCP/IP 4-layer model. Topics included are network addresses, sub netting, client/server network programming via the sockets API, network utilities, architecture of packets, routing, fragmentation, connection and termination, connection-less applications, data flow, and an examination of necessary protocols at the link layer, particularly Ethernet.
Web Programming Teaches how to set up a website typical of one used in an online business. Includes preparing web pages in HTML, writing client-side scripts in VBScript or JavaScript for active web pages, writing server-side scripts in VBScript for active server pages, learning to set up and access a database for processing online ordering and searches, and some web server administration.
Computer Graphics Algorithms Explores the algorithmic foundations that underlie a typical computer graphics API. Topics include: normals; 2D and 3D transformation matrices; projection matrices; clipping; raster scan algorithms; fill algorithms; hidden line and surface algorithms; light, color, and shading algorithms; curve fitting; surface representation.
Artificial Intelligence Overview of artificial intelligence. Emphasis on basic tools of AI, search and knowledge representation, and their application to a variety of AI problems. Search methods include depth-first, breadth-first, and AI algorithms; knowledge representation schemes include propositional and predicate logics, semantic nets and frames, and scripts. Planning using a STRIPS-like planner will also be addressed.
Principles of Biology: Cell Structure and Function Introductory course for majors that examines cell structure and function, genetics, population genetics, and evolution.
Chemical Bonding Study of the structure of matter ranging from atoms through molecules to crystalline structures. Three periods lecture/week.
Database Management Systems Detailed examination of theory and practical issues underlying the design, development, and use of a DBMS.
Introduction to Robotics Introduces the science of robotics from the perspective of artificial intelligence. Emphasizes various robot control architectures and their implementations using mobile robots. Topics include history of robotics; hierarchical, reactive, and hybrid architectures; Braitenberg vehicles; integration and calibration of sensors; construction techniques and considerations; and implementation of various types of behaviors
Computer Science I Techniques of problem-solving and algorithmic development. An introduction to programming. Emphasis is on how to design, code, debug, and document programs using good programming style.
Computer Science II Computer Science II
Algorithm&Abstract Data Struct Algorithm analysis using O-notation, sorting, heaps, balanced binary search trees, and hash tables.
Software Development This course covers topics in object-oriented programming, user-interface design and development, and software construction including program design, development tools, and basic concepts in software engineering.
Computer Organization This course covers basic topics in the design of modern computer systems. Topics include digital logic, computer system components, machine-level code, memory organization and management, computer arithmetic, assembly-language programming, and basic connections between high-level and low-level languages (C and assembly). This course also serves as a foundation for courses on networking. security, operating systems, and computer architecture, where a deeper understanding of systems-level issues is required.
Database Management Systems Introduction to database concepts. A study of data models, data normalization, relational algebra. Use of data definition and data manipulation languages including embedded SQL. File and index organization.
Organization of Program Langs Examination of the structures and concepts of procedural, functional, and logic-based programming languages.
Operating Systems Study of operating systems internals. Topics include concurrent programming, memory management, file system management, scheduling algorithms, security.
Computer Security Study of security and information assurance in stand-alone and distributed computing. Topics include ethics, privacy, access control methods and intrusion detection.
Theory of Computation Study of the theory of computation. Regular grammars, finite state automata, context-free grammars, pushdown automata, Turing machines, parsing, normal forms, and the Chomsky hierarchy.
Theory of Computation Study of the theory of computation. Regular grammars, finite state automata, context-free grammars, pushdown automata, Turing machines, parsing, normal forms, and the Chomsky hierarchy.
Software Engineering A survey of approaches used in software engineering focusing on software development processes, requirements engineering, estimation, scheduling, risk analysis, testing, version control, and project management. Students apply the techniques and practices learned in their senior design projects, including the development of a detailed project plan and a functional software prototype.
Senior Design Project Lab I First semester of a two semester senior design project in which students work in teams to develop a large software product.
Senior Design Project Lab II Second semester of a two semester senior design project in which students work in teams to develop a large software product.
Computers and Society This course discusses ethical, societal, security and legal issues in computing, including their relationship to professional development. Topics are examined within the context of students' senior design projects.
Great Ideas in Comp Sci 3.00 credits Computer science is the study of what is computable. Students will be introduced to computing technologies and learn how these technologies are applied in today's world. The course will focus on the relationship between computation, technology, and society. Topics could include robotics, artificial intelligence, bio-computing, media computing, technology from the movies, and technology and art. On sufficient demand. CPSC 107 User Centered Web Site Design 3.00 credits Introduction to quality design principles and user-centered development techniques used in creating a web site. Topics will include human-computer interaction, graphical design, prototyping, and introduction to web programming. On sufficient demand.
Algorithmic Art Algorithmic Art sits at the intersection of mathematics, programming, algorithms, and art. The primary goal of the course is to teach computational thinking to liberal arts students. Student motivation is achieved by presenting programming and math concepts in the context of the visual arts. The assignments use the programming environment called Processing which was developed specifically for visual artists. Fall.
Computational Modeling This course introduces students to the modeling process and computer simulations. It considers two major approaches: system dynamics models and agent-based models. A variety of software tools will be explored. Applications will be chosen from ecology, medicine, chemistry, biology, and others.
Introduction to Data Science This course provides an introduction to the underlying ideas, concepts, and techniques used in data science. Students gain skills in statistical and computational thinking, and their practical application to real-world, data-driven problem solving and decision making.The course teaches important concepts and skills in both statistical reasoning and computer programming for the purpose of analyzing real-world datasets. Examples are drawn from diverse areas such as economics, social science, health and wellness, climate science, and education. Students gain experience using the Python programming language, Pythons standard libraries for data science applications and computational notebooks (e.g. using Jupyter). The course also raises important social questions concerning privacy, social inequality, and professional ethics related to data science and its applications.
Algorithm&Abstract Data Struct Algorithm analysis using O-notation, sorting, heaps, balanced binary search trees, and hash tables.
Machine Lrng & Intllgnt Systms This course provides a detailed overview of topics in machine learning with an emphasis on algorithms and techniques for unstructured and complex datasets. Students implement and apply machine learning algorithms to examples drawn from time series, image, audio, textual, and numerical data. Topics include regression analysis, support vector machines, genetic algorithms, neural networks and heuristic search. Concepts and issues in building intelligent systems and the role of machine learning are also discussed.
Calculus-Analytic Geometry I An introduction to calculus for engineering, science and mathematics students, with an emphasis on conceptual understanding, problem solving, and modeling. Topics covered include: limits, continuity, derivatives of algebraic, trigonometric, and transcendental functions, applications of the derivative including optimization problems and linear approximations, antiderivatives, introduction to the definite integral, and the Fundamental Theorem of Calculus.
Discrete Structures Topics taken from sets, functions, matrices, ordered sets, partially ordered sets, directed graphs, algebraic systems, recursive definitions, and algorithms.
Calculus-Analytic Geometry II Topics covered are: techniques of integration, applications of the integral, improper integrals, sequences and infinite series with an introduction to convergence tests, parametric equations, and polar coordinates.
Ordinary Differential Equation Solution methods for first order equations and for second and higher order linear equations. Includes series methods and solution of linear systems of differential equations.
Advanced Engineering Math Application of advanced mathematical techniques to problems of interest to engineers and scientists. Analytical methods involving topics such as ordinary and partial differential equations, special functions, and complex valued functions.
Info Flow in Biol Systems This course provides a foundation in the principles of biology by examining the fundamental role of information in generating the properties of life. The course explores the molecular basis of biological information (codes, signals, structures) and its role in growth, development, communication, regulation, reproduction and evolution of living things.
Energy Flow in Biol Systems This course focuses on the biological processes of energy acquisition, how energy is used in biological systems, and how energy is transferred between organisms and through ecosystems. Human impacts to energy transfer will be covered and topics will integrate energy concepts from cells to organisms to ecosystems.
Physiology & Biodiversity This course focuses on understanding the diversity of life on earth and the physiological mechanisms that allow organisms to live in a wide array of environments. A framework of physiology is used to compare and contrast clades of organisms.
Ecology This course examines the ecological and evolutionary mechanisms that determine the distribution and abundance of species. Students will explore interactions between organisms and their environments at levels from individuals through ecosystems.
Genetics This course promotes an understanding of genes and genomes – their molecular properties, how they are expressed and regulated, how they contribute to inheritance, and how they are shaped by evolutionary forces.
General Chemistry A systematic treatment of the fundamental laws and theories of chemistry and their applications.
Inorganic Chemistry Introduction to foundational concepts in inorganic chemistry with emphasis on atomic structure, bonding, and reactivity. Topics will include nuclear chemistry, quantum mechanics, periodic trends, covalent bonding, ionic bonding, metallic bonding, coordinate covalent bonding, acid-base chemistry, electrochemistry, and thermodynamics.
Organic Chemistry I Essential concepts in bonding and structure, acid-base chemistry, reactivity and synthesis of functional groups, nomenclature, and mechanisms of fundamental organic reactions.
Organic Chemistry II A significant focus of the course will be on aromatic compounds and carbonyl chemistry. Other topics include organometallic chemistry, radicals, mass spectrometry and synthetic polymers.
Biochemistry Structure and function of the major classes of biomolecules (carbohydrates, lipids, proteins and nucleic acids). Fundamental concepts of protein structure and function, kinetics and enzymology, bioenergetics and thermodynamics, metabolism and regulation, will be discussed.
Chaos & Dynamical Systems Introduction to the study of discrete nonlinear dynamical systems and their chaotic behavior. The course will focus on investigation s through computer experiments- both numerical and graphical- and the corresponding mathematical analysis of the observed behavior. A significant portion of the course will be devoted to designing graphics programs. In the humanistic tradition of Gonzaga, students will also learn the historical development of the modern science of chaotic dynamical systems.
Advanced Engineering Math Application of advanced mathematical techniques to problems of interest to engineers and scientists. Analytical methods involving topics such as ordinary and partial differential equations, special functions, and complex valued functions.
Scientific Physics I Calculus-based introductory physics. Mechanics, including Newton's laws, conservation laws, fluids, oscillations, and waves.
Scientific Physics II Calculus-based introductory physics. Thermodynamics, electricity and magnetism, and optics. Five hours of lecture with experimental demonstrations and problems.
Modern Physics Special relativity, development and an introduction to quantum mechanics and other selected topics.
Computational Physics An introduction to computational physics. Students will be introduced to many of the basic ideas, algorithms, and tools used by physicists to solve problems.
Intro to Linear Electronics This course is primarily a laboratory in which students learn basic concepts of linear electronics and laboratory techniques through passive components, DC and AC applications, use of test equipment, operational amplifiers, basic transistor circuits, and more.
Modern Physics Lab Modern Physics Lab
Calculus-Analytic Geometry III A treatment of multivariable calculus and the calculus of vector fields. Topics include: vectors and vector-valued functions, partial derivatives, multiple integration, curl and divergence, line integrals, Green’s theorem, Stokes’ theorem, and the Divergence theorem.
Ordinary Differential Equation Solution methods for first order equations and for second and higher order linear equations. Includes series methods and solution of linear systems of differential equations.
Writing and Critical ReasoningThematic  Academic writing, emphasizing analysis and argumentation, rhetorical judgment, critical reasoning, creative insight, the careful use of evidence, ethical perspectives, logical organization, stylistic and grammatical fluency.
Advanced Writing Instruction in writing for various audiences on topics related to a students professional or disciplinary interests, with some emphasis on issues of broad public concern.
Cellular and Molecular Biology Cellular and molecular biology with examples related to human biology and diseases. Fundamental life processes examined at the genetic, cellular and molecular levels.
Humans and Their Environment An examination of the physical and biological laws that influence agriculture, pollution, population dynamics (including humans), climate, biodiversity and ecosystem structure and function.
General Biology for the Environment and Life Study of common skills in biology, including basics of evolution, systematics, ecology, genetics, biochemistry and molecular biology, physiology, and anatomy.
How the Body Works Structure and function of the human body, including the role of organ systems, tissues, and cells in normal function. Malfunctions relating to disease, substance abuse and lifestyle.
Good Genes, Bad Genes Introduction to the scientific method; basic instruction in molecular biology with emphasis on how biological research advancement has impacted medicine, commerce and society in general.
The Biology of Food Exploration of molecular biology, biochemistry, microbiology, nutrition and the history of biology through the study of food, focusing on foods relationship to the biological world.
Our Blue Planet in a Changing Climate Introduction to biological oceanography and marine ecosystems. Impact of climate changes on marine ecosystems. Analysis of ocean-related case studies being discussed by mainstream media.
The Nature of Human Health and Disease The human organism; the nature of inherited and acquired diseases; the biological and societal basis for the AIDS epidemic; therapy, drug design and the future.
Evolution Changes in the physical and biological universe over time; origins of life, dinosaurs, human evolution. Implications of evolutionary mechanisms and mass extinctions for human survival.
The Biology of the Brain Exploration of the unique properties of brain cells that allow complex perceptions and behaviors; examination of structure and activity of brain cells that underlie function.
Drug Discovery and Development Scientific principles underlying molecular approaches to diagnosis and treatment of diseases, using specific models within a societal (business, legal, ethical) context.
The History of Life on Earth: A View from the Museum Topically-driven exploration of evolution, environmental change, and the history of life on Earth via the fossil record with the Natural History Museum of Los Angeles as a laboratory. How the changing Earth and life co-evolved through time.
Metals and Life on Earth The role of metals in life, from the origin of life to modern environmental problems.
A Journey into the Mind Introduction to the brain and mind. A unique multimedia approach to stress how knowledge about the mind is gained from scientific and clinical investigations.
Seminar in the Life Sciences Scientific understanding of a full range of living systems from molecules to ecosystems, prokaryotes to humans, past and present
The Human Animal Foundations of the human species. Examination of scientific evidence from Darwinian theory, primate behavior, fossils, and the behavior of modern people.
Nutrition for Life To develop an understanding of Nutrition, especially as it pertains to optimal health and prevention of diseases. A study of macro and micro nutrients.
The Science of Sport The physiological and nutritional basis of human performance. Factors that facilitate and limit athletic achievement.
The Pharmacology of Performance Enhancing Drugs Evaluation of drugs, nutritional supplements, and ergogenic aids that are purported to enhance human athletic performance to promote weight and fat loss.
In a Word Words as a gateway to the human mind. How words are stored, comprehended and retrieved. How words are constructed. Words and concepts. Words and social constructs. The processing and the acquisition of words in normal and atypical children and adults.
Language and Mind Language within cognitive science: speech physiology and acoustics, language acquisition, reading, language disorders, perception and mental representation of words, linguistic diversity and computer analysis of speech
Foundations of Cognitive Science Introduction to research in interdisciplinary cognitive science, highlighting ideas and methods from philosophy, psychology, linguistics, neuroscience, and computer science.
Drugs, Behavior and Society An integrative systems perspective of drugs; including their historical, economic, and cultural importance, psychopharmacology, addiction, relationship to crime, and therapeutic use in treating psychological disorders.
Origins of the Mind Exploration of ancient philosophical questions concerning the origins of human knowledge through empirical studies of infants, animals, and adults from diverse cultures.
Advanced General Biology: Organismal Biology and Evolution Equivalent to BISC 120 , but taught at a higher level for exceptionally well-prepared students. Admission to the course by departmental approval only.
Engineering Freshman Academy Introduction to the profession of engineering. Ethical, political and societal consequences of engineering innovations and the impact of engineering on everyday life. Team projects and guest lectures. Open to freshmen only.
Calculus I Limits; continuity, derivatives and applications; antiderivatives; the fundamental theorem of calculus; exponential and logarithmic functions.
Calculus II trigonometric functions; applications of integration; techniques of integration; indeterminate forms; infinite series; Taylor series; polar coordinates.
Linear Algebra and Linear Differential Equations Matrices, systems of linear equations, vector spaces, linear transformations, eigenvalues, systems of linear differential equations.
Calculus III Vectors, vector valued functions; differential and integral calculus of functions of several variables; Greens theorem.
Introduction to Probability and Statistics for Electrical Engineering and Computer Science Introduction to concepts of randomness and uncertainty: probability, random variables, statistics. Applications to digital communications, signal processing, automatic control, computer engineering and computer science.
Probability Theory Probability spaces, discrete and continuous distributions, moments, characteristic functions, sequences of random variables, laws of large numbers, central limit theorem, special probability laws.
General Biology: Organismal Biology and Evolution In-depth survey of key topics related to advances in our knowledge of the diversity of life and evolution; origin of life; eukaryotes/prokaryotes; ecology.
General Biology: Cell Biology and Physiology In-depth survey of key topics related to advances in our knowledge of cellular biology and physiology; cell composition/metabolism; gene action; organism structure and function.
General Chemistry Fundamental principles and laws of chemistry; laboratory work emphasizes quantitative procedures.
Advanced General Chemistry Advanced General Chemistry
Fundamentals of Physics I: Mechanics and Thermodynamics Gateway to the majors and minors in Physics and Astronomy. Statics and dynamics of particles and rigid bodies, conservation principles, gravitation, simple harmonic oscillators, thermodynamics, heat engines, entropy.
Fundamentals of Physics II: Electricity and Magnetism Electrostatics, magnetostatics, electrical circuits, wave motion, sound waves, electromagnetic waves.
Advanced Principles of Physics I Gateway to the majors and minors in Physics and Astronomy. Introductory treatment intended for well-qualified students. Dynamics of particles and rigid bodies, conservation laws, wave motion, thermodynamics, heat engines, entropy.
Advanced Principles of Physics II Electrostatics, magnetostatics, electrical circuits, electric and magnetic properties of matter, Maxwells equations, electromagnetic waves, propagation of light.
Introduction to Embedded Systems Information representations, embedded programming, digital and serial I/O, analog-to-digital conversion, and interrupt mechanisms. Elementary analog, logic, and state-machine design.
Introduction to Programming Basic datatypes, assignments, control statements (if, switch, for, while), input/output (printf, scanf, cin, cout), functions, arrays, structures, recursion, dynamic memory, file handling. Programming in C/C++.
Data Structures and Object Oriented Design Introduces the student to standard data structures (linear structures such as linked lists, (balanced) trees, priority queues, and hashtables), using the C++ programming language
Introduction to Computer Science An introduction to, and overview of, Computer Science; both as a discipline and a body of knowledge.
Discrete Methods in Computer Science Sets, functions, series. Big-O notation and algorithm analysis. Propositional and first-order logic. Counting and discrete probability. Graphs and basic graph algorithms. Basic number theory.
Principles of Software Development Object-oriented paradigm for programmingin- the-large in Java; writing sophisticated concurrent applications with animation and graphic user interfaces; using professional tools on team project.
Introduction to Algorithms and Theory of Computing Algorithm analysis. Greedy algorithms, divide and conquer, dynamic programming, graph algorithms. NP-completeness and basic recursion theory and undecidability. Sorting lower bounds. Number-theory based cryptography.
Software Engineering Introduction to the software engineering process and software lifecycle. Covers project management, requirements, architecture, design, implementation, testing, and maintenance phase activities in team based projects.
Introduction to Operating Systems Basic issues in concurrency, deadlock control, synchronization scheduling, memory management, protection and access control, inter-process communication, and structured design. Laboratory experiences with Unix-like operating system. Duplicates credit in CSCI 402.
Introduction to Computer Systems Computer organization; entity abstraction and representation; program execution; code optimization; memory usage; exception handling; processing control; computer performance; hands-on work done in C and assembly.
Introduction to Artificial Intelligence Concepts and algorithms underlying the understanding and construction of intelligent systems. Agents, problem solving, search, representation, reasoning, planning, machine learning.
Capstone: Design and Construction of Large Software Systems Group project with an outside stakeholder to develop real-world software solutions to large-scale problems. Topics include software engineering, professional preparation, and recent computer science research.
Capstone: Creating Your High-Tech Startup Capstone class in which students create their own technology startup, leveraging comprehensive CS knowledge and best industry practices.
Introduction to Internetworking Global Internet: design principles, layering, protocol design/analysis. Networked applications, Internet structure/architecture, Protocols for transport/congestion control, network layer/routing, link layer/MAC. Network security.
Capstone: Design and Construction of Large Software Systems Group project with an outside stakeholder to develop real-world software solutions to large-scale problems. Topics include software engineering, professional preparation, and recent computer science research.
Capstone: Creating Your High-Tech Startup Capstone class in which students create their own technology startup, leveraging comprehensive CS knowledge and best industry practices.
Computer Graphics Computer graphics, OpenGL, 2D and 3D transformations, Bzier splines, computer animation, rendering including ray tracing, shading and lighting, artistic rendering, virtual reality, visualization.
Native Console Multiplayer Game Development Implementation of AAA style multiplayer game running on consoles and DX11. Console development in native C++, console SDKs, engine components, gameplay, networking, data prediction/replication.
Introduction to Computer and Network Security A broad overview of security threats and defenses, security systems and functionalities, as well as current security practices. Includes homeworks and in-class exercises to provide practical experience working with such systems.
Introduction to Robotics Designing, building and programming mobile robots; sensors, effectors, basic control theory, control architectures, some advanced topics, illustrations of state-of-theart. Teamwork; final project tested in a robot contest.
Computer Systems and Applications Modeling Fundamentals Techniques and tools needed to construct/evaluate models of computer systems and applications. Analytical and simulation methods, capacity planning, performance/reliability evaluation, and decision-making
Cryptography: Secure Communication and Computation Introduction to modern Cryptography; mathematical/algorithmic studies of methods for protecting information in computer and communication systems: Public-Key Cryptosystems, zero-knowledge proofs, data privacy.
File and Database Management File input/output techniques, basic methods for file organization, file managers, principles of databases, conceptual data models, and query languages
Directed Research Directed Research
Final Game Project Design, iterative prototyping, and development of a 1st playable level.
Final Game Project Design, iterative stage 2 prototyping and development of a refined game.
Special Topics Special Topics
Introduction to Digital Circuits Digital system design and implementation; synchronous design of datapath and control; schematic/Verilog-based design, simulation, and implementation in Field Programmable Gate Arrays; timing analysis; semester-end project.
Introduction to Computer Networks Network architectures; layered protocols, network service interface; local, wide area, wireless networks; Internet protocols; link protocols; addressing; routing; flow control; software defined network; multimedia networks.
Parallel and Distributed Computation Introduction to parallel programming techniques, models and optimization strategies; Application mapping to multi-core, accelerator, GPU and cloud platforms; High Performance Computing and Data Science applications.
Introduction to System-on-Chip Design flow, tools, and issues related to System/Network-on-Chip (S/Noc) design for real-time embedded systems with applications in mobile, cloud, aerospace, and medical electronics.
Computer Systems Organization Register Transfer level machine organization; performance; arithmetic; pipelined processors; exceptions, out-of-order and speculative execution, cache, virtual memory, multi-core multi-threaded processors, cache coherence.
Embedded Systems Design Laboratory Specification, design, implementation, testing and documentation of a digital system project using embedded processors, programmable logic, analog I/O interfaces and application specific hardware. Capstone design experience.
VLSI Circuit Design Analysis and design of digital MOS VLSI circuits including area, delay and power minimization. Laboratory assignments including design, layout, extraction, simulation and automatic synthesis.
Directed Research Directed Research
Cooperative Education Work Experience Supervised work experience in a professional environment related to a specific degree program, academic level, and career objective
Programming Graphical User Interfaces Programming applications with dynamic graphical user interfaces. Topics include events, controls, resources, data bindings, styles and user experience.
Video Game Programming Underlying concepts and principles required for programming video games (topics include vectors, transformations, 3-D math, geometric primitives, matrices).
Professional C++ Applications of advanced concepts in C++ including lambda expressions, templates, secure coding, parallel programming, writing performant code, CMake and continuous integration.
Compiler Development Practical applications of techniques used to develop a programming language compiler.
Building the High Tech Startup Teach students the basic technologies and processes involved in building web and mobile startups. Students will be introduced to the different aspects of building a web startup including online business models, Product management, Agile development processes, technology platforms and operations, customer development and online marketing.
Programming Game Engines Techniques for building the core components of a game engine; 2-D/3-D graphics, collision detection, artificial intelligence algorithms, shading, programming input devices.
Numerical Methods Rounding errors in digital computation; solution of linear algebraic systems; Newtons method for nonlinear systems; matrix eigenvalues; polynomial approximation; numerical integration; numerical solution of ordinary differential equations.
Intro to Problem Solving using Computer Programming An introduction to computer science through problem solving and computer programming. Topics include variable and operators, control logic, functions, strings, loops, input/output, and recursion.  Programming concepts covered by this course include modularity, abstraction, top-down design, specifications, documentation, debugging, and testing.
Foundations of Computer Science A rigorous, non-programming introduction to the field of computer science.  Several core areas of computer science are introduced, including digital logic, computer organization and architecture, operating systems, programming languages, and computer networks.  For each, particular solutions to fundamental problems in the area are studied in depth to expose the student to what the field is actually about how computer scientists think.
Calculus I An introduction to calculus for students in mathematics, engineering, and the sciences. Covers the differential calculus of the algebraic, trigonometric, exponential and logarithmic functions, concluding with the definite integral and the fundamental theorem of calculus. The approach is intuitive and geometric, with emphasis on understanding the basic concepts of function, limit, derivative and integral.
College Composition Students practice the ways in which writing serves to expand, clarify, and order experience and knowledge, with particular attention to persuasive writing. Satisfactory completion of the course depends upon quality of weekly writing assignments as well as demonstration of proficiency in college-level writing.
Applied C Programming Studies the C programming language, introduces concepts in computer hardware and operating systems to support discussion of how a computer program is represented from the machine layer to the application layer.
Object Oriented Design & DataStructures Introduces the student to the fundamental principles of object-oriented design and programming using a high-level object-oriented language. Focuses on the specification, design, and implementation of classes and the interactions between classes, inheritance, abstract classes, and polymorphism. Introduces fundamental data structures including stacks, queues, lists, and binary trees.
Calculus II Completes the study of single-variable calculus. Topics covered include inverse trigonometric functions, hyperbolic functions, methods of integration, improper integrals, indeterminate forms, parametric equations, polar coordinates and infinite series.
Intro to Data Structures Introduces the student to the fundamental principles of data structure usage, specification, and implementation using a high-level, object-oriented language. Driven by the use of object-oriented techniques for program specification and modeling. Focuses on how data structure implementation choices affect and are affected by application needs.
Discrete Structures Introduction to discrete structures used in various areas of computer science. Topics include logic, sets, relations, functions, cardinality, enumeration, and computability.
Computer Architecture Examines the architecture and organization of the computer including digital logic, the CPU, busses, internal and external memory, computer number representation and computer instructions. Particular attention is paid to assembly and C languages as a mechanism for better understanding the architecture.
Data Structures and Algorithms Introduction to abstract data types as a unifying concept in the study of data structures. Topics include lists, queues, multi-linked lists, priority queues, trees, and graphs. The impact of these structures on algorithm design is explored.
Programming Languages Introduction to the fundamental concepts of programming languages.  Topics include the evolution and characteristics of the major programming languages, syntax and semantics, lexical and syntactic analysis, scope and binding, data types, control structures, subprograms and their implementation, abstract data types, and object-oriented programming.
Operating Systems Study of the structure of current computer operating systems. Topics include I/O management, memory management, multiprogramming, linking loaders, real and virtual systems, batch and time sharing.
Intro to Software Engineering A broad view of software engineering which introduces a variety of software engineering techniques which can be applied to practical software projects. Topics include process models, human factors, software specification; software design, programming techniques and tools, and validation.
Intro to Cybersecurity An overview of Cybersecurity as information security, policies, guidelines, and legal issues; the nature of network and computer attacks, system vulnerabilities and defense; implementation issues in Unix/Linux.  Projects include system setup, attack, and defense.
CS Capstone 1 The first of a two-course sequence, designed to guide students in proposing the Capstone project in either an independent study, group project, or field experience format.  The focus is on the early stages of project work, including finding a suitable topic and project advisor, investigating related work, and writing a thorough project proposal.
Computer, Ethics and Society Consideration of human and social consequences of technological development and application of computers, ethical questions of computer use, professional ethics.
CS Capstone 2 The second of a two-course sequence, designed to guide students in completing the Capstone project in either an independent study, group project, or field experience format.  The focus is on the later stages of project work, including completing the programming tasks, evaluating the implemented systems, documenting all work in a project report, demonstrating the work in action, and making a public oral presentation.  The relevant skills are covered and practiced by studying a collection of classic and topical papers.
Automata, Computability and Languges Fundamentals of formal languages and the mathematical theory of computation; finitestate automata, nondeterminism, regular expressions, and Kleene’s Theorem; context-free grammars, pushdown automata, the correspondence theorem and the pumping lemma; computability, Turning machines, and the halting problem.
Introduction to Problem Solving Using Computer Programming An introduction to computer science through problem solving and computer programming. Topics include variable and operators, control logic, functions, strings, loops, input/output, and recursion.  Programming concepts covered by this course include modularity, abstraction, top-down design, specifications, documentation, debugging, and testing.
Foundations of Computer Science A rigorous, non-programming introduction to the field of computer science.  Several core areas of computer science are introduced, including digital logic, computer organization and architecture, operating systems, programming languages, and computer networks.  For each, particular solutions to fundamental problems in the area are studied in depth to expose the student to what the field is actually about how computer scientists think.
Object-Oriented Design and Data Structures Introduces the student to the fundamental principles of object-oriented design and programming using a high-level object-oriented language. Focuses on the specification, design, and implementation of classes and the interactions between classes, inheritance, abstract classes, and polymorphism. Introduces fundamental data structures including stacks, queues, lists, and binary trees.
Introduction to Data Structures Introduces the student to the fundamental principles of data structure usage, specification, and implementation using a high-level, object-oriented language. Driven by the use of object-oriented techniques for program specification and modeling.
Foundations of Computer Science  A rigorous, non-programming introduction to the field of computer science.  Several core areas of computer science are introduced, including digital logic, computer organization and architecture, operating systems, programming languages, and computer networks.  For each, particular solutions to fundamental problems in the area are studied in depth to expose the student to what the field is actually about how computer scientists think.
Introduction to C++ Programming  Topics include programming techniques with a brief introduction to hardware concepts as they apply to software development. Students are assigned programs emphasizing numerical algorithms for implementation in the C++ language. Assumes knowledge of the Windows operating system, basic word processing, and file and folder management.
General Chemistry I Topics include matter, chemical reactions, stoichiometry, thermochemistry, quantum theory, atomic structure, electronic configurations, periodic properties of elements, bonding theories, and molecular geometries.
Introduction to Geology A study of earth materials and processes, including their impact on humans.  Topics include mineralogy, formation of igneous, metamorphic and sedimentary rocks, geologic time, weathering and soil formation, glaciation, deserts and desertification, coastlines, earthquakes and seismology, and evolution of mountain belts and plate tectonics.
First-Year Seminar First-Year Seminar
Calculus with Analytic Geometry I Differential calculus topics include derivatives and their applications to rates of change, related rates, linearization, optimization, and graphing techniques. The Fundamental Theorem of Calculus, relating differential and integral calculus begins the study of Integral Calculus. Antidifferentiation and the technique of substitution is used in integration applications of finding areas of plane figures and volumes of solids of revolution. Trigonometric functions are included in every topic
Introduction to Programming Techniques Design and implementation of algorithms. Structured programming. Problem solving techniques. Introduction to a high-level language, including arrays, procedures, and recursion.
Science Course Science Course
English Composition An overview of composition studies, with particular attention to the schools of writing pedagogy.
Calculus with Analytic Geometry II The goals of our calculus courses include to develop the students' knowledge of calculus techniques and to use the calculus environment to develop critical thinking and problem solving skills. This course covers the following topics: logarithms, exponentials, and inverse trigonometric functions; applications of the definite integral and techniques of integration; sequences and series; power series and Taylor polynomials; parametric equations and polar functions.
Intermediate Programming Object-oriented programming, recursion, fundamental data structures (including stacks, queues, linked lists, hash tables, trees, and graphs), the basics of algorithmic analysis, and an introduction to the principles of language translation.
Arts Course Arts Course
Health and Physical Activity Health and Physical Activity
Object Oriented Programming with Web-Based Applications The course covers advanced object-oriented principles and their application to web-based, net-centric computing. Major topics include virtual machines, intermediate code generation (Java-specific), graphical user interfaces (GUI) design, event handling, server-side programming with database queries, and security, permissions and file management concepts for client/server systems. Extensive programming assignments provide an understanding of the entire process of client/server development including interface prototyping, program design, implementation of both client and server programs, unit testing, and documentation
Matrices The determinant of a matrix is also introduced; it gives a test for invertibility. In the second part of the course the key ideas of eigenvector and eigenvalue are developed. These allow one to analyze a complicated matrix problem into simpler components and appear in many disguises in physical problems. The course also introduces the concept of a vector space, a crucial element in future linear algebra courses. This course is completed by a wide variety of students across the university, including students majoring in engineering programs, the sciences, and mathematic
Effective Speech Introduction to speech communication: formal speaking, group discussion, analysis and evaluation of messages.
Humanities Course Humanities Course
Discrete Mathematics for Computer Science Discrete mathematics and foundations for modern computer science. Topics include sets, relations, logic, algorithms, graphs, finite state machines and regular expressions.
Statistical Analysis I Probability concepts; nature of statistical methods; elementary distribution and sampling theory; fundamental ideas relative to estimation and testing hypotheses.
Effective Writing: Technical Writing A key emphasis will be on the rhetorical principles of effective communication, including context analysis and defining clear, actionable purposes. Students will gain experience with a wide range of technical writing genres, including reports, descriptions, definitions, procedures, job application documents, emails, memos, and web applications. Students will also learn about the importance of document and graphic design, including how best to design communications to maximize their potential for success.
Fundamentals of Communication Networks Introduction to the composition of communciation networks, including trans- mission mediums and protocols, transfer methods, topologies and software, and communications hardware.
Computer Organization and Architecture Data representation, digital logic, instruction set/control logic, machine/ assembly languages, advanced architectures, memory hierarchy, I/O devices, overall system design.
Data Structures and Algorithms This course covers elegant algorithmic and data structure techniques that underpin modern biological data analysis. Bioinformatics is a growing field with immediate implications for our understanding of biology and treatment of disease. This course covers elegant algorithmic and data structure techniques and their use in bioinformatics. The emphasis is on recurrent ideas that underpin modern biological data analysis, presented in conjunction with their biological applications. The course is suitable both for students interested in doing bioinformatics research and those interested in applications of algorithms to the natural sciences. Some of the algorithms/data-structures that may be covered include exact string matching, suffix trees, suffix arrays, de Bruijn graphs, hidden Markov models, breakpoint graphs, succinct data structures, the Burrows-Wheeler transform, the FM-index, network flow, and bidirected graphs. Some of the biological applications will include sequence alignment and assembly, cancer genomics, phylogeny, gene finding, and variation detection.
Database Management Systems Topics include: conceptual data modeling, relational data model, relational query languages, schema normalization, database/Internet applications, and database system issues.
Computing Elective Computing Elective
Net-centric Computing We will also consider how JavaScript Object Notation (JSON) can sometimes be used as a viable alternative to XML for server to client data transmission. On the server: We will learn about a variety of server-side technologies for consuming, storing, transforming, and generating content. We will use the three main types of XML parsers to consume, transform, and generate XML; we will use XSL and XPath to style and transform XML; we will use XML binding tools to convert XML to and from classes (in some high-level language); we will use Data Access Objects and object-relational mapping tools for data persistence. We will learn how servers use Web services and RSS feeds to provide XML structured content, and we will consume existing Web services and RSS feeds and produce simple Web services.
Operating System and Systems Programming Operating System and Systems Programming
Supporting and Related Area Course Supporting and Related Area Course
Computer Science Senior Project I Computer Science Senior Project I
Programming Language Concepts Fundamental concepts of programming language design, specifications, and implementation; programming language paradigms and features; program verification.
Software Engineering This includes proper planning and implementation.Knowledge of generally accepted core standards and guidelines is stressed, including safety planning, hazards analysis, software management planning, requirements specification, design documents, coding, test plans, test specifications, test logs, test reports, design reviews, structured code walk-throughs, verification and validation, and reporting. The Unified Modeling Language (UML) is introduced and followed, including the components of UML, class diagrams, object diagrams, use-case diagrams, state diagrams, sequence diagrams, activity diagrams, collaboration diagrams, component diagrams, and deployment diagrams. Object oriented concepts include classes, abstraction, inheritance, polymorphism, encapsulation, message sending, associations, and aggregation
Computer Science Senior Project II Computer Science Senior Project II
Behavioral Science Course Behavioral Science Course

Rhetoric This course presents an integrated approach to writing, reading, and critical thinking by developing the grammatical, logical, and rhetorical skills necessary for university writing.
Professional and Technical Communication Expands students' professional and team communication skills and strategies in technical contexts. Integrates writing, speaking and group communication by developing and presenting technical information to different audiences. Written assignments focus on creating professional technical documents, such as proposals, memos, abstracts, reports and letters. Presentation assignments emphasize planning, preparing and delivering dynamic, informative and persuasive presentations. Attendance at first class mandatory.
Differential Calculus Course covers topics in differential calculus of functions of one variable; topics include limits, continuity, derivative, chain rule, implicit differentiation, mean value theorem, maxima and minima, curve sketching, derivatives of inverse trigonometric functions, antiderivative, substitution method, and applications.
Mechanics Calculus based. Basic physics including a study of space and time, kinematics, forces, energy and momentum, conservation laws, rotational motion, torques, and harmonic oscillation
Electromagnetism and Waves Topics include electrostatics and electromagnetics, electric field and potential, electric currents, magnetic fields, laws of Coulomb, Ampere, and Faraday, Maxwell's theory of wave propagation. Two lectures per week
American National Government Survey of American national government, politics, and constitutional development
Social Issues and Ethics in Science and Technology This course exposes students to major theoretical approaches and professional codes of ethics and how they may be applied to explore a range of important social issues in the information age. Issues of professional ethics, computer crime and privacy, intellectual property, the balance between the acceptability of risk and constraints such as cost, scheduling, safety and quality, the role of globalization and various important constitutional issues are explored by drawing upon case studies.
Physics Laboratory I Laboratory course to accompany any Physics I or Mechanics course. Experiments investigate basic measurements and statistics including error, mean, standard deviation and error propagation; one dimensional and two dimensional motion; Newton's laws; conservation laws of energy and momentum; rotational motion; and oscillations.
Computer Science I Review of control structures and data types with emphasis on structured data types. Applies the object-oriented programming paradigm, focusing on the definition and use of classes along with the fundamentals of object-oriented design. Includes basic analysis of algorithms, searching and sorting techniques, and an introduction to software engineering. Programming language of choice is C/C++. Students will also be registered for an exam section.
Computer Science II Further applications of programming techniques, introducing the fundamental concepts of data structures and algorithms. Topics include recursion, fundamental data structures (including stacks, queues, linked lists, hash tables, trees, and graphs), and algorithmic analysis
Discrete Mathematics for Computing I Principles of counting. Boolean operations. Logic and proof methods. Recurrence relations. Sets, relations, functions.
Mechanics Calculus based. Basic physics including a study of space and time, kinematics, forces, energy and momentum, conservation laws, rotational motion, torques, and harmonic oscillation.
Computer Architecture This course introduces the concepts of computer architecture by going through multiple levels of abstraction, and the numbering systems and their basic computations. It focuses on the instruction-set architecture of the MIPS machine, including MIPS assembly programming, translation between MIPS and C, and between MIPS and machine code. General topics include performance calculation, processor datapath, pipelining, and memory hierarchy.
Automata Theory A review of the abstract notions encountered in machine computation. Topics include finite automata, regular expressions, PDAs, and context-free languages.
Computer Science Project Computer Science Project
Advanced Algorithm Design and Analysis Asymptomatic analysis, recurrences, and graph algorithms. Algorithm design techniques such as greedy method, dynamic programming, and divide-and-conquer. Issues from computational complexity.
Operating Systems Concepts An introduction to fundamental concepts in operating systems: their design, implementation, and usage. Topics include process management, main memory management, virtual memory, I/O and device drivers, file systems, secondary storage management, and an introduction to critical sections and deadlocks.
C/C++ Programming in a UNIX Environment Advanced programming techniques utilizing procedural and object oriented programming in a UNIX environment. Topics include basic UNIX concepts, file input and output, implementation of strings, and dynamic memory allocation/management. Design and implementation of a comprehensive programming project is required.
Discrete Mathematics for Computing II Advanced counting methods; recurrence relations, divide and conquer algorithms, principle of inclusion and exclusion. Partial orders and lattices, Algorithmic complexity. Graph theory. Strings and languages. Number theory. Elements of modern algebra
Artificial Intelligence Basic concepts and techniques that enable computers to perform intelligent tasks. Examples are taken from areas such as natural language understanding, computer vision, machine learning, search strategies and control, logic, and theorem proving.
Introduction to Machine Learning Algorithms for creating computer programs that can improve their performance through learning. Topics include: cross-validation, decision trees, neural nets, statistical tests, Bayesian learning, computational learning theory, instance-based learning, reinforcement learning, bagging, boosting, support vector machines, Hidden Markov Models, clustering, and semi-supervised and unsupervised learning techniques.
Computer Animation Introduction to traditional animation. Kinematics of motion. Key framing. Coordinate systems and transformations (review), Euler angles and Quaternions, Catmull Rom and B-Splines, Advanced Key framing, articulated figures (forward kinematics), human and animal modeling (soft tissue, skin, etc.). Facial animation (parametric). Physically based modeling (rigid, collision detection). Physically based modeling (deformable). Behavioral and heuristic models. Algorithmic animation. Optimization techniques. Animation languages and systems. Motion capture and real time control. Virtual reality and animation. Rendering and temporal aliasing. 2D and 3D morphing. 3D modeling.
Computer Graphics Review of graphic display architecture and graphic input devices. Two- and three-dimensional transformations, matrix formulations, and concatenation. Clipping and windowing. Data structures for graphics systems, segmented display files, rings, etc. Hidden line and surface elimination. Shading. Graphics packages and applications.

Intro to Computers This course will introduce the students to microcomputer usage and will fulfill the core curriculum computerliteracy/technology requirements. Topics include; word processor, presentation, spreadsheet, anddatabase.
Crit Think Info Age  This course is designed to equip students with the ability to apply critical thinking in the field of Computing, Information Systems, Information Technology, and Mathematics. They will demonstrate critical thinking skills through the analysis and/or synthesis of information to draw conclusions or make decisions on matters pertaining to career planning, personal growth and goal-setting as potential careers of the future in the information age.
College Writing I This course focuses on effective writing, grammar review, and critical thinking. Students develop research and writing skills using classical rhetorical modes of argument and logic and by writing college-level essays and research papers with the use of information technology.
Computer Programming I  This course builds on the basic concepts and syntax of the Java programming language. It is the first course in the series of programming study in computer science. Topics include programming, problem solving, design, construct, analysis of the programs and objectoriented programming.
University 101  This course is designed to help new college students develop study habits, attitudes and knowledge which will lead to academic success. The course content includes Florida Memorial University’s history and resources, student time management, study methods, memory techniques, career exploration, and cultural literacy.
College Writing II  This is an intensive writing, reading, and research course. Students compose research papers and college-level essays based on readings from poetry, short stories, drama, novels, periodicals, and other literature, incorporating the use of information technology.
Calculus I A brief review of functions and plane analytic geometry; intuitive and geometric definitions of limit, continuity and derivative; differentiation of elementary functions; and applications of derivatives, including sketching graphs of functions, and optimization problems.
Calculus II  Indefinite integral, Riemann sums and definite integral, elementary integration techniques, and applications of integration.
Critical Think/Read This course develops and strengthens the critical thinking skills needed for reading college and professional materials, and will include bias and propaganda, fallacies, connotation/ denotation, inductive/deductive reasoning, problem-solving, and inferential thinking.
Introduction to Public Speak  An introduction to effective communication in speaker-audience situations. Students learn basic techniques of researching, organizing and presenting their own, original ideas to an audience. There is additional emphasis on developing effective listening skills and ethical communication strategies for use in a democratic society.
Data Structures  This course studies the basic concepts of data structures and associated algorithms. The course covers arrays, simple sorting algorithms, stacks and queues, linked lists, recursion, advanced sorting, binary trees, red-black trees, 2-3-4 trees and external storage, hash tables, heaps graphs, and weighted graphs. The relative advantages and disadvantages of data structure and its use are discussed.
Computer Programming II  Uses analysis and review of existing systems to explain the structured systems analysis and design process. Working with the system’s life cycles, topics include flow diagrams, cost/benefit analysis, interviewing and documentation.
African Amer His I  This is an intensive reading course. The course promotes the awareness and exploration of relevant books and materials concerning the lives, struggles, achievements, and contributions of African Americans.
Discrete Math  Propositional and predicate logic, set theory, axiomatic construction of mathematical structures, mapping, cardinal numbers, and principles of mathematicalinduction.
Probability & Stats  Probability concepts, discrete and continuous distributions, random variables, expectation and variance, frequency distribution, statistical inferences and sampling, hypotheses testing for the mean and variance of a population.
Intro to Religion  This is an intensive reading and writing course surveying the practices and associated customs of the major recognized religions of the world, such as Judaism, Christianity, Hinduism and Islam.
Computer Organization This course introduces computer hardware and system software concepts. The objective is to provide technical knowledge and skills on computer resource management, systems design, and systems implementation. Material on systems architecture, data storage technology, systems integration and performance, input/output technology, data and network communication, computer networks, application development, operating systems, file management, internet and distributed applications, and system administration are presented in this course.
Computer Programming III  The course covers common algorithms such as recursion, searching and sorting, multimedia, handling multithreads, and network programming.
Operating Systems  Introduces the students to operating systems and systems programming. Topics include design, implementation, and maintenance techniques, multi-level memory management and resource allocation, scheduling supervisors, loaders, I/O control systems, multiprogramming, file and systems protection.
Network/Data  Communications  This course covers the basic concepts of network and data communications. The course covers sections on network design essentials, media, interface cards, communications and protocols, architectures, administration and support, types of networks, troubleshooting network problems, and internetresources.
Artificial Intelligence  This course discusses various areas of artificial intelligence including knowledge representation, learning vision, expert systems, robotics and natural languages. Artificial Intelligence programming languages and their techniques and control structures are alsopresented.
Database Conc & Design The study focuses on the theoretical design and management of database systems conceptual data models, implementation models, data dictionary and policy formulation. The study will also uncover structures relating to databases, design methodology, normalization, integrity constraints, distributed databases, data warehouse, and relational algebra.
Physics with Calculus I  This course covers the principles of classical mechanics using the techniques of the calculus-- vectors, laws of circular motion, work/energy conservation laws, linear and angular momentum, rotation of rigid bodies, oscillatory motion, the laws of thermodynamics, and the kinetic theory of gases.
Physics with Calculus II  This course covers electric fields and forces, Gauss’ Law, electric potential, capacitance and dielectrics, current and resistance, direct current circuitry, magnetic fields and their sources, Faraday’s Law, inductance and alternating current circuits, geometric optics, and physical optics using the calculustechniques.
Physics with Calculus I Laboratory  Experiments include error estimation, laws of linear motion and collision; extended circular motion; mechanical equivalent of heat; diffraction; polarization; analysis of spectral lines; propagation, reflection, and refraction of light; transfer of heat, and expansion of materials using calculus.
Physics with Calculus II Laboratory Experiments include induction; electric circuits; Ohm’s Law; dependence of resistance on length, area, and temperature; parallel and series connection of resistors; motors; electromagnetism and induction; characteristics of parallel plate capacitors; motion of charges in a magnetic field; and deflection of an electron beam by homogeneous magnetic fields.
Spanish I This course and its sequel, constitute the basic sequence in Spanish. Emphasis is on the development of competence in the language
Spanish II This course completes the sequence in the Spanish language core requirement. It prepares students for advanced course work in Spanish if desired.
Software Engineering Principles This course uncovers the process of software engineering from beginning concepts, to design, testing, maintenance and retirement. Issues concerning integration, software quality, security, fault tolerance, human factors, operation, product feasibility and organizational structures are discussed.
Senior Project  This is a capstone course for senior majors in the Computer and Information Sciences. Students will have an opportunity to undertake valuable research in areas of computer science, computer information systems, and management information systems to organize into teams and select a design project, complete the preliminary design project for approval and finally present detail and final design work or prototype to  departmental faculty.
Programming Languages This course studies the basic concepts of programming languages. Students will gain a broad comprehension of many diverse programming languages, along with confidence and understanding, allowing the students to adopt new languages as they become available in the future.
Complexity Analysis of Algorithms  This course is a study of algorithm design, algorithm complexity analysis, and problem complexity analysis. Types of problems addressed will include dynamic programming, searching and sorting, divide & conquer, backtracking, branch-and-bound.
Cryptography and Network Security This course explores the algorithms for secure computation and security challenges in network and protocol design. The course also studies Public and Private Key Cryptography, Multi-party Computation, Secret Sharing, Distributed, Homomorphic and functional encryption, and Network Security and Protocol Design.
Computer Ethics  This course deals with the ethical and social issues arising from the development and deployment of computers in society. The course also provides fundamental information about computer and technology ethics, as well as the details the ramifications of continuing technological developments with regard to privacy, security, piracy, access to computing technology for person with disabilities and other important philosophical and ethical issues.
Applications in Engineering Introduction of various concepts in engineering. Emphasis on project work, engineering ethics, and engineering design process.
Introduction To Computing In Engineering An introduction to engineering problem-solving with the aid of computational software. Scientific computing concepts will be introduced including number representation, arrays, structured programming techniques, and good coding practices.  Basic numerical and data analysis methods will be introduced including numerical differentiation and integration, matrix operations, descriptive statistics, curve fitting, and optimization.
Calculus I Differential and integral calculus: limits and continuity, the derivative and techniques of differentiation, extremal problems, related rates, the definite integral, Fundamental Theorem of Calculus, derivatives and integrals of trigonometric functions, logarithmic and exponential functions.
Calculus II Applications of the integral, techniques of integration, separable differential equations, improper integrals. Sequences, series, convergence tests, Taylor series. Polar coordinates, complex numbers.
General Physics I W/lab Principles of classical mechanics, fluids, heat, thermodynamics. Lectures, recitations, laboratories. Calculus based.
General Physics II W/lab Principles of  electricity and magnetism, waves, sound, and light. Lectures, recitations, laboratories.
Expository Writing Explores the principles of effective written communication and provides intensive practice in writing various types of expository prose, especially analysis and persuasion.
Introduction To Computer Science The study of computer science centers on two complementary aspects of the discipline. First, computer science is fundamentally concerned with the problem-solving methodologies it derives from its foundational fields: the design principles of engineering, mathematical theory, and scientific empirical study. Second, these methodologies are applied in the complex context of a modern day computing system. In this course we will address both of these important aspects. As a means for developing your design skills, we will discuss the fundamental features of a high level, general purpose programming language — namely C++ — and learn how to use it as a tool for problem solving. We will also consider the performance of solutions, and how to apply both analytical and empirical assessment techniques
Data Structures Data structures and algorithms are studied through major programming projects. Topics include linked lists, trees, graphs, dynamic storage allocation, and recursion.
Calculus III Vectors in two and three dimensions, applications of the derivative of vector-valued functions of a single variable. Functions of several variables, continuity, partial derivatives, the gradient, directional derivatives. Multiple integrals and their applications. Line integrals, Green's theorem, divergence theorem, Stokes’ theorem.
Discrete Mathematics Sets, relations and functions, logic and methods of proof, combinatorics, graphs and digraphs.
General Physics II W/lab Principles of  electricity and magnetism, waves, sound, and light. Lectures, recitations, laboratories.
Introduction To Digital Logic Circuits W/ Lab Number systems and their conversions. Boolean algebra and Karnaugh map minimizations of Boolean expressions. Logic gates. Analysis and design of combinational logic circuits. Characteristics of various flip-flops. Analysis and design of sequential logic circuits. Design of counter and shift register circuits. Various binary codes and code conversion circuits. Binary arithmetic and arithmetic circuits. Introduction to iterative design.
Introduction To Electrical Systems W/ Lab Definitions of circuit elements, fundamental laws, selected network theorems, controlled sources, introduction to the oscilloscope, energy and power, natural response and complete response of first order circuits, steady state sinusoidal behavior, algebra of complex numbers, phasors, impedance, average and reactive power, introduction to analog and digital systems, frequency response and filters, measurements and instrumentation, introduction to computer applications for circuit analysis and design.
Machine Structure & Assembly-language Programming Structure of machine-level data and code, including memory, cache, registers, machine arithmetic, and bitwise operations. Encapsulating machine functionality through interfaces and abstract data types. Structure of assembly code, relocatable object code, and binary machine code, and the translations between them. Applications of machine-level operations and code translations in programming projects.
Algorithms Introduction to the study of algorithms. Strategies such as divide-and-conquer, greedy methods, and dynamic programming. Graph algorithms, sorting, searching, integer arithmetic, hashing, and NP-complete problems.
Convex Optimization Convex sets, convex functions and convex optimization problems; duality theory and optimality conditions; algorithms for solving convex problems including descent, gradient descent, Newton and interior point methods.
Human Computer Interaction Introduction to human-computer interaction, or how computers communicate with people. Methodology for designing and testing user interfaces, interaction styles (command line, menus, graphical user interfaces, virtual reality), interaction techniques (voice, gesture, eye movement), design guidelines, and user-interface management system software. Students will design a small user interface, program a prototype, and test the result for usability.
Introduction To Biomedical Engineering An introduction to the interdisciplinary nature of biomedical engineering. The biological, chemical, electrical, and mechanical principles involved in the design and operation of medical devices. Biopotentials, electrodes, transducers, biocompatibility of materials, and patient safety.
Engineering for a Sustainable and Resilient Society Quantitative description of natural and engineered processes affecting environmental sustainability at local, regional, and global scales.  Principles of ecology, material and energy flows, environmental quality, climate change, and resiliency in a civil and environmental engineering context.
Senior Capstone Project I Requirements analysis and design of a senior capstone project. Requirements analysis and elicitation methods, and prototyping. Design principles and methods, including designing for usability, security, testability, performance, and scaling. Project management and planning, including cost and effort estimation. Writing effective documentation.
Senior Capstone Project II Implementation and testing of the project designed in COMP97. Implementation tools, strategies, and platforms. Testing and debugging methodologies. Maintenance and release management. Legal, ethical, and social impacts of computing.
Programming Languages Principles and application of computer programming languages.  Emphasizes ideas and techniques most relevant to practitioners, but includes foundations crucial for intellectual rigor: abstract syntax, lambda calculus, type systems, dynamic semantics.  Case studies, reinforced by programming exercises.  Grounding sufficient to read professional literature.
Computation Theory Models of computation: Turing machines, pushdown automata, and finite automata. Grammars and formal languages, including context-free languages and regular sets. Important problems, including the halting problem and language equivalence theorems.
Computer Graphics The course provides the background to understand and build interactive graphics systems. Introduction to computer graphics from simple two-dimensional graphics through three-dimensional viewing and transforms. Interactive graphics programming, raster graphics, raster algorithms, geometrical transformations, viewing in three dimensions, modeling and hierarchical data structures, visual realism, virtual reality, interaction devices, tasks and techniques.
Visualization Visualization as a tool for data analysis, recall, inference, and decision-making. Tools for visual description and presentation. Principles of effective visualization, including data-visual mapping, interaction techniques, color theory, cognitive and perceptual psychology, and human factors of visual depictions of data.
Biostatistics An examination of statistical methods for designing, analyzing, and interpreting biological experiments and observations. Topics include probability, parameter estimation, inference, correlation, regression, analysis of variance, and nonparametric methods.
Software Engineering Core principles and ideas that enable development of large-scale software systems, with a focus on programming. Abstraction, modularity, design patterns, specification, testing, verification, and debugging.
Mechanical Design And Fabrication Fabrication techniques focusing on manual and CNC machines. Engineering drawings. Fundamentals of machine design. Elastic and plastic deformation, theories of failure, impact, and fatigue of machine elements.
Engineering Psychology Survey of the applied areas of psychology that have proven useful in the design of equipment for human use and in the design of human-machine systems. Emphasis on how humans process information and how psychological science can further inform each stage of information processing.
Freshman Seminar Required introduction to the Computer Science and Software Engineering programs. Students will discuss what it means to be a professional in the fields of computer science and software engineering, meet professionals in these fields, and hear about the wide range of employment opportunities
Fundmentals Of Computer Science I This course introduces the beginning programmer to the fundamentals of object-oriented programming while becoming acquainted with many of the core features of Java. The student will be exposed to the creation of a variety of games and applications. After the basics, the student will learn to develop his or her own systems of classes, eventually working with many of Javas Graphical User Interface (GUI) features and will develop a desktop Windows application.
Calculus I Includes the study of limits of functions, continuous functions, tangents and derivatives, implicit differentiation, extreme values, curve sketching, antiderivatives, integrals of continuous functions, and the Fundamental Theorem of Integral Calculus.
Business Ethics and Decision Making Seeks to explore value systems as a basis and framework for ethical decisions to develop sensitivity for the numerous ethical issues in the competitive business world. Encourages the evaluation and development of personal value systems and develops an awareness of the value implications of managerial decision.
Introduction To Technical Writing Introduces students to written technical communication. Coverage includes electronic communication, memo writing, report writing, formal research writing, document design (including the design of graphical elements), grammar, usage, and style. Course assumes working knowledge of Microsoft Word.
Introduction to Embedded Systems Develops basic concepts of computer systems and computer architecture. Includes base-2 arithmetic, octal and hexadecimal number systems, computer addressing modes, I/O, and assemblers.
Calculus II Includes the study of methods of integration including, u-substitution, integration by parts, integration by partial fractions. Studies the derivatives and integral of the inverse trigonometric functions, exponential functions, and hyperbolic functions. Also studied are applications of the integral, sequences, and infinite series.
Fundamentals Of Computer Science II this class explores the finer and more subtle elements of programming.  Programming techniques and structures will include recursion, linked lists, stacks and queues, threading and socket communication. In the second part of the semester, students will be introduced to an additional operating system and an additional programming language.
Presenting Technical Information Interactive, participatory course which requires use of multimedia to enhance the visual dimension of oral presentations.
Advanced Public Speaking with greater emphasis on argumentation, persuasion, audience analysis and adaptation, and oral style.
Introduction to Public Speaking A performance course in public speaking for the beginner covering theory and practice in the preparation and presentation of original speeches to inform and persuade. Logical organization is stressed.
Data Structures and Algorithms Commonly used structures found in computing and the algorithms which manipulate them are studied. Design and analysis of algorithms are emphasized. Topics include stacks, queues, general lists, trees, hashing, searching, and sorting.
Discrete Structures Course includes those mathematical topics which will help students in future courses. It refines problem solving skills by providing a vocabulary, structures and techniques for working with problems. Topics include logic, theorem  proving, properties of sets, functions, relations, and sequences, counting techniques, recursion, and graph theory.
Multivariable Calculus Includes the study of vector-valued functions, parametric functions, curves in the plane, the polar coordinate system, partial derivatives, multiple integrals and calculus of vector fields.
Design & Analysis of Algorithms Covers several advanced data structures, including balanced search trees and graphs. Studies common algorithm design methods (Brute Force, Decrease and Conquer, Divide and Conquer, Greedy, and Dynamic Programming) to solve various classic problems. Ehmphasizes the space and time complexitites of various data structures and their associated algorithms.
Matrices & Linear Algebra An introduction to matrices and matrix algebra, inverses, determinants, solving simultaneous linear equations, vector spaces, dot products and norms, linear transformations, eigenvalues and eigenvectors.
Introduction to Differential Equation A study of first order and linear second order differential equations, power series methods, numerical techniques, Laplace transform, with applications to mechanical vibrations and circuits.
Concepts of Programming Languages Students will study concepts of high-level programming languages. Topics include regular expressions, context free grammars, programming language syntax, semantics, language translation and how language constructs are implemented. Projects include a lexical analyzer and/or a parser. Students will also program in a functional and a logic language.
Software Engineering Studies the process of engineering software applications and systems. Topics include process models, metrics, requirements engineering, design, testing, quality assurance, configuration management and software inspections.  Students gain experience in these areas by working on a software project.
Data Analytics Using an agile project management methodology, students will develop knowledge and skills in data analytics to provide creative and innovative solutions to a variety of business, science, and engineering problems, while gaining proficiency in the use of current data analytics software.
Statistics for Scientists and Engineers Studies probability, random variables, univariate discrete and continuous probability models, expected values, sampling distributions, data collection, point and interval estimation, and hypothesis testing.
Computer Architecture Studies the design and organization of computer systems, including the instruction set and interconnection of hardware components. Topics include computer performance, assembly language programming, microprocessor architecture, pipeline processing, memory and storage organization, and multiprocessor computers.
Software Maintenance Continues to study the process of developing software applications and systems. Software requirements, design and testing are addressed. Students gain experience in these areas by working on software maintenance projects that involve significant changes to a previously developed product and further development on a previously started project.
Introduction to Film This course examines the development of the film medium, paying equal attention to its history and its language. We will learn the necessary tools to understand and analyze the technical, formal, historical, and theoretical aspects of film, such as cinematography, editing, composition and framing, sound, narrative, and theories of cinema. We will consider the history of film, and genres such the Detective-Crime Thriller, the Documentary, Experimental, and Animated film, studying closely a selection of watershed films that shaped the language of this medium. Issues of race and gender will feature prominently in our discussions as well as consider of the film industry, such as issues of production, distribution, and exhibition. In short we will pay equal attention to the aesthetic, theoretical, and industrial aspects of film.
Database Systems The traditional relational database system is explored more deeply, along with alternative database systems including document-oriented, graph-oriented, and object-oriented systems.  Database architectures are also explored including scalability, reliability, distributed databases, in-memory databases, database replication and fault tolerance.  Design considerations such as relational algebras, functional dependencies and normal forms, and query execution are also considered.  Lastly, integration of databases into software is explored and the benefits of creating a database API is developed.
Numerical Computing for Engineering & Science An introduction to the basic algorithms of numerical analysis and the theory behind them. Topics include systems of linear and nonlinear equations, interpolation, numerical differentiation and integration and ordinary differential equations.
Artificial Intelligence An introduction to the basic concepts of Artificial Intelligence. Topics to be covered include the history of AI, the problems treated in AI, solution techniques, state spaces, search algorithms and heuristics, expert systems, natural language processing, and robotics.
Internship For academic work done in conjunction with an approved work experience related to the Computer Science degree program. Students should consult with their faculty advisor and/or department Internship Coordinator to determine the availability of appropriate work experiences and the specific academic requirements for receiving credit.
Networks A study of the fundamental principles of computer based communication. Principles, design, and standards of networks will be discussed, including standard network protocols. Includes an introduction to telecommunications and basic data transfer processes.
Advanced Technical Writing Emphasizes effective, clear and accurate scientific and technical communication. Focuses on writing theory and on the process approach to writing. Rewriting is stressed. Written work integrated with major fields.
Writing in the Sciences Emphasizes research strategies, including electronic searching and retrieval, to write, format, and polish action-oriented, ethical documents focusing on the profession that student is preparing to enter. Collaborative writing and incorporation of computerized capabilities for documents are course expectations.
Advanced Business Writing Provides strategies for effective communication used in business, engineering and other professions, such as correspondence, interagency communication, reports and proposals. Emphasizes audience-oriented, clear, concise writing; techniques of research; formats; and electronic communication (sometimes offered electronically)
Theory Of Computation Students will look abstractly at computers and what it means to be computable. Turing Machines, which appear to be powerful enough to serve as the basis for defining computability, will be studied. Students will learn that some questions are not computable by any computing machine. Regular, context-free languages, decidability and computational complexity will also be studied.
Operating Systems I/O management, memory management, processor management, device management and performance measurement/evaluation are examined. Other operating systems, theoretical and current, are discussed.
Web Science This course examines the structure of the world wide web from a software architecture point of view and how best to engineer software applications using web technologies.  The structures is also examined as the worlds largest distributed data repository of information and how to apply descriptive logic in a semantic graph framework to make inferences from this information and build ontologies.  Finally, topics in cryptology are examined for how to construct secure protocols and hashes used to reduce the vulnerabilities of threat vectors in web applications.
Senior Seminar Investigations in the Computer Science and Software Engineering fields. Students will report on their internship experience, present their senior design projects, and/or present their undergraduate research. Faculty and guest speakers will discuss current issues in computer science and software engineering, Students will take an exam covering their computer-related course work. This is a required seminar for Computer Science and Software Engineering seniors.
Internship Internship
Introduction to Computer Science This course introduces the fundamentals of systems and computer science. A brief examination of critical, creative, systems and scientific thinking, is followed by more details on computational thinking. The focus is hands on computing exercises and group exercises that stress the importance of algorithms and problem solving.
Introduction to Engineering Provides information on engineering education, the engineering profession, engineering basic concepts and engineering tools. Introduces the engineering design process and provides the opportunity for students to complete engineering design projects.
Calculus I Limits, continuity, and the derivative and integral of functions of one variable, with applications, and the fundamental theorem of calculus.
Unix Lab This course will present the basic concepts of LINUX and UNIX operating systems. Topics that will be examined include Vi editor, Linux Command, directories, Disks and File systems, Users and Groups, File Permissions, Processes, file compression, basic network use, manage files, create and modify files, and Shell script.
Computer Science I This course provides an introduction to the discipline of computer programming. Closed laboratory to reinforce lecture topics and introduce new topics. Course is designed to expose students to basic programming concepts and to the use of the C++ language. This course is designed to enhance the students ability to design, develop and test/debug programs. Each student will increase his or her skill in writing correct and maintainable programs. Emphasis will be placed on problem analysis and on the subsequent development of algorithms. Several standard data types will be discussed and the student will gain an understanding of the issues relating to the use, design and implementation of each type in C++. A major focus of the lectures will be to provide an overview of real-world problem solving concepts and top-down software design.
Calculus II Including more integration, sequences, series, Taylor's theorem, improper integrals, and L'Hospital's rule
Computer Science II Course exposes students to the software development life cycle with a focus on the concepts and use of the object-oriented paradigm in problem analysis, solution design, software development and implementation.  This course is designed to enhance the students ability to engineer software that is efficient, maintainable and cost efficient over its entire life cycle. Data abstraction is discussed in depth and students gain experience in the use of classes, object and member functions.
Computer Organization I This course will cover the fundamentals required to understand the relationship between computer hardware and software. Topics include data representation on computers, computer arithmetic, Boolean algebra and digital logic, and assembly programming in MIPS.
Discrete Structures Algebraic structures applicable to computer science; semigroups, graphs, lattices, Boolean algebras, and combinatorics.
Computer Science III The course continues the study of data structures and algorithms, focusing on algorithmic design and problem analysis and the relationships between data representation, algorithm design, and program efficiency. Topics include advanced data structures, key algorithm design techniques, analysis of the time and space requirements of algorithms, and the subsequent development of solution of systems. Concrete examples will be drawn from a variety of domains, such as algorithms for trees and graphs, indexing and search, and real-world problems.
Software Engineering  This course will introduce students to the basic concepts of software engineering and the software development life cycle. The course will cover methodological techniques for software specification, design, implementation, testing, verification, and documentation.
Computer Organization II This course will present the relationship between computer hardware and software, and the fundamental knowledge essential for understanding and designing the operations of computer systems. Topics include performance evaluation, non-pipelined and pipelined datapath, memory hierarchies, and I/O devices.
Theory of Computation Introduction to the classical theory of computer science. A study of the formal relationships between machines, languages and grammars; we will cover regular, context-free, context-sensitive, recursive and recursive enumerable languages. Sequential machines and their applications to devices, processes, and programming. Models of computation: finite state automata, push down automata, Turing machines. The role of non-determinism.
Operating Systems This course will present the basic concepts of operating systems. Topics that will be examined include processes and interprocess communication/synchronization, virtual memory, program loading and linking system calls and system programs; interrupt handling, device and memory management, process scheduling, deadlock and the trade-offs in the design of large-scale multitasking operating systems.
Fundamentals of Algorithms Techniques for designing efficient algorithms, analyzing their complexity and applying these algorithms to a broad range of application settings. Methods for recognizing and dealing with hard problems are studied.
Data Communications and Network Programming This is an introductory course on computer networking. It will cover the layering model of the Internet. The upper four layers (application, transport, network and data link) will be discussed in details with dominant networking protocols and algorithms introduced. Students will also learn how to do basic programming on the Internet.
Intro to Cybersecurity I              Computer Security Overview. Malware and Cyberwarfare. Passwords. Biometrics. Access Controls. Multilevel Security. Multilateral Security. Firewalls. Intrusion Detection . Cryptography Before 1970. Symmetric Key Cryptography. The Data Encryption Standard (DES). The Public Key Paradigm. Knapsacks. The RSA Approach to Public Key Cryptology. Elliptic Curve Cryptography. The Advanced Encryption Standard (Rijndael). Hash Functions. The Digital Signature Standard
Structure of Programming Languages The course will teach students the basic components of the design and analysis of computer programming languages as well as the fundamental computation theory that is required to understand those concepts. The course will also cover several non-imperative languages (unlike C, such as LISP and Prolog) to expose students to the diversity of programming languages.
Unix Lab This course will present the basic concepts of LINUX and UNIX operating systems. Topics that will be examined include Vi editor, Linux Command, directories, Disks and File systems, Users and Groups, File Permissions, Processes, file compression, basic network use, manage files, create and modify files, and Shell script.
Introduction to Linear Algebra Vector Spaces, linear transformations, the Gram-Schmidt process, determinants, eigenvectors and eigenvalues, diagonalization and applications.
Large Scale Programming This course will introduce the students to applications and systems in the large scale. Students will be introduced to the object-oriented method to software design using UML and will apply the object-oriented design/analysis techniques of UML to a realistic Java application. Students will gain familiarity with managing larger projects and OOA/D.
Senior Project I Allows the senior student the opportunity to demonstrate his or her knowledge of systems engineering and computer science principles by application to a class project of his or her choosing, with the guidance and supervision of a faculty member. The student develops a proposal for the project, followed by an architectural design and detailed design, all of which must be presented in class.
Senior Project II In part two, the senior student develops and implements the system solution to the proposed project. The system, most commonly comprising computer software, hardware, procedures, etc., is implemented and tested in the department's Systems Development Laboratory. The student is required to demonstrate the system solution to the faculty and the student body of the department.
Special Topics: Robotics Programming               The primary focus of this course will be behavior-based robotics, which uses semi-autonomous artificial intelligence modules for planning. Behavior-based robots use sensor information to react to changes in an environment, instead of complicated internal models. Higher level concepts that will be covered include multi-robot communication, robot localization and path planning.
General and Applied Chemistry Specially oriented toward students needing one semester of chemistry. Covers topics in elementary inorganic, organic, and biological chemistry.
Computer Programming for Chemists Fortran programming, principles of numerical analysis, numerical solution of differential equations and problems in linear algebra, statistics, and probability.
Computer and Video Game Development The course will span the software domains embedded in computer and video games. Topics such as game computational infrastructure, design, engines, and motion will be presented through discussion and assignments.  Game industry guest speakers will discuss software challenges and opportunities. Students completing this course will understand the software development process required to create a successful game and possess the programming expertise to create a simple game.
Game Engine Programming Game engine programming is introduced as a critical element in compelling game creation.  Programming activity will feature input capture, world integration, object motion, collision detection and audio scoring. Game performance metrics, code optimization and quality assurance testing procedures will be emphasized.  Code examples will be presented from XNA game studio and Torque. Course game project may be completed using a 2D or 3D game engine of choice including Torque, Gamestudio, Panda3D, or OGRE 3D rendering engine.
Data Communications and Network Programming This is an introductory course on computer networking. It will cover the layering model of the Internet. The upper four layers (application, transport, network and data link) will be discussed in details with dominant networking protocols and algorithms introduced. Students will also learn how to do basic programming on the Internet.
Differential Equations Elementary techniques of ordinary differential equations, including slope fields, equilibria, separation of variables, linear differential equations, homogeneous differential equations, undetermined coefficients, bifurcations, power series, Laplace transforms, systems, and numerical methods.
Introduction to Numerical Analysis Treats numerical integration and numerical solution of differential equations; numerical linear algebra, matrix inversion, characteristic values; error propagation; and stability.
Computer Programming Fundamentals Introduction to the art of computing. The course objectives are understanding relationships between computation, problem solving, and programming using high-level languages.
Computer Programming Fundamentals for Non-Majors An introduction to the art of computing. Not intended for Computer Science majors or minors. The objective of the course is an understanding of the relationship between computing and problem solving.
Intermediate Programming  An introduction to the methods underlying modern program development. Specific topics will include object-oriented design and the development of graphical user interfaces. Programming assignments will emphasize the use of objects implemented in standard libraries.
Design of Large Programs A projects course with emphasis on object-oriented analysis, design and programming. Also discussed are programming language issues, programming tools and other computer science concepts as needed to do the projects (e.g., discrete-event simulation, parsing).
Data Structures with Java An accelerated course covering the material of 151L and 251L in one semester. Topics include elementary data structures and their implementation, recursive procedures, data abstraction and encapsulation, and program organization and verification. Programs will be written in JAVA.
Data Organization  Data representation, storage and manipulation. Covers the memory organization of data storage and its relation to computation and efficiency. Topics include: linked vs. contiguous implementations, memory management, the use of indices and pointers, and an introduction to issues raised by the memory hierarchy. Programming assignments in C provide practice with programming styles that yield efficient code and computational experiments investigate the effect of storage design choices on the running time of programs.
Introduction to Computing Systems Survey of various levels of computer architecture and design: microprogramming and processor architecture, advanced assembly language programming, operating system concepts and input/output via the operating system.
ECE 238L Computer Logic Design Binary number systems. Boolean algebra. Combinational, sequential and register transfer logic. VHDL. Arithmetic/logic unit. Memories, computer organization. Input-output. Microprocessors.
Programming Fundamentals  Fundamental programming concepts, including consideration of abstract machine models with emphasis on the memory hierarchy, basic programming constructs, functions, parameter passing, pointers and arrays, file I/O, bit-level operations, programming in the Linux environment, and lab.
College Algebra The study of equations, functions and graphs, especially linear and quadratic functions. Introduction to polynomial, rational, exponential and logarithmic functions. Applications involving simple geometric objects. Emphasizes algebraic problem solving skills.
Intermediate Algebra IC This course includes radical expressions and equations, rational expressions and equations, the exponential and logarithm functions.
Intermediate Algebra IB  This course includes quadratic equations, properties of exponents and scientific notation, simplifying polynomial expressions, factoring and introduction to functions.
Intermediate Algebra IA  This course includes equations and inequalities, applications and problem solving with linear equations, linear functions and the graph of a line, percent, perimeters, areas of simple geometric shapes.
Pre-Calculus In-depth study of polynomial, rational, exponential and logarithmic functions and their graphs. Includes the fundamental theorem of algebra, systems of equations, conic sections, parametric equations and applications in geometry. Exploration of the graphing calculator.
Mathematical Foundations of Computer Science Introduction to the formal mathematical concepts of computer science for the beginning student. Topics include elementary logic, induction, algorithmic processes, graph theory and models of computation.
Data Structures and Algorithms I An introduction to data structures and algorithms and the mathematics needed to analyze their time and space complexity. Topics include asymptotic notation, recurrence relations and their solution, sorting, hash tables, basic priority queues, search trees (including at least one balanced structure) and basic graph representation and search.
Data Structures and Algorithms II Topics include: amortized analysis and self-adjusting data structures for trees and priority queues; union-find; minimum spanning tree, shortest path and other graph algorithms; elementary computational geometry; greedy and divide-and-conquer paradigms.
Social and Ethical Issues in Computing Overview of philosophical ethics, privacy and databases, intellectual property, computer security, computer crime, safety and reliability, professional responsibility and codes, electronic communities and the Internet, and social impact of computers. /  Declarative Programming  Course focuses on one of the declarative programming paradigms: functional, logic, or constraint programming. Specialized techniques are introduced with a view towards general principles. Selected advanced topics in programming language design and implementation are covered.
Introduction to Numerical Computing An introductory course covering such topics as solution of linear and nonlinear equations; interpolation and approximation of functions, including splines; techniques for approximate differentiation and integration; solution of differential equations; familiarization with existing software.
Software Engineering Software engineering principles will be discussed and applied to a large team developed project. Other topics relevant to the production of software will also be covered, including ethics, legalities, risks, copyrights and management issues.
Operating Systems Principles Fundamental principles of modern operating systems design, with emphasis on concurrency and resource management. Topics include processes, interprocess communication, semaphores, monitors, message passing, input/output device, deadlocks memory management, files system design.
Computer Science I This course provides a foundation for further studies in computer and information science and emphasizes a structured approach to problem solving and algorithm development. Topics include principles of program design, coding, debugging, testing, and documentation. Students are introduced to the Unified Modeling Language for requirements analysis using use-cases and activity diagrams, an object oriented programming language, and the fundamentals of computer hardware, system software, and components.
Calculus I    Functions and their graphs; limits and continuity of functions, differentiation, algebraic and trigonometric functions, applications of derivatives, definite and indefinite integrals, and applications of definite integral.
Computer Science II This course presents techniques for the design, writing, testing, and debugging of medium-sized programs, and an introduction to data structures (stacks, queues, linked lists) using an object-orientated programming language.
Discrete Structures I  This course introduces students to various topics in discrete mathematics, such as set theory, mathematical logic, trees, and graph theory. Applications to relational databases, modeling reactive systems and program verification are also discussed.
Calculus II Transcendental functions, techniques of integration, improper integral, infinite sequences and series, Taylor's theorem, topics in analytic geometry, polar coordinates, and parametric equations.
Introduction to Linear Algebra   An introduction to the theory and methods of linear algebra with matrices.Topics include: systems of linear equations, algebra of matrices, matrix factorizations, vector spaces, linear transformations, eigenvalues and eigenvectors, science and engineering applications, and computational methods.
Data Struc and Algorithm Anlys This course focuses on data design and algorithm design. Data design topics include object-oriented discussions of hashing, advanced tree structures, graphs, and sets. Algorithm design topics include the greedy, divide-and-conquer, dynamic programming, backtracking and branch-and-bound techniques. A significant discussion of algorithm complexity theory, including time and space trade-offs and elementary computability theory, is included.
Discrete Structures II This course introduces students to further topics in discrete mathematics, including theory of computation, more complexity theory, coding theory, and game theory.
Computer Org and Assembly Lang  The architecture of computer systems and associated software. Topics include digital logic circuits, computer interfacing, interrupt systems, input/output systems, memory systems, assemblers and assembly language programming, and computer networks.
Eng Probability and Statistics  Set theory, combinatorial analysis, probability and axioms, random variables, continuous and discrete distribution functions, expectations, Chebychev's inequity, weak law of large numbers, central limit theorem, sampling statistics and distributions, point and interval estimation and linear regression.
Operating Systems   Introduction to computer operating systems. Process control, threads, concurrency, memory management, virtual memory, uniprocessor, multiprocessor, and real-time scheduling, I/O management, disk scheduling, file management, distributed processing, client/server, clusters, distributed process management,security.
Software Engineering I This course presents an in-depth treatment of the following software engineering topics: software engineering paradigms, requirements, specification, functional design, object-oriented design, user interface design, software verification and validation, and the maintenance and management of software engineering artifacts, as well as an introductory discussion of software reliability.
Java Programming   Course covers Java Programming language, focusing on GUI development, distributed computing and network applications.
Comp Networks and Dis Process Study of the management aspects of computing networks and distributed systems. Topics include network architectures (ISO/OSI, TCP/IP, ATM), communication hardware (transmission media, network adaptors, switches), encoding, framing, error detection and correction, reliable transmission, data link control and LAN technology, internetworking, routing/congestion control, network design/management.
Algorithm Analysis & Design This course investigates how to design efficient algorithms. Topics include asymptotic analysis, amortized analysis, divide-and-conquer, dynamic programming, greedy algorithms, branch and bound, backtracking, lower bounds, NP-completeness and approximation algorithms.
Intro to Artificial Intel This course introduces students to basic concepts and methods of artificial intelligence from a computer science perspective. Emphasis of the course will be on the selection of data representations and algorithms useful in the design and implementation of intelligent systems.
Intro to C Sharp  This course provides an introduction to the C# programming language and the .NET Framework for the development of Windows game applications.
Design Seminar I Students participate in the design and implementation of a major software project.
Design Seminar II  Students continue to participate in the design and implementation of a major software project.
Computer Game Design II The focus of the course will be hands-on development of computer game development tools (e.g. game engines). Students will study a variety of software technologies relevant to computer game design, including: 3D graphics, computer animation, data-driven game design, multiplayer game programming, and game AI.
Computer Game Design & Implem This course deals with the study of the technology, science and art in the creation of computer games. The focus of the course will be hands-on development of computer games. Students will study a variety of software technologies relevant to computer game design, including programming languages, scripting languages, operating systems, files systems, networks, simulation engines and multi-media design systems.
Data Security and Privacy This course covers basics of data security and privacy techniques, which can facilitate the use of data in a secure and privacy-sensitive way. Topics include security and privacy challenges due to data collection and analytics, technologies and strategies for data security and privacy (access control mechanism, integrity policy, cryptography and encryption, notice and consent, anonymization or de-identification, deletion and non-retention).
Computational Learning   This course covers basic computational aspects of learning to perform a task and improve with experience. Topics include learning frameworks and problem formulations; standard models, methods, computational tools, algorithms and modern techniques; and methodologies to evaluate learning ability and to automatically select optimal models.
Soft Arch & Design Patterns This course focuses on design patterns in object-oriented programming. This course begins with an overview of UML and a review of object-oriented programming and then moves on to various structural, behavioral and creational patterns, including: facades, adaptors, bridges, factories and the template method. Analysis of case studies will also be discussed.
Compiler Design Principles of language compilation. Introduction to formal languages. Lexical analysis, top-down and bottom-up parsing, code generation and optimization. Error handling and symbol table management. Run-time storage management. Programming language design.
Inf Vis & Multimedia Gaming This course introduces basic techniques for digital animation, computer and video games, and web multimedia. Topics include the process of creating animated video clips from start to finish, including story creation, storyboarding, modeling, animation, and post-production; several key techniques for video editing and motion generation, including keyframe, motion capture editing, collision detection, particle systems, physical simulation, and real-time rendering; techniques for web animation and multimedia; and internet gaming.
Advanced Topics Advanced Topics
Fundamental Human Communication: Presentations Study of human communication as a process. Overview of the principles and practices of interpersonal, small group and public communication. Emphasis on examining the role of self-concept, perception, culture, verbal and nonverbal dimensions in the communication process, using power and managing conflict, applying critical listening, practicing audience analysis within informative speech making.
Business Decision Making in a Modern Society This course introduces the concepts of basic technology literacy, information retrieval via electronic and hard copy; along with critical thinking skills. Basic business principles will be introduced to reinforce these concepts and their relationships. The course provides opportunity for applying the skills of oral and written communication to a variety of learning activities.
Critical Reading and Writing Fosters reflective, critical reading, writing, and research in public discourse, culture, humanities, technology, and science. Challenges students to consider cross disciplinary modes of inquiry through multiple genres with an attention to enlightened, global citizenship.
Introduction to American Studies This interdisciplinary course will highlight the student’s role in interrogating the cultural and political function of representations of America in literature, history, philosophy, religion, popular culture, music and art. Students will gain an understanding of why definitions of American identity matter and learn about the contemporary debates that inform the discipline of American Studies today.
Literature/Culture/Ideas This course will take a thematic approach to literature by examining multiple literary texts that engage with a common course theme concerned with the human experience. Themes address cultural, political, social, religious or philosophical aspect ideas through literature.
Art in General Culture An exploratory course that aims to develop a non-technical, general cultural understanding of the space arts, such as architecture, painting, sculpture and industrial design.
Topics in Applied Calculus in ISAT  This course introduces the concepts of differential and integral calculus and ordinary differential equations to model real-world applications in science, business, technology and economics. This course includes a computer laboratory component emphasizing modeling and numerical methods.
Concepts of Chemistry  A one-semester introduction to the fundamental principles, laws and applications of chemistry. Examples relating to the health sciences are emphasized.
Environment: Earth  A study of geological processes causing global change and their impact on human thought. The relationship between some geological processes and life on the Earth is also considered.
U.S. History A survey of U.S. history from the Colonial period to the present, emphasizing the development of American civic life, the involvement of the U.S. in world affairs and the cultural richness of the American people.
Cultural Anthropology An introduction to the nature of culture and its relationship to language, economics, politics, kinship and other institutions in diverse cultures. The course also provides an overview of the theories, methods and ethical responsibilities involved in the study of cultural systems and ethnographic writing.
Personal Wellness Emphasizes lifestyle behaviors contributing to health promotion and disease prevention. General areas affecting health status are identified. Suggestions are made as to how health-related behaviors, self-care and individual decisions contribute to health and influence dimensions of wellness.
General Psychology A study of the nervous system, sensation, perception, consciousness, learning, memory, language, intelligence, motivation, emotion, life span development, personality, psychopathology, psychotherapy, social psychology and the scientific method.
Critical Thinking An introduction to the techniques for analyzing and evaluating information in everyday experience. The functions of language will be discussed. Techniques for judging the strengths of arguments and the probable truth of the arguments’ premises will be examined.
Introduction to Programming Fundamental problem-solving techniques using a modern programming language. Topics include variables, input/output, decisions, loops, functions, arrays, and objects.
Advanced Programming Students use advanced problem-solving strategies to develop algorithms using classes and objects and techniques such as recursion, exceptions and file I/O. This course also focuses on designing small applications and effective testing strategies.
Algorithms and Data Structures Students learn how to implement stacks, queues, lists, sets and maps using arrays, linked lists, binary trees, heaps, binary search trees, balanced trees and hashing. Students study graph representations and algorithms. Students analyze recursive and non-recursive algorithms, illustrated by various searching and sorting algorithms.
Computer Systems I Introduction to the operation of modern interrupt-driven computer systems. Explores the representation of software and information in binary memory, the primary components of a CPU, multithreaded programming and basic interactions with an Operating System.
Discrete Structures II This course builds on the theoretical foundation developed in Discrete Structures I. Students study a range of topics from discrete mathematics and theoretical computer science including elementary number theory, matrices, graph theory, automata, computability and complexity theory.
Software Engineering Study of modern methods and tools for the development of software products. Topics include software development process models, software development tools, design and construction principles and practice, software quality assurance and program management.
Computer Systems II Intermediate exploration of modern interrupt-driven computer systems. Explores models of computation and complex systems, techniques for communication and synchronization of parallel and concurrent software, and the protocols that make up the Internet.
Programming Languages Several actual programming languages are studied in terms of the fundamental principles of computer programming language design, including object-oriented programming, functional programming, concurrent programming and logic programming.
Artificial Intelligence Students will study the history, premises, goals, social impact and philosophical implications of artificial intelligence. Students will study heuristic algorithms for large state spaces and learn to develop recursive and non-deterministic algorithms.
Discrete Structures I An introduction to discrete mathematical structures including functions, relations, sets, logic, matrices, elementary number theory, proof techniques, basics of counting, graphic theory, discrete probability, digital logic, finite state machines, integer and floating point representations.
Calculus with Functions I  Calculus with Functions I
Calculus with Functions II Calculus with Functions II
Introduction to Probability and Statistics This class covers descriptive statistics, counting, probability axioms, discrete and continuous univariate random variables, expected values of random variables and sums of independent random variables, and sampling distributions. It also covers the Central Limit Theorem, single and two sample inference for proportions and means, chi-square test of independence, simple linear regression and correlation.
Applied Algorithms A practical study of algorithms and their use in problem solving. Algorithms are selected from categories including divide-and-conquer, greedy, backtracking, network flow and dynamic programming. The classes P and NP are introduced and intractable problems discussed.
Compilers Introduction to the theory and implementation of compilers. Explores the lexical, syntactic, and semantic analysis of high-level language code as well as code generation, optimization techniques, and architectural or operating system considerations.
Career and Academic Planning A course designed to prepare students for career and academic planning. Specific content includes accessing career and academic resources, career decision-making skills, and self awareness.
Career and Academic Planning A course designed to prepare students for career and academic planning. Specific content includes accessing career and academic resources, career decision-making skills, and self awareness.
Global Learning and Living: Madison International This course provides an opportunity for a diverse cohort of international and U.S. students to learn from and about each other through stimulating discussions, intercultural residence hall programs and the opportunity to participate in service learning.
Making Sense of Beliefs and Values: A Guided Tour for Global Citizens This course explores the origin and nature of beliefs and values and how they are linked to actions, policies and practices around the world. These processes are examined through a range of big picture issues (e.g., religious, political, environmental, gender-based, cultural) that are relevant to all global citizens.
Alternative Break Leadership Training A leadership training curriculum that covers a broad range of topics essential to leading an alternative break trip. This course incorporates service learning pedagogy. This will be accomplished through the use of affective and cognitive approaches. Personal growth as it relates to core concepts of leadership will be prominent. Emphasis is also placed on peer interaction, active participation, extensive reading, case work and a range of guest speakers.
Alternative Break Leadership Practicum Hands-on practicum of leadership strategies and techniques. Collaborative learning is enhanced when students apply what they learn in class by describing relevant lessons learned through experiences outside the classroom. The focus of this course is to provide students with the opportunity to lead in an observed setting and receive constant feedback and mentoring on their demonstrated leadership skills, critical reflection, inquiry, dialogue, and group interaction.
Health Education Facilitation and Synthesis Students will receive health content knowledge while increasing their group facilitation, presentation and processing skills.
Campus Health Communication This course provides students an opportunity to learn about, create and communicate messages about health and wellness topics. Students develop the content produced in the campus publication Potty Mouth. Students develop skills in media literacy, self­directed learning and systems thinking, and they create media products.
Dollars and Sense This practical course will review the affect a personal philosophy on money, and management of personal finances, has on all aspects of life when it comes to securing the American Dream.
Practicum in University Studies Selected practicum experiences, which provide students with supervised practicum experiences.
Special Studies in University Studies Designed to give students an opportunity to complete independent study and/or research under faculty supervision in university studies.
Special Topics in University Studies Special topics course with topics approached from a variety of academic perspectives. Designed for lower-level elective credit.
Composition I Intensive study of and practice in writing processes, from invention and researching to drafting, revising, and editing, both individually and collaboratively. Emphasis on effective rhetorical choices, including audience, purpose, arrangement, and style. Focus on writing the academic essay as a vehicle for learning, communicating, and critical analysis.
Composition II Intensive study of and practice in the strategies and techniques for developing research-based expository and persuasive texts. Emphasis on effective and ethical rhetorical inquiry, including primary and secondary research methods, critical reading of verbal, visual, and multimedia texts; systematic evaluation, synthesis, and documentation of information sources; and critical thinking about evidence and conclusions.
Calculus I Limits and continuity; the Fundamental Theorem of Calculus; definition of the derivative of a function and techniques of differentiation; applications of the derivative to maximizing or minimizing a function; the chain rule, mean value theorem and rate of change problems; curve sketching; definite and indefinite integration of algebraic, trigonometric and transcendental functions with an application to calculation of areas.
University Physics I Calculus based introductory physics course. Fundamentals of linear and rotational kinematics and dynamics, Newton's laws, work, energy, conservation, gravitation, wave mechanics, sound, fluid mechanics, heat and thermodynamics.
University Physics II Calculus based introductory physics course. Electric forces and fields, Gauss' laws, DC and AC circuits, magnetic forces and fields, electromagnetic induction, Maxwell's equations, electromagnetic waves, geometric optics and introduction to modern physics.
Humanities An interdisciplinary, multi-perspective assessment of cultural, political, philosophical, and aesthetic factors critical to the formulation of values and the historical development of the individual and of society
Literature and Experience The study of one of more literary genres including poetry, fiction, drama, and film
Introduction to Philosophy A study of major issues in philosophy and/or the work of major figures in philosophy. Topics in philosophy may include theories of reality, theories of knowledge, theories of value, and their practical applications.
Gender Matters: Introduction to Women's and Gender Studies A general introduction to the study of women and gender across academic disciplines, appropriate as a first course for any student interested in the study of gender within their major.
World Art Survey I Examination of painting, sculpture, architecture, and other arts from prehistoric to Renaissance periods.
World Art Survey II Examination of painting, sculpture, architecture, and other arts from the post-Renaissance to the contemporary period
Arts and the Child Prepares individuals to teach three art forms - visual art, music, theater - to young children through elementary ages.
United States History I A survey of the social, political, economic, cultural, and intellectual history of the United States from the pre-Columbian era to the Civil War/Reconstruction period. Includes the study of pre-Columbian, colonial, revolutionary, early national, slavery, sectionalism, and the Civil War/Reconstruction eras. Themes may include: American settlement and diversity, American culture, religion, civil and human rights, technological change, economic change, immigration and migration, and creation of the federal government.
United States History II A survey of the social, political, economic, cultural, and intellectual history of the United States from the Civil War/Reconstruction era to the present. Examines industrialization, immigration, world wars, the Great Depression, Cold War and post-Cold War eras. Themes may include: American culture, religion, civil and human rights, technological change, economic change, immigration and migration, urbanization and suburbanization, the expansion of the federal government, and the study of U.S. foreign policy.
Federal Government Origin and development of the U.S. Constitution, structure and powers of the national government including the legislative, executive, and judicial branches, federalism, political participation, the national election process, public policy, civil liberties, and civil rights.
Texas Government Origin and development of the Texas constitution, structure and powers of state and local government, federalism, and intergovernmental relations, political participation, the election process, and the political culture of Texas.
General Anthropology Study of human beings, their antecedents and related primates, and their cultural behavior and institutions. Introduces the major subfields: physical and cultural anthropology, archeology, linguistics, and ethnology.
Laboratory for University Physics II Instrumentation used to conduct experiments on electrical circuits and optics. Topics include Ohm's Law, series and parallel circuits, electrical power EMF, RLC Components, optical elements and visual phenomena.
Laboratory for University Physics I Introduction to data acquisition and analysis in physics. Instrumentation used to conduct experiments on motion, kinematics, wave mechanics, sound and heat.Topics also to include statistical methods, graphing, error analysis, computer techniques and reporting results
Public Speaking Application of communication theory and practice to the public speaking context with emphasis on audience analysis, speaker delivery, ethics of communication, cultural diversity, and speech organizational techniques to develop students' speaking abilities as well as their ability to effectively evaluate oral presentations.
Learning Frameworks An inquiry around the broad, interdisciplinary concepts of civic engagement and citizenship for students to explicitly examine and engage in advanced critical thinking for university study. This course promotes intellectual readiness by helping students build and find the resources to become personally responsible and active members of the university community, their education, and their word.
Laboratory for General Chemistry I Introduction of the scientific method, experimental design, data collection and analysis and preparation of laboratory reports.
General Chemistry I Fundamental principles of Chemistry for majors in sciences, health sciences and engineering; topics include inorganic, organic, biochemistry, chemical reactions, states of matter and properties, chemical bonding, structure and descriptive chemistry.
University Physics I Calculus based introductory physics course. Fundamentals of linear and rotational kinematics and dynamics, Newton's laws, work, energy, conservation, gravitation, wave mechanics, sound, fluid mechanics, heat and thermodynamics.
Laboratory for University Physics I Introduction to data acquisition and analysis in physics. Instrumentation used to conduct experiments on motion, kinematics, wave mechanics, sound and heat.Topics also to include statistical methods, graphing, error analysis, computer techniques and reporting results.
University Physics II Calculus based introductory physics course. Electric forces and fields, Gauss' laws, DC and AC circuits, magnetic forces and fields, electromagnetic induction, Maxwell's equations, electromagnetic waves, geometric optics and introduction to modern physics.
Laboratory for University Physics II Instrumentation used to conduct experiments on electrical circuits and optics. Topics include Ohm's Law, series and parallel circuits, electrical power EMF, RLC Components, optical elements and visual phenomena.
Discrete Mathematics Introductory mathematical logic, mathematical induction, relations and functions, basic counting techniques, graphs and trees and applications to computing devices. Designed for students majoring in the computer related disciplines.
Linear Algebra Systems of linear equations; vector spaces, linear transformations, determinants, matrices, eigenvalues and eigenvectors; applications to coding and difference equations
Calculus II Differentiation and integration of transcendental functions; parametric equations and polar coordinates; techniques of integration; sequences and series; improper integrals.
Differential Equations Solutions of ordinary differential equations of the first and second order, Laplace transforms, power series techniques, systems of equations, stability, numerical methods, geometric and physical applications.
Probability and Statistics for Scientists and Engineers Graphical representation of data, measures of centrality and variability, concepts and rules of probability, discrete probability distribution, normal distribution, sampling distributions, central limit theorem, parameter estimation, testing of hypothesis, two sample methods, analysis of variance, correlation and regression analysis.
Computer Science I Introduction to computer programming using Python. Topics include: design tools (flowcharts, pseudocode) control flow statements (if, while, for), simple arithmetic expressions, input and output statements, functions, data structures including strings and lists, text files. Introduction to software development lifecycle and testing. The course is programmingintensive with in-class assignments and weekly homework and a final project. Introduction to Arduino and number systems.
Computer Science II Build upon basic programming concepts using Java constructs such as iteration, selection, recursion, exception handling, data structures and file I/O. Introduce Objectoriented programming concepts including: reuse principles, data abstraction, classes, inheritance, polymorphism, exception handling and UML to build robust code and enhance problem solving methodology.
Data Structures Advanced programming techniques and data structures including arrays, linked lists, queues and stacks; abstract data types, recursion, searching and sorting, binary trees, hashing techniques, elementary algorithm design and analysis, and more.
Computer Organization and Assembly Language Basic elements of computer hardware and software, data representations, instruction formats and addressing modes, assembly language instructions, programming techniques in assembly language, macro assemblers, linkloaders, functions of operating systems and input/output programming and peripherals. Laboratory instruction.
Numerical Methods Taylor series and error analysis, interpolation, solution of linear and non-linear equations, least squares, integration of functions and differential equations.
Advanced Data Structures and Algorithms Binary trees, trees, graph theory, finite state automata, external storage devices, sequential and direct file organizations, file processing techniques, hashing, B-trees, external sorting, P and NP problems, algorithmic analysis.
Design of Database Systems Design of database systems, data description and manipulation languages, data models, entity-relationship model, relational model, SL, relational algebra, normalization theory, DBMS, internet, database design, data flow diagrams, and implementation of database systems.
Operating Systems Analysis and design of basic operating systems concepts, including multiprocessing, interprocess communication and synchronization, scheduling, file systems, memory management, input/output and deadlock. Examples drawn from real operating systems including Unix and Windows NT.
Senior Project in Computer Science Students develop a significant computer application for a realistic project. Emphasis will be on practical experience on all phases of constructing a computer solution. Professional behavior, ethics and teamwork will be developed throughout the project. Students prepare written reports and give oral presentations.
Digital Circuits Applications of point set theory and Boolean Algebra to the analysis and design of asynchronous and synchronous digital circuits.
Introduction to Telecommunications and Networks Introduction to data communications, error detecting/correcting codes, multiplexing, circuit and packet switching and local area networks.
Laboratory for Digital Circuits Laboratory experiments using digital logic and small scale integrated circuits.
Laboratory for Telecommunications and Networks Laboratory experiments in digital and data communications.
Computer Architecture Performance analysis of computer systems, representing data and instructions, instruction set architecture, datapath and controller design, pipelining, superscalar architectures, memory components such as cache, main memory and virtual memory, multiprocessors.
Laboratory for Computer Architecture Laboratory experiments for Computer Architecture Design and Interfacing
Software Engineering Introduction to Software Engineering. Major phases of the software life cycle are introduced from requirements through maintenance
Advanced Technical Writin Advanced approaches to the writing of technical documents for professional audiences: correspondence, proposal reports, manuals, and descriptions
Calculus for Physical Scientists I Limits, continuity, differentiation, and integration of elementary functions with applications; conic sections.
No Prior Programming Experience Computer programming for students without previous programming experience. Topics include variables, assignment, expressions, operators, booleans, conditionals, characters and strings, control loops, arrays, objects and classes, file input/output, interfaces, recursion, lists, and sorting.
Prior Programming Experience Computer programming for students with limited programming experience. Problem decomposition for good design; expressions, operators, booleans, conditionals, characters and strings, control loops, arrays, objects and classes, file input/output, interfaces, recursion, lists, and sorting.
Logarithmic and Exponential Functions Definition and graphs of exponential and logarithmic functions, properties of logarithmic functions, exponential and logarithmic equations, applications.
Analytic Trigonometry Inverse trigonometric functions, trigonometric identities, solving trigonometric equations.
College Composition Understanding and writing for rhetorical situations; critical reading and response; writing source-based argument for academic and public audiences.
Data Structures Object oriented concepts, assertions, inheritance, polymorphism, algorithms and data structures using an object oriented language.
Calculus for Physical Scientists II Transcendental functions, integration techniques, polar coordinates, sequences and series, with mathematical software.
Calculus for Physical Scientists I Limits, continuity, differentiation, and integration of elementary functions with applications; conic sections.
Discrete Structures and their Applications  Integer representations and properties, propositions, predicates, sets, functions, program proofs, induction, counting, complexity; Python implementations of these concepts.
Computer Organization Data representation, arithmetic, assembly and C language, digital logic and systems, Boolean algebra, circuits, CPU and memory models, state machines.
Awareness and Appreciation of Design Awareness and appreciation of design as it exists in the context of everyday life and is expressive of cultural character and human creativity. Awareness and appreciation of design comes as a natural consequence of learning how to recognize and interpret the elements from which it is created.
Introductory Cultural Anthropology Human societies and their cultural setting; variation in beliefs, social customs, and technologies; human differences in anthropological terms.
Software Development with C++ Developing and modifying large software. Relating programming language to its machine implementation. C++ programming for experienced programmers.
Linear Algebra for Data Science Techniques in linear algebra related to data science. Matrices, bases, subspaces, linear independence, dimension, change of basis, projections, linear systems of equations, least squares, matrix factorizations. Singular value decomposition, angles between subspaces.
Matrices and Linear Equations Linear systems, matrix arithmetic, homogeneous coordinates, complex numbers, eigenvalues, eigenvectors, applications to discrete dynamical systems.
Linear Algebra I Linear systems, matrices, subspaces of Euclidean spaces, linear transformations on Euclidean spaces, eigenvalues, eigenvectors.
Introduction to Statistical Methods Statistical methods in science; descriptive methods, simple probability, sampling distributions, confidence intervals, hypothesis testing, one-way ANOVA, chi-square tests, correlation, simple and multiple regression, practical concerns in inference (e.g. interpreting p-values, publication bias, replicability), reading and evaluating statistical results in published papers and popular media. Emphasis on using software rather than hand calculation to conduct analyses.
Statistics for Engineers and Scientists Calculus-based probability and statistics: distribution theory, estimation, hypothesis testing, applications to engineering and the sciences.
Computer Organization Data representation, arithmetic, assembly and C language, digital logic and systems, Boolean algebra, circuits, CPU and memory models, state machines.
Discrete Structures and their Applications Integer representations and properties, propositions, predicates, sets, functions, program proofs, induction, counting, complexity; Python implementations of these concepts.
Matrices and Linear Equations Linear systems, matrix arithmetic, homogeneous coordinates, complex numbers, eigenvalues, eigenvectors, applications to discrete dynamical systems.
Software Engineering Principles, concepts, and techniques associated with team-based development of large, complex software systems. Topics include teamwork, configuration management, project management, requirements engineering, and systematic testing techniques. Use software tools in the context of a Scrum-based Agile development project.
Algorithms--Theory and Practice Analysis, design, implementation and applications of algorithms.
Operating Systems Introduction to operating systems including memory organization, I/O control, multitasking, process control, coordination, and resource management.
Software Development with C++ Developing and modifying large software. Relating programming language to its machine implementation. C++ programming for experienced programmers.
Advanced Writing Advanced Writing
Systems Security Computer and system security, authentication, access control, malicious software, and software security.
Plants and Civilizations Plant origins and their relationships with cultures/civilizations as food, spices, perfumes, and medicines and in art, religion, wars, slavery, etc.
Software Engineering Principles, concepts, and techniques associated with team-based development of large, complex software systems. Topics include teamwork, configuration management, project management, requirements engineering, and systematic testing techniques. Use software tools in the context of a Scrum-based Agile development project.
Algorithms--Theory and Practice Analysis, design, implementation and applications of algorithms.
Operating Systems Introduction to operating systems including memory organization, I/O control, multitasking, process control, coordination, and resource management.
Systems Security Computer and system security, authentication, access control, malicious software, and software security.
INTRODUCTION TO AERONAUTICS Introduces students to the applied science of air-breathing atmospheric flight. The course describes airplanes and how they fly from a design and application perspective. Included are topics in fluid dynamics, airfoil and wing theory, aircraft performance, stability, structures, and aircraft design.
APPLICATIONS OF CYBER ENGINEERING This course focuses on the engineering aspects of cyber operations, cyber defense, and cyber attacks, as a follow-on to SY110. There are three main areas of study, including the host section (a single computer terminal), the network section, and the wireless communication section. Each area of study culminates in a detailed description of a common type of cyber attack and the defenses against it. Lecture material is reinforced and supplemented with labs/security exercise that demonstrate the theoretical concepts in an isolated, virtual environment.
FOUNDATIONS OF CHEMISTRY I The first in a two-semester sequence presenting the fundamental laws and theories of chemistry. Major topics include chemical stoichiometry, periodic trends, atomic structure, chemical equilibrium, thermodynamics, nuclear chemistry, electrochemistry and kinetics. The lecture material is complemented with experiments designed to develop the student's laboratory skills. Naval applications of chemistry are introduced throughout the courses to provide an awareness of chemistry in normal Navy operations.
FOUNDATIONS OF CHEM II This is the second in the two-course foundations of chemistry sequence. See SC111 for a general course description. In this version of SC112, naval applications of chemistry including body armor, corrosion, nuclear power, boiler water quality, aircraft deicing, and scuba diving will be emphasized.
CALCULUS I The first of a traditional two course sequence covering differential and integral calculus of one real variable and infinite series.
CALCULUS II Continuation of Calculus I.
CALCULUS III WITH VECTOR FIELDS Differential and integral calculus of several real variables; vector analysis including integral theorems.
GENERAL PHYSICS I The first of a two course sequence emphasizing the fundamental principles of classical physics and introduce a variety of applications. Topics include mechanics, electricity, magnetism, wave motion, fluids, sound and light. Lectures, recitations, hands-on laboratories, and large-scale demonstration lectures are employed.
GENERAL PHYSICS II GENERAL PHYSICS II
RHETORIC AND INTRO TO LITERATURE I The first of a two course sequence stressing the writing of rhetorically effective and grammatically correct expository prose. During the first semester students read essays, short stories and plays, and they write brief essays.
RHETORIC AND INTRO TO LIT II RHETORIC AND INTRO TO LIT II
AMERICAN NAVAL HISTORY This course examines the antecedents, origins and development of the United States Navy and Marine Corps within the framework of America's growth as a continental and, eventually, global power, with particular emphasis on the development of naval and maritime strategy.
THE WEST IN THE PRE-MODERN WORLD THE WEST IN THE PRE-MODERN WORLD
ASIA IN THE PREMODERN WORLD ASIA IN THE PREMODERN WORLD
U. S. GOVERNMENT AND CONSTITUTIONAL DEVELOPMENT Basic concepts of American democracy, the Constitution, political process, structure and functions of national government and factors influencing its operation; emphasis on legal and ethical demands placed on government officials, both civilian and military, as defined by the Constitution and statute.
INTRODUCTION TO NAVIGATION A comprehensive introduction to basic navigation concepts, voyage planning, and contact tracking on maneuvering boards. The course objective is to develop skills in the practical uses of the navigation chart. Midshipmen are introduced to the navigation chart format and associated plotting tools and techniques and learn the concepts of chart coordinates, while measuring and calculating distances, times directions and speeds.
BASIC NAVIGATION A comprehensive introduction to basic navigation concepts, voyage planning, and contact tracking on maneuvering boards. The course objective is to develop skills in the practical uses of the navigation chart. Midshipmen are introduced to the nautical chart format and associated plotting tools and techniques, learning the concepts of chart coordinates by measuring and calculating distances, times, directions, and speeds.
ADVANCED NAVIGATION ADVANCED NAVIGATION
Intro to Computer Science Introduction to algorithmic development, problem solving and software design. Principles and concepts to provide foundational knowledge and experience upon which later computing courses will build. This is the first course for computer science and information technology majors
Object-Oriented Programming This course builds on the procedural programming skills developed in the prerequisite course and introduces the student to object oriented programming and design principles using Java. Object oriented topics such as classes, inheritance, information hiding, polymorphism and dynamic binding are presented and used to create robust, reusable, and maintainable software. The fundamentals of Java are presented along with exception handling, I/O, event driven programming, simple GUIs and generics
Computer Architecture and Organization This course introduces students to performance metrics, instruction set architectures, assembly language, logic design, memory hierarchies, and pipelining.
Systems Programming The study of an application's interface with the operating system. The operating system is treated as an information resource, and as a facilitator for information flow between processes, including those executing on separate machines. Topics include: process management, multiprogramming, and the basic concepts necessary to understand the design and operation of computer communication networks
Data Structures This course examines abstract data types (ADT), data structures, data representation and information management including storage structures, allocation and collection. ADTs and data structures presented include lists, stacks, queues, trees, heaps, priority queues, maps, dictionaries and graphs. Sorting and searching techniques, hashing and graph algorithm analysis are also covered.
Computer Networks The course presents the fundamental theoretical concepts, characteristics and principles of computer communications and computer networks, and analyzes and assesses these foundational concepts with respect to network performance and network design.
Theory of Computing This course presents the theoretical foundations for computing, including the study of formal languages, finite state machines, pushdown automata, Turing machines and computability.
Computer Algorithms Presents techniques for designing and analyzing computer algorithms including divide and conquer, dynamic programming and greedy methods. Introduces classic algorithms for problems such as searching and sorting, graph analysis, file compression and cryptology.
Operating Systems The study of the operating system as a resource manager. This course begins with a brief overview of major evolutionary changes in OS design, then explores the interface between the OS and the architecture. It continues with discussions of processes, threads, concurrency, and synchronization, including scheduling and deadlock. Memory, I/O and files, security, and virtualization are also covered.
Programming Languages and Implementation This course examines basic concepts underlying the design of modern programming languages: types, control structures, abstraction mechanisms, inheritance, concurrency and constructs for programming.
Software Engineering An introduction to the basic principles of software engineering. Structured, object-oriented, and formal approaches are studied, with emphasis on life cycles, object-oriented techniques and team-oriented software development
Research Seminar/Capstone Research Seminar/Capstone
Artificial Intelligence A study of the fundamental concepts and techniques in the design and implementation of functionally intelligent machines. Topics include problem-solving using state-space search, game trees, state and plan space planning, and machine learning.
Natural Language Processing This course introduces students to Natural Language Processing, a subfield within Artificial Intelligence that studies how computers can understand human languages. This course covers algorithms to learn and interpret languages like English. It is a hands-on lab course covering topics like author identification, language modeling, information retrieval from huge datasets, email filtering, syntactic parsing, and sentiment analysis.
Computer Graphics An introductory course focusing on developing applications around various methods of visualizing data.  Emphasis will be on 2D/3D graphics and data visualization.  Topics include processing and modeling data, image manipulation, and building interactive 2D/3D OpenGL based applications
English Composition Emphasizes reading and writing skills appropriate to academic discourse. Integrates the writing process, rhetorical modes and library skills into writing assignments related primarily to nonfiction readings.
College English I General education foundation course. Focuses on developing reading and writing skills appropriate to academic discourse. Integrates the writing process, rhetorical modes and library skills into writing assignments related primarily to nonfiction readings.
Public Speaking General education foundation course. Studies basic concepts of speech communication as applied to public speaking and critical analysis. For students wishing to enhance leadership potential by improvement in traditional public speaking situations.
College English II General education foundation course. Emphasizes critical reading, research and argumentation.
Art History Art History
Dance Dance
Musicology/Composition Musicology/Composition
Studio Arts Studio Arts
Theatre Theatre
Introductory Logic   General education humunities course. Deals with the uses of logical concepts and techniques to evaluate and criticize reasoning. Studies some elementary systems of formal logic. Arguments evaluated are drawn from such diverse fields as law, science, politics, religion and advertising.
Ethics and Computers  General education humanities course. Ethics with application to the ethical issues which may arise from the use of computers, including the moral responsibility of computer professionals for the effect their work has on persons and society; the moral obligations of a computer professional to clients, employer and society; the conceptual and ethical issues surrounding the control and ownership of software; and the justifiability of regulation of the design, use and marketing of computer technology.
Calculus I General education math and natural sciences course. Analytic geometry and the calculus in an interrelated form.
Calculus II General education math and natural sciences course.
Discrete Structures I Provides a mathematical foundation essential to the entire computer science curriculum. Includes propositional and predicate logic, induction, recursion and counting techniques.
Discrete Structures II Continuation of Discrete Structures I. Includes relations, graphs, trees, Boolean algebra and automata.
Linear Algebra An elementary study of linear algebra, including an examination of linear transformations and matrices over finite dimensional spaces
Physics for Scientists I General education math and natural sciences course. The first semester of a calculus-based physics sequence. Topics include motion, forces, energy, fluids, oscillations, waves and thermodynamics.
Physics for Scientists II General education math and natural sciences course. The second semester of a calculus-based physics sequence. Topics include electricity, magnetism, circuits, EM waves, light and selections from modern physics
University Physics Lab II General education math and natural sciences course
Engineering Probability and Statistics I Studies the concepts of probability theory, random variables, distributions, moments, sample statistics and hypothesis testing.
Engineering Economy Economic comparisons of engineering alternatives considering the time value of money, taxes and depreciation; accounting and its relationship to economic analysis; replacement decisions.
Introduction to Digital Design Introduces digital design concepts. Includes number systems, Boolean algebra, Karnaugh maps, combinational circuit design, adders, multiplexers, decoders, sequential circuit design, state diagram, flip flops, sequence detectors and test different combinational and sequential circuits. Uses CAD tools for circuit simulation.
Introduction to Programming First course in computer programming in a high-level language. Emphasizes analyzing problems, designing solutions and expressing them in the form of a well-structured program using the procedural aspects of C++.
Assembly Language Programming Introduces basic concepts of computer organization and operation. Studies machine and assembly language programming concepts that illustrate basic principles and techniques. Laboratory exercises given for experience using personal computers
Object-Oriented Programming Concepts of object-oriented programming. Covers data abstractions, classes and objects, methods, inheritance, polymorphism, dynamically-bound method calls and data encapsulation. Includes programming assignments in C++
Introduction to Computer Architecture Introduces multilevel approach to computer systems, with an emphasis on micro architecture and instruction set architecture levels. Also introduces techniques to improve performance such as cache memory and instruction level parallelism.
Data Structures Introduces basic data structures and covers their implementations using classes in C++. Includes lists, stacks, queues, binary trees and hash tables.
Computer Networks First course on computer networking. Introduces OSI layers, direct link networks, packet switching, routing, end-to-end protocols and network applications.
Introduction to Software Engineering Introduces the processes, methods and tools used in software development and maintenance. Topics include software development life cycle and processes, configuration management, requirements gathering, OOA/D with UML, cohesion and coupling, and unit testing.
Programming Language Concepts Theoretical concepts in the design and use of programming languages. Formal syntax, including Backus Normal Form (BNF), Extended Backus-Naur Form (EBNF), and syntax diagrams. Semantics, including declaration, allocation and evaluation, symbol table and runtime environment; data types and type checking, procedure activation and parameter passing, modules and abstract data types
Operating Systems Fundamental principles of modern operating systems. CPU management including processes, threads, scheduling, synchronization, resource allocation and deadlocks. Memory management including paging and virtual memory. Storage management and file systems.
Design and Analysis of Algorithms Design of various algorithms including several sorting algorithms. Analysis of their space and time complexities. Data structures include heaps, hash tables and binary search trees.
Introduction to Database Systems Fundamental aspects of relational database systems, conceptual database design and entity-relationship modeling; the relational data model and its foundations, relational languages and SQL, functional dependencies and logical database design; views, constraints and triggers. Course includes a group project involving the design and implementation of a relational database and embedded SQL programming
Senior Design Project I Senior Design Project I
Senior Design Project II Senior Design Project II
Introductory Logic General education humunities course. Deals with the uses of logical concepts and techniques to evaluate and criticize reasoning. Studies some elementary systems of formal logic. Arguments evaluated are drawn from such diverse fields as law, science, politics, religion and advertising.
Calculus I Limits, continuity and derivatives of algebraic, trigonometric, exponential and logarithmic functions. Curve sketching, optimization and other applications of the derivative. Antiderivatives, Riemann sums, the definite integral, and the fundamental theorem of calculus.
New Student Seminar Topics include overviews of the various disciplines, curricula and advising, ethics and professionalism, student organizations and extracurricular activities, senior projects, and career planning.
Introduction to Digital Logic Design An introductory course in digital logic circuits covering number representation, digital codes, Boolean Algebra, combinatorial logic design, sequential logic design, and programmable logic devices.
Programming I Problem solving using a high level programming language and object oriented software design. Fundamental stages of software development are discussed: problem specification, program design, implementation, testing, and documentation. Introduction to programming using an object oriented language: using classes, defining classes, and extending classes. Introduction to algorithms and data structures useful for problem solving: arrays, lists, files, searching, and sorting.
Principles of Microeconomics An analytical introduction to microeconomics. Topics include theory of markets, public policy, international trade, economic efficiency, and equity.
Principles of Macroeconomics An analytical introduction to macroeconomics. Topics include determination of aggregate income, employment, inflation, exchange rates, and the role of fiscal and monetary policy in dealing with unemployment, inflation, and economic growth.
Calculus II volume, arc length, work and average value. Infinite sequences and series and Taylor series. Polar coordinates, vectors and the geometry of space.
General Physics I for Engineers Introduction to classical mechanics and thermodynamics.
General Physics I Laboratory Experiments in classical mechanics and thermodynamics. The course includes practice on the ethics of recording and presentation of data.
Programming I Problem solving using a high level programming language and object oriented software design. Fundamental stages of software development are discussed: problem specification, program design, implementation, testing, and documentation. Introduction to programming using an object oriented language: using classes, defining classes, and extending classes. Introduction to algorithms and data structures useful for problem solving: arrays, lists, files, searching, and sorting.
Introduction to Digital Logic Design An introductory course in digital logic circuits covering number representation, digital codes, Boolean Algebra, combinatorial logic design, sequential logic design, and programmable logic devices.
Circuits I Analysis of linear electrical circuits: Kirchoff's laws; source, resistor, capacitor and inductor models; nodal and mesh analysis; network theorems; transient analysis; Laplace transform analysis; steady-state sinusoidal analysis; computer-aided analysis.
Programming II This course continues developing problem solving techniques by focusing on the imperative and object-oriented styles using Abstract Data Types. Basic data structures such as queues, stacks, trees, and graphs will be covered. Recursion. Basic notions of algorithmic efficiency and performance analysis in the context of sorting algorithms. Basic Object-Oriented techniques. An associated laboratory will develop projects reinforcing the lecture material.
Calculus III Multivariable functions, partial derivatives and their applications, multiple integrals and their applications. Vector-valued functions, line and surface integrals, Green, Gauss and Stokes Theorems.
Applied Differential Equations Linear ordinary differential equations, Laplace transforms, systems of equations, and applications.
Elementary Linear Algebra Systems of linear equations, matrices, vector spaces, linear transformations, and applications.
Discrete Structures Mathematical foundations including logic, sets and functions, general proof techniques, mathematical induction, sequences and summations, number theory, basic and advanced counting techniques, solution of recurrence relations, equivalence relations, partial order relations, lattices, graphs and trees, algorithmic complexity, and algorithm design and analysis. Throughout there will be an emphasis on the development of general problem solving skills including algorithmic specification of solutions and the use of discrete structures in a variety of applications.
Circuits II Continued study of electrical circuits: Steady-state power analysis, three-phase circuits, transformers, frequency response, and two-port network analysis.
Electromagnetics I Electrostatic and magnetostatic fields in a vacuum and material media. Electromagnetic fields and Maxwell's equations for time-varying sources. The relationship between field and circuit theory. Simple applications of Maxwell's equations.
lectronic Circuits I Introduction to diodes, BJTs and MOSFETs, and their use in electronic circuits, especially digital circuits.
Programming Language Paradigms The course is a survey of programming languages: their attributes, uses, advantages, and disadvantages. Topics include scopes, parameter passing, storage management, control flow, exception handling, encapsulation and modularization mechanism, reusability through genericity and inheritance, and type systems.
Embedded Systems This course will address internal organization of micro-controller systems, sometimes called embedded systems, used in a wide variety of engineered systems: programming in C and assembly language; input and output systems; collecting data from sensors; and controlling external devices.
Software Engineering I This course is an introduction to software engineering, and it covers the systematic development of software products. It outlines the scope of software engineering, including life-cycle models, software process, teams, tools, testing, planning, and estimating. It concentrates on requirements, analysis, design, implementation, and maintenance of software products. The laboratory covers CASE tools, configuration control tools, UML diagrams, integrated development environments, and project specific components.
Signal and System Analysis Fourier signal analysis (series and transform); linear system analysis (continuous and discrete); Z-transforms; analog and digital filter analysis. Analysis and design of continuous and discrete time systems using MATLAB.
Digital Systems Design The design of digital systems from a hardware point of view. The implementation of functional and control units using programmable logic devices. Introduction to VHDL and its use in modeling and designing digital systems.
Applied Mathematical Statistics I A first course in statistics for students with the techniques of calculus at their disposal. The following topics are studied with illustrations and problems drawn from various fields of applications: basic notions of probability and probability distributions; classical estimation and testing procedures for one and two sample problems; chi-square test.
Computer Systems Design Laboratory I A two semester lecture/laboratory course involving the specification, design, implementation, analysis, and documentation of a significant hardware and software computer system. Laboratory work involves software, hardware, and hardware/software trade-offs. Project requirements include consideration of ethics, economics, manufacturing, safety, and health aspects of product development.
Introduction to Communication Networks An introduction to the principles used in communication networks is given in this course. Topics include a discussion of the uses of communications networks, network traffic, network impairments, standards, layered reference models for organizing network functions. Local Area Network technology and protocols are discussed. Link, network, transport layer protocols, and security are introduced. TCP/IP networks are stressed. VoIP is used as an example throughout the course. Basic concepts of network performance evaluation are studied, both analytical and simulation techniques are considered.
Computer Architecture The structure, design, analysis, and evaluation of computer processors and systems. The design of instruction sets. Principles and techniques of parallelism at the data transfer (memory hierarchy), data processing (pipelines), and concurrent instruction execution.
General Physics III Introduction to modern physics. Topics include special relativity, optics, and introductions to quantum mechanics and solid state physics.
Intermediate Physics Laboratory I Experiments in optics and modern physics. Development of experimental skills, data reduction, error analysis, and technical writing. One lab meeting per week and one lecture per week on topics including error analysis and experimental design, and the development of professional ethics in regard to citation and data presentation.
Computer Systems Design Laboratory II A two semester lecture/laboratory course involving the specification, design, implementation, analysis, and documentation of a significant hardware and software computer system. Laboratory work involves software, hardware, and hardware/software trade-offs. Project requirements include consideration of ethics, economics, manufacturing, safety, and health aspects of product development.
Introduction to Operating Systems The objective of this course is to provide the students with the concepts necessary to enable them to: a) identify the abstract services common to all operating system, b) define the basic system components that support the operating system's machine independent abstractions on particular target architectures, c) consider how the design and implementation of different systems components interact and constrain one another, not merely how one or two important parts work in isolation, and d) understand the means by which fundamental problems in operating systems can be analyzed and addressed. Programming assignments address topics including process creation, inter-process communication, system call implementation, process scheduling and virtual memory.
Human-Computer Interaction This course introduces principles of human-computer interaction. Important topics to be presented include: human factors, human-centered design and evaluation, graphical user interfaces, multimedia system integration, interactive systems development, computer-supported cooperative work, human cognitive skills, accessibility, alternative input/output media, and emerging technologies.
Introduction to Communication Networks An introduction to the principles used in communication networks is given in this course. Topics include a discussion of the uses of communications networks, network traffic, network impairments, standards, layered reference models for organizing network functions. Local Area Network technology and protocols are discussed. Link, network, transport layer protocols, and security are introduced. TCP/IP networks are stressed.
Introduction to Communication Networks An introduction to the principles used in communication networks is given in this course. Topics include a discussion of the uses of communications networks, network traffic, network impairments, standards, layered reference models for organizing network functions. Local Area Network technology and protocols are discussed. Link, network, transport layer protocols, and security are introduced. TCP/IP networks are stressed.
Fiber Optic Communication Systems Description and analysis of the key components in optical communication systems. Topics covered include quantum sources, fiber cable propagation and dispersion characteristics, receiver characteristics, and system gain considerations.
Introduction to Film and Media An introduction to analyzing and thinking critically about film and other media. Students will learn to read and interpret the basic signs, syntaxes, and structures of cinematic language. Through direct analysis of selected films, television, and new media, students will evaluate and construct evidentiary arguments about the aesthetic strategies creators use to make meaning for audiences. In addition, this course will familiarize students with the historical and industrial dimensions of film and media, as well as the influence technology has on their development into the twenty-first century. LEC.
Calculus I Analytic Geometry (introduction to conic sections), review of functions and their graphs, limit and rate of change, continuity, derivatives, derivatives of trigonometric functions, chain rule, implicit differentiation, higher derivatives, related rates, applications of differentiation: maximum and minimum values, The Mean Value Theorem, the first and second derivative tests, optimization problems, Antiderivatives, areas, definite integral, Fundamental Theorem of Calculus, indefinite integrals, areas between curves (in the Cartesian Plane), substitution rule.
Composition I Introduces students to critical thinking and the fundamentals of academic writing. Frequent and intensive writing in varied expository modes, with emphasis on analysis and discussion of the composing process.
Introduction to Engineering I Introduction to the engineering profession, Introduction to problem solving using analytical, graphical, and computer tools including scientific word processors, spreadsheets and database packages, mathematical computation software.
Calculus II Techniquesofintegration,,integrationbyparts,trigonometric substitutions,integrationofrationalfunctions, table of integration, transcendental functions and their inverses, applications of integration, Conic sections and polar coordinates, indeterminate forms, improper integrals, Taylor’stheorem, L’Hopital’s rule, Taylor’s polynomials, sequences and series, absolute and conditional convergence, differentiation and integration of power series.
Composition II Greater focus on persuasive writing and the research process. Close examination and discussion of a range of texts about the human experience leading to frequent and intensive writing.
Introduction to Engineering II Introduction to problem solving using analytical, graphical, and computer tools including scientific word processors, spreadsheets and database packages, mathematical computation software. Introduction to engineering analyses.
Introduction to Programming An introduction to the computer, to the algorithmic process, and to programming in C using standard control structures. Windows and UNIX operating systems are used.
Physics I A calculus-based study of the basic concepts of physics. Topics include vector algebra, kinematics, dynamics of single- and many particle systems, gravitation, energy, momentum, conservation laws, circular and rigid body motion, elasticity, fluid mechanics, thermal equilibrium, temperature, and the laws of thermodynamics with applications to ideal gases and thermodynamic processes.
GENERAL PHYSICS I LABORATORY  GENERAL PHYSICS I LABORATORY
Technical Communication Emphasizes clear, effective communication skills essential to technical and professional writing for students from a variety of majors. Builds on a writing process, basic rhetorical principles, audience awareness, and the writer’s role in legal, ethical, and electronic communications. Emphasizes reports, memos, résumés, problem-solving, research, and proposals.
Digital Systems Boolean algebra and logic design of combinational and sequential circuits. Gate and flip-flop characteristics for TTL technology adders, multipliers, register transfer language, general-purpose processor design, basic computer organization, machine level programming, relationships between software and hardware.
Digital Systems Lab Design and implement digital systems. Build combinational and sequential logic circuits. Measure
troubleshoot the logic circuits using general electronic test equipment
Object Oriented Programming Advanced program design and implementation in the Java programming language. Object-oriented programming with concepts including class structure and behavior, objects, inheritance and reuse, virtual functions and polymorphism, exception handling, templates, and the Standard Template Library. The Windows and/or UNIX operating is used.
Physics II Physics II
GENERAL PHYSICS II LABORATORY  GENERAL PHYSICS II LABORATORY
Circuit Analysis Fundamentals laws of circuit analysis. Ohm’s Law, Kirchhoff’s current and voltage laws, the law of conservation of energy, circuits containing independent and dependent voltage and current sources, resistance, conductance, capacitance and inductance analyzed using mesh and nodal analysis, superposition and source transformations, and Norton’s and Thevenin’s Theorems. Steady state analysis of DC and AC circuits. Complete solution for transient analysis for circuits with one and two storage elements.
Analog Circuits Lab Measurement techniques and experiments on fundamental laws. Circuit analysis techniques including: Ohm’s Law, Kirchhoff’s current and voltage laws, the law of conservation of energy, Norton’s and Thevenin’s Theorems, mesh and nodal analysis, superposition, and source transformations.
Differential Equations Solutions of ordinary differential equations with applicationsto science and engineering. Linear differential equations with constant coefficients using operator methods. Series solutions and applications.
Microprocessors Principles of operation of modern microprocessors, including, internal architecture, timing analysis, and interfacing techniques. Special emphasis will be placed on hardware-software interactions using assembly language programming and utilization of programmable peripheral devices.
Microprocessors Lab Microprocessor-based laboratory utilizing computer programming language. Emphasis is on writing and running programs on modern microprocessor systems.
General Chemistry A development of the fundamental principles of chemistry and their applications. Chemical nomenclature, stoichiometry, atomic structure, bonding theories, thermochemistry, periodic properties, solution calculations, gas laws and the properties of solids and liquids are among the topics discussed.
General Chemistry Lab An introduction to the principles and techniques of experimental chemistry with emphasis upon formula investigations, equations, elementary laboratory statistics, and chemical reactivity.
Discrete Math Binary numbersystems; computer codes; computer arithmetic; logic truth tables;sets and relations; Boolean algebra; logic gates; simplifications of logic circuits, graphs, and directed graphs equivalence relations.
Introduction to Electronics Basic semiconductor physics, theory of p-n junctions; diodes, field effect transistors, and bipolar transistors; modeling of diode and transistor devices; analysis and design of diode switching and rectifier circuits; basic transistor switching circuits and single stage amplifiers; multistage transistor amplifier biasing; op amps, and output stages; electronic simulation using PSPICE.
Introduction to Electronics  Lab Prototype bread-board electronic circuits using diodes, bipolar junction transistors, MOSFETS with DC biasing configurations and with superimposition of AC signals. Operational and differential amplifier and active filter circuits.
Linear System Analysis Transient response of linear time-invariant, continuous-time and discrete-time dynamic systems by various methods including Laplace transform, and z-transform; properties of sampling; input-output characteristics; frequency response analysis.
Operating System Functions and components of an operating system, including process synchronization, job scheduling, memory management, file systems protection, and deadlocks. Related system software, such as loaders, linkers, assemblers, and windowing systems.
Advanced Digital System Design Design of digital systems using programmable logic devices and high-level design techniques. Emphasizes the application of state-of-the-art hardware devices as well as design and simulation tools.
Advanced Digital System Design Lab System design using programmable logic devices and high-level design techniques. Application of stateof-the-art hardware devices as well as design and simulation tools.
Engineering Economy Analysis of the time value of money as applied to the manufacturing environment. Economic analysis of engineering decisions. Determining rates of return on investments. Effects of inflation, depreciation and income taxes. Sensitivity, uncertainty, and risk analysis. Application of basic principles and tool of analysis using case studies.
Advanced Communication Skills Advanced Communication Skills
Embedded Controllers Project oriented course in development system with cross-compilers and emulation capability. Interfacing and hardware/softwaretradeoffsininterruptdriverapplications.
Embedded Controllers Lab Project oriented laboratory course in the areas on microprocessor-based systems and micro-controllers.
Engineering Statistics Engineering applications of the concepts of probability, statistical distributions, statistical analysis, regression and correlation analysis, analysis of variance and covariance, design of experiments.
Senior Design I Capstone design projects that focus on the early stages of project development: design methodology, literature review, specifications development, design alternatives, project plan, and project management.
Real Time Data Acquisition and Control Advanced course in design of data acquisition systems with real time control applications. Emphasis is placed on sensors in control systems; signal conditioning; actuators; controllers; and data acquisition using A/D and D/A conversion.
Digital Signal Processing and Filter Design Discrete-time signals and systems, sampling, discrete Fourier transforms, analog filter characteristics, nonrecursive and recursive filter design, and CAD tools for filter design.
Digital Signal Processing and Filter Design  Lab Implement digital signal processing algorithms including: sampling, digital filtering, and simulation. Develop and test Finite Impulse Response (FIR) filters, Infinite Impulse Response (IIR) filters, and Digital Signal Processor (DSP) applications on DSP microprocessors.
Senior Design II Design prototyping, testing, evaluation, project reports and project presentation.
Applied Ethics An in-depth exploration of moral theory and discussion of its application to broad areas such as business, the environment, or bio-medical issues.
English Composition I A study of logical and rhetorical principles and organizational strategies that contribute to effective writing. Honors section available
English Composition II An expanded study of and practice in stylistics, logic, and research as contributions to analytical writing
Humanities I Humanities I
Fine Arts I Fine Arts I
Social I  Social I
Calculus I Analytic geometry; functions; limits; continuity; derivatives of algebraic functions; applications of the derivative
Calculus II Antidifferentiation; the definite integral; applications of the definite integral; differentiation and integration of transcendental functions.
Calculus III Further methods of integration; polar coordinates; vectors; infinite series.
Calculus IV Differential calculus of functions of several variables; multiple integration; vector calculus.
Introduction to Linear Algebra Vector spaces; matrices; linear transformations; systems of linear equations; characteristic values and characteristic vectors
Differential Equations I Origin and solution of differential equations; series solutions; Laplace Transform methods; applications
Engineering Statistics I Introduction to statistical analysis. Topics include: probability, probability distributions, data analysis, parameter estimation, statistical intervals, and statistical inferences
Chemistry I The principles of atomic and molecular structure, energetics, dynamics, and synthesis as related to chemical systems
Investigations in Chemistry I Selected experiments to illustrate fundamentals of chemistry
Physics I Calculus-based course emphasizing Newtonian mechanics and conservation laws
Physics II Calculus-based introduction to gravitation, electricity and magnetism. Laboratory emphasizes concepts of force and motion, conservation laws, and simple electrical circuits.
Introduction to Computer Programming Introductory problem solving and computer programming using object-oriented techniques. Theoretical and practical aspects of programming and problem solving
Intermediate Computer Programming Three hour laboratory. Object-oriented problem solving, design,and programming. Introduction to data structures, algorithm design and complexity.
Data Structures and Analysis of Algorithms Non-linear data structures and their associated algorithms. Trees, graphs, hash tables, relational data model, file organization. Advanced software design and development
Discrete Structures Concepts of algorithms, induction, recursion,proofs, topics from logic,set theory, combinatorics, graph theory fundamental to study of computer science
Distributed Client/Server Programming Design of software systems for distributed environments. Multithreaded and server-side programming,
Operating Systems I Historical development of operating systems to control complex computing systems; process management, communication, scheduling techniques;file systems concepts and operation; data communication, distributed process management
Introduction to Analysis of Algorithms Study of complexity of algorithms and algorithm design. Tools for analyzing efficiency; design of algorithms, including recurrence, divide-and-conquer, dynamic programming and greedy algorithms
Introduction to ECE Design I Introduction to the profession, college, department, and program. Survey of ECE technical knowledge and tools crucial in early ECE courses. Introduction to engineering design, teaming, and technical communication
Introduction to ECE Design II Technical communication (including engineering team communication) and engineering ethics. Project planning and management. Documenting, designing, prototyping, testing, and oral presentations of an engineering design project
Introduction to Electronic Circuits Fundamentals of electric circuits and network analysis. DC and AC circuits. AC power. Ideal transformers. Frequency response of networks. Ideal operational amplifiers and circuits
Intermediate Electronic Circuits First-order and second-order transient analysis. Operation circuit models and application of diodes and field-effect and bipolar junction transistors. Electronic instrumentation
Advanced Electronic Circuits Feedback and stability. Operational-amplifier and data-converter circuits. Introduction to CMOS logic circuits. Filters and tuned amplifiers. Signal generator circuits. Power amplifiers
Signals and Systems Modeling of analog and discrete-time signals and systems, time domain analysis. Fourier series, continuous and discrete-time Fourier transforms and applications, sampling, z-transform, state variables
Digital Devices and Logic Design Binary codes, Boolean, algebra, combinational logic design, flip-flops, counters, synchronous sequential logic, programmable logic devices, MSI logic devices, adder circuits
Microprocessors Architecture of microprocessor-based systems. Study of microprocessor operation, assembly language, arithmetic operations, and interfacing
Embedded Systems Advanced topics in embedded systems design using contemporary practice. Interrupt-driven, reactive, real-time, object-oriented, and distributed client/server embedded systems
CPE Design I CPE Design I
CPE Design II CPE Design II
Computer Architecture Designs for the CPU, I/O subsystems, and memory organizations. ALU design and computer arithmetic
Digital System Design Hierarchical digital design using available design software. Computer aided design workstations will be used to give students access to state-of-the-art design techniques
Data Communications and Computer Networks The concepts and practices of data communications and networking to provide student with an understanding of the hardware and software used for data communications
Technical Writing Instruction and practice in technical writing for scientific and engineering fields, emphasizing analysis and development of correspondence, progress and research reports, instruction, and proposals
Calculus, Part I Brief review of High School calculus, applications of integrals, transcendental functions, methods of integration, infinite series, Taylor's theorem, and first order ordinary differential equations. Use of symbolic manipulation and graphics software in calculus.
Programming Languages and Techniques I A fast-paced introduction to the fundamental concepts of programming and software design. This course assumes some previous programming experience, at the level of a high school computer science class or CIS110. (If you got at least 4 in the AP Computer Science A or AB exam, you will do great.) No specific programming language background is assumed: basic experience with any language (for instance Java, C, C++, VB, Python, Perl, or Scheme) is fine.
Principles of Physics I: Mechanics and Wave Motion This calculus-based course is recommended for science majors and engineering students. Classical laws of motion; interactions between particles; conservation laws and symmetry principles; particle and rigid body motion; gravitation, harmonic motion, and applications of mechanics to real-world problems.
General Chemistry Laboratory I A general laboratory course covering aspects of qualitative and quantitative analysis, determination of chemical and physical properties, and chemical synthesis.
Calculus, Part II Functions of several variables, vector-valued functions, partial derivatives and applications, double and triple integrals, conic sections, polar coordinates, vectors and vector calculus, first order ordinary differential equations. Applications to physical sciences. Use of symbolic manipulation and graphics software in calculus.
Mathematical Foundations of Computer Science What are the basic mathematical concepts and techniques needed in computer science? This course provides an introduction to proof principles and logics, functions and relations, induction principles, combinatorics and graph theory, as well as a rigorous grounding in writing and reading mathematical proofs.
Engineering Electromagnetics This course covers basic topics in engineering electromagnetics, namely, electric charge, electric field, electric energy, conductors, insulators, dielectric materials, capacitors, electric current, magnetic field, inductors, Faraday's law of induction, alternating current (AC), impedance, Maxwell's equations, electromagnetic and optical wave propagation, with emphasis on engineering issues. Relevant engineering topics are emphasized in our lectures in order to prepare students for other courses in ESE that rely on the contents on this course. Several laboratory experiments accompany the course to provide hands-on experience on some of the topics in the lecture and prepare students for the capstone project.
Calculus, Part III Linear algebra: vectors, matrices, systems of linear equations, vector spaces, subspaces, spans, bases, and dimension, eigenvalues, and eigenvectors, maxtrix exponentials. Ordinary differential equations: higher-order homogeneous and inhomogeneous ODEs and linear systems of ODEs, phase plane analysis, non-linear systems.
Introduction to Computer Systems You know how to program, but do you know how computers really work? How do millions of transistors come together to form a complete computing system? This bottom-up course begins with transistors and simple computer hardware structures, continues with low-level programming using primitive machine instructions, and finishes with an introduction to the C programming language.
Electrical Circuits and Systems This course gives an introduction of modern electric and electronic circuits and systems. Designing, building and experimenting with electrical and electronic circuits are challenging and fun. It starts with basic electric circuit analysis techniques of linear circuits. Today mathematical analysis is used to gain insight that supports design; and more detailed and accurate representations of circuit performance are obtained using computer simulation. It continues with 1st order and 2nd order circuits in both the time and frequency domains. It discusses the frequency behavior of circuits and the use of transfer functions. It continues with introduction of non-linear elements such as diodes and MOSFET (MOS) transistors. Applications include analog and digital circuits, such as single stage amplifiers and simple logic gates.
Programming Languages and Techniques II This is a course about Algorithms and Data Structures using the JAVA programming language. We introduce the basic concepts about complexity of an algorithm and methods on how to compute the running time of algorithms. Then, we describe data structures like stacks, queues, maps, trees, and graphs, and we construct efficient algorithms based on these representations. The course builds upon existing implementations of basic data structures in JAVA and extends them for the structures like trees, studying the performance of operations on such structures, and theiefficiency when used in real-world applications. A large project introducing students to the challenges of software engineering concludes the course.
Embedded Systems/Microcontroller Laboratory An introduction to interfacing real-world sensors and actuators to embedded microprocessor systems. Concepts needed for building electronic systems for real-time operation and user interaction, such as digital input/outputs, interrupt service routines, serial communications, and analog-to-digital conversion will be covered. The course will conclude with a final project where student-designed projects are featured in presentations and demonstrations.
Engineering Ethics In this course, students will study the social, political, environmental and economic context of engineering practice. Students will develop an analytical toolkit to identify and address ethical challenges and opportunities in the engineering profession, including studies of risk and safety, professional responsibility, and global perspectives. The course will begin with a foundation in the history of engineering practice and major Western ethical and philosophical theories. Students will then apply this material to both historical case studies, such as Bhopal, the NASA Shuttle Program, and Three Mile Island, as well as contemporary issues in big data, artificial intelligence, and diversity within the profession. Students will consider how engineers, as well as governments, the media, and other stakeholders, address such issues.
Circuit-Level Modeling, Design, and Optimization for Digital Systems Circuit-level design and modeling of gates, storage, and interconnect. Emphasis on understanding physical aspects which drive energy, delay, area, and noise in digital circuits. Impact of physical effects on design and achievable performance.
Embedded Software for Life-Critical Applications The goal of this course is to give students greater design and implementation experience in embedded software development and to teach them how to model, design, verify, and validate safety critical systems in a principled manner. Students will learn the principles, methods, and techniques for building life-critical embedded systems, ranging from requirements and models to design, analysis, optimization, implementation, and validation. Topics will include modeling and analysis methods and tools, real-time programming paradigms and languages, distributed real-time systems, global time, time-triggered communications, assurance case, software architecture, evidence-based certification, testing, verification, and validation.
Software Design/Engineering You know how to write a "program". But how do you create a software "product" as part of a team, with customers that have expectations of functionality and quality? This course introduces students to various tools (source control, automated build systems, programming environments, test automation, etc.) and processes (design, implementation, testing, and maintenance) that are used by professionals in the field of software engineering. Topics will include: software development lifecycle; agile and test-driven development; source control and continuous integration; requirements analysis; object-oriented design and testability; mobile and/or web application development; software testing; refactoring ; and software quality metrics.
Computer Organization and Design This is the second computer oganization course and focuses on computer hardware design. Topics covered are: (1) basic digital system design including finite state machines, (2) instruction set design and simple RISC assembly programming, (3) quantitative evaluation of computer performance, (4) circuits for integer and floating-point arithmatic, (5) datapath and control, (6) micro-programming, (7) pipeling, (8) storage hierarchy and virtual memory, (9) input/output, (10) different forms of parallelism including instruction level parallelism, data-level parallelism using both vectors and message-passing multi-processors, and thread-level parallelism using shared memory multiprocessors. Basic cache coherence and synchronization.
Computer Operating Systems This course surveys methods and algorithms used in modern operating systems. Concurrent distributed operation is emphasized. The main topics covered are as follows: process synchronization; interprocess communication; concurrent/distributed programming languages; resource allocation and deadlock; virtual memory; protection and security; distributed operation; distributed data; performance evalaution.
Introduction to Networks and Protocols This is an introductory course on packet networks and associated protocols, with a particular emphasis on IP-based networks such as the Internet. The course introduces design and implementation choices that underlie the development of modern networks, and emphasizes basic analytical understanding of the concepts. Topics are covered in a mostly "bottom-up" approach starting with a brief review of physical layer issues such as digital transmission, error correction and error recovery strategies. This is followed by a discussion of link layer aspects, including multiple access strategies, local area networks (Ethernet and 802.11 wireless LANs), and general store-and-forward packet switching. Network layer solutions, including IP addressing, naming, and routing are covered next, before exploring transport layer and congestion control protocols (UDP and TCP). Finally, basic approaches for quality-of-service and network security are examined. Specific applications and aspects of data compression and streaming may also be covered.
Introductory Statistics Introduction to concepts in probability. Basic statistical inference procedures of estimation, confidence intervals and hypothesis testing directed towards applications in science and medicine. The use of the JMP statistical package.
Engineering Economics This course investigates methods of economic analysis for decision making among alternative courses of action in engineering applications. Topics include: cost-driven design economics, break-even analysis, money-time relationships, rates of return, cost estimation, depreciation and taxes, foreign exchange rates, life cycle analysis, benefit-cost ratios, risk analysis, capital financing and allocation, and financial statement analysis. Case studies apply these topics to actual engineering problems.
Statistics for Data Science The course covers the methodological foundations of data science, emphasizing basic concepts in statistics and learning theory, but also modern methodologies. Learning of distributions and their parameters. Testing of multiple hypotheses. Linear and nonlinear regression and prediction. Classification. Uncertainty quantification. Model validation. Clustering. Dimensionality reduction. Probably approximately correct (PAC) learning. Such theoretical concepts are further complemented by exempla r applications, case studies (datasets), and programming exercises (in Python) drawn from electrical engineering, computer science, the life sciences, finance, and social networks.
Introduction to Networks and Protocols This is an introductory course on packet networks and associated protocols, with a particular emphasis on IP-based networks such as the Internet. The course introduces design and implementation choices that underlie the development of modern networks, and emphasizes basic analytical understanding of the concepts. Topics are covered in a mostly "bottom-up" approach starting with a brief review of physical layer issues such as digital transmission, error correction and error recovery strategies. This is followed by a discussion of link layer aspects, including multiple access strategies, local area networks (Ethernet and 802.11 wireless LANs), and general store-and-forward packet switching. Network layer solutions, including IP addressing, naming, and routing are covered next, before exploring transport layer and congestion control protocols (UDP and TCP). Finally, basic approaches for quality-of-service and network security are examined. Specific applications and aspects of data compression and streaming may also be covered.
Analog Integrated Circuits Design of analog circuits and subsystems using primarily MOS technologies at the transistor and higher levels. Transistor level design of building block circuits such as op amps, comparators, sample and hold circuits, voltage and current references, capacitors and resistor and class AB output stages. The Cadence Design System will be used to capture schematics and run simulations using Spectre for some homework problems and for the course project. Topics of stability, noise, device matching through good layout practice will also be covered. Students who take ESE419 will not be able to take ESE572 later. More will be expected of ESE572 students in the design project.
Agent-Based Modeling and Simulation Agents are a new technique for trying to model, simulate, and understand systems that are ill-structured and whose mathematics is initially unknown and possibly unknowable. This approach allows the analyst to assemble models of agents and components where micro-decision rules may be understood; to bring the agents and components together as a system where macro-behavior then emerges; and to use that to empirically probe and improve understanding of the whole, the interrelations of the components, and synergies. This approach helps one explore parametrics, causality, and what-ifs about socio-technical systems (technologies that must support people, groups, crowds, organizations, and societies). It is applicable when trying to model and understand human behavior - consumers, investors, passengers, plant operators, patients, voters, political leaders, terrorists, and so on. This course will allow students to investigate and compare increasingly complex agent based paradigms along three lines - math foundations, heuristic algorithms/knowledge representations, and empirical science. The student will gain a toolbox and methodology for attempting to represent and study complex socio-technical systems.
Control For Autonomous Robots This course introduces the hardware, software and control technology used in autonomous ground vehicles, commonly called "self-driving cars." The weekly laboratory sessions focus on development of a small-scale autonomous car, incrementally enhancing the sensors, software, and control algorithms to culminate in a demonstration in a realistic outdoor operating environment. Students will learn basic physics and modeling; controls design and analysis in Matlab and Simulink; software implementation in C and Python; sensor systems and filtering methods for IMUs, GPS, and computer vision systems; and path planning from fixed map data.
Quantum Engineering Quantum engineering - the design, fabrication, and control of quantum coherent devices - has emerged as a multidisciplinary field spanning physics, electrical engineering, materials science, chemistry, and biology, with the potential for transformational advances in computation, secure communication, and nanoscale sensing. This course surveys the state of the art in quantum hardware, beginning with an overview of the physical implementation requirements for a quantum computer and proceeding to a synopsis of the leading contenders for quantum building blocks, including spins in semiconductors, superconducting circuits, photons, and atoms. The course combines background material on the fundamental physics and engineering principles required to build and control these devices with readings drawn from the current literature, including promising architectures for scaling physical qubits into larger devices and secure communication networks, and for nanoscale sensing applications impacting biology, chemistry, and materials
Project Management The course emphasizes a systems engineering approach to project management including the cycle costing and analysis, project scheduling, project organization and control, contract management, project monitoring and negotiations. In addition, the course will also examine management issues in large infrastructure projects like non-recourse or limited recourse project financing. Examples from the logistics planning process and global software project management will be used to highlight the course topics. /' Senior Design Project I - EE and SSE This is the first of a two-semester sequence in electrical and systems engineering senior design. Student work will focus on project/team definition, systems analysis, identification alternative design strategies and determination (experimental or by simulation) or specifications necessary for a detailed design. Project definition is focused on defining a product prototype that provides specific value to a least one identified user group. Students will receive guidance on preparing professional written and oral presentations. Each project team will submit a project proposal and two written project reports that include coherent technical presentations, block diagrams and other illustrations appropriate to the project. Each student will deliver two formal Powerpoint presentations to an audience comprised of peers, instructors and project advisors. During the semester there will be periodic individual-team project reviews.
Senior Design Project II - EE and SSE This is the second of a two term sequence in electrical and systems engineering senior design. Student work will focus on completing the product prototype design undertaken in ESE 450 and successfully implementing the said product prototype. Success will be verified using experimental and/or simulation methods appropriate to the project that test the degree to which the project objectives are achieved. Each project team will prepare a poster to support a final project presentation and demonstration to peers, faculty and external judges. The course will conclude with the submission of a final project written team report. During the semester there will be periodic project reviews with individual teams.
Principles of Microfabrication Technology A laboratory-based course on fabricating microelectronic and micromechanical devices using photolithographic processing and related fabrication technologies. Lectures discuss: clean room procedures; microelectronic and microstructural materials; photolithography; diffusion, oxidation; materials deposition; etching and plasma processes. Basic laboratory processes are covered for the first two thirds of the course with students completing structures appropriate to their major in the final third. Students registering for ESE 574 will be expected to do extra work (including term paper and additional project).
Fundamentals of Engineering I This course provides core engineering knowledge and competencies in a highly interactive class format. Topics include professional skills such as technical writing and presentation, guidelines for professional engineering practice, and career preparation. Introduction to the fields, roles, and industries of engineering also serves as a basis for selection of engineering major field
Calculus I  This course covers analytic geometry; continuous functions; derivatives of algebraic and trigonometric functions, product and chain rules, implicit functions; extrema and curve sketching; indefinite and definite integrals; applications of derivatives and integrals; exponential, logarithmic and inverse trig functions, hyperbolic trig functions, and their derivatives and integrals
General Physics I This introductory course - for students concentrating in physics, mathematics, chemistry, or engineering - covers mechanics, heat, and fluid dynamics. It also includes rigorous mathematical derivations using integral and differential calculus. Topics include velocity and acceleration, Newton's laws of motion, work, energy, power momentum, torque, vibratory motion, elastic properties of solids, fluids at rest and in motion, properties of gases, measurement and transfer of heat, and elementary thermodynamics.
General Physics I Lab This lab course engages students in experimental measurements spanning the areas of mechanics and thermal stresses on matter, with the objective of training students in experimental measurements, data manipulation and analysis, error analysis, deductive thinking, and instrumentation, providing depth to students' understanding of the phenomena taught in PS 115. Specific experimental measurements include accelerated motion, periodic motion, gravitational force, ballistics, conservation of energy and momentum, rotational dynamics, and measurements of the coefficient of linear expansion and the heat of fusion.
Fundamentals of Programming This course introduces programming constructs and techniques in a logical progression beginning with small problems and basic algorithms through larger scale programs and design. While not an object oriented course, Classes and Objects are used in an ancillary capacity while working on broader topics of software architecture. Complete programs will be designed, coded, and debugged in both Java and the C programming language, developing skills necessary to work with more complex software systems.
Engineering Graphics I This is a basic course in engineering graphics principles and is taught simultaneously with SolidWorks, a 3D modeling design application. Using traditional and computer design, the course stresses geometric constructions, orthographic projection, dimensioning, sectional views, 3D part modeling, assembly modeling, drafting and engineering drawings, animation and geometric tolerancing. The course stresses aesthetics and technical sketching.
Introduction to Rhetoric and Composition This course introduces students to the academic discipline of rhetoric and composition. Students read nonfiction texts, including rhetoric and composition and cross-disciplinary scholarship, in order to analyze their conventions and craft texts in various genres and modalities for a range of audiences. Students develop effective writing processes, sound research strategies, strong academic arguments, rhetorical awareness, and sensitivity to disciplinarity.
Calculus II This course covers applications of the integral to area, arc length, and volumes of revolution; integration by substitution and by parts; indeterminate forms and improper integrals: Infinite sequences and infinite series, tests for convergence, power series, and Taylor series; geometry in three-space.
General Physics II covers electricity and magnetism, light and optics, and sound. Topics include magnetism and electricity; simple electric circuits; electrical instruments; generators and motors; characteristics of wave motion; light and illumination; reflection; refraction, interference; polarization of light, color, and the spectrum; and production and detection of sound waves.
Introduction to Electric Circuits This course introduces engineering students to the analysis of linear electric circuits. The course covers the basic laws of circuit behavior and analysis techniques, including descriptions of circuit elements and electronic variables, and considers circuit theorems and principles for insightful analysis of electrical circuits. The course introduces basic concepts and analysis of networks.
Electric Circuits Lab Students use common electrical laboratory instruments (oscilloscopes, meters, and signal generators) and elemental circuit components to construct and analyze basic electrical circuits. They study the application of circuit theorems and circuit elements (RL and RC); conduct experiments with transient, steady state, and frequency response; and use software applications to simulate and analyze circuit performance.
Calculus III Topics include partial differentiation; chain rule, exact differentials, maxima and minima; multiple integration; application to volumes, center of gravity; and polar, cylindrical, and spherical coordinates; vector arithmetic and algebra, dot and cross products, parametric equations, lines and planes; gradient, directional derivative, curl, divergence; line integrals, work, Green's theorem, surface integrals; Stokes's and divergence theorems.
Digital Design I An introduction to computer hardware design. Topics include: digital design principles, Boolean algebra, combinational logic design, sequential logic design, registers, counters, memory, multiplexers, finite state machines, radix conversion, and programmable logic devices. Students learn to write, implement, and simulate elementary digital design.
Digital Design I Lab This lab course covers the practical aspects of digital logic design. Students design and implement logic circuits using techniques taught in CR 0245. Students gain experience using state of the art design software and development boards, which use modern field programmable gate array (FPGA) technology.
Frequency Domain Circuit Analysis Students perform frequency domain analysis of passive and active circuits, study transient and AC circuit analysis manually and with computer-aided applications, and examine the transient response of first and second order circuits. The course introduces pole and zero concepts and applies them to circuit analysis, and introduces computer methods of circuit analysis and design.
Mathematical Analysis In this course students will learn mathematical and numerical methods such as differentiation, integration, and Fourier analysis and how to apply these methods to solve scientific problems. Additionally, the course will cover statistics including data analysis, trend fitting, data correlation, and interpolation. Students will learn to use MATLAB as a tool but also become proficient in programming.
Ordinary Differential Equations This course presents the solution of first order differential equations and of higher order linear differential equations; power series solutions; Laplace transforms; and a multitude of applications.
Introduction to Electronics Circuits and Devices This first course in electronics teaches basic principles and technologies to understand, analyze, and design electronic circuits. The course reviews the properties of semiconductor materials used in the fabrication of diodes, bipolar junction transistors, and field effect transistors. Students analyze amplifier biasing techniques and develop circuit models of semi-conductor devices that are used to analyze and design electronic circuits.
Electronics Circuits Lab Students build and test circuits using diodes, bipolar junction transistors, and MOSFETs
Signal and Systems I This course studies and classifies continuous and discrete signals and systems. It presents time domain and discrete analysis of signals using the Fourier series, Laplace transforms, Fourier transforms, z-transforms, and fast Fourier transforms (e.g., differential equations, convolution, concept and meaning of impulse response); and examines frequency domain analysis, the Fourier series, and the Fourier transform as an alternative to time domain analysis. Students gain further insights into signal and system properties through the Laplace transform methods and the concept of the transfer function.
Embedded Microcontrollers This course covers the architecture of microcontrollers, including how they are constructed internally and how they interface with external circuitry. Applications for microcontrollers in both complex and simple equipment are discussed. Students learn how to apply and how to select a microcontroller for a given application. Students will learn to program the microcontroller to develop programming skills. The software tools will be used to develop software code for practical applications such as servo motor control, sensor reading, and data display. An accompanying laboratory course covers the programming of microprocessors to do a specific task.
Microcontroller Lab This laboratory covers the basic operation and applications of a microcontroller. Students learn to program a microcontroller to control applications, such as motor speed, by the use of an emulator connected to a PC. They design a circuit using a microcontroller for a specific application and write a program to control the circuit.
Probability Theory Topics in this course include counting techniques; axiomatic probability theory; discrete and continuous sample spaces; random variables, cumulative distribution functions, probability density and mass functions; joint distributions; expected value and moments; common distributions like the normal, binomial, and Poisson distributions; and limit laws.
Analog Electronics Design This advanced course in electronics examines high frequency response of bipolar junction transistor and field-effect transistor amplifiers using hybrid two-port active device models. Students consider the effect of feedback and frequency compensation techniques on the amplifier response and study a variety of analog circuits with respect to their analysis and applications, including active filters, oscillators, waveform generation and shaping, voltage regulator, and communication circuits. The course introduces basic power electronics device components.
Analog Electronics Lab This advanced lab provides insight into the functions of various application-specific electronic circuits. Experiments characterize functioning of various analog systems, such as oscillators, active filters, waveform generation and shaping circuits, and voltage regulator circuits.
Feedback Control Systems This course emphasizes analysis and synthesis of closed loop control systems using both classical and state-space approaches with an emphasis on electro-mechanical systems. The mathematical requirements include the Laplace transform methods of solving differential equations, matrix algebra, and basic complex variables. The discussion of classical control system design includes the modeling of dynamic systems, block diagram representation, time and frequency domain methods, transient and steady state response, stability criteria, controller action [Proportional (P), proportional and integral (PI),
Introduction to Philosophy This course is a topical introduction to philosophy. The aim of the course is to introduce students to the vocation of wonder and questioning by engaging students in discussions about some of the basic questions of philosophy.Students will read texts from historical and contemporary writers, and will be asked to develop their own skills of thinking, reading, and writing critically.
Electricity and Magnetism I This lecture course covers the foundations of electric and magnetic phenomena. Topics include electrostatics and the concepts of the electric field, flux, and potential; Coulomb's law and Gauss's law and their applications; vector and scalar fields and vector operators; electric energy of systems of charges; dipole fields and Laplace's equation; moving charges and currents; Ampere's law; and magnetic fields and forces.
Senior Design Project I Senior Design Project I
Senior Design Project II Senior Design Project II
Fault Analysis in Power Systems This course covers three types of faults in electrical power grids: open lines, lines shorted to ground, and lines shorted to each other. Methods of locating faults are covered along with an analysis of the effects of such faults. Methods of protection and fault isolation are also covered.
Power Generation and Distribution This course considers the generation and distribution of electrical power to large areas. Three-phase networks are described in detail, including both generators and loads. Methods of modeling distribution systems by per-unit parameters are covered, along with power factor correction methods. Fault detection and lightning protection methods are also described. Some economic aspects of power generation and distribution are presented.
Electromagnetic Compatibility This course presents design techniques to minimize electromagnetic interference (EMI) from or to it. The various sources of Radio-frequency emissions from electronic systems, coupling paths for the transfer of undesired electromagnetic energy will be introduced. Electromagnetic Compatibility (EMC) requirements for electronic products will be presented along with techniques to measure EMI. High speed digital signal transmission integrity related issues and methods to overcome signal integrity will be introduced. Techniques to minimize conducted and radiated Emissions through filtering and grounding will be presented. System design for EMC will be presented.
Power Security and Reliability This course focuses on Power System Protection and Relaying to allow the design of robust and reliable power systems. After reviewing the need for protection of power system elements (motors, generators, transformers, and transmission/distribution lines), the course: Explores developments in the creation of smarter, more flexible protective systems based on advances in the computational power of digital devices and the capabilities of communication systems that can be applied within the power grid, Examines the regulations related to power system protection and how they impact the way protective relaying systems are designed, applied, set, and monitored, Considers the evaluation of protective systems during system disturbances and describes the tools available for analysis, Addresses the benefits and problems associated with applying microprocessor-based devices in protection schemes
Power Electronics This course covers the design and operation of power electronics circuits, such as power supplies and motor controls. Using electronic circuit models for transistors and diodes developed in earlier courses, students analyze and design power circuits. Particular attention is paid to power dissipation and packaging. The accompanying laboratory course, EE 0360L, provides practical experience in conjunction with the lecture material.
General Chemistry I This course is the first in a two-semester sequence covering the fundamental principles and applications of chemistry for science majors. Course content includes electronic structure of atoms and molecules, bonding fundamentals, fundamentals of chemical reactions, and gas laws.
General Chemistry I Laboratory General Chemistry I Laboratory
Principle of Physics I This course is an introductory calculus-based course on classical mechanics, waves, and special relativity. The student will be able to apply Newtons laws and conservation of energy and momentum to various problems in kinematics and dynamics, use the law of universal gravitation to analyze the behavior of falling objects and objects in orbital motion, describe simple harmonic motion, oscillations, and waves, and explain the basic ideas of special relativity.
Principles of Physics Laboratory I is an introductory laboratory for the calculus-based course on classical mechanics, and waves. The student will be able to apply Newtons laws and conservation of energy and momentum to various problems in the laboratory, and perform measurements of simple harmonic motion, oscillations, and waves. The analysis of sources of error and formal propagation of uncertainties will also be developed, as well as graphical techniques and the method of least-squares fits.
Calculus I This course is the first in the calculus curriculum and introduces the central concepts of calculus. Topics include limits, continuity, derivatives of algebraic and transcendental functions of one variable, applications of these concepts and a brief introduction to the integral of a function.
Calculus II This course is the second in the calculus curriculum and consists of two parts. The first part is concerned with the techniques of integration and applications of the integral. The second part is concerned with infinite sequences and series.
Ordinary Differential Equations An introduction to the theory of ordinary differential equations (ODEs), methods of solving first and higher order linear differential equations and linear systems, some applications in the sciences and engineering, the Laplace transform and its application in solving differential equations and linear systems, stability analysis and Eulers numerical algorithm.
Probability and Data Analysis This course is a foundational, calculus-based introduction to statistics and probability. The following conceptual themes will be developed through the process of statistical investigation: exploratory data analysis (univariate and bivariate), fundamentals of experiment design and sampling, planning and conducting a study, exploring random phenomenon using probability and simulation, and the fundamentals of statistical inference. Technology is integrated into each theme, and the statistical software package used will be chosen by the instructor.
Numerical Methods for Engineers This course is an introduction to numerical approximation techniques in the solution of problems encountered in engineering and science. Topics include Taylor polynomials, iterative methods for root finding, interpolation, numerical quadrature and differentiation. Error analysis, effective application, and limitations of methods are emphasized.
Principles of Physics II This course is an introductory calculus-based course on electromagnetism, physical optics, and quantum physics. The student will be able to apply the concepts of electric field and electric potential to problems in electrostatics and with electric currents, describe the motion of charged particles in magnetic fields and induction, explain the origin of electromagnetic waves and properties of light, determine the behavior of light waves passing through single or multiple slits, and understand elementary principles of quantum physics.
Principles of Physics Laboratory II This is an introductory laboratory for the calculus-based course on electromagnetism, optics, and modern physics. The student will be able to apply the concepts of electric field and electric currents to problems in the laboratory, and perform measurements on magnetic fields and induction, optics, and elementary quantum physics phenomena. The analysis of sources of error and formal propagation of uncertainties will also be developed, along with graphical techniques and least-squares fits.
Computer Engineering Fundamentals This course provides an introduction to Computer Engineering and to KSU including an introduction to the CPE faculty, an overview of career opportunities, available campus facilities, student organizations, etc. Advising and course planning will be covered. Some of the skills necessary for CPE students will also be introduced.
Circuit Analysis I This course introduces basic circuit analysis including resistive circuits, voltage and current sources, analysis methods, network theorems, energy storage elements, and AC steady-state analysis. Techniques for analyzing resistive networks are heavily emphasized. In addition, the physical mechanisms of capacitance and inductance are examined along with analysis of transient responses in circuits containing resistors, capacitors, and inductors. Laboratory exercises reinforce the theoretical concepts presented in class and provide various opportunities to become proficient with standard instrumentation used in electrical engineering.
Digital Logic Design This course is a study of digital circuit fundamentals with an emphasis on combinational and sequential logic design, Boolean algebra and switching theory, logic simplification and implementation using standard digital ICs of various logic families and programmable logic devices. A significant emphasis is placed on the study of digital design principles with emphasis on the use of LSI, MSI, and SSI circuits in the application and design of complex digital systems with a detailed examination of CMOS and TTL at the transistor level. Laboratory exercises reinforce theoretical concepts presented in the lecture utilizing an industry standard micro controller.
Discrete Mathematics An introduction to the fundamentals of discrete mathematics. Topics include sets, formal logic, methods of proof, counting relations, functions, graphs and trees, and finite state automata.
Programming and Problem Solving I This course provides an introduction to computing with a focus on programming. Instruction centers on an overview of programming, problem-solving, and algorithm development. Particular topics include object-oriented design/programming, primitive data types, arithmetic and logical operators, selection and repetition structures, interactive user input, exception handling, using and designing basic classes, single-dimensional data structures with searching and sorting, and arrays. Programming assignments focus on techniques of good programming style including proper documentation. The student is taught to efficiently design, code, and debug problem solutions and the relationship between correct code and security.
Programming and Problem Solving I Laboratory Lab activities with programming and game design to accompany
Computer Organization and Interfacing This course will introduce the students to the fundamental concepts of computer organization including basic register storage, ALUs, and state machines. In addition, we will study how assembly language is used to drive this architecture and explore fundamental hardware operations such as shifting, bit manipulation, and bit testing. Interfacing our architecture to external systems will also be discussed.
VHDL Design with FPGAs This course will explore the design and development of synchronous and asynchronous machines using VHDL. VHDL is an industry standard design language used to create complex embedded digital systems in programmable devices such as FPGAs and CPLDs. This course will explore design simulation, synthesis, and timing analysis. Physical configurations for FPGAs and CPLDs will also be explored.
Advanced Embedded Systems This course will introduce the students to advanced embedded system design concepts. In addition to learning linux fundamentals, students will explore advanced embedded design concepts such as multithreading and thread synchronization, complex interfacing of digital and analog sensors, and the use of mutexes/semaphores for managing shared resources.
Interfacing and Communication This course is a study of computer peripheral interfacing and communications. Students will study topics in order to be able to interconnect devices and communicate with a variety of peripherals. Serial interfacing protocols will be covered with respect to connecting graphic cards, memory systems, keyboards, and other devices. Data communications principles will be studied including signaling, channel capacity, and bandwidth considerations.
Sensors, Actuators, and Integration This course provides an introduction to the theory and applications of modern sensors and actuators. The mathematical and physical principles that underlie the operation and uses of various types of sensors and actuators as well as the acquisition, processing, and driving of signals associated with these devices is explored. Sensory- and actuator-based devices interfaced with embedded systems are used to augment the theoretical concepts taught.
Device Networks This course provides an introduction to basic networking theory, protocols and technologies and their use in the internetworking of embedded systems. Various networking interface technologies (wireless and wireline) are studied from a conceptual, hardware, and programmatic perspective; the learning experience is augmented via the design and implementation of practical applications using modern Single Board Computers (SBC) and peripheral devices. The concept of the Internet of Things (IoT) is interwoven throughout the course in order to provide the student with a clear grasp of the evolution of such networked devices and how they can be controlled locally, remotely, and within the cloud.
Data Collection and Analysis This course will provide an introductory look at concept and techniques in the data collection and analysis. After covering the introduction the abstract data types and use of standard data structures, the techniques used to implement numerical algorithms, visualize and process the data, evaluate and validate prediction models and various implementation platforms (computer architectures) for efficient data analysis will be covered. By the end of the course participants should have acquired the skills to plan and execute data collection and analysis campaigns in technical application scenarios.
Senior Project Proposal This course involves an in-depth examination of the principles and methods associated with the engineering design process. Students will be grouped into design teams where the engineering design principles and methods are put into practice in the developing of a computer engineering project. The final product for each design team will be a project proposal that will be assessed via design review.
Senior Project Design This course will require a design team to complete the computer engineering project they proposed in the senior project proposal course. The steps to completing this project will include building a prototype of the system/device, programming this system/device, and testing this system/device. The design team will also be responsible for drafting the project report, demonstrating that the system/device functions according to specifications, and making an oral presentation of the project.
Engineering Electronics This course introduces the basic circuits used in analog signal processing systems. The primary focus will be on studying bias circuits and small signal models for diodes, BJTs and MOSFETs. In addition, functional circuits including diode rectifiers, logic circuits, and basic amplifier circuits using single transistors are discussed. A brief introduction to op-amps as signal processing blocks is included.
Control Systems The focus of this course is a study of feedback control systems theory including practical applications of compensation and P,PI, and PID concepts. Control system modeling, transient and steady state characteristics and response, stability and frequency response are analyzed; Compensation and controller design using Root locus methods are covered. The use of control system software, such as MATLAB, in the analysis and design of control systems is emphasized.
Engineering Economic Analysis Students learn the time value of money and the basic tools used in engineering economic decision making. The tools include engineering factor notation, algebraic formulas, and Excel functionality. The time value effect is studied as equivalences for present worth, annual worth, or future worth evaluations. Useful algorithms are presented for making sound economic investment decisions involving replacement theory, risk analysis, depreciation, tax incentives, rate of return, cost benefit ratio, return on investment, and economic service life.
Public Speaking Introduction to the principles of public speaking. Practical experience in the development, presentation, and critical analysis of speeches to inform, to persuade, and to actuate.
Writing and Rhetoric Rhetorical principles of and strategies for producing effective academic writing. Writing as a recursive process that leads to greater organizational coherency, stylistic complexity, and rhetorical awareness.
Argument and Advocacy The nature of critical thinking as applied in written and oral argument. Analysis of inductive and deductive reasoning. Analysis of reasoning, argument, forms of support and fallacies of argument and language. Instruction in and practical experience in writing sound persuasive arguments and engaging in oral argumentation assignments.
Introduction to Geology Processes responsible for the Earth's minerals, rocks, and structure surface features. Volcanism; mountain building; plate tectonics; weathering. Erosion and deposition by streams, glaciers, wind and waves. Geological resources, earth hazards, and interaction of man with global processes.
Biology of Sex Fundamental principles of biology related to sexual reproduction: genetics, physiology, behavior, ecology and evolution of sex in a broad range of organisms.
Digital Cities Explores changes in urban form and urban experience associated with advances in digital technology. Implications for the design of places and the distribution of economic and social benefit. Lecture-discussions and opportunities to explore technology initiatives in community building.
Probability and Random Processes for Engineers Random events, random variables, and random processes, with emphasis on probabilistic treatment of signals and noise. Specific topics include: sample spaces, probability, distributions, independence, moments, covariance, time/ensemble averages, stationarity, common processes, correlation and spectral functions.
Modern Physics I Special relativity, fundamental principles of quantum mechanics, emphasizing the modern description of atomic phenomena. Wave-particle duality, Bohr theory, Schroedinger equation, elementary atomic structure.
General Physics II Oscillations, waves in elastic media, sound waves. Temperature, heat and the first law of thermodynamics. Kinetic theory of matter, second law of thermodynamics.
General Physics III Charge and matter, electric field, electric potential, dielectrics, capacitance, current and resistance, electromotive force and circuits, magnetic fields, magnetic field of a moving charge,
General Physics I Fundamental principles of mechanics. Vectors, particle kinematics. Equilibrium of a rigid body. Work and energy, linear momentum, rotational kinematics and dynamics. Primarily for engineering and science students.
Linear Analysis I Separable and linear ordinary differential equations with selected applications; numerical and analytical solutions. Linear algebra: vectors in n-space, matrices, linear transformations, eigenvalues, eigenvectors, diagonalization; applications to the study of systems of linear differential equations
Calculus IV Partial derivatives, multiple integrals, introduction to vector analysis.
Calculus III Infinite sequences and series, vector algebra, curves.
Calculus II Techniques of integration, applications to physics, transcendental functions.
Calculus I Limits, continuity, differentiation. Introduction to integration. 4 lectures
Materials Engineering Structure of matter. Physical and mechanical properties of materials including metals, polymers, ceramics, composites, and electronic materials. Equilibrium diagrams. Heat treatments, materials selection and corrosion phenomena
Design and Analysis of Algorithms Intermediate and advanced algorithms and their analysis. Mathematical, geometrical, and graph algorithms. NP-complete problems. Additional topics will be chosen from pattern matching, file compression, cryptology, dynamic and linear programming, and exhaustive search
Discrete Time Signals and Systems Discrete-time systems and analysis, with emphasis on linear time-invariant (LTI) systems. Sampling theorem. Classification of discrete-time systems. Convolution and its application to LTI systems. The z transform, discrete-time Fourier transform, and discrete Fourier transform. Introduction to digital filters.
General Chemistry for Physical Science and Engineering II Topics include solution chemistry, thermodynamics, kinetics, equilibrium (including acids and bases), electrochemistry, and nuclear chemistry.
General Chemistry for Physical Science and Engineering I Stoichiometry, thermochemistry, atomic structure, bonding, solid-state structures, intermolecular forces, and foundational principles of organic chemistry.
Design of Museum Displays of Science, Engineering and Technology The design and creation of educational museum displays that highlight science, engineering, and technology. Projects done by multidisciplinary teams and for clients in the community. Emphasis on design, teamwork, service learning and project management
Solid State Physics Laboratory Selected experiments on X-ray diffraction, Hall effect, optical absorption, thermo-electric effect, photovoltaic cells, diode characteristics, and superconductivity
Solid State Physics Physics of solids including the structural, mechanical, thermal, and electronic properties, energy band theory and the properties of metals and semiconductors
Electromagnetic Fields and Waves I Electric and magnetic field theory using vector analysis. Electric fields, dielectric materials, magnetic fields, induced emf, magnetic materials, Maxwell's equations, wave equation
Optics Ray optics, lens systems, optical instruments, wave optics, and polarization of light.
Vibrations and Waves Introduction to vibrations and waves and their applications. Harmonic oscillator, waves, complex notation, superposition, interference, coherence, Fourier analysis. Applications may include sound, optics, quantum mechanics, and electromagnetic radiation
Mechatronics Microprocessor applications in machine control and product design. Applied electronics. Drive technology; transducers and electromechanical systems. Real-time programming. Mechatronic design methodology
Numerical Analysis I Topics in interpolation and approximation methods, initial value problems, and boundary value problems of ordinary differential equations
Complex Analysis II Elementary analytic functions and mappings. Cauchy's Integral Theorem; Poisson's Integral Formula. Taylor and Laurent series, theory of residues, and the evaluation of integrals. Harmonic functions, conformal mappings.
Complex Analysis I Elementary analytic functions and mappings. Cauchy's Integral Theorem; Poisson's Integral Formula. Taylor and Laurent series, theory of residues, and the evaluation of integrals. Harmonic functions, conformal mappings
Vector Analysis Differential and integral calculus of vector-valued functions. Green's Theorem, Stokes' Theorem, and the Divergence Theorem. Applications and generalizations
Advanced Electronic Manufacturing Design and fabrication of commercial electronic products; PCB layout design, bill of material analysis and component purchasing, production planning and scheduling, programming automated surface-mount assembly line, marketing of products. Multidisciplinary project teams exposed to real-world challenges of electronics manufacturers.
Sales Engineering Concepts and principles of engineering in sales. Role of the professional engineer in the analysis, design, development, production, and final application of a product or system required by the buyer.
Human Factors Engineering Analysis of factors influencing the efficiency of human work. Data on the physical and mental capacities of persons, the physical environment, work organization, and the problem of aging. Design of machines, operations, human computer interface and work environment to match human capacities and limitations, including the handicapped
Engineering Economics Economic analysis of engineering decisions. Determining rates of return on investments. Effects of inflation, depreciation and income taxes. Sensitivity, uncertainty, and risk analysis. Application of basic principles and tools of analysis using case studies
Project Organization and Management Design and implementation of a major industrial/business systems project. Project planning considerations. Motivational and influence techniques used in project management. Scheduling techniques with risk assessment. Resource leveling and management under constraints. Reducing project duration. Monitoring progress with earned value analysis. Project audit and closure. Planning and implementation of a project. Application of project management software
Operations Research I Systems modeling methodology, mathematical model formulations, linear programming, graphical and simplex methods. Sensitivity analysis. Integer and binary programming. Transportation, transshipment, assignment, and other network optimization models.
Introduction to Data Science Introduction to the field of data science and the workflow of a data scientist. Types of data (tabular, textual, sparse, structured, temporal, geospatial), basic data management and manipulation, simple summaries, and visualization.
Microelectronics and Electronics Packaging Materials, processes, and reliability of microelectronics and electronics packaging, surface mount assembly and printed circuit board fabrication. Organic substrates and ceramic substrates. Mechanical design, thermal, and electrical considerations in electronic packaging. Design for manufacturability. Overview of optoelectronics packaging and other emerging technologies in microelectronics and electronic packaging. Project on design and manufacture of an electronic device.
Professional Responsibilities The responsibilities of the computer science professional. The ethics of science and the IEEE/ACM Software Engineering Code of Ethics. Quality tradeoffs, software system safety, intellectual property, history of computing and the social implications of computers in the modern world. Applications to ethical dilemmas in computing. Technical presentation methods and practice.
Survey of Organic Chemistry Structure, isomerism, nomenclature, fundamental reactions of major functional groups and applications of organic chemicals in agriculture, medicine, industry, and the home.
Microfabrication Laboratory Application of basic processes involved in microfabrication: cleanroom protocol, oxidation, diffusion, photolithography etching and sputtering. Explore process development through fabrication of electronic, photonic or microfluidic devices. Each student will be part of a team that will fabricate and test a device.
Micro/Nano System Design Fundamentals of designing micro/nano scale systems employing sensors, actuators and intelligent controls. Explore mechanics, electronics, heat transfer, photonics, fluid mechanics and biometrics at the micrometer and nanometer scale. Discover how scaling impacts design criteria. Investigate the integration of science and engineering and evaluate applications in living systems.
Electric Circuit Analysis I and Electronics Manufacturing and Circuit Analysis Laboratory Basic circuit analysis and basic electronics manufacturing. Resistive circuits, voltage and current sources, op-amps, network theorems. Practical electronics manufacturing expanded through concepts such as CAD/CAM design, Design for Manufacture (DFM), documentation requirements, deposition and etching processes, prototyping, and production planning. PCB design and assembly.
Senior Project I Senior Project I
Computer Engineering Orientation Introduction to the computer engineering discipline. Success skills and curricular information. Career paths and opportunities. Professional aspects of engineering and computer science. Interaction with upper division students, alumni, faculty and staff. Introduction to computer software and hardware.
Fundamentals of Computer Science Basic principles of algorithmic problem solving and programming using methods of top-down design, stepwise refinement and procedural abstraction. Basic control structures, data types, and input/output. Introduction to the software development process: design, implementation, testing and documentation. The syntax and semantics of a modern programming language
Introduction to Computing Use of a supportive software development environment to design, develop, and test applications in a selected topic domain that demonstrates the potential of careers in computing. An introduction to computing and to the selected topic domain. The Class Schedule will list topic selected.
Digital Design Number systems, Boolean algebra, Boolean functions, and function minimization. Analysis and design of combinational and sequential digital logic circuits. Hardware Description Language (HDL) concepts and applications digital design and synthesis in FPGAs. Course may be offered in classroom-based or online format.
Data Structures Introduction to data structures and analysis of algorithms. Abstract datatypes. Specification and implementation of advanced data structures. Theoretical and empirical analysis of recursive and iterative algorithms. Software performance evaluation and testing techniques.
Project-Based Object-Oriented Programming and Design Object-oriented programming and design with applications to project construction. Introduction to class design, interfaces, inheritance, generics, exceptions, streams, and testing.
Computer Design and Assembly Language Programming Design and implementation of digital computer circuits via CAD tools for programmable logic devices (PLDs). Basic computer design with its datapath components and control unit. Introduction to assembly language programming of an off-the-shelf RISC-based microcontroller.
Computer Architecture In-depth study of the instruction set architecture and hardware design of a specific CPU. Introduction to pipelines, input/output and multi-processors. Computer abstractions and performance measurement.
Microcontroller-Based Systems Design Design, implementation and testing of microcontroller-based systems. Hardware and C software for embedded systems to sense and actuate external devices. I/O common embedded systems to interface I/O devices and protocols.
Systems Programming C programming language from a system programming perspective. Standard C language including operators, I/O functions, and data types in the context of system functions. Unix commands, shell scripting, file system, editors

General Chemistry I Fundamental basis of chemistry for science, engineering and health professional students
Honors Lab for Ch 221H Laboratory work to accompany Honors General Chemistry.
Calculus I Differential calculus of functions of a single variable, including limits, the definition and computation of the derivative, and applications of the derivative.
Calculus III Introduction to differential equations, infinite series, parametric equations, polar coordinates, and conic sections.
Introduction to Linear Algebra Systems of linear equations, linear transformations, matrix algebra, vector spaces, and determinants.
Applied Ordinary Differential Equations Solution techniques in ordinary differential equations; applications.
Discrete Mathematics Topics in discrete mathematics, including propositional logic, sets, relations, inverse functions, divisibility, induction, recurrences, inclusion-exclusion, permutations, combinations, graphs, graph coloring, and applications.
Exploring Electrical Engineering Freshman introductory course for students interested in electrical engineering. Students learn the design process, problem-solving, teamwork and presentation skills through completion of a hands-on project. Lab activities familiarize students with basic equipment and components. Speakers present an overview of different fields and career opportunities in electrical engineering.
Engineering Computation Applying the principles of engineering analysis. Presenting technical content. Utilizing engineering software and writing scripts. Controlling external hardware via programming.
Digital Circuits Foundation course in digital design. Topics such as number systems, basic logic gates, TTL device parameters, Boolean algebra, logic circuit simplification techniques, timing analysis, the application of MSI combinational logic devices, programmable logic devices, flip-flops, synchronous state machines and counters. Introduces students to a systematic design methodology. Uses computer based tools such as schematic capture programs, programmable logic development programs, and digital circuit stimulators.
Engineering Programming Introduction to software design, algorithms, data structures, and programming using the "C" language. Interfacing to sensors, actuators, and other hardware. Writing documentation and presenting technical content.
Digital Systems Second course in the digital and microprocessor sequence. Covers shift registers, synchronous state machines, programmable logic devices, memories, and simple arithmetic circuits; introduction to timing analysis, design for test techniques.
Electric Circuit Analysis I Introduction to the basic methods of circuit analysis including Kirchhoff’s laws, resistive circuits, techniques of circuit analysis, operational amplifiers, and energy storage elements.
Electric Circuit Analysis I Lab Lab for Electric Circuit Analysis I.
Introduction to Design Processes Introduction to design for electrical and computer engineers. Discussion of design processes, needs, requirements, functional decomposition, testing and project management.
Electric Circuit Analysis II Introduction to the dynamic response of circuits, sinusoidal steady state analysis and the Laplace Transform for circuit analysis. Includes transient response and phasor and Laplace analysis.
Electric Circuit Analysis II Lab Lab for Electric Circuit Analysis II.
Introduction to Project Development Teams of students work on design projects that integrate electrical and computer engineering skills, knowledge and concepts gained up to this point. Application of structured design methodology to an authentic engineering problem.
Electric Circuit Analysis III Frequency response and ac power. Includes transfer functions, design of analog filters, Bode plot analysis, pole-zero diagrams, and ac and three-phase power.
Electric Circuit Analysis III Lab Lab for Electric Circuit Analysis III.
Electronics I Introduction to solid state electronics, leading to the physical properties and characteristics of solid state electronic devices: diodes, bipolar junction transistors and field effect transistors. Analysis and design of rectifier topologies and biasing circuits. Application of a computer-aided design (CAD) tool, such as SPICE.
Electronics I Lab Lab for Electronics I.
Computer System Organization Basic concepts of modern computer systems, computer programming, and data structures. Topics include system organization, programming and debugging tools, project and software management tools, C, C++, scripting languages, performance benchmarking, data structures, lists.
Microprocessors Microprocessor instruction set architecture of a 32-bit microprocessor, structured development of assembly language programs, interfacing assembly language and high-level language programs, interrupt procedures, handshake data transfer, and interfacing with simple digital devices. Introductions to microcomputer memory systems, virtual memory, and overview of microprocessor evolution.
Embedded Operating Systems Introduction to the principles of modern operating system design. Topics include: introduction to basic operating system concepts, processes, inter-process communication and concurrent programming, scheduling, memory management, file systems, device management, introductions to protection & security, RTOS structure and operation. Linux will be used for class examples and lab assignments.
Microprocessor Interfacing and Embedded Systems Teaches the hardware and software design of embedded microprocessor systems. Topics include sensor, transducer, and actuator interfacing; microprocessor-based process control; interfacing with display, vision, and speech systems; Real Time Operating System (RTOS) operation; creation of device drivers; intelligent robotics applications; and an introduction to the Unified Modeling Language (UML).
Microprocessor Interfacing and Embedded Systems Lab Microprocessor Interfacing and Embedded Systems Lab
Verilog and FPGA Design Introduces the students to the Verilog Hardware Description Language and describes its role in the electronic design automation environment. Students learn how to prototype digital designs using FPGAs.
Embedded Operating Systems & Device Drivers After a brief introduction to the basic structure and operations of the Linux OS, students will gain extensive practice developing Linux device drivers for a wide variety of hardware devices.
Embedded Operating Systems & Device Drivers Lab Embedded Operating Systems & Device Drivers Lab
Microprocessor System Design Advanced hardware and software design of desktop type microcomputer systems. Topics include large project design management and documentation; DRAM system design, cache organization, connections, and coherency; the memory hierarchy and virtual memory; I/O buses such as AGP, PCI-X, and Infiniband; multithreaded operating system considerations; JTAG(IEEE1149.1) and Design For Test; high frequency signal integrity; and power supply considerations.
Industry Design Processes Topics include: design documentation standards; building and managing effective teams; product development steps; developing and presenting project proposals; design processes; project scheduling and management; design to meet desired needs.
Signals and Systems I Fundamentals of signals and systems including fundamental signals, basic system properties, linear time invariant systems, Fourier series, Fourier transforms, and filters.
Computer Architecture An introduction to the key concepts of computer system architecture and design. Topics include the design and analysis of instruction set architectures, memory systems, and high-performance IO systems; basic CPU implementation strategies; basic pipelined CPU implementation; performance analysis; and a survey of current architectures.
Senior Project Development I Project teams apply structured design methodology to original projects with assistance of faculty and industrial/community advisers and after initial research, prepare written and oral project proposals. Students keep logs of their design work and submit weekly progress reports. Groups periodically give oral progress reports.
Senior Project Development II Students maintain logs of their individual work and submit weekly progress reports. Each group prepares final written and oral reports for the project sponsor.
Engineering Professional Practice Prepares graduates for careers in electrical and computer engineering. Topics include ethical reasoning and considerations, strategies for job acquisition, career planning, certification and licensure, approaches to lifelong learning, and means of maintaining awareness of contemporary global and local societal issues.
General Physics I Introductory physics for students majoring in engineering. The student will explore topics in statics and dynamics using the methods of calculus.
General Physics I Lab Introductory laboratory for students in General Physics I.
General Physics II Introductory physics for students majoring in engineering. The student will explore topics in electricity and electromagnetism using the methods of calculus.
General Physics II Lab Introductory laboratory for students in General Physics II.
General Physics III Introductory physics for students majoring in engineering. The student will explore topics in thermodynamics, and optics using the methods of calculus.
General Physics III Lab Introductory laboratory for students in General Physics III.
Probability and Statistics for Electrical and Computer Engineering An introduction to applied probability, statistics, and data analysis. Sample spaces, probability laws, discrete and continuous probability models, sampling theory, point and interval estimation, hypothesis testing, regression, correlation, experimental design, analysis of variance, computer simulation and computation in Matlab. Applications to problems of current interest to electrical and computer engineers.
Electronics II Ideal and non-ideal OPAMP circuits; Analysis of electronic amplifiers using small-signal models of electronic devices; Differential and operational amplifier design techniques involving current mirrors and active loads; Frequency response of analog circuits; Computer-aided design.
Electronics III Feedback topologies. Design and analysis of sinusoidal waveform generators. Introduction to phase-locked loops. Study of digital circuits used in various logic families. Computer-aided design.

﻿DISCRETE STRUCTURES.   Propositional and predicate logic, mathematical proof techniques, sets, combinatorics, functions and relations, graphs, and graph algorithms.
PROBLEM SOLVING IN ENGINEERING.  Broad introduction to engineering through the process of applying the principles of mathematics to solve real-life engineering problems. Math topics are presented within the context of engineering applications and reinforced through examples from engineering courses. Also introduces algorithm development through the use of the engineering analysis software MATLAB.
EMBEDDED SYSTEMS II.   Advanced course in design of microcontroller-based systems. Emphasis is on the application of microcontrollers and other VLSI components to real-time, interactive, and online problems.
ALGORITHMS & DATA STRUCTURES.  Design and analysis of algorithms with an emphasis on data structures. Approaches to analyzing lower bounds on problems and upper bounds on algorithms. Classical algorithm design techniques including algorithms for sorting, searching, and other operations on data structures such as hash tables, trees, graphs, strings, and advanced data structures, dynamic programming and greedy approaches.
HISTORY OF THE UNITED STATES, 1865 TO PRESENT.   An introduction to the political, social, economic, and cultural history of the United States since 1865. This course is designed to help students understand and evaluate their society, comprehend the historical experience, and further develop reading and writing competencies and critical skills.
INTRODUCTION TO COMPUTER SCIENCE AND ENGINEERING. Introduction to engineering concepts, the computer science and engineering disciplines, skills for written communication, and departmental orientation.
ELECTRONICS FOR COMPUTER ENGINEERING. Review of basic electronics concepts, Integrated circuit technologies, Realization of digital logic devices, Analog filters, Signals and Signal Conditioning, Instrumentation, A/D, D/A conversion, Sensors, Oscillators, PLLs, Actuators, Prototyping, SMT and Schematics and PCBs (CAD).
OPERATING SYSTEMS.  Functions and components of an operating system, including process synchronization, job scheduling, memory management, file systems protection, and deadlocks. Related system software, such as loaders, linkers, assemblers, and windowing systems.
EMBEDDED SYSTEMS I.  Design of microcontroller-based systems, including microprocessor programming, component and system architectures, memory interfacing, asynchronous and synchronous serial interfaces, timer-based peripherals, analog to digital (A/D) and digital to analog (D/A) converters, and typical applications.
CIRCUITS AND SIGNALS.  Basic principles of electrical circuits using resistors, capacitors and inductors. Filter analysis and synthesis using complex algebra. Introduction to operational amplifiers. Time domain and frequency domain analysis and taxonomy of signals. Concurrent laboratory experiments complement lecture topics.
HISTORY OF THE UNITED STATES TO 1865.  An introduction to the political, social, economic, and cultural history of the United States prior to 1865. This course is designed to help students understand and evaluate their society, comprehend the historical experience, and further develop reading and writing competencies and critical skills.
OBJECT-ORIENTED PROGRAMMING.  Object-oriented concepts, class diagrams, collection classes, generics, polymorphism, and reusability.  Projects involve extensive programming and include graphical user interfaces and multithreading.
PRACTICAL COMPUTER HARDWARE/SOFTWARE SYSTEMS.  A practical approach to hands-on computer hardware and software systems in a laboratory environment. Students will be exposed to basic design concepts using off-the-shelf hardware components and to tools that enable the design of complex software systems.
STATE AND LOCAL GOVERNMENT.   The principles and organization of American state, county, and municipal government, together with current problems and the constitution and government of Texas.
PROFESSIONAL AND TECHNICAL COMMUNICATION FOR SCIENCE AND ENGINEERING. Theory and practice in written and oral presentations with an emphasis on professional and technical communication for science and engineering.
INTRODUCTION TO MATRICES AND LINEAR ALGEBRA. Solving systems of linear equations, matrix operations, determinants, vector spaces, linear transformation, orthogonality, Gram-Schmidt process, projections, and eigenvalues and eigenvectors.
GENERAL TECHNICAL PHYSICS I.   The first half of a one-year technical course. Required for many science and engineering majors, exceeds premedical requirement. The study of physical phenomena in the fields of mechanics, heat, and waves.
COMPUTER ORGANIZATION & ASSEMBLY LANGUAGE PROGRAMMING.  Computer organization from the viewpoint of software, including: the memory hierarchy, instruction set architectures, memory addressing, input-output, integer and floating-point representation and arithmetic. The relationship of higher-level programming languages to the operating system and to instruction set architecture are explored. Some programming in an assembly language.
LINEAR ALGEBRA FOR CSE.  Solving systems of equations, matrix algebra, determinants, vector spaces, orthogonality and least squares, with applications to computer science.
RHETORIC AND COMPOSITION I.  Introduction to college reading and writing. Emphasizes recursive writing processes, rhetorical analysis, synthesis of sources, and argument.
INTRODUCTION TO DIGITAL LOGIC. Analysis, design and testing of combinational and sequential logic circuits. Topics include Boolean algebra, logic circuit minimization techniques, synchronous sequential circuit design, algorithmic state machine design, design of arithmetic/logic and control units. Computer aided design tools and utilized throughout the course.
CALCULUS II.  Applications of integration, techniques of integration, parametric equations, polar coordinates, sequences, and series.
CALCULUS I. Concepts of limit, continuity, differentiation and integration; applications of these concepts.
INTRODUCTION TO SIGNAL PROCESSING. Examines models for presentation and processing of digital signals. Sampling theorem, correlation and convolution, time and frequency analysis of linear systems, Fourier transform, Z-transform, design of digital filters structures for discrete time systems.
ENGINEERING PROBABILITY.   Topics in engineering that involve random processes. Applications and backgrounds for topics in reliability, inventory systems, and queuing problems, including absolute and conditional probabilities, discrete and continuous random variables, parameter estimation, hypothesis testing, and an introduction to linear regression, experimental design, and analysis of variance.
GENERAL TECHNICAL PHYSICS II.   The second half of a one-year technical course. The study of physical phenomena including electricity, magnetism, circuit theory, light, and optics.
COMPUTER SYSTEM DESIGN PROJECT I.   Analysis and design of an industry-type project that involves hardware and software components to meet desired needs within realistic constraints and standards.
INTERMEDIATE PROGRAMMING Programming concepts beyond basic control and data structures. Emphasis is given to data structures including linked-lists and trees as well as modular design consistent with software engineering principles.
PROFESSIONAL PRACTICES.   Ethics. Contemporary social aspects and responsibilities of computing in a global, societal context. Lifelong learning goals and resources. Entrepreneurship and intellectual property. Project involving written and oral communication.
COMPUTER SYSTEM DESIGN PROJECT II.  Implementation, integration, quality assurance through peer review and testing, and deployment of the project ; oral presentation, documentation and project demonstration.
GOVERNMENT OF THE UNITED STATES.  The constitution and government of the United States. The organization, procedures, and duties of the branches of the government, together with their accomplishments and defects.
QUANTITATIVE COMPUTER ARCHITECTURE.  Pipelined processors, parallel processors including shared and distributed memory, multicore, Very Long Instruction Word (VLIW) and graphics processors, memory and cache design, computer peripherals, and computer clusters.
﻿
Data Structures. Focuses on object-oriented programming with an emphasis on tools and techniques for developing moderate to large programs. Topics include use and implementation of linear and nonlinear data structures and the design and analysis of elementary algorithms. Offered by Computer Science. Limited to two attempts.
Digital Circuit Design. Analysis and design of CMOS digital integrated circuits. Topics include: MOSFET transistor design equations for “hand” analysis and models for computer (SPICE) simulations; static and dynamic characteristics of inverters; fabrication, mask layout, and simulation; static and dynamic CMOS, pass transistor and transmission gate integrated circuit styles; combinational and sequential integrated circuits; semiconductor memory cell types and memory cell arrays. Offered by Electrical & Comp. Engineering. Limited to two attempts.
Classical Systems and Control Theory. Introduces analysis and synthesis of feedback systems, including functional description of linear and nonlinear systems, block diagrams and signal flow graphs; state-pace representation of dynamical systems, frequency response methods, Root Locus, Nyquist, and other stability criteria; performance indices and error criteria; and applications to mechanical and electromechanical control systems.
Digital Control Systems.  Introduces analysis, design of digital control systems, Z-transform, discrete linear systems, frequency domain, and state variable techniques. Discusses use of microcomputers in control systems.
Probability and Statistics for Engineers and Scientists I. Introduction to probability and statistics with applications to computer science, engineering, operations research, and information technology. Basic concepts of probability, random variables and expectation, Bayes rule, bivariate distributions, sums of independent random variables, correlation and least squares estimation, central limit theorem, sampling distributions, confidence interval construction, and hypothesis testing for a single sample and two samples.
Secure RF Communications. Reviews current systems of Radio Frequency (RF) communications and related cyber security issues. This course focuses on security issues in wireless networks, such as cellular networks, wireless LANs, Bluetooth, NFC, RFID, mobile security, anti-jamming communication, and physical layer security. The course will first present an overview of wireless networks, then focus on attacks and discuss proposed solutions and their limitations.
Introduction to Computer Statistical Packages.  Use of computer packages in statistical analysis of data. Topics include data entry, checking, and manipulation, and use of computer statistical packages for graphical procedures, basic descriptive and inferential procedures, and regression.
Small Spacecraft Engineering.  Comprehensive study of small spacecraft design, operations, bus, communications, computing hardware, software, sensors, power, attitude control, testing, and other topics needed for successful engineering of a spacecraft and its ground station. Review of ultra-small CubeSats, their hardware, software, and missions.
Hardware Security.  Covers security and trust in hardware, in relation to both ASIC and FPGA technologies. Topics include ASIC and FPGA manufacturing supply chain, threats and security challenges such as IP piracy, overproduction, counterfeiting, trojan insertion, reverse engineering, etc. Discusses various attacks against hardware, including physical, invasive, destructive, logical, and side channel attacks. Spans various hardware defense solutions including metering, locking, obfuscation, watermarking, access control, Trojan testing, IP core isolation, and the theory and practice of physical unclonable functions.
Introduction to Signals and Systems. Provides an introduction to key concepts for the description and analysis of signals and systems with an emphasis on discrete-time signals and systems. Specific topics include sinusoidal and complex exponential signals, sampling, spectrum representation of signals via DTFT and DFT, system properties, convolution, impulse response and frequency response. The associated computer lab provides opportunities to apply concepts to physical reality. Note: Students must register for both lecture and lab.
ECE 415: Power System Analysis. 3 credits.   Introduces the concepts of power system analysis commonly encountered in the study and practice of electric power engineering. Emphasis is on topics of modern power system modeling, operation and protection, power flow studies, symmetrical and unsymmetrical fault calculations, economic dispatch, and power system stability. Students will use interactive power system simulation tools to complete homework assignments and a comprehensive term project.
Digital Electronics and Logic Design Lab. Digital Electronics and Logic Design Lab.
Introduction to Electrical and Computer Engineering.  Introduces fundamental concepts in Electrical and Computer engineering and provides insight to the various careers in each field. Both theory and practical applications of electronic components are covered through examples of real world applications.
Robot Design.  Introduces the concept of robot design and implementation. The focus will be on electrical design philosophies, mechanical design philosophies, and controller design. Assignments are heavily based on the design, simulation and implementation of real-world robotic applications. Assessments are primarily in project form and make use of 3D printing and other manufacturing techniques.
Linear Electronics II.  Second course in linear electronics. Covers differential amplifiers, feedback circuits, power amplifiers, feedback amplifier frequency response, analog integrated circuits, operational amplifier systems, oscillators, wide band and microwave amplifiers, and computer-aided design.
Advanced Composition. Intensive practice in writing and analyzing expository forms such as essay, article, proposal, and technical or scientific reports with emphasis on research related to student's major field. Notes: Students must attain minimum grade of C to fulfill degree requirements. Schedule of Classes designates particular sections of ENGH 302 in business, humanities, natural sciences and technology, and social sciences.
Mobile Systems and Applications. A comprehensive study of modern mobile devices, with the special focus on smartphones and wearable devices. Topics include mobile operating systems, mobile device components, application development, human-computer interaction, data management, network systems, mobile intelligence, and mobile security. Lectures are enhanced and illustrated with several take-home, hands-on labs. A group-based, open-topic project involves specifying, developing, and presenting a medium complexity application using the Android operating system.
Learning From Data.  This is an introductory course in machine learning and pattern recognition that covers basic theory, algorithms, and applications. Machine learning is the science of getting computers to act without being explicitly programmed. This course balances theory and practice, and covers the mathematical as well as the heuristic aspects. It provides a broad introduction to machine learning and pattern recognition. Topics include: (i) supervised learning (parametric/non-parametric algorithms, support vector machines, kernels, neural networks). (ii) Unsupervised learning (clustering, dimensionality reduction, recommender systems, autoencoders). (iii) Learning theory (bias/variance tradeoffs, VC theory, generalization). (iv) Ensemble methods (boosting and bagging, random forests). (v) Deep learning (deep belief networks, convolutional neural networks, deep autoencoders). The course will draw from numerous case studies and applications.
Digital Signal Processing. Representation analysis and design of digital signals and systems. Covers sampling and quantization, z-transform and discrete Fourier transform, digital filter realizations, design techniques for recursive and non-recursive filters, fast Fourier transform algorithms, and spectral analysis. Additional topics may include adaptive filtering, homomorphic digital signal processing, digital interpolation and decimation.
FPGA and ASIC Design with VHDL. Practical introduction to modeling of digital systems with VHDL for logic synthesis. Overview and comparative analysis of design flow and tools for FPGAs and standard-cell ASICs. Discusses verification of digital systems using testbenches, prototyping boards and modern testing equipment, and illustrates VHDL-based design methodology with multiple examples from communications, control, DSP, and cryptography. Laboratory experiments create link between simulation and actual hardware implementation based on FPGA boards.
RS: Senior Advanced Design Project II.  Project includes designing and constructing hardware, writing required software, conducting experiments or studies, and testing complete system. Requires oral and written reports during project and at completion.
Selected Topics in Engineering.  Selected topics from recent developments, and applications in various engineering disciplines. Designed to help professional engineering community keep abreast of current developments.
Object-Oriented Programming.  Thorough treatment of programming according to object-oriented principles. Introduces classes, interfaces, inheritance, polymorphism, and single dispatch as means to decompose problems. Covers intermediate programming techniques including error handling through exceptions, arrangement of source code into packages, and simple data structures. Intermediate debugging techniques and unit testing are covered.
Introduction to Random Processes in Electrical and Computer Engineering.  Probability and random processes are fundamental to communications, control, signal processing, and computer networks. Provides basic theory and important applications. Topics include probability concepts and axioms; stationarity and ergodicity; random variables and their functions; vectors; expectation and variance; conditional expectation; moment-generating and characteristic functions; random processes such as white noise and Gaussian; autocorrelation and power spectral density; linear filtering of random processes, and basic ideas of estimation and detection.
Contemporary Microeconomic Principles.  Introduces microeconomics in the context of current problems. Explores how market mechanism allocates scarce resources among competing uses; uses supply, demand, production, and distribution theory to analyze problems.
University Physics I Laboratory.  Experiments in mechanics, including techniques for recording, graphically and statistically analyzing, and reporting data.
Mobile Devices and Network Security.  Embedded security features of hand-held wireless devices. Data link layer encryption and authentication protocols applied in mobile devices. Security factors in the decisions on configuring wireless mobile devices and network infrastructure. Robust cryptography that is needed to attain the highest levels of integrity, authentication, and confidentiality.
Electric Circuit Analysis I.  Covers the first half of electric circuit theory and practice. Topics include DC analysis of circuits including Ohm's and Kirchhoff's laws, Thevenin and Norton equivalents, and analysis of circuits with resistors, capacitors, inductors, and operational amplifiers. Includes lab experiments to reinforce topics covered in the course.
University Physics I.  First semester of three-semester, calculus-based introductory physics sequence, designed primarily for science and engineering majors. Mechanics.
Digital Communications Systems.  Introduces digital transmission systems. Topics include quantization, digital coding of analog waveforms, PCM, DPCM, DM, baseband transmission, digital modulation schemes, ASK, FSK, PSK, MSK, QAM, pulse shaping, intersymbol interference, partial response, voice-band and wideband modems, digital cable systems, regenerative repeaters, clock recovery and jitter, multipath fading, digital radio design, optimal receiver design, MAP receiver, and probability of error.
Senior Advanced Design Project I.  Conception of senior design project and determination of feasibility of proposed project. Work includes developing preliminary design and implementation plan.
Linear Electronics I.  Principles of operation and application of electron devices and linear circuits. Topics include semiconductor properties, diodes, bipolar and field effect transistors, biasing, amplifiers, frequency response, operational amplifiers, and analog design.
Operating Systems.  Issues in multiprogramming. Covers concurrent processes and synchronization mechanisms; processor scheduling; memory, file, I/O, and deadlock management; performance of operating systems; and projects dealing with synchronization in multiprogrammed OS and virtual memory management.
Introductory Statistics I.  Elementary introduction to statistics. Topics include descriptive statistics, probability, and estimation and hypothesis testing for means and proportions. Statistical software used for assignments.
Probability for Engineers.  Introduction to probability with applications to electrical and computer engineering, operations research, information technology, and economics. Basic concepts of probability, conditional probability, random variables and moments, specific probability distributions, multivariate distributions, moment-generating functions, limit theorems, and sampling distributions.
Continuous-Time Signals and Systems.  Introduction to the processing and analysis of continuous-time signals and systems in the time-domain via differential equations and in the transform-domain using Laplace and Fourier transforms. Specific topics include the frequency response of LTl systems, Bode plots, system functions, block diagrams, filter design, and a rigorous treatment of sampling and aliasing. Includes applications to communications, circuits, control, and signal processing.
Linear Algebra.  Systems of linear equations, linear independence, linear transformations, inverse of a matrix, determinants, vector spaces, eigenvalues, eigenvectors, and orthogonalization.
Real-Time Concepts.  Presents design methodology, principles and practice for the development of real-time embedded systems and their application to robotics, mechatronics, sensing, signal processing, and control. Topics include system decomposition, multi-tasking, task communication and synchronization, system modeling, time analysis, principles of filter and controller implementation, 'fuzzy' engineering, and multi-microcontroller systems.
Computer Programming for Engineers.  Introduction to C as a second programming language with emphasis on problems and language features relevant to engineers. Topics include basic data types, pointers, elementary data structures, file/output, bitwise operations, and Unix commands for compilation and debugging. Intended as terminal course in computer programming.
Fundamentals of Communication.  Presents principles to develop appropriate and effective communication strategies in one-to-one and small group communication settings. Emphasizes analyzing and assessing communication skills to create and sustain effective communication in personal and professional relationships.
Introduction to Computer Programming.  Rigorous introduction to problem solving through development of computer programs. Focuses on identifying algorithmic patterns in problems, describing problem solutions in high-level pseudocode, then implementing in a procedural programming language. Basic programming concepts are covered in detail including expressions, control structures, simple data types, and input/output. Program testing and debugging are discussed to verify that problems are solved correctly.
Electric Circuit Analysis II. Covers the second half of electric circuit theory and practice. Topics include AC analysis of circuits including phasors, frequency response, power analysis, and transformers. Includes a project and lab experiments to reinforce topics covered in the course.
Applications of Discrete-Time Signal Processing.  Introduces fundamental concepts of digital signal processing. Emphasis on the theoretical and numerical tools used for frequency domain analysis of sampled signals. Topics covered include sampling, the discrete Fourier transform, fast transform algorithms, spectral analysis, and digital filtering.
Data and Computer Communications.  Introduces modern data communications and computer networks. Topics include point-to-point communication links and transmission of digital information, modems, and codecs; packet switching, multiplexing, and concentrator design; multiaccess and broadcasting; local area and wide area networks; architectures and protocols for computer networks; OSI reference model and seven layers; physical interfaces and protocols; and data link control layer and network layer.
Public Speaking.  Presents principles to develop effective presentations for public and professional settings while integrating appropriate technologies. Emphasizes analyzing audience; composing meaningful, coherent messages; conducting responsible research; developing effective arguments; and improving delivery skills to strengthen confidence and credibility.
University Physics II Laboratory.  Experiments in mechanics, electricity, and magnetism, including techniques for recording, graphically and statistically analyzing, and reporting data.
Introduction to Engineering.  Introduces engineering profession fundamentals and problem-solving. Topics include description of engineering disciplines, functions of the engineer, professionalism, ethics and registration, problem solving and representation of technical information, estimation and approximations, and analysis and design.
Computer Organization.  General overview of operating a digital computer. Topics include computer arithmetic, arithmetic unit, hardwired and microprogrammed control, memory, register-to-register, input-output operations, and behavioral modeling of computer organization using VHDL.
Probability.  Random variables, probability functions, special distributions, and limit theorems.
Discrete Mathematics I.  Introduces ideas of discrete mathematics and combinatorial proof techniques including mathematical induction, sets, graphs, trees, recursion, and enumeration.
Computer Networking Protocols. Introduces computer networking protocols and concepts, emphasizing Internet and Internet Protocol Suite. Covers computer networking protocols at application, transport, and network layers, including multimedia networking protocols, and network security and management.
Digital System Design. Covers principles of digital logic and digital system design and implementation in VHDL. Topics include number systems; Boolean algebra; analysis, design, and minimization of combinational logic circuits; analysis and design of synchronous and asynchronous finite state machines; and introduction to VHDL and behavioral modeling of combinational and sequential circuits.
Embedded Systems and Hardware Interfaces.  This course introduces embedded systems design through project-based activities. The platform runs on Linux and students design their own loT (Internet of Things) system as well as demonstrate dashboards with cloud-based data. Hardware interfaces and several types of sensors and actuators are incorporated as part of the projects.
Communication and Information Theory.  Introduction to analog and digital communications. Topics include review of important concepts from signals and systems theory and probability theory; Gaussian processes and power spectral density; digital transmission through additive white Gaussian channels; sampling and pulse code modulation; analog signal transmission and reception using amplitude, frequency and phase modulation; and effects of noise on analog communication systems.
Linear Electronics Lab I.  Linear Electronics Lab I.
Cryptography Fundamentals.  Covers basic concepts of cryptology, types of cryptosystems, security services, and key management. Gradually introduces mathematical background required for understanding cryptography. Discusses modern secret-key stream and block ciphers, modes of operation, public key cryptosystems (RSA, elliptic curve, and post-quantum cryptography), hash functions, message authentication codes, and digital signature schemes. Covers key cracking machines, side-channel attacks, and fault attacks. Discusses popular cryptographic modules, such as True Random Number Generators and Physical Unclonable Functions, used for key generation and device authentication. Introduces educational and public domain software implementing modern cryptographic algorithms.
Introduction to Wireless Communications and Networks.  Presents the basics of modern wireless communications and wireless networking at the first-year graduate level. Topics include wireless signal design, channel characterization, receiver structure, multiple access technologies, cellular concepts, capacity enlargement, mobility management, and wireless/wireless interworking.
Analytic Geometry and Calculus II.  Methods of integration, conic sections, parametric equations, infinite series, and power series.
Special Topics in Electrical and Computer Engineering.  Special Topics in Electrical and Computer Engineering.
Linear Systems and Control.  Introduces linear systems theory and design of linear feedback control systems. Reviews linear algebra, state variables, state-space description of dynamic systems, analysis of continuous-time and discrete-time linear systems, controllability and observability of linear systems, and stability theory.
Elementary Differential Equations.  First-order ODEs, higher-order ODEs, Laplace transforms, linear systems, nonlinear systems, numerical approximations, and modeling.
Analytic Geometry and Calculus III.  Partial differentiation, multiple integrals, line and surface integrals, and three-dimensional analytic geometry.
Modern Control Systems Design.  Introduces state-space modeling, analysis, and control of feedback systems using time-domain methods rather than frequency-domain methods, and the connections between the two. In particular the course will emphasize the connections between physical real-world systems and mathematical control problems. Specific topics include modeling and realization theory, stability analysis and control of linear systems, controllability and observability, introductions to digital control, linear optimal control, and nonlinear control.
Optical Fiber Communications. Studies components and integration of fiber-optic transmission systems. Topics include optical fibers, signal degradation, optical sources, power launching and coupling, photodetectors, receiver circuits, link analysis, and optical measurements.
Introduction to Humanoid Robotics. Covers basic robot architecture with a focus on humanoid robotics. Topics include mechanical design philosophies, electrical design philosophies, and controller design of high DOF systems. Simulation of various parts and functionalities of humanoids culminates in a term project , which includes hardware demonstrations.
Mobile Robots.  Introduces mobile robotic systems. Topics include overview of power systems, motors, behavior-based programming, sensors, and sensor integration. Design projects conceived, developed, implemented, and presented.
Engineering Seminar. Engineering ethics, professionalism, role of engineer in society, current topics, and employment opportunities.
Device Driver Development.  Addresses device driver and kernel level software programming and development. The C programming language and program trouble shooting are reviewed. Basics of device driver software, Character driver operations and data structures, concurrency and race conditions, kernel timers, memory allocation, communications with hardware, interrupt handling, kernel data types, memory mapping and Direct Memory Access concepts are explored.
Computer Network Architectures and Protocols.  Introduction to architectures and protocols of computer networks and concept of packet switching. Topics include ISO standard layer model, physical interfaces and protocols, data link control, multiaccess techniques, packet switching, routing and flow control, network topology, data communication subsystems, error control coding, local area network, satellite packet broadcasting, packet radio, interconnection of packet-switching networks, network security and privacy, and various examples of computer networks.
Sensor Engineering.  Presents the fundamentals of sensor characteristics and transfer functions, sensor circuits and interfacing, sensor noise, and protection methods. Studies of different methods used in sensing position, motion, acceleration, force, humidity, temperature, chemicals, etc. are developed, followed by an analysis of specific sensor designs.
University Physics II.  Waves, electricity, and magnetism.
Single-Chip Microcomputers.  Explores designing with single-chip microcomputers and microcomputer interfacing. Topics include role of microcomputers compared with microprocessors and other computers, microcomputer architecture and organization, real-time control issues, assembly language programming for control, design of control software, input/output methods, design tools, and available single-chip microcomputers. Students select project and design, and construct system including single-chip microcomputer and ancillary hardware to implement control system.
Internet of Things. Introduces the principles, technologies, challenges, and required expertise needed for building the Internet of Things (IoT) solutions. It provides a big picture of what is involved in IoT. Topics covered in this course include analog and digital sensing, interfacing sensors with microcontrollers, digital communication protocols, microcontroller choices and capabilities, gateways, fog computing, networking, cloud computing, need and challenges for cryptography and compression, security issues, and low power/energy challenges. The listed topics are covered only to the extent required to understand the challenges and to the point that the role of a given topic in IoT solutions is comprehended. While briefly covering the technologies involved at the various hierarchal levels of IoT solutions, the course introduces other courses at GMU where students could build further expertise in the topics of interest.
Analytic Geometry and Calculus I.  Functions, limits, the derivative, maximum and minimum problems, the integral, and transcendental functions.
Integrated Calculus Analysis Geometry I Topics from plane analytic geometry. Introduction to differentiation and integration. Applications.
General Chemistry Stoichiometry; atomic structure; periodic properties; ionic and covalent bonding; molecular geometry; gases, liquids, and solids; thermochemistry. Required of students majoring in science and students in engineering.
Fundamentals Of Speech Communication A study of communication theories as applied to speech; practical communicative experiences ranging from interpersonal communication and small group process through problem identification and solution in discussion to informative and persuasive speaking in standard speaker-audience situations.
First Year Seminar For Engineers The course will provide the foundations for students enabling them to: learn to succeed, work together in teams, understand the field chosen for study, and orient to the University life and environs.
Elementary Engineering Design An introduction to engineering design.
Integrated Calculus Analysis Geometry II Completion of introductory study of topics in plane analytic geometry and the calculus of one variable, infinite series.
Mechanics Calculus-based. Statics; uniform and accelerated motion; Newtons laws; circular motion; energy, momentum, and conservation principles; dynamics of rotation; gravitation and planetary motion; hydrostatics and hydrodynamics; simple harmonic motion; wave motion and sound.
English Composition I Emphasis on the organization of the expository theme. Directed writings of themes based on personal experience, on the relationship between experience and language, and on the relationship between experience and ideas.
Software Tools For Engineers Introduction to MATLAB and engineering problem solving with MATLAB. Students will be introduced to arrays, relational and logical operations, control flow of sequence, selection and repetition, function definition, 2-D and 3-D graphics, data analysis, Graphical User Interface (GUI) development and Simulink.
Multivariate Calculus Parametric equations and calculus, solid analytic geometry, vector functions, differential and integral calculus of functions of two or more variables, and an introduction to vector calculus with applications. Typically offered Fall Spring Summer.
Electricity And Optics Heat, kinetic theory, elementary thermodynamics, heat transfer. Electrostatics, AC/DC circuits, electromagnetism, magnetic properties of matter; geometrical and physical optics.
Linear Circuit Analysis I Volt-ampere characteristics for circuit elements; independent and dependent sources; Kirchhoffs laws and circuit equations. Source transformations; Thevenins and Nortons theorems; superposition, step response of 1st order (RC, RL) and 2nd order (RLC) circuits. Phasor analysis, impedance calculations, and computation of sinusoidal steady state responses. Instantaneous and everage power, complex power, power factor correction, and maximum power transfer. Instantaneous and average power.
Electronic Measurement Techniques Experimental exercises in the use of laboratory instruments. Voltage, current, impedance, frequency, and wave form measurements. Frequency and transient response. Elements of circuit modeling and design
Programming For Engineers Introductory C programming course. Students will be introduced to basic syntax, standard mathematics library, control structures, user-defined functions, arrays, pointers, structures, and file I/Os. Laboratory exercises will accelerate learning of fundamental materials through supervised practice
Differential Equations A first course in ordinary differential equations. First order differential equations, linear and nonlinear systems of differential equations, and second order differential equations.
Linear Algebra Introduction to linear algebra. Systems of linear equations, matrix algebra, vector spaces, determinants, eigenvalues and eigenvectors, diagonalization of matrices, applications.
Linear Circuit Analysis II Use of Laplace Transform techniques to analyze linear circuits with and without initial conditions. Characterization of circuits based upon impedance, admittance, and transfer function parameters. Determination of frequency response via analysis of poles and zeros in the complex plane. Relationship between the transfer function and the impulse response of a circuit. Use of continuous time convolution to determine time domain responses. Properties and practical uses of resonant circuits and transformers. Input - output characterization of a circuit as a two-port. Low and high-pass filter design.
Introduction to Digital System Design An introduction to the analysis and design of combinational and sequential digital systems, with an emphasis on practical design techniqes and rapid protoyping on a contemporary programmabe logic device using a modern hardware description language (HDL) and electronic design automation (EDA) software.
Object Oriented Programming The C++ and Java programming languages are presented. Students will be introduced to classes, inheritance, polymorphism, class derivation, abstract classes, interfaces, function overloading and overriding, container classes and template classes.
Signals And Systems Classification, analysis and design of systems in both the time- and frequency-domains. Continuous-time linear systems: Fourier Series, Fourier Transform, bilateral Laplace Transform. Discrete-time linear systems: difference equations, Discrete-Time Fourier Transform, bilateral Z-Transform. Sampling, quantization, and discrete-time processing of continuous-time signals. Discrete-time nonlinear systems: median-type filters, threshold decomposition. System design examples such as the compact disc player and AM radio.
Signs And Systems Lab Experiments covering the analysis and design of systems in both the time and frequency domains.
Data Structures Data structures describe the way that computer programs organize and store information. This course introduces the specification, representation and manipulation of the basic data structures common to much of computer programming such as: linked lists, arrays, stacks, queues, strings, trees, graphs, search trees, heaps, hash tables, and B-trees
Engineering Economics And Project Management Introduction to principles of engineering project management and techniques. Topics include technical feasibility studies, project specifications, scheduling, validation, lifecycle costing, and economic analysis. The focus is on managing an engineering project through scheduling, budgeting, resource management, execution and control
Microprocessor System Design And Interfacing An introduction to basic computer organization, microcontroller instruction sets, microcontroller programming using assembly and C language, microcontroller interfacing and peripherals, and embedded system design.
Discrete Mathematical Structures This course is the study of finite and discrete mathematical structures relating to the theory of computation. Topics will include directed and undirected graphs and their relation to these structures, combinatorial problems inherent in computation, Boolean algebra, and recurrence relations.
Probabilistic Methods In Electrical And Computer Engineering An introductory treatment including probability of events, discrete and continuous random variables, multiple random variables, sums of random variables and long-term averages, and elementary random processes. Applications involving uniform, Gaussian, exponential, geometric and related random variables. Introduction to parameter estimation and hypothesis testing. Discussion of wide-sense stationary random processes, including correlation functions, spectral densities and the response of linear time invariant systems. Course examples are drawn from signal processing, wireless communications, system reliability, and data science.
Computer Organization And Design Design of computer systems with emphasis on computer hardware. Topics discussed include: Introduction to Basic Design Concepts, Computer Abstraction and Technology, Role of Performance, Instruction Language, Arithmetic for Computers, Processor Data Path and Control, Enhancing Performance with Pipelining, and Exploiting Memory Hierarchy. Students design and implement a RISC processor in the laboratory.
Written And Oral Communication For Engineers Course focuses on written and oral communication specifically for the environment, with special attention given to purpose, organization, audience analysis, and appropriate situational protocol. Written work emphasizes technical reports, technical descriptions, research skills, principles of document design, collaborative writing, and routine correspondence. Oral work emphasizes project presentations, conference planning and leadership, and small group dynamics
Analog and Digital Electronics Electronic amplifiers; operational amplifier circuits; diode characteristics and circuit applications; bipolar junction transistor (BJT) and MOSFET characteristics, operating modes biasing, linear amplifier configurations; ideal characteristics of logic devices; basic logic devices using BJTs and MOSFETs.
Senior Engineering Design I The senior engineering design courses I and II constitute a two-semester sequence of an interdisciplinary activity. The objective of these courses is to provide engineering students with supervised experience in the process and practice of engineering design. Projects are chosen by the students or the faculty. Students working in teams pursue an idea from conception to realistic design. The course concludes with a substantial written and oral design review before a faculty team. Class discussions will include the ethical responsibility of engineers, impact of engineering solution in a global/societal context, and small-group interactions
Introduction To Communication Theory Signal analysis, introduction to digital communication and pulse code modulation. Introduction to amplitude modulation and frequency modulation. Introduction to information theory
Software Engineering Design I The design and implementation of larger scale software in Java. Introduction of software engineering design concepts. Application of fundamental concepts and programming strategies useful in the context of any programming language
Senior Engineering Design II Senior Engineering Design II
Ethics For The Professions Ethics For The Professions
Digital Signal Processing With Applications The course is presented in five units. Foundations: the review of continuous-time and discrete-time signals and spectral analysis; design of finite impulse response and infinite impulse response digital filters; processing of random signals. Speech processing; vocal tract models and characteristics of the speech waveform; short-time spectral analysis and synthesis; linear predictive coding. Image processing: two-dimensional signals, systems and spectral analysis; image enhancement; image coding; and image reconstruction.
Electronic Measurement Techniques Experimental exercises in the use of laboratory instruments. Voltage, current, impedance, frequency, and wave form measurements. Frequency and transient response. Elements of circuit modeling and design.
Calculus I Limits, continuity, and the derivative and integral of functions of one variable, with applications, and the fundamental theorem of calculus.
Math I Lab Topics include: Algebra Review, Limits, Continuity, Derivative: definition, rules: sum, quotient, product, power, chain, Implicit Differentiation, Applications of the Derivative: related rates, max/min problems, LHospitals Rule, Anti-derivative, Integration.
Introduction to Engineering Provides information on engineering education, the engineering profession, and basic concepts and tools. Introduces the engineering design process and provides opportunity for students to complete engineering design projects.
General Chemistry and Recitation Deals with the fundamental principles of chemistry, the chemical and physical properties of the elements and their most common compounds, and methods of qualitative inorganic analysis.
General Chemistry Laboratory Designed to teach some of the techniques of chemical experimentation, illustrate some of the principles of chemical theory, and develop some skill in the preparation and analysis of chemical substances.
Calculus II Including more integration, sequences, series, Taylor's theorem, improper integrals, and L'Hospital's rule
Math Lab II Topics include: integration techniques, applications of integration, polar functions and parametric functions, sequences and series.
Introduction to Electrical & Computer Engineering Organized in five (5) Descriptive, Environment, Technical, Practical (Hands on), and Projects, students are introduced to various engineering issues related to the profession of electrical engineering.
General Physics for Science and Engineering Students General Physics for Science and Engineering Students
General Physics for Science and Engineering Students Lab. 1 General Physics for Science and Engineering Students Lab. 1
Calculus III. Including calculus of functions of several variables, through Greens Theorem and Stokess Theorem, with applications.
Math III Laboratory 1 Credit The purpose of this course is to further develop students' problem solving skills and help them see how calculus can be used to solve engineering problems. Topics include: Vectors and scalars, Dot and Cross Product, Vector Differentiation, Gradient, Divergence, and Curl, Vector Integration, Divergence Theorem, and Stokes Theorem.
General Physics for Science and Engineering II General Physics for Science and Engineering II
General Physics for Science and Engineering II Lab General Physics for Science and Engineering II Lab
Computer Science I This course provides an introduction to the discipline of computer programming. Closed laboratory to reinforce lecture topics and introduce new topics. Course is designed to expose students to basic programming concepts and to the use of the C++ language. This course is designed to enhance the students ability to design, develop and test/debug programs. Each student will increase his or her skill in writing correct and maintainable programs. Emphasis will be placed on problem analysis and on the subsequent development of algorithms. Several standard data types will be discussed and the student will gain an understanding of the issues relating to the use, design and implementation of each type in C++. A major focus of the lectures will be to provide an overview of real-world problem solving concepts and top-down software design.
Engineering Math History and importance of engineering Mathematics, trigonometry in engineering, 2-D vectors in engineering, complex numbers in engineering, 3-D vectors in engineering, systems of equations in engineering, application of derivatives in engineering, application of integrals in engineering, solving differential equation, applications of differential equations in engineering, Laplace transforms and applications, Interdisciplinary Applications.
Computer Science II Course exposes students to the software development life cycle with a focus on the concepts and use of the object-oriented paradigm in problem analysis, solution design, software development and implementation.  This course is designed to enhance the students ability to engineer software that is efficient, maintainable and cost efficient over its entire life cycle. Data abstraction is discussed in depth and students gain experience in the use of classes, object and member functions.
Fundamentals of Circuit Theory Understanding of basic circuit theory, circuit theorems, dc, ac circuits, magnetic circuits, transients, Laplace and Fourier transforms, Fourier series, electric devices, 2-port network, basic filters and op-amps.
Fundamentals of Circuit Theory Lab Understanding of hands-on labs associated basic circuit theory, circuit theorems, dc, ac circuits, operational amplifiers (op-amps), electric devices network, basic filters and op-amps.
Fundamentals of Digital Systems Introduction to hardware building blocks used in digital computers and systems. Introduces number systems (including binary, octal and hexadecimal), Boolean algebra, two-level/multilevel logic minimization/simplification using K-Maps and Quine-McCluskey methods, combinational logic circuit design and implementation with available SSI, MSI, and programmable logic devices (PAL, PLA, multiplexers, encoders, ROMS). Practical considerations such as hazard and glitches are treated. Basics of sequential logic design including latches, flip-flops, registers, counters, finite state machines design, minimization, and implementation are presented.
Fund of Digital Systems Lab Laboratory experiments and (mini) projects in design and implementation of simplex to moderately complex combinational and sequential logic circuits.
Fund: Electromagnetics Electric fields, flux and potential; Coulomb's Poisson's and Gauss's laws; permittivity and conductivity, magnetostatics, magnetic materials, magnetic materials and forces, Biot-Savart law and time varying fields, Maxwell's equations in integral and differential forms, time-domain analysis of waves. Application of electromagnetic theory to transmission lines.
Fund: Electromagnetics Lab Fund: Electromagnetics Lab
Fundamentals of Electronics & SS Devices Understanding of basic semiconductors devices, characteristics, switching and basic amplifiers, operational amplifiers, frequency response, filters, wave generation, introduction to power electronics, team work.
Fundamentals: Elec & SS Devices Lab Understanding of basic semiconductors devices, characteristics, switching and basic amplifiers, operational amplifiers, frequency response, filters, wave generation, introduction to power electronics, team work
Probability & Random Variables for Engineers Examines fundamentals of discrete and continuous probability: conditional probability, independence, random variables, density and distribution functions, expected value and variance, common discrete and continuous distributions, joint distributions, and introduction to simple stochastic processes. Applications to electrical and computer engineering; reliability of series and parallel circuits, models for waiting time phenomena.
Advanced Digital Systems Design Consists of design, analysis, optimization, and implementation of complex sequential digital systems and finite state machines (FSM). Hardware description languages (HDL), VHDL and/or Verilog, are introduced and will be used to design and implement digital systems. The structure of a computer and its organization will be reviewed.
Advanced Digital Systems Design Laboratory Laboratory projects will use a PC-based Computer-Aided Design Tool environment that supports hardware description languages (HDL) such as VHDL and Verilog for design, simulation, and synthesis of logic systems.
Fundamentals of Signals & Systems Design-based course introduces comprehensive treatment of basic signal theory in time and frequency domains. Discrete and continuous time cases are treated simultaneously, covers concepts of signals and systems, convolution of difference and differential systems, block diagrams, state-space realizations and solution, matrix theory, Fourier series, transform techniques (Fourier, FFT, Z and Laplace), frequency response and stability.
Discrete Structures.  Algebraic structures applicable to computer science; semigroups, graphs, lattices, Boolean algebras, and combinatorics.
Computer Organization I This course will cover the fundamentals required to understand the relationship between computer hardware and software. Topics include data representation on computers, computer arithmetic, Boolean algebra and digital logic, and assembly programming in MIPS.
Research in Undergraduate Exp Research in Undergraduate Experience makes undergraduate students familiar with basics of research. Students practice research on a specific subject under supervision of a faculty member. Students perform literature review on their selected subject and discuss about it to the class. Through this effort, students become exposed to various subjects and understand the importance of and the need for research.
Principles of Economics I Introduction to macroeconomic analysis and its application to the American economic system. Includes such major topics as the economic role of government, the banking system, the determination and measurement of national income, economic growth, and elements of monetary and fiscal policies.
Microcomputer Design Examines microprocessors, support architectures, and hardware/software. Also presents microprocessors' software model and programming, assembly language programming, microprocessor applications, microprocessor-based systems, and microcomputers.
Senior Design I Fundamentals of design principles, and engineering applications, design methodologies with emphasis on synthesis and evaluation, design process, reliability, the impact of engineering economy, report writing, ethics and alternative solutions will be discussed. During this course, students must identify a topic and an advisor for their Thesis Design Project.
Senior Design II Enhances knowledge of engineering design principles to solve real world problems, project planning, analysis, simulation and presentation, economic impact, ethics synthesis. Design areas are selected from solid-state electronics, digital systems, communications (signal processing), power/energy systems and controls, power electronics, antennas and microwave and others.
English Composition I Intensive study of and practice in effective expository and argumentative writing.
Engineering Physics I Introduction to Newton's Laws, gravitation, cosmology, conservation of energy, momentum and angular momentum, special relativity, and fluids using introductory calculus
Calculus I Mathematics Core. Limits, the derivative of algebraic, trigonometric, exponential, logarithmic functions. Applications of the derivative, antiderivatives, the definite integral and applications to area problems, the fundamental theorem of calculus
Introduction to Engineering Introduction to engineering design, engineering teams, graphical presentation, technical writing, oral presentation.
English Composition II Emphasis on research.
Engineering Orientation Introduction to the College of Engineering and its resources, exploration of engineering careers, orientation to campus resources and facilities, and assistance with academics and transition to college.
Engineering Physics II Thermodynamics, electricity and magnetism, simple AC circuits, waves, and geometric optics. Physics at the level of PHYS 1600 or higher is expected
Calculus II Techniques of integration, applications of the integral, parametric equations, polar coordinates. Vectors, lines and planes in space. Infinite sequences and series
Fundamentals of Computing I Introduction to the fundamental concepts of programming from an object-oriented perspective. Emphasis on good software engineering principles and development of the fundamental programming skills in the context of a language that supports the object-oriented paradigm.
Calculus III Multivariate calculus: vector-valued functions, partial derivatives, multiple integration, vector calculus.
Linear Differential Equations Introduction to ordinary differential equations, specifically linear equations of first and second order, and applications.
Fundamentals of Computing II Software development in the context of collections (e.g., lists, trees, graphs, hashtables). Communication, teamwork, and a design experience are integral course experience.
Digital Logic Circuits Electronic devices and digital circuits; binary numbers; Boolean algebra and switching functions; gates and flip-flops; combinational and sequential logic circuits; hierarchical design of digital systems; computer-aided design tools for digital design, simulation, and testing.
Fundamentals Chemistry I Atomic and molecular theory, chemical equations, stoichiometry, gas laws, thermochemistry, bonding, electronic structure, molecular geometries, solids, liquids, properties of solutions, problem-solving techniques.
Topics in Linear Algebra Matrices, row-reduction, systems of linear equations, (finite-dimensional) vector spaces, subspaces, bases, dimension, change of basis, linear transformations, kernels, orthogonality, Gram-Schmidt.
Software Construction Intensive experience in software construction, to include topics such as testing, debugging, and associated tools; configuration management; low-level file and device I/O; systems and event-driven programming.
Electric Circuit Analysis Basic laws and concepts; resistive circuits; first-order transient circuits; phasors and frequency response of circuits; RMS values and complex power.
Computer Systems Computer hardware/software organization, processor programming models, assembly language programming, design of memory systems, I/O device interfacing, programming and multiprocessing.
Discrete Structures Characterization of computer science data structures and algorithms in terms of sets and relations, functions, recurrence relations. Use of propositional and predicate calculus to describe algorithms. Proving correctness and running time bounds for algorithms by induction and structural induction.
Introduction to Operating Systems Structure and functions of operating systems; processes and process scheduling; synchronization and mutual exclusion; memory management; auxiliary storage management; resource allocation and deadlock; security, privacy, and ethical concerns; design tradeoffs.
Digital Electronics History of electronics; semiconductors; biasing and operation of PN junction diodes; field-effect transistors and bipolar junction transistors; logic families and logic technologies; flip-flops and memory circuitry.
Introduction to Algorithms Algorithms for standard computational problems and techniques for analyzing their efficiency; designing efficient algorithms and experimentally evaluating their performance.
Embedded System Design Lab Integration of hardware and software in the design of an embedded computing system; development of professional skills.
Analog Electronics Amplifier modeling. Design and analysis of single-stage and multistage transistor amplifiers. Biasing for integrated circuit design. Operational amplifier circuits.
Random Signals and Systems Introduction to probability, random variables, random processes and basic statistics, analysis of random signals and noise.
Digital System Design Hierarchical, modular design of digital systems, computer-aided digital system modeling, simulation, analysis, and synthesis; design implementation with programmable logic devices and FPGAs.
Engineering Economy Principles required in engineering economic studies.
Computer Architecture and Design Structural organization and hardware design of digital computers; register transfers; micro-operations, control units and timing; instruction set design; input/output devices, multiprocessors, automated hardware design aids.
Information Networks and Technology Architectures, protocols, standards and technologies of information networks; design and implementation of information networks; applications of information networks for data, audio and video communications.
Capstone Design I Capstone Design I
Introduction to Ethics Humanities Core. Major ethical theories from the history of philosophy, their foundations in epistemology and metaphysics, and their extension into social thought
University Graduation University Graduation
Capstone Design II Capstone Design II
Calculus Functions, limits, continuity. Slope and derivative. Differentiation of algebraic and transcendental functions. Applications to motion, natural growth, graphing, extrema of a function. Differentials. L'Hopital's rule.
Calculus II Definition of definite integral, fundamental theorem of calculus, techniques of integration. Application to area, volume, arc length, average of a function, improper integral, surface of revolution
Calculus III Sequences, series, tests for convergence, Taylor expansions. Vector algebra, vector calculus, scalar and vector fields. Partial derivatives, total differentials. Applications to maximum and minimum problems in two or more variables
Vector Analysis Definite integrals over plane and solid regions in various coordinate systems. Line and surface integrals. Green's theorem, Stoke's theorem, divergence theorem.
Linear Algebra Matrices and linear transformations, determinants, eigenvalues, eigenvectors, diagonalization, factorization.
Linear Algebra Computer Laboratory Introduction to MATLAB and its use in linear algebra
Differential Equations Solutions of elementary differential equations
Classical Physics I Introduction to general principles and analytical methods used in physics for physical science and engineering majors. Classical mechanics.
Classical Physics II Fluid mechanics, thermodynamics, wave phenomena, optics.
Classical Physics III Electricity and magnetism including circuits and Maxwell's equations.
Modern Physics  Introduction to physics concepts developed since 1900. Special relativity, quantum mechanics, atoms, molecules, condensed matter, nuclear and particle physics.
General Chemistry Periodic table, stoichiometry, chemical equations, physical properties and kinetic theory of gases, atomic and molecular structure and chemical bonding
Discrete Mathematics For Computer Science Discrete mathematics of particular utility to computer science. Proofs by induction. Propositional and first-order logic. Sets, functions, and relations. Big-O and related notations. Recursion and solutions of recurrence relations. Combinatorics. Probability on finite probability spaces. Graph theory
Programming and Problem Solving Computers and computer programming for students with some prior experience, algorithm design, and debugging. Good programming style. Use of basic UNIX tools
Software Development & Object-Oriented Programming in C++ Object-oriented programming in C++. Basic data structures and their use. Writing good programs of increased complexity and efficiency. Methods for debugging and verification.
Data Structures, Algorithms, & Programming Design and analysis of data structures for a variety of applications; trees, heaps, searching, sorting, hashing, and graphs. Extensive programming.
Introduction to Electrical & Computer Engineering Electrical & Computer Engineering as a professional activity. What Electrical & Computer Engineers know and how they use their knowledge
Introduction to Digital & Analog Systems Interactive and practical introduction to fundamental concepts of electrical and computer engineering by implementing electronic systems, which can be digitally controlled and interrogated, with a programmable microcontroller with the ability to program the electrical connections between analog and digital components
Digital Systems I Introduction to digital system design including combinational logic design, sequential and asynchronous circuits, computer arithmetic, memory systems and algorithmic state machine design; computer aided design (CAD) methodologies and tools.
Circuits I Basic electric circuit analysis techniques, including electrical quantities and elements, resistive circuits, transient and steady-state responses of RLC circuits, sinusoidal excitation and phasors, and complex frequency and network functions
Introduction to Literature Introductory study of several genres of English literature, emphasizing both analysis of particular works and the range of forms and styles in English prose and poetry.
Introduction to Academic Literacies Introduction to reading and composing processes and key rhetorical concepts for academic literacies. Multiple drafts of composing projects in a variety of genres and modes with feedback from peers and the instructor
Major Books of Western Culture: The Ancient World Introduction, through class discussion and frequent written assignments, to some of the major books of western civilization such as The Odyssey, Aeneid, Bible, and Augustine's Confessions
Major Books of Western Culture: From the Middle Ages to the Enlightenment Introduction to the methods of inquiry applied to critical reading and the practice of writing. Focus on texts from the European Middle Ages to the eighteenth century; critical analysis of the historical-cultural developments in this period.
Major Books of Western Culture: The Modern Crisis Introduction, through class discussion and frequent written assignments, to the major literature and thought of the late eighteenth to the mid-twentieth century.
Major Books of the Contemporary World Comparative study of selected major Western and non-Western texts composed in the period from 1945 to the present. Intensive focus on writing about these texts, with frequent papers written about these works
Introduction to Native American Literature Intensive focus on analysis of Native American literary texts, with frequent writing assignments to develop critical thinking and composition skills.
Introduction to Public Speaking Practice in the preparation and delivery of speeches based on principles and strategies of informing and persuading audiences drawn from the social sciences and humanities.
Interpersonal Communication Competence Communication competence in professional settings. Managing face-to-face and virtual teams. Leadership, conflict management and negotiation skills. Communication in diverse organizations. Leveraging communication networks. Effective interviewing.
Introduction to Engineering Design Pass One restricted to lower division College of Engineering students; Pass Two restricted to lower division students. Introduction to the engineering design process that incorporates the development of oral and written communication skills integral to the design process. Conducted in workshop format with hands-on engagement in the design process.
Circuits II Theory, application, and design of analog circuits. Methods of analysis including frequency response, SPICE simulation, and Laplace transform. Operational amplifiers and design of active filters.
Electronic Circuits I Use and modeling of nonlinear solid-state electronic devices in basic analog and digital circuits. Introduction to the design of transistor amplifiers and logic gates.
Principles of Device Physics I Semiconductor device fundamentals, equilibrium and non-equilibrium statistical mechanics, conductivity, diffusion, electrons and holes, p-n and Schottky junctions, first-order metal-oxide-semiconductor (MOS) field effect transistors, bipolar junction transistor fundamentals.
Probabilistic Analysis of Electrical & Computer Systems Probabilistic and statistical analysis of electrical and computer systems. Discrete and continuous random variables, expectation and moments. Transformation of random variables. Joint and conditional densities. Limit theorems and statistics. Noise models, system reliability and testing
Introduction to Computer Architecture Introduces basic aspects of computer architecture, including computer performance measurement, instruction set design, computer arithmetic, pipelined/non-pipelined implementation, and memory hierarchies (cache and virtual memory). Presents a simplified Reduced Instruction Set Computer using logic design methods from the prerequisite course.
Embedded Systems ntroduction to embedded-system hardware and software. Topics include: embedded processor and memory architecture; input/output hardware and software, including interrupts and direct memory access; interfacing with sensors and actuators; wired and wireless embedded networking.
Computer Networks Overview of computer networks, TCP/IP protocol suite, computer-networking applications and protocols, transport-layer protocols, network architectures, Internet Protocol (IP), routing, link-layer protocols, local area and wireless networks, medium access control, physical aspects of data transmission, and network-performance analysis
Digital Systems II Computer-aided design of digital systems with emphasis on hardware description languages (VHDL), logic synthesis, and field-programmable gate arrays (FPGA). May cover advanced topics in digital system design such as static timing analysis, pipelining, memory system design, testing digital circuits
Issues in Engineering Design Covers various electrical and computer engineering standards and realistic design constraints including economic, manufacturability, sustainability, ethical, health & safety, environmental, social, and political.
Algorithm Design & Analysis Complexity of algorithms, bounds on complexity, analysis methods. Searching, sorting, pattern matching, graph algorithms. Algorithm design techniques: divide-conquer, greedy, dynamic programming.
Operating Systems & System Programming Basic concepts of operating systems and system programming. Processes and interprocess communication/synchronization; virtual memory, program loading and linking; file and I/O subsystems; utility programs.
Ethics in an Age of Technology Views of technology. Technology and human values. Costs and benefits of technology. Character of technological change. Social context of work in computer science and engineering
Integrated Circuit Design Project Design course involving architecture, circuit design, physical design, and validation through extensive simulation of a digital or mixed-signal integrated circuit of substantial complexity under given design constraints
RF/Microwave Systems Design Board-level RF design, fabrication, and characterization of an RF/microwave system, including the antenna, RF front-end, baseband, mix-signal circuits, and digital signal processing models
Electronic Design Project Optical, electronic and communication-engineering design of an opto-electronic system operating under performance and economic constraints. Measurement techniques will be designed and implemented, and the system will be characterized
Digital Systems Design Project Digital-system and computer-engineering design course involving architecture, design, implementation and testing of a prototype application-specific processor under given design constraints
Senior Design Project Team design project for seniors in Electrical or Computer Engineering. Project involves analysis, design, implementation and evaluation of an Electrical Engineering or Computer Engineering system.
Autonomous Vehicle Design Project Design and construct an autonomous race car. Work in groups to design, build and test speed control circuits, track sensing circuits, and a steering control loop.
Genes & Gene Expression Nucleic acid structure and function; gene expression and its regulation; replication; transcription and translation; transmission genetics; molecular evolution
Structure & Function of Biomolecules Structure and function of macromolecules with emphasis on proteins, catalysis, enzyme kinetics, lipids, membranes, and proteins as machines.
Bioenergetics & Metabolism Fundamentals of the carbon, nitrogen, and sulfur cycles in nature, including key reactions of biomolecules such as carbohydrates, amino acids, lipids, and nucleotides, and of energy production and use in different types of organisms. Principles of metabolic regulation.
Intermediate Micro Theory Price and distribution theory under conditions of perfect and imperfect competition. General equilibrium and welfare economics.
Intermediate Macro Theory Theory of income, employment and prices under static and dynamic conditions, and long term growth.
Analysis of Economic Data Analysis of economic data to investigate key relationships emphasized in introductory micro and macro economics. Obtaining, transforming, displaying data; statistical analysis of economic data; basic univariate and multivariate regression analysis.
Economics of Uncertainty & Information Optimal decisions under uncertainty, expected utility theory, economics of insurance, asymmetric information, signalling in the job market, incentives and Principal-Agent theory, optimal search strategies and the reservation price principle
Econometrics Problems of observation, estimation and hypotheses testing in economics through the study of the theory and application of linear regression models. Critical evaluation of selected examples of empirical research and exercises in applied economics.
Elementary Accounting Basic concepts of accounting; interpreting and using financial statements; understanding accounting principles.
Introduction to Financial Accounting Open to all upper division undergraduate and graduate students, except those in the Graduate School of Management. Introduction to the concepts, methods, and uses of accounting and financial reporting.
Managing & Using Information Technology Develop an analytical framework to manage and monitor business systems concerned with operational, human, and organizational interactions. Introduction to computer hardware, systems software, and information systems. Management of information technology and the impact of information systems on modern management.
Marketing for the Technology-Based Enterprise Quantitative analysis of needs in a product (technology-based) economy, with emphasis on how scientists, engineers, and business people interact to develop and market products and services
Technology Management Management of firms in high technology industries such as software development and biotechnology research. Motivating and managing workers, organizing for innovation, and making decisions.
Financing New Business Ventures Concepts/methods used to structure and finance new business ventures. Topics include evaluating the net social (financial) benefit of new investment projects; raising venture capital; the role of the venture capitalist; and the choice of organizational structure in new ventures
Management Accounting & Control Covers the design of cost accounting systems, the preparation of financial budgets and forecasts, cost analysis, and the use of cost and other financial data to motivate and evaluate the performance of business units and managers.
Supply Chain Planning & Management Develops key concepts and relationships between supply chain design and business models and strategies. Much of the focus is on quantitative techniques for analysis & management of the production and delivery of goods & services by an organization.
Advanced Composition Instruction in advanced principles of expository writing. Writing tasks within and beyond the University. Different writing modes, including narrative, analysis, explanation, argument, critique.
Writing in the Disciplines: Special Topics Writing in the Disciplines: Special Topics
Engineering Seminar I  The goal of this course is to prepare the student for study in an engineering discipline. This will include general skills for achieving success in college, in addition to an introduction to the engineering disciplines and the engineering development process. /  Modeling and Simulation  An introduction to modeling physical systems and simulating them using scientific computation software. Topics will include modeling dynamic systems, the basic mathematics of modeling physical systems, including difference equations, arithmetic and geometric series, spring-damper systems, open- and closed- loop systems. To support these topics, students will learn to use the MATLAB and Simulink systems, including basic expression evaluation, scalar, vector, and multi-dimensional variables, conditionals, repetition, and writing basic functions.
Programming for Engineers An introduction to programming for electrical engineers. This course is a highly focused introduction to programming in C language. It covers the basics of programming including procedures, variables, types, loop, and control structures. The course introduces basic computing resources, and introduces algorithmic solutions to common engineering and numerical problems.
Engineering Seminar II  This course is focused on the tools that teams use to engineer solutions together. Participation in a team project will help the students learn about and apply current team coordination tools for project management, configuration management, and personal improvement.
Engineering Seminar III The goal of this course is to prepare the student for upper class courses and entering the workplace. Career preparation will include strategies for finding internships and full-time positions and preparing for the hiring process (building a resume, writing a cover letter, and interviewing). Academic preparation will be focused on how to find and read journal publications on a given topic.
Statistical Process Control  The course will develop the students’ understanding of statistical process control. A variety of control charts will be used for assessing process stability and estimation of process capability. We will also study how engineers design experiments based on statistical quality control for the purpose of controlling, improving, and optimizing the engineering process.
Fundamentals of Physics I  An introductory study of the laws of Mechanics. Topics covered include: Kinematics; Newton’s laws; Energy: The Work-energy theorem, Potential Energy, Power, conservation of Energy; Momentum: Center of Mass, Collisions, Momentum Conservation; Rotational Dynamics; Fluids; Oscillations (Simple Harmonic Oscillator) and Waves.
Fundamentals of Physics II  Topics covered include: electric force, E-field, Gauss’ law, E-potential; currents and circuits, capacitors, RC circuits; magnetic fields, inductance; AC circuits; EM waves; interference and diffraction of light; geometrical optics: Snell’s law, refracting lenses, mirrors.
Electronics  Provides an introduction to electronics with an emphasis on practical knowledge required for modern experimental work. Topics include: electrical quantities and their measurement; linear components and circuit theory; diodes and simple transistors, FET circuits; signal conditioning with Op-amps; Instrumentation amplifiers; transducers: e.g. PIN photodiodes; regulated power supplies; other analog integrated circuits ( e.g. multipliers); and A/D conversion and computer interfacing: microcontrollers.
Calculus I  Introduction to study of differential and integral calculus from algebraic, numerical, and graphical points of view. Concept of limit and applications of derivatives will be covered.
Calculus II  Will include methods of integration, applications and infinite series.
Calculus III  Generalization of single-variable calculus to higher dimensions. Parametric curves and applications covered.
Discrete Mathematics  Study of topics usually associated with analysis of discrete and/or finite mathematical models. Topics from logic, set theory, Boolean algebra, mathematical proof, recursion, induction, combinatorics, discrete probability, matrices and graph theory covered
Differential Equations Topics include modeling with differential equations, initial value problems, first and second order linear differential equations, systems of linear differential equations and numerical methods, as well as material chosen from the following topics: Laplace transforms, advanced numerical methods, and partial differential equations.
Computer Organization Introduces organization and architecture of computer systems from the standard von Neumann model to more recent architectural concepts. Internal structure and organization of a computer lead to significant differences in performance and functionality, giving rise to an extraordinary range of computing devices from hand-held computer to large-scale, high performance machines. To gain a better understanding of exactly how a computer functions, students will write programs in a common assembly language.
Operating Systems  An operating system provides an abstract interface with which programmers can control hardware. Study includes both the use of operating systems (externals) and their design and implementation (internals). Includes laboratories to simulate or experiment with operating system concepts. Topics include overview of operating systems, processes and concurrency, memory management, scheduling, input/output and file systems, system performance evaluation ethics, and security.
Microcontrollers & Interfaces Students will use basic microprocessors and TTL logic components to create embedded solutions to real-world problems including: basic device control, serial and wireless communications, EEPROM storage and retrieval, and interfacing with analog sensors. Includes use of assembly and C languages for software development, and basic electronics skills to connect components.
Digital and Reconfigurable Computing  In-depth study of issues involved in developing software for real-time study and/or embedded systems. Demands and architecture of real-time operating systems. Performance and benchmarking. Issues in designing for performance. Mission-critical and safety-critical systems. Software engineering tools and techniques specific to these systems.
Engineering Research Methods  Students will use basic research strategies, including literature reviews, designing experiments, and conducting tests to complete a research project. Students are expected to produce results that lead to external publication at a conference or in a journal.
Engineering Design & Development Starting from a given problem, they will plan and design a solution to that problem, and then go on to implement and test their plan. Students demonstrate their capabilities by using the engineering method to analyze the problem to develop requirements, estimate time and costs, perform safety and risk analysis, and develop an implementation plan.
Computer Networks Studies protocol suites, emphasizing the TCP/IP 4-layer model. Topics included are network addresses, sub netting, client/server network programming via the sockets API, network utilities, architecture of packets, routing, fragmentation, connection and termination, connection-less applications, data flow, and an examination of necessary protocols at the link layer, particularly Ethernet. Other topics may include FDDI, wireless, ATM, congestion control, and network security.
Communications Systems  Introduction to analog and digital communication systems. Emphasis on engineering applications of theory to communication system design. Students will study the basics of sampling and quantization, coding, signal detection, and digital modulation schemes including AM, FM, PAM, and PCM. Transmission of information and system performance in the presence of noise will be covered. Students will use state of the art tools such as MATLAB to analyze communication systems limited by bandwidth and noise.
High Speed Circuits  Students will learn about analog and mixed-signal circuits including high-speed clocks, phase-lock-loops, A/D and D/A converters, and amplifiers. Students will also learn about principles of high-speed communications, including energy and band-width constrained waveforms, and various forms of signal modulations, and data encodings
Fundamentals of Computer Programming I This is an introductory course on the fundamentals of computer programming. This course will include weekly programming projects, readings, a midterm, and final examinations.
Fundamentals of Computer Programming II Object-oriented programming, classes and data hiding, dynamic object construction and destruction, derived classes and inheritance, virtual functions; functions, call by value/reference, overloading; abstract data types; standard template libraries; exception handling; introduction to UNIX, file processing, process management.
Fundamentals of Computer System Software Basics of assembly language programming. Macros. System stack and procedure calls. Techniques for writing assembly language programs.
Data Structures and Data Management The design, implementation, and analysis of abstract data types, data structures and their algorithms. Topics include: data and procedural abstraction, amortized data structures, trees and search trees, hash tables, priority queues, graphs, shortest paths, searching, and sorting.
Fundamentals of Circuits Fundamental concepts in electrical circuits; circuit analysis and network theorems; linearity and superposition; series/parallel combinations of R, L, and C circuits; sinusoidal forcing; complex frequency and Bode plots; mutual inductance and transformers; two port networks.
Advanced Logic Design Advanced Logic Design
Computer Architecture I Design and understanding of the computer system as a whole unit. Performance Evaluation and its role in computer system design; Instruction Set Architecture design, Datapath design and optimizations (e.g., ALU); Control design; Single cycle, multiple cycle and pipeline implementations of processor; Hazard detection and forwarding; memory hierarchy design; Cache memories, Virtual memory, peripheral devices and I/O.
Intro to Computer Systems This course has four purposes:to learn about the hierarchy of abstractions and implementations that comprise a modern computer system;to demystify the machine and the tools that we use to program it;to come up to speed on systems programming in C in the Unix environment;to prepare students for upper-level systems courses.
Fundamentals of Signals and Systems Comprehensive introduction to analysis of continuous and discrete-time signals and systems. Linear time-invariant systems, convolution; Fourier series representations of periodic signals; Continuous time and discrete time Fourier transforms; Laplace transform; z-transform.
Fundamentals of Solid State Engineering Introduction to Solid State Engineering. Crystalline state of matter. Quantum phenomena, quantum mechanics. Electrons in atoms, atoms in crystals, electrons in crystals. Energy band structures. Semiconductors. Thermal properties of crystals.
Fundamentals of Electromagnetics and Photonics Introduction to electromagnetic waves in electrical engineering. Topics include: concepts of transmission lines, electrostatics and magnetostatics; Maxwell's equations for time-varying fields; plane-wave propagation, reflection, and transmission; introduction to fiber optics and photonics.
Fundamentals of Electronics Fundamental concepts in electronics. Diode, BJT and FET Circuits; design using ideal operational amplifiers; feedback; frequency response; biasing; current sources and mirrors; small-signal analysis; design of operational amplifiers.
Composition I Intensive study of and practice in writing processes, from invention and researching to drafting, revising, and editing, both individually and collaboratively. Emphasis on effective rhetorical choices, including audience, purpose, arrangement, and style. Focus on writing the academic essay as a vehicle for learning, communicating, and critical analysis.
Composition II Intensive study of and practice in the strategies and techniques for developing research-based expository and persuasive texts. Emphasis on effective and ethical rhetorical inquiry, including primary and secondary research methods, critical reading of verbal, visual, and multimedia texts; systematic evaluation, synthesis, and documentation of information sources; and critical thinking about evidence and conclusions.
Calculus I Limits and continuity; the Fundamental Theorem of Calculus; definition of the derivative of a function and techniques of differentiation; applications of the derivative to maximizing or minimizing a function; the chain rule, mean value theorem and rate of change problems; curve sketching; definite and indefinite integration of algebraic, trigonometric and transcendental functions with an application to calculation of areas.
University Physics I Calculus based introductory physics course. Fundamentals of linear and rotational kinematics and dynamics, Newton's laws, work, energy, conservation, gravitation, wave mechanics, sound, fluid mechanics, heat and thermodynamics.
University Physics II Calculus based introductory physics course. Electric forces and fields, Gauss' laws, DC and AC circuits, magnetic forces and fields, electromagnetic induction, Maxwell's equations, electromagnetic waves, geometric optics and introduction to modern physics.
Introduction to Philosophy A study of major issues in philosophy and/or the work of major figures in philosophy. Topics in philosophy may include theories of reality, theories of knowledge, theories of value, and their practical applications.
United States History I A survey of the social, political, economic, cultural, and intellectual history of the United States from the pre-Columbian era to the Civil War/Reconstruction period. Includes the study of pre-Columbian, colonial, revolutionary, early national, slavery, sectionalism, and the Civil War/Reconstruction eras. Themes may include: American settlement and diversity, American culture, religion, civil and human rights, technological change, economic change, immigration and migration, and creation of the federal government.
United States History II A survey of the social, political, economic, cultural, and intellectual history of the United States from the Civil War/Reconstruction era to the present. Examines industrialization, immigration, world wars, the Great Depression, Cold War and post-Cold War eras. Themes may include: American culture, religion, civil and human rights, technological change, economic change, immigration and migration, urbanization and suburbanization, the expansion of the federal government, and the study of U.S. foreign policy.
Federal Government Origin and development of the U.S. Constitution, structure and powers of the national government including the legislative, executive, and judicial branches, federalism, political participation, the national election process, public policy, civil liberties, and civil rights.
Texas Government Origin and development of the Texas constitution, structure and powers of state and local government, federalism, and intergovernmental relations, political participation, the election process, and the political culture of Texas.
Public Speaking Application of communication theory and practice to the public speaking context with emphasis on audience analysis, speaker delivery, ethics of communication, cultural diversity, and speech organizational techniques to develop students' speaking abilities as well as their ability to effectively evaluate oral presentations.
Learning Frameworks An inquiry around the broad, interdisciplinary concepts of civic engagement and citizenship for students to explicitly examine and engage in advanced critical thinking for university study. This course promotes intellectual readiness by helping students build and find the resources to become personally responsible and active members of the university community, their education, and their word.
Laboratory for University Physics II Instrumentation used to conduct experiments on electrical circuits and optics. Topics include Ohm's Law, series and parallel circuits, electrical power EMF, RLC Components, optical elements and visual phenomena.
Humanities An interdisciplinary, multi-perspective assessment of cultural, political, philosophical, and aesthetic factors critical to the formulation of values and the historical development of the individual and of society.
Literature and Experience The study of one of more literary genres including poetry, fiction, drama, and film.
Gender Matters: Introduction to Women's and Gender Studies A general introduction to the study of women and gender across academic disciplines, appropriate as a first course for any student interested in the study of gender within their major.
World Art Survey I Examination of painting, sculpture, architecture, and other arts from prehistoric to Renaissance periods.
World Art Survey II Examination of painting, sculpture, architecture, and other arts from the post-Renaissance to the contemporary period
Arts and the Child Prepares individuals to teach three art forms - visual art, music, theater - to young children through elementary ages.
General Anthropology Study of human beings, their antecedents and related primates, and their cultural behavior and institutions. Introduces the major subfields: physical and cultural anthropology, archeology, linguistics, and ethnology.
Introduction to Criminal Justice History, philosophy, and ethical considerations of criminal justice; the nature and impact of crime; and an overview of the criminal justice system, including law enforcement and court procedures
Principles of Macroeconomics An analysis of the economy as a whole, including measurement and determination of aggregate demand and aggregate supply, national income, inflation and unemployment. Other topics include international trade, economic growth, business cycles, fiscal policy and monetary policy
Principles of Microeconomics Analysis of the behavior of individual economic agents, including consumer behavior and demand, producer behavior and supply, price and output decisions by firms under various market structures, factor markets, market failures and international trade.
World Regional Geography An examination of the world's geographic regions focusing on the location of Earth's major physical features, human populations and cultures, and their interaction. Topics include the cultural landscape, globalization, development, migration, commodity chains, tourism, and the Anthropocene.
Introduction to Psychology Survey of the major psychological topics, theories, and approaches to the scientific study of behavior and mental processes
Introduction to Sociology The scientific study of human society, including ways in which groups, social institutions, and individuals affect each other. Causes of social stability and social change are explored through the application of various theoretical perspectives, key concepts, and related research methods of sociology. Analysis of social issues in their institutional context may include topics such as social stratification, gender, race
ethnicity, and deviance.
Digital System Design Combinational and sequential circuit design of digital systems using a hardware description language. Laboratory instruction.
Analysis and Design of Linear Systems Fourier, Laplace and z-transforms and transfer functions. Introduction to digital signal processing and digital filter design using conventional and convolutional techniques, applications from communications and control theory. Computer solutions using MATLAB.
Senior Project Project course requiring each student to complete a project approved by the instructor. The student must submit a written final report and give an oral presentation to faculty and students. Laboratory instruction.
Microprocessor Interfacing Techniques for interfacing microcomputers to peripherals, memory and other devices.
Microcontroller Programming Microcontroller, assembly language programming and embedded system applications.
Engineering Design and Project Management Introduction to engineering concepts including problem solving, the design process, engineering tools and topics in ethics. Laboratory instruction.
Laboratory for Computer Architecture Laboratory experiments for Computer Architecture Design and Interfacing
Computer Architecture Performance analysis of computer systems, representing data and instructions, instruction set architecture, datapath and controller design, pipelining, superscalar architectures, memory components such as cache, main memory and virtual memory, multiprocessors
Laboratory for Telecommunications and Networks Laboratory experiments in digital and data communications.
Introduction to Telecommunications and Networks Introduction to data communications, error detecting/correcting codes, multiplexing, circuit and packet switching and local area networks.
Laboratory for Electronics The course consists of experimental laboratory projects that explore the design, construction, and debugging of basic electronic circuits. Projects involve EDA-tool based simulation and hands-on experiments, investigate the performance characteristics of diodes, transistors, JFETs, and op-amps including the construction of differential amplifier, summing amplifier, full wave rectifier, and common emitter amplifier
Electronics The course is a study of the physical behavior of electronic devices. Emphasis is on analysis and application of electronic circuits utilizing semiconductor diodes, operational amplifiers, BJT and FET transistors. EDA tools are used to reinforce the theory through electronic analysis simulations
Laboratory for Linear Circuits Laboratory experiments demonstrating AC/DC circuits. Experiments using lumped constants and integrated circuits will be stressed.
Linear Circuits Basic electrical concepts; network theorems; circuit laws; resistance, capacitance, inductance, operational amplifiers, response of RC, RL and RLC circuits to initial conditions and constant forcing functions. Steady-state and transient analysis. Introduction to S-domain circuit analysis. Integration of computer applications using Multisim and MATLAB.
Laboratory for Digital Circuits Laboratory experiments using digital logic and small scale integrated circuits.
Digital Circuits Applications of point set theory and Boolean Algebra to the analysis and design of asynchronous and synchronous digital circuits.
Data Structures Advanced programming techniques and data structures including arrays, linked lists, queues and stacks; abstract data types, recursion, searching and sorting, binary trees, hashing techniques, elementary algorithm design and analysis, and more.
Software Development with Java Programming with an object-oriented programming language, Java. Uses iteration, selection, recursion, exception handling, data structures and file I/O. Introduction of Object-oriented programming concepts such as reuse, data abstraction, classes, inheritance, polymorphism, exception handling and UML to build robust code and enhance problem solving methodology.
C Programming Programming techniques with the C programming language, emphasis on modular design, data abstraction and encapsulation using ANSI C. Use of all features of C including arrays, pointers, structures, prototypes, separate compilation and the C-preprocessor. Development of generic functions and study of portability issues.
Probability and Statistics for Scientists and Engineers Graphical representation of data, measures of centrality and variability, concepts and rules of probability, discrete probability distribution, normal distribution, sampling distributions, central limit theorem, parameter estimation, testing of hypothesis, two sample methods, analysis of variance, correlation and regression analysis.
Discrete Mathematics Introductory mathematical logic, mathematical induction, relations and functions, basic counting techniques, graphs and trees and applications to computing devices. Designed for students majoring in the computer related disciplines.
Differential Equations Solutions of ordinary differential equations of the first and second order, Laplace transforms, power series techniques, systems of equations, stability, numerical methods, geometric and physical applications.
Linear Algebra Systems of linear equations; vector spaces, linear transformations, determinants, matrices, eigenvalues and eigenvectors; applications to coding and difference equations
Calculus III Vectors and vector valued functions, functions of multiple variables, partial derivatives, multiple integrals, volume and surface area and vector calculus.
Calculus I Limits and continuity; the Fundamental Theorem of Calculus; definition of the derivative of a function and techniques of differentiation; applications of the derivative to maximizing or minimizing a function; the chain rule, mean value theorem and rate of change problems; curve sketching; definite and indefinite integration of algebraic, trigonometric and transcendental functions with an application to calculation of areas.
Calculus II Differentiation and integration of transcendental functions; parametric equations and polar coordinates; techniques of integration; sequences and series; improper integrals.
Laboratory for University Physics II Instrumentation used to conduct experiments on electrical circuits and optics. Topics include Ohm's Law, series and parallel circuits, electrical power EMF, RLC Components, optical elements and visual phenomena.
University Physics II Calculus based introductory physics course. Electric forces and fields, Gauss' laws, DC and AC circuits, magnetic forces and fields, electromagnetic induction, Maxwell's equations, electromagnetic waves, geometric optics and introduction to modern physics.
Laboratory for University Physics I Introduction to data acquisition and analysis in physics. Instrumentation used to conduct experiments on motion, kinematics, wave mechanics, sound and heat.Topics also to include statistical methods, graphing, error analysis, computer techniques and reporting results
University Physics I Calculus based introductory physics course. Fundamentals of linear and rotational kinematics and dynamics, Newton's laws, work, energy, conservation, gravitation, wave mechanics, sound, fluid mechanics, heat and thermodynamics.
Laboratory for General Chemistry I Introduction of the scientific method, experimental design, data collection and analysis and preparation of laboratory reports.
General Chemistry I Fundamental principles of Chemistry for majors in sciences, health sciences and engineering; topics include inorganic, organic, biochemistry, chemical reactions, states of matter and properties, chemical bonding, structure and descriptive chemistry.
Introduction to Robotics The course introduces the use of various robotic systems and the techniques necessary to design and develop hardware components and software applications using robotic operating systems.
Internship in Computer Engineering Supervised work experience in an approved industrial firm or government agency. Written and oral report required.
Analysis and Design of Linear Systems Fourier,Laplace and z-transforms and transfer functions. Introduction to digital signal processing and digital filter design using conventional and convolutional techniques, applications from communications and control theory. Computer solutions using MATLAB.
Foundations of Physics and Engineering This physics and engineering cornerstone course will cover foundational topics including science literacy, effective laboratory investigations, basic programming skills, data analyses, micro-processing, and professional ethical standards.  After completing the course, the student will be proficient in oral communication skills and the use of digital technology through assignments and projects relevant to the physicist and engineer.
Composition Students develop techniques for making effective contributions in writing to intellectual discussions, academically and in other cultural settings. Students are tasked with forming the strong foundation in critical reading, thinking, writing, researching, and reflecting necessary for expressing ideas in a variety of rhetorical situations.
Computer Science I An introduction to programming concepts and methodology using an object-oriented programming language (currently Java).  Topics include problem analysis, abstraction, modularization, the development and use of algorithms, reuse, and the use of programming constructs including data types, classes, control structures, and methods.
Computer Science I Lab Computer Science I Lab
Computer Science II This course emphasizes object-oriented software development, addressing both software engineering and programming.  Topics include modularization, abstraction, encapsulation/information hiding, software reuse, software testing, classic data abstractions (e.g., lists, trees) and algorithms (e.g., sorting, searching), recursion, program correctness, and basic algorithm analysis.
Computer Science II Lab Computer Science II Lab
Pre-Calculus Mathematics An intensified course covering the topics of algebra, trigonometry, and analytic geometry.   Not open to students with credit for or enrolled in any calculus course.
Discrete Structures A study of symbolic logic, sets, combinatorics, mathematical induction, recursion, graph theory, and trees.
Calculus I Topics from calculus and analytic geometry including limits, derivatives and their applications, integrals, and the Fundamental Theorem.
General and Analytical Chemistry A study of the laws, theories and principles of general chemistry together with qualitative and quantitative analysis.
Elements of Physics I Calculus-based introduction to physics covering linear and rational kinematics, Newtons laws, conservation of momentum and energy, the work-energy theorem, gravitation, oscillations, and waves.
Introduction to Philosophy The aim of this course is to awaken in the student an appreciation of the nature and method of philosophical inquiry through an examination of key texts that grapple with central questions in the history of philosophy.
Introduction to Computer Engineering Introduction to combinational and sequential digital-logic circuits.   Analysis and design techniques including Boolean algebra and Karnaugh mapping.  Use of the computer to simulate digital circuits.
Introduction to Computer Engineering Lab Introduction to Computer Engineering Lab
Circuit Analysis Analysis of resistive networks, sources, op-amps, capacitors and inductors.  Kirchhoffs Laws, Mesh and Nodal Analysis, Superposition, and Thevenin-Norton equivalent circuits.   Transient responses of RC, RL, and RLC circuits. AC steady state.  Computer assisted solutions using Multisim and Maple.
Elements of Physics II Calculus-based introduction to physics covering waves of sound and light, superposition, interference, geometrical and ray optics, electrostatics, electric field, electric potential, current, capacitance, resistance, circuits, magnetic field, magnetic force, and induced emf.
Calculus II Topics from calculus and analytic geometry including applications of the definite integral, calculus of transcendental functions, methods of integration, improper integrals, sequences and series.
Calculus III Topics from calculus and analytic geometry including parametric equations, vectors, space analytic geometry, partial derivatives and multiple integrals.
Data Structures and Algorithms An examination of the issues of data representation, algorithm structure, and encapsulation as they pertain to the development of object-oriented software.  Abstract data types studied include stacks, queues, binary trees, n-ary trees, and graphs. Various representation alternatives are analyzed and compared, trade-offs frequently encountered by software developers are discussed.
Machine Organization and Assembly Language Programming An introductory study of the organization and architecture of computers through an exploration of various virtual machines. Programming at the assembly-language level and interfacing with software components (primarily written in C). Topics include representation of data and instructions, computer arithmetic, memory hierarchies, instruction sets, addressing modes, digital logic, microprogramming, pipelining, and parallel processing.
Ethics An examination of moral issues through close readings of important historical texts such as the writings of Plato, Aristotle, Augustine, Aquinas, Kant or Mill.  Themes will include happiness, virtue, the nature of justice, free choice, conscience, natural law and obligation, God and morality.
Electronic Circuits I Modeling, analysis, and applications of semiconductor diodes, bipolar junction and field-effect transistors in analog circuits.  Analysis of non-ideal op-amps.  Amplifier biasing, small-signal analysis, design and frequency response.  Elementary bipolar and MOSFET logic circuits.  Circuit simulation using Multisim.
Electronic Circuits II Advanced transistor amplifier analysis and design, feedback effects.  Introduction to transistor level design of CMOS op-amp and digital circuits.  Design and analysis of power amplifiers, analog filters, oscillators, A/D and D/A converters, and electronic sensors.  Extensive use of Multisim for circuit simulation.  Design project using LabView.
Digital Signal Processing A study of discrete-time signals and systems, convolution, z-transform, discrete Fourier transform, and FFT algorithms.  Analysis and design techniques for digital filters and their realizations.  Emphasis will be on the use of computer-aided interactive digital-signal processing programs for several projects on signal analysis and filter design.
Digital Systems Analysis and design of advanced digital circuits, implementation of combinational and sequential digital logic, interdependence of hardware and software on computer design, memory and I/O concepts.
Discrete Structures A study of symbolic logic, sets, combinatorics, mathematical induction, recursion, graph theory, and trees.
Elements of Modern Physics Introductory modern Physics course for Physics and Engineering majors; also recommended for other science majors.  Review of classical physics; special theory of relativity; atomic theory of hydrogen from Bohr to Schrodinger; multielectron atoms and the periodic table; introduction to nuclear physics.
Theology I: Introduction to the Bible A survey of central texts and themes of the Bible. Its purpose is to develop biblical literacy as well as skills in interpreting various literary forms and key theological concepts.
Theology II: Introduction to Christian Theology A survey of key Christian themes: creation, Christs incarnation and redemption, the Church and sacraments, Christian personhood, and the practice of prayer, virtue, and hope for the future.
Embedded Systems Microprocessor programming and interfacing; data acquisition, manipulation and transmission; microprocessor support devices and common computer interfaces.
Control Systems Models of physical systems using Laplace transforms and state variable methods. Structure of control systems, block diagram reduction, transfer functions.  System transient characteristics and steady-state error, disturbance rejection, and sensitivity.  Control system analysis; stability, root locus, Bode and Nyquist methods.  Simulation and design using MATLAB.
Robotics Design Project and Professional Practice Students design a self-contained intelligent robot required to carry out a complex task.  Each project involves creative conception, design, development, evaluation, economic constraints, reliability and safety.
Fundamentals of Software Engineering An introduction to the concepts of Software Engineering.  Stress is placed upon formal models for the design and development of high-quality software.  Topics include: project planning, requirements analysis, system design, program design, program implementation, program testing, system testing, system delivery, and maintenance.
Operating Systems An introduction to the principles of operating systems.  Topics include operating system structure, process management, scheduling and dispatching, process synchronization and interprocess communication, memory management, virtual memory, device management, I/O, and file systems.
Programming Languages A study of programming languages from both the theoretical and practical perspectives.  A survey of major and developing paradigms and languages is undertaken which includes use of specific languages to broaden the students experience.  Implementation is studied through an introduction to language translation along with a study of run-time models and interfaces with virtual machines.
Discrete Structures A study of symbolic logic, sets, combinatorics, mathematical induction, recursion, graph theory, and trees.
Pre-Calculus Mathematics An intensified course covering the topics of algebra, trigonometry, and analytic geometry.
Solid State Devices & Power Electronics Semiconductor basics, Carrier Transport, Excess carriers in semiconductors, P-N junctions and diodes; Field Effect and Bipolar Junction Transistors (FETs & BJTs). Power Schottky diodes, Power MOSFETs, Power BJTs, and Concepts of power distribution.
Digital Image Processing Digital image processing is a modern scientific and engineering technique employed to enhance and extract details of images in diverse fields such as medicine, military, industry, and artistic photography.
Communication Systems An understanding of the basic concepts and principles of analog and digital communication systems and performance of these systems in the presence of noise.  Qualitative and quantitative analysis as well as computer tools (MATLAB) will be employed in solving selected communication theory and systems problems.
Quantum Mechanics Intensive and quantitative treatment of quantum mechanics. Wave function; solutions of the Schdinger equation in one-dimension; formalism of quantum mechanics; statistical interpretation; problems in three-dimensions; angular momentum; spin; identical particle systems; quantum statistics; time-independent perturbation theory; two-level systems; emission and absorption.
Pre-Calculus Mathematics An intensified course covering the topics of algebra, trigonometry, and analytic geometry.
Applied Probability and Mathematical Statistics Basic concepts of probability theory, random variables, distribution functions, multivariable distributions, sampling theory, estimation, confidence intervals, hypothesis testing, linear models and analysis of variance.
Differential Equations Treatment of ordinary differential equations with applications.  Topics include: first-order equations, first-order systems, linear and non-linear systems, numerical methods, and Laplace transforms. Computer-aided solutions will be used when appropriate.
Linear Algebra Vector spaces, matrices, determinants, linear transformations, eigenvalues, eigenvectors, inner products, and orthogonality.
Computer Architecture A study of the logical structure of computer-system organization including a survey of logic and design with an emphasis on functional components.  Topics include instruction sets, hard-wired and microprogrammed control-unit designs, memory systems (caches and virtual memory), I/O systems (interrupts, DMA, and channels)
Differential Equations Treatment of ordinary differential equations with applications.  Topics include: first-order equations, first-order systems, linear and non-linear systems, numerical methods, and Laplace transforms. Computer-aided solutions will be used when appropriate.
Linear Algebra Vector spaces, matrices, determinants, linear transformations, eigenvalues, eigenvectors, inner products, and orthogonality.
Computer Architecture A study of the logical structure of computer-system organization including a survey of logic and design with an emphasis on functional components.  Topics include instruction sets, hard-wired and microprogrammed control-unit designs, memory systems (caches and virtual memory), I/O systems (interrupts, DMA, and channels).
Solid State Devices & Power Electronics Semiconductor basics, Carrier Transport, Excess carriers in semiconductors, P-N junctions and diodes; Field Effect and Bipolar Junction Transistors (FETs & BJTs). Power Schottky diodes, Power MOSFETs, Power BJTs, and Concepts of power distribution.
Digital Image Processing Digital image processing is a modern scientific and engineering technique employed to enhance and extract details of images in diverse fields such as medicine, military, industry, and artistic photography.
Communication Systems An understanding of the basic concepts and principles of analog and digital communication systems and performance of these systems in the presence of noise.  Qualitative and quantitative analysis as well as computer tools (MATLAB) will be employed in solving selected communication theory and systems problems.
Quantum Mechanics Intensive and quantitative treatment of quantum mechanics. Wave function; solutions of the Schdinger equation in one-dimension; formalism of quantum mechanics; statistical interpretation; problems in three-dimensions; angular momentum; spin; identical particle systems; quantum statistics; time-independent perturbation theory; two-level systems; emission and absorption.
Applied Probability and Mathematical Statistics Basic concepts of probability theory, random variables, distribution functions, multivariable distributions, sampling theory, estimation, confidence intervals, hypothesis testing, linear models and analysis of variance.
Differential Equations Treatment of ordinary differential equations with applications.  Topics include: first-order equations, first-order systems, linear and non-linear systems, numerical methods, and Laplace transforms.
Principles of Macroeconomics This course analyzes the determinants of aggregate economic activity.  The main areas studied are the monetary and banking system, the com- position and fluctuations of national income, inflation, and monetary and fiscal policy.
INTRO TO ENGINEERING ANALYSIS Introduces students to basic topics in engineering, the role of the computer in engineering, ill structured problem-solving and report writing. The course includes material on the use of Unix, HTML, spread sheets, and MATLAB. Data analysis and curve fitting is done in both MATLAB and Excel. The writing component includes four detailed reports and includes an oral presentation. The course goals are: to introduce the fundamentals of what engineering is, what engineers do, why a diverse work force is needed and what values come with working in a group environment; to introduce the required library research skills and communication skills used by all engineers; to introduce the role of the computer in engineering problem solving, including the basic analytical, programming design, graphical, and problem solving skills used by most engineers in their profession; and to provide an overview of how material in the basic sciences and mathematics is applied by engineers to solve practical problems of interest to society.
BASIC PHYSICS, SCIENCE AND ENGINEERING 1 Introduces students to the basic principles of mechanics. An effort has been made to achieve a better integration of physics with the first term of calculus, engineering, and chemistry. The theory of waves and the kinetic theory of gases will be discussed.
INTRO TO ENGINEERING COMPUTING Introduces students to social topics in engineering, the role of the computer in engineering, ill-structured problem-solving and report writing. The course includes material on the use of MATLAB and C++. Students learn the fundamentals of computing in engineering, including program design, program development, and debugging. Applications to problems in engineering analysis with topics selected from ENGR 0011. The writing component includes four detailed reports and includes an oral presentation.
BASIC PHYSICS, SCIENCE AND ENGINEERING 2  introduces students to the basic principles of physics. An effort has been made to achieve a better integration of physics with the first term of calculus, engineering, and chemistry. Modern physics (special relativity, elementary quantum mechanics, and atomic structure) will be discussed.
GENERAL CHEM FOR ENGINEERS 1 GENERAL CHEM FOR ENGINEERS 1
GENERAL CHEM FOR ENGINEERS 2 GENERAL CHEM FOR ENGINEERS 2
ANALYTIC GEOMETRY AND CALCULUS 1 It covers the derivative and integral of functions of one variable and their applications.
ANALYTIC GEOMETRY AND CALCULUS 2 It covers the calculus of transcendental functions, techniques of integration, series of numbers and functions, polar coordinates, and conic sections.
Communication Process Communication Process
Introduction to Econometrics Introduction to Econometrics
Discussion Discussion
Urban Economics Urban Economics
Rhetorical Process Rhetorical Process
DIFFERENTIAL EQUATIONS This course presents an introduction to the theory of differential equations from an applied perspective. Topics include linear and nonlinear ordinary differential equations, Laplace transform, and introduction to partial differential equations.
DIGITAL LOGIC Introduction to digital systems, boolean algebra, minimization of logic functions, combinational and sequential circuit design.
INTRMEDT PROGRMMING USING JAVA This course is a rigorous introduction to the fundamental concepts and techniques of computer programming using the java programming language. This is a first course for students who intend to major in computer science or computer engineering.
LINEAR CIRCUITS AND SYSTEMS 1 The analysis of linear circuits. Electric variables and circuit elements; kirchoff's and ohm's law; mesh and node equations; thevenin and norton equivalent circuits; first and second-order circuits; time domain analysis.
DATA STRUCTURES This course emphasizes the study of the basic data structures of computer science (stacks, queues, trees, lists) and their implementations using the java language. Included in this study are programming techniques which use recursion, reference variables, and dynamic memory allocation. Students in this course are also introduced to various searching and sorting methods and are expected to develop an intuitive understanding of the complexity of these algorithms.
SYSTEMS ENGR 1 LABORATORY Laboratory experience accompanying CHE 0500. Both physical and computational experiments will be performed.
Analysis and Design of Electronic Circuits         Analysis and Design of Electronic Circuits
COMPUTER ORGANIZATIONN & ASSEMBLY LANGUAGE The purpose of this course is to study the components of computing systems common to most computer architectures. In particular, this class is meant to introduce data representation, types of processors, memory types, and hierarchy, and device drivers. The students will learn mips assembly language, the design of arithmetic and logic units, and basic designs for risc processors.
EXPERIMENTAL METHODS IN MSE Principles and techniques of optical metallography: imaging and quantitative analysis. Mechanical testing techniques, electron microscopy and chemical analysis.
INTRO TO MATRICES & LINEAR ALG The principal topics which this course will cover include vectors, matrices, determinants, linear transformations, eigenvalues and eigenvectors, and selected applications.
INTRO TO SYSTEMS SOFTWARE This course covers topics related to the interface of hardware and software. It covers device interface and hardware synchronization at the loWest level of the operating system, the linkage of operating system services to application software, and the fundamental mechanisms for computer communications.
PROBLTY & STAT FOR ENGINEERS 1 An introductory course in statistics. Topics covered include: data analysis, probability, randon variables, selsected discrete and continuous probability distributions, one sample and two sample estimation, hypothesis testing, experiments with two factors and introduction to regression analysis.
ALGORITHM IMPLEMENTATION This course covers a broad range of the most commonly used algorithms: some examples include algorithms for sorting, searching, encryption, graph searching, pattern matching, geometric intersection, compression, and local search. The students will implement and test several algorithms. The course is programming-intensive.
INTRO TO COMPUTER ARCHITECTURE Examination of computer architecture and hardware system organization. Topics include: CPU organization, sequential and microprogrammed control, instruction set implementation, memory organizations, input/output structure, peripherals and computer communications.
ADV DIGITAL DESIGN CONCEPTS This course and laboratory builds on the student's knowledge of digital design, computer architecture principles, and assembly language. It covers both theoretical and practical considerations in the design of modern computing systems using computer aided design tools and programmable logic devices.
SOFTWARE ENGINEERING This course and laboratory introduces classical and object-oriented software engineering. Software requirements, specification, object-oriented analysis, design, implementation, integration, and maintenance are covered. Each of these phases is examined on a practical level through a semester long, formal design project that involves the creation of a java-based internet application. Additional java-related topics are taught, including java applets, custom networking, remote database access, SQL, and multimedia extensions.
Discrete Structures for Computer Science Discrete Structures for Computer Science
INTRO TO COMPUTER NETWORKS The course will cover the understanding technologies where methods of interconnection are fundamental to the system design. Interconnection will include serial point to point and multiple access serial/parallel methods and protocols. There will be an emphasis on fundamentals related to wireless network systems and networks of computers or embedded digital devices. Coverage will include small wireless devices that may be passive or battery powered - requiring low power devices and protocols in either case.
INTRO EMBDDED SYSTEM DESIGN Introduction to the concepts and techniques of embedded system design including requirements, specifications, design implementation and testing. The laboratory is centered around the Altera Excalibur system and the NIOS core processor. Senior design course.
SPECIAL TOPICS: COMPUTER SPECIAL TOPICS: COMPUTER
INTRODUCTION TO VLSI DESIGN Introduction to the concepts and techniques of modern integrated circuit design. Use of Computer Aided Design (CAD) tools for circuit design and simulation. Senior design course. Includes a laboratory.
PRGMG LANG FOR WEB APPLCTNS Various programming paradigms will be studied using java and scripting languages. The use of java in programming web based applications, network applications, and the use of the extensive java libraries will be studied. The programming paradigm of building software by gluing components will be explored through the use of scripting languages such as PERL and JavaScript. Applications include developing guis and internet programming.
INTRO TO OPERATING SYSTEMS An introduction to basic concepts of operating systems common to most computer systems, which interfaces the machine with upper-level programs. This course will introduce processes as processing unit, process management, concurrency, communication, memory management and protection, and file systems.
INTRO TO COMPILER DESIGN This course will introduce the basic concepts of compiler design and implementation. Topics include lexical analysis, various types of parsers, intermediate and object code generation and code optimization. The material will be presented from an implementation point of view rather than a formal approach. The impact of language design on compilers will also be examined.
BIOMECHANICS 2 Modern biomechanics is an increasingly diverse field that encompasses the mechanics of the whole body, all the way down to the cellular and molecular levels. Students are introduced to fundamental concepts and techniques of biodynamics and bio solid mechanics which provide the basis for biomechanics 3 and 4. General approaches used in mechanics are introduced throughout the semester and applied in several laboratories. Upon completing the course, the student should be able to demonstrate recall of functional anatomy of musculoskeletal system perform inverse dynamic analyses describe the principles of basic muscle biomechanics perform analyses of deformable bodies (including viscoelastic materials) describe general experimental techniques for rigid and deformable body analyses
SENIOR DESIGN PROJECT SENIOR DESIGN PROJECT
ENGINEERING PROJECT ENGINEERING PROJECT
Writing and Critical ReasoningThematic  Academic writing, emphasizing analysis and argumentation, rhetorical judgment, critical reasoning, creative insight, the careful use of evidence, ethical perspectives, logical organization, stylistic and grammatical fluency.
Advanced Writing Instruction in writing for various audiences on topics related to a students professional or disciplinary interests, with some emphasis on issues of broad public concern.
Cellular and Molecular Biology Cellular and molecular biology with examples related to human biology and diseases. Fundamental life processes examined at the genetic, cellular and molecular levels.
Humans and Their Environment An examination of the physical and biological laws that influence agriculture, pollution, population dynamics (including humans), climate, biodiversity and ecosystem structure and function.
General Biology for the Environment and Life Study of common skills in biology, including basics of evolution, systematics, ecology, genetics, biochemistry and molecular biology, physiology, and anatomy.
How the Body Works Structure and function of the human body, including the role of organ systems, tissues, and cells in normal function. Malfunctions relating to disease, substance abuse and lifestyle.
Good Genes, Bad Genes Introduction to the scientific method; basic instruction in molecular biology with emphasis on how biological research advancement has impacted medicine, commerce and society in general.
The Biology of Food Exploration of molecular biology, biochemistry, microbiology, nutrition and the history of biology through the study of food, focusing on foods relationship to the biological world.
Our Blue Planet in a Changing Climate Introduction to biological oceanography and marine ecosystems. Impact of climate changes on marine ecosystems. Analysis of ocean-related case studies being discussed by mainstream media.
The Nature of Human Health and Disease The human organism; the nature of inherited and acquired diseases; the biological and societal basis for the AIDS epidemic; therapy, drug design and the future.
Evolution Changes in the physical and biological universe over time; origins of life, dinosaurs, human evolution. Implications of evolutionary mechanisms and mass extinctions for human survival.
The Biology of the Brain Exploration of the unique properties of brain cells that allow complex perceptions and behaviors; examination of structure and activity of brain cells that underlie function.
Drug Discovery and Development Scientific principles underlying molecular approaches to diagnosis and treatment of diseases, using specific models within a societal (business, legal, ethical) context.
The History of Life on Earth: A View from the Museum Topically-driven exploration of evolution, environmental change, and the history of life on Earth via the fossil record with the Natural History Museum of Los Angeles as a laboratory. How the changing Earth and life co-evolved through time.
Metals and Life on Earth The role of metals in life, from the origin of life to modern environmental problems.
A Journey into the Mind Introduction to the brain and mind. A unique multimedia approach to stress how knowledge about the mind is gained from scientific and clinical investigations.
Seminar in the Life Sciences Scientific understanding of a full range of living systems from molecules to ecosystems, prokaryotes to humans, past and present
The Human Animal Foundations of the human species. Examination of scientific evidence from Darwinian theory, primate behavior, fossils, and the behavior of modern people.
Nutrition for Life To develop an understanding of Nutrition, especially as it pertains to optimal health and prevention of diseases. A study of macro and micro nutrients.
The Science of Sport The physiological and nutritional basis of human performance. Factors that facilitate and limit athletic achievement.
The Pharmacology of Performance Enhancing Drugs Evaluation of drugs, nutritional supplements, and ergogenic aids that are purported to enhance human athletic performance to promote weight and fat loss.
In a Word Words as a gateway to the human mind. How words are stored, comprehended and retrieved. How words are constructed. Words and concepts. Words and social constructs. The processing and the acquisition of words in normal and atypical children and adults.
Language and Mind Language within cognitive science: speech physiology and acoustics, language acquisition, reading, language disorders, perception and mental representation of words, linguistic diversity and computer analysis of speech
Foundations of Cognitive Science Introduction to research in interdisciplinary cognitive science, highlighting ideas and methods from philosophy, psychology, linguistics, neuroscience, and computer science.
Drugs, Behavior and Society An integrative systems perspective of drugs; including their historical, economic, and cultural importance, psychopharmacology, addiction, relationship to crime, and therapeutic use in treating psychological disorders.
Origins of the Mind Exploration of ancient philosophical questions concerning the origins of human knowledge through empirical studies of infants, animals, and adults from diverse cultures.
Advanced General Biology: Organismal Biology and Evolution Equivalent to BISC 120 , but taught at a higher level for exceptionally well-prepared students. Admission to the course by departmental approval only.
Engineering Freshman Academy Introduction to the profession of engineering. Ethical, political and societal consequences of engineering innovations and the impact of engineering on everyday life. Team projects and guest lectures. Open to freshmen only.
Calculus I Limits; continuity, derivatives and applications; antiderivatives; the fundamental theorem of calculus; exponential and logarithmic functions.
Calculus II trigonometric functions; applications of integration; techniques of integration; indeterminate forms; infinite series; Taylor series; polar coordinates.
Linear Algebra and Linear Differential Equations Matrices, systems of linear equations, vector spaces, linear transformations, eigenvalues, systems of linear differential equations.
Calculus III Vectors, vector valued functions; differential and integral calculus of functions of several variables; Greens theorem.
Introduction to Probability and Statistics for Electrical Engineering and Computer Science Introduction to concepts of randomness and uncertainty: probability, random variables, statistics. Applications to digital communications, signal processing, automatic control, computer engineering and computer science.
Probability Theory Probability spaces, discrete and continuous distributions, moments, characteristic functions, sequences of random variables, laws of large numbers, central limit theorem, special probability laws.
Fundamentals of Physics I: Mechanics and Thermodynamics Gateway to the majors and minors in Physics and Astronomy. Statics and dynamics of particles and rigid bodies, conservation principles, gravitation, simple harmonic oscillators, thermodynamics, heat engines, entropy.
Fundamentals of Physics II: Electricity and Magnetism Electrostatics, magnetostatics, electrical circuits, wave motion, sound waves, electromagnetic waves.
Advanced Principles of Physics I Gateway to the majors and minors in Physics and Astronomy. Introductory treatment intended for well-qualified students. Dynamics of particles and rigid bodies, conservation laws, wave motion, thermodynamics, heat engines, entropy.
Advanced Principles of Physics II Electrostatics, magnetostatics, electrical circuits, electric and magnetic properties of matter, Maxwells equations, electromagnetic waves, propagation of light.
Applied Physics I: Mechanics Mechanics, mechanical vibrations and waves, special relativity. Emphasizes applications in the areas of applied physics and engineering.
Applied Physics II: Electricity, Magnetism and Optics Electric and magnetic fields; electromagnetic waves; optics. Emphasizes applications in the areas of applied physics and engineering.
Introduction to Programming Basic datatypes, assignments, control statements (if, switch, for, while), input/output (printf, scanf, cin, cout), functions, arrays, structures, recursion, dynamic memory, file handling. Programming in C/C++.
Data Structures and Object Oriented Design Introduces the student to standard data structures (linear structures such as linked lists, (balanced) trees, priority queues, and hashtables), using the C++ programming language.
Discrete Methods in Computer Science Sets, functions, series. Big-O notation and algorithm analysis. Propositional and first-order logic. Counting and discrete probability. Graphs and basic graph algorithms. Basic number theory.
Introduction to Algorithms and Theory of Computing Algorithm analysis. Greedy algorithms, divide and conquer, dynamic programming, graph algorithms. NP-completeness and basic recursion theory and undecidability. Sorting lower bounds. Number-theory based cryptography.
Introduction to Embedded Systems Information representations, embedded programming, digital and serial I/O, analog-to-digital conversion, and interrupt mechanisms. Elementary analog, logic, and state-machine design.
Distributed Systems for the Internet of Things Introduction to hardware, operating systems, signal processing and control, network protocols, mobile applications, databases, cloud computing, machine learning, and security for the Internet of Things.
Introduction to Digital Circuits Digital system design and implementation; synchronous design of datapath and control; schematic/Verilog-based design, simulation, and implementation in Field Programmable Gate Arrays; timing analysis; semester-end project.
Computer Systems Organization Register Transfer level machine organization; performance; arithmetic; pipelined processors; exceptions, out-of-order and speculative execution, cache, virtual memory, multi-core multi-threaded processors, cache coherence.
Principles of Software Development Object-oriented paradigm for programmingin- the-large in Java; writing sophisticated concurrent applications with animation and graphic user interfaces; using professional tools on team project.
Introduction to Operating Systems Basic issues in concurrency, deadlock control, synchronization scheduling, memory management, protection and access control, inter-process communication, and structured design. Laboratory experiences with Unix-like operating system.
Introduction to Internetworking Global Internet: design principles, layering, protocol design/analysis. Networked applications, Internet structure/architecture, Protocols for transport/congestion control, network layer/routing, link layer/MAC. Network security.
Parallel and Distributed Computation Introduction to parallel programming techniques, models and optimization strategies; Application mapping to multi-core, accelerator, GPU and cloud platforms; High Performance Computing and Data Science applications
Introduction to System-on-Chip Design flow, tools, and issues related to System/Network-on-Chip (S/Noc) design for real-time embedded systems with applications in mobile, cloud, aerospace, and medical electronics.
VLSI Circuit Design Analysis and design of digital MOS VLSI circuits including area, delay and power minimization. Laboratory assignments including design, layout, extraction, simulation and automatic synthesis.
Capstone: Design and Construction of Large Software Systems Group project with an outside stakeholder to develop real-world software solutions to large-scale problems. Topics include software engineering, professional preparation, and recent computer science research.
Capstone: Creating Your High-Tech Startup Capstone class in which students create their own technology startup, leveraging comprehensive CS knowledge and best industry practices.
Embedded Systems Design Laboratory Specification, design, implementation, testing and documentation of a digital system project using embedded processors, programmable logic, analog I/O interfaces and application specific hardware. Capstone design experience.
Introduction to Computer and Network Security A broad overview of security threats and defenses, security systems and functionalities, as well as current security practices. Includes homeworks and in-class exercises to provide practical experience working with such systems.
Linear Circuits Lumped circuit elements; network equations; zero-input and zerostate responses; sinusoidal steady-state analysis; impedance; resonance; network functions; power concepts; transformers; Laplace transforms.
Linear Systems Representation and analysis of linear time-invariant systems primarily for the continuous time case. Convolution, Fourier series and transform, Laplace transform, controls and communications applications.
Computing Platforms and Paradigms Microarchitecture performance, storage technologies, FPGA and GPU architecture, and cloud-based architectures combining heterogeneous processing resources. Programming paradigms including CUDA, MapReduce and OpenMP.
Embedded Systems Design Laboratory Specification, design, implementation, testing and documentation of a digital system project using embedded processors, programmable logic, analog I/O interfaces and application specific hardware. Capstone design experience.
Software Engineering Introduction to the software engineering process and software lifecycle. Covers project management, requirements, architecture, design, implementation, testing, and maintenance phase activities in team based projects.
Introduction to Artificial Intelligence Concepts and algorithms underlying the understanding and construction of intelligent systems. Agents, problem solving, search, representation, reasoning, planning, machine learning.
Computer Graphics Computer graphics, OpenGL, 2D and 3D transformations, Bzier splines, computer animation, rendering including ray tracing, shading and lighting, artistic rendering, virtual reality, visualization.
Introduction to Robotics Designing, building and programming mobile robots; sensors, effectors, basic control theory, control architectures, some advanced topics, illustrations of state-of-theart. Teamwork; final project tested in a robot contest.
Computer Systems and Applications Modeling Fundamentals Techniques and tools needed to construct/evaluate models of computer systems and applications. Analytical and simulation methods, capacity planning, performance/reliability evaluation, and decision-making.
Cryptography: Secure Communication and Computation Introduction to modern Cryptography; mathematical/algorithmic studies of methods for protecting information in computer and communication systems: Public-Key Cryptosystems, zero-knowledge proofs, data privacy.
File and Database Management File input/output techniques, basic methods for file organization, file managers, principles of databases, conceptual data models, and query languages.
Directed Research Directed Research
Final Game Project Final Game Project
Special Topics Special Topics
Introduction to Computer Networks Network architectures; layered protocols, network service interface; local, wide area, wireless networks; Internet protocols; link protocols; addressing; routing; flow control; software defined network; multimedia networks.
Parallel and Distributed Computation Introduction to parallel programming techniques, models and optimization strategies; Application mapping to multi-core, accelerator, GPU and cloud platforms; High Performance Computing and Data Science applications.
Introduction to System-on-Chip Design flow, tools, and issues related to System/Network-on-Chip (S/Noc) design for real-time embedded systems with applications in mobile, cloud, aerospace, and medical electronics.
Computer Systems Organization Register Transfer level machine organization; performance; arithmetic; pipelined processors; exceptions, out-of-order and speculative execution, cache, virtual memory, multi-core multi-threaded processors, cache coherence.
Embedded Systems Design Laboratory Specification, design, implementation, testing and documentation of a digital system project using embedded processors, programmable logic, analog I/O interfaces and application specific hardware. Capstone design experience.
MOS VLSI Circuit Design Analysis and design of digital MOS VLSI circuits including area, delay and power minimization. Laboratory assignments including design, layout, extraction, simulation and automatic synthesis.
Linear Control Systems Analysis of linear control systems; continuous and sampleddata systems, various stability criteria; frequency response and root locus compensation techniques.
Introduction to Digital Signal Processing Fundamentals of digital signal processing covering: discrete time linear systems, quantization, sampling, Z-transforms, Fourier transforms, FFTs and filter design.
Communication System Design Design and analysis of analog and digital communication systems. System models, requirements, development, performance analysis and component selection techniques. Comprehensive system design project. Capstone design experience.
Building the High Tech Startup Teach students the basic technologies and processes involved in building web and mobile startups. Students will be introduced to the different aspects of building a web startup including online business models, Product management, Agile development processes, technology platforms and operations, customer development and online marketing.
Numerical Methods Rounding errors in digital computation; solution of linear algebraic systems; Newtons method for nonlinear systems; matrix eigenvalues; polynomial approximation; numerical integration; numerical solution of ordinary differential equations.

General Chemistry I A general overview of chemistry, including principles and theories as well as descriptive chemistry of important elements and compounds. Laboratory experiments augment lecture topics to provide a small group hands-on learning experience.
Introduction to Computer Science I  This course is an introduction to basic concepts of computer science, with emphasis on programming. Computer programming is to the study of computer science what writing is to the study of literature. It is a primary tool for implementing algorithms in computer science. Fundamental techniques for software design and implementation will be covered and these concepts demonstrated in a programming language like C++. Additional topics include top-down modular design, developing general-purpose software tools, procedural and data abstraction, algorithms, and an introduction to recursion and dynamic data structures.
Introduction to Engineering Use of the Computer Introduction to computer programming using equation solving software applied to engineering problems
Engineering and Society Engineers apply scientific knowledge and principles, and use the engineering design process to develop technology. While engineers frequently develop solutions to problems in controlled environments, the products that are developed are used by 'real people' in the 'real world.' Thus, it is essential that engineers have an understanding o the interactions between engineering, technology development, and society. This course will highlight the diverse applications of engineering and technological skills in addition to ethical and other concerns about the societal consequences of technological developments. Students will gain an understanding of ways that conceptual models can be used to frame how both science and technology shape society and how society can shape science and technology.
Calculus I Functions and graphs; derivative concept and formulas, including chain rule and implicit differentiation; integral concept; the Fundamental Theorem of Calculus; properties and applications of the derivative, including max-min problems and graph sketching; exponential, logarithmic, and inverse trigonometric functions.
Calculus II Properties and applications of the integral, including areas, volumes, arc length and differential equations; integration techniques, including parts, partial fractions, trigonometric substitution, and numerical integration; indeterminate forms; improper integrals; infinite series and Taylor series; introduction to polar coordinates, complex numbers, and parametric equations.
Physics I Calculus-based general physics course covering elements of Newtonian mechanics and thermal physics. Laboratory experiments keyed to the lectures to illustrate and demonstrate some of the physical principles and concepts
Physics II Calculus-based general physics course covering elements of electricity and magnetism, waves and optics. Laboratory experiments keyed to the lectures to illustrate and demonstrate some of the physical principles and concepts.
ECE Laboratory I An introductory course that presents the fundamentals of electrical instrumentation while developing laboratory skills. Experiments explore basic electrical properties of analog and digital circuits. The development of sound techniques for circuit construction and troubleshooting are emphasized, as is the role of the computer in a laboratory environment. Use of CAD/CAE tools such as Pspice and LabView is integrated into the course. Lab safety and the documentation and reporting of laboratory results are covered.
Linear Circuits  Steady state response of linear circuits to both sinusoidal and periodic inputs. AC steady-state power. Magnetically coupled circuits. Network functions, transfer functions, gain and phase shift. Bode plots. Fourier series. Laplace transform. The relationship between the time and frequency domain solutions.
Embedded Systems  An introductory course covering the fundamentals of microcontroller hardware and software. Topics include microcontroller systems, input/output (I/O) standards and data communication protocols, interfacing with memory systems and sensors, data collection, display, and control of peripheral modules and actuators. The microcontroller will be programmed in the C programming language. Interfacing assembly language to high level language code will be treated as well. A comprehensive term project will allow student teams to apply the theoretical concepts for solving a practical problem using a microcontroller and peripheral devices.
Intro to Object-Oriented Programming and Software Design A thorough introduction to Object Oriented Programming, including classes, inheritance and subtyping, overloading, and overriding. Dynamic memory management. Debugging. Introduction to Testing Driven Development. Introduction to fundamental data structures.
Introduction to Digital Design An introductory course covering the fundamentals of computer system hardware. Topics include data representation using number systems and codes, Boolean algebra and logic, digital logic devices, combinational and sequential circuits, arithmetic logic units and simple processor organization including registers, memory, addressing and processing of machine instructions.
Computer Engineering Junior Laboratory A design laboratory in computer engineering emphasizing the fundamentals of designing and testing computer system components. Sub-system level digital circuits are designed, constructed, and tested using standard small- and medium-scale integrated circuits and programmable logic devices. Software components which interface with hardware and operating systems are also designed, written and tested. All design projects employ a team based approach.
Systems and Signal Processing Characterization, classification and representation of signals and systems. Convolution. Fourier transforms. Discrete time systems and z transforms. Sampling theorem
Microelectronics  Theory of semiconductor materials, p-n junctions, bipolar and field effect transistors. Analysis of device characteristics, device modeling and equivalent-circuits. PSpice simulation of electronic circuits. Applications including study of biasing, low frequency amplifiers, switching circuits and digital logic operations.
Fundamentals of Software Engineering This is a foundation course in the design of computer software. It covers fundamental techniques and methodologies for software design and implementation. Topics include the software engineering life cycle, object-oriented design, data and procedural abstraction, recursion, iteration, file I/O, and elementary data structures.
Software Components and Generic Programming This course is concerned with software design principles that foster creation of reusable software components. Topics include abstract data types, behavioral inheritance and subtyping, generics, interface design, dependency injection, and analysis of algorithmic behavior. Students will gain experience with software development best practices including design of test scenarios, unit testing, code reviews, refactoring and version control in the context of a modern integrated development environment.
Advanced Digital Circuit Design  An advanced course in digital circuit design. This course begins with an overview of electrical characteristics of logic gates, various standards for I/O buses and communication interfaces. Topics include hierarchical and modular design of digital logic circuits, simulation and synthesis of digital systems on programmable logic devices using computer-aided design software, and debug and verification of design using embedded and standalone logic analyzers.
Computer Engineering Senior Laboratory In conjunction with EE464, students develop specifications for design, build, test, debug and document a complete digital system based on an embedded microcomputer and supporting integrated circuits.
Software System Architecture A study of system software components in the context of a modern operating system such as UNIX, together with the necessary tools and utilities for software development. Topics will include software development tools, operating system interfaces and utilities, and network access methods. Emphasis will be placed on conceptual understanding and practical use of system software components rather than on detailed implementation
Digital Systems Design A study of embedded microcomputer system design. Topics include CPU architecture, memory organization, interrupts, real-time operation, and interfacing with a wide range of external devices. Practical problems in digital design, testability, hardware and software trade-off analysis are covered. In addition to the technical topics, students develop teamwork skills, learn project management, system specification and documentation. Each student does both significant written documentation and oral presentations of his or her work. This course and the senior lab (EE 416) together provide both the conceptual knowledge and practical skills necessary to design application-oriented digital systems
Computer Architecture A study of modern processor system architecture including set design and performance enhancement of computer systems will be discussed. Topics include pipelining, cache organization, memory management, and multiprocessors. Tradeoffs in system design and the impact of hardware/software interactions will be discussed.
Electrical Science  Network concepts. DC circuits: mesh and node equations, network theorems, operational amplifiers. Complex numbers, effective values, sinusoids and phasors. AC circuits: phasor diagrams, power. Time domain solution of first order circuits.
Foundations A transitional course between the technique-oriented lower level courses and the concept-oriented upper level courses in both mathematics and computer science. Logic, numbers, sets, functions, equivalence relations, completeness, combinatorics. Additional topics may include probability and number systems.
Elementary Differential Equations Solutions and applications of first-order differential equations and linear differential equations with constant coefficients. Laplace transform methods. Introduction to matrix algebra, systems of algebraic equations, eigenvalues and eigenvectors, with application to systems of differential equations. Other topics may include modeling, engineering applications or numerical methods
Probability and Statistics A calculus based introduction to topics in probability and statistics. Probability content includes events and sample spaces, the basic axioms of probability, discrete and continuous random variables (definitions and basic characterizations such as the means and variances) including binomial, Poisson, normal, exponential, studentt, and uniform distributions. Topics in statistics include the central limit theorem, statistical inference including confidence intervals and hypothesis testing for one and two sample data, and linear regression. Students will use statistical software to read data and interpret software generated output.
Control Systems Introduction to the analysis and design of continuous-time feedback control systems. Topics include: mathematical representation of physical systems with linear differential equations, Laplace transforms, transfer functions, block diagrams and signal flow graphs, feedback, sensitivity, transient specifications, steady-state tracking errors, stability, root locus plots, compensator design, simulation.
Neural Engineering This course applies engineering principles to the study of neuroscience and to the design of devices or techniques intended to replace missing or augment existing functions such as seeing, hearing, speaking, and  walking. The course provides a detailed overview of sensorimotor systems, neurophysiology, neuroanatomy, neuropathology and clinical neurology. The class sequences through the various sensory and movement systems, providing a quantitative basis for how the nervous systems works for these systems, for how it dysfunctions, for the disability produced, and finally for how function can be restored by neuroprostheses. Students will prepare and present a paper on a neural engineering topic.
Computer Graphics  An introduction to computer graphics. Graphics hardware, algorithms for generating and displaying two and three-dimensional geometric figures, animation, interactive displays. Programming projects using OpenGL will be assigned. Prerequisites: Programming experience in C/C++ family language, basic concepts in linear algebra and matrices
Robotics I The course presents an introduction to the fundamentals of mobile robotic systems including common mechanical configurations with sensors and actuators, as well as the typical sensory, perceptual, and cognitive layers that comprise the field of study. Topics explored will include: Mobile Robot Locomotion (e.g., Legged, Wheeled, and Aerial), Mobile Robot Kinematics (e.g., Models and Constraints, Maneuverability, Workspace Analysis, and Motion Control), Mobile Robot Perception (e.g., Exploration of Sensors, Fundamentals of Computer Vision, Fundamentals of Image Processing, Feature Extraction, and Place Recognition), Mobile Robot Localization (e.g., Noise and Aliasing, Localization-Based Navigation, Map Representations, Probabilistic Map-Based Localization and Autonomous Map Building), and Planning and Navigation (Path Planning, Obstacle Avoidance, and Navigation Architectures)
Robotics II The course presents an introduction to the fundamentals of industrial robotics. Topics explored will include: Robotic manipulation, direct kinematics, inverse kinematics, workspace analysis and trajectory planning, differential motion and statics, manipulator dynamics, robot control, robot vision and task planning. Throughout the course, students will work in teams with a supplied robotics kit of parts and appropriate software tools to design and implement a robot manipulator that demonstrates various aspects of the course applied to a real-world problem.
Applications in Engineering Introduction of various concepts in engineering. Emphasis on project work, engineering ethics, and engineering design process.
Introduction To Computing In Engineering An introduction to engineering problem-solving with the aid of computational software. Scientific computing concepts will be introduced including number representation, arrays, structured programming techniques, and good coding practices.  Basic numerical and data analysis methods will be introduced including numerical differentiation and integration, matrix operations, descriptive statistics, curve fitting, and optimization.
Calculus I Differential and integral calculus: limits and continuity, the derivative and techniques of differentiation, extremal problems, related rates, the definite integral, Fundamental Theorem of Calculus, derivatives and integrals of trigonometric functions, logarithmic and exponential functions.
Calculus II Applications of the integral, techniques of integration, separable differential equations, improper integrals. Sequences, series, convergence tests, Taylor series. Polar coordinates, complex numbers.
General Physics I W/lab Principles of classical mechanics, fluids, heat, thermodynamics.
General Physics II W/lab Principles of  electricity and magnetism, waves, sound, and light.
Expository Writing Explores the principles of effective written communication and provides intensive practice in writing various types of expository prose, especially analysis and persuasion. Examines essays by contemporary and earlier authors as instances of the range and versatility of standard written English.
Introduction To Electrical Systems W/ Lab Definitions of circuit elements, fundamental laws, selected network theorems, controlled sources, introduction to the oscilloscope, energy and power, natural response and complete response of first order circuits, steady state sinusoidal behavior, algebra of complex numbers, phasors, impedance, average and reactive power, introduction to analog and digital systems, frequency response and filters, measurements and instrumentation, introduction to computer applications for circuit analysis and design.
Introduction To Digital Logic Circuits W/ Lab Number systems and their conversions. Boolean algebra and Karnaugh map minimizations of Boolean expressions. Logic gates. Analysis and design of combinational logic circuits. Characteristics of various flip-flops. Analysis and design of sequential logic circuits. Design of counter and shift register circuits. Various binary codes and code conversion circuits. Binary arithmetic and arithmetic circuits.
Linear Algebra Introduction to the theory of vector spaces and linear transformations over the real or complex numbers, including linear independence, dimension, matrix multiplication, similarity and change of basis, inner products, eigenvalues and eigenvectors, and some applications.
Electronics I W/lab Characteristics of the operational amplifier; amplifiers and active filters using the operational amplifier; analysis and design of filters using phasors; characteristics of junction diodes, analysis and design of diode circuits; field-effect transistors, MOSFET device operation, small-signal models and the low-frequency analysis of transistor amplifiers; Elementary MOS amplifier configurations.
Calculus III Vectors in two and three dimensions, applications of the derivative of vector-valued functions of a single variable. Functions of several variables, continuity, partial derivatives, the gradient, directional derivatives. Multiple integrals and their applications. Line integrals, Green's theorem, divergence theorem, Stokes’ theorem.
Differential Equations An introduction to linear differential equations with constant coefficients, linear algebra, and Laplace transforms.
Introduction To Computer Science The study of computer science centers on two complementary aspects of the discipline. First, computer science is fundamentally concerned with the problem-solving methodologies it derives from its foundational fields: the design principles of engineering, mathematical theory, and scientific empirical study. Second, these methodologies are applied in the complex context of a modern day computing system. In this course we will address both of these important aspects. As a means for developing your design skills, we will discuss the fundamental features of a high level, general purpose programming language — namely C++ — and learn how to use it as a tool for problem solving. We will also consider the performance of solutions, and how to apply both analytical and empirical assessment techniques.
Microprocessor Architecture And Applications  W/lab Introduction to the microprocessor with a comparative analysis of some popular forms; memory devices, interface devices, and other support circuitry; machine language and assembly language programming. Microprocessor use in dedicated applications. /  Electromagnetic Fields And Waves  W/lab Coordinate systems and transformations, base vectors, scalar and vector point functions, gradient, divergence, curl, Laplacian, divergence theorem, Stokes theorem, source-point and field-point notation, electrostatic and magnetostatic fields and laws, scalar and vector potential functions, continuity equation, Maxwell's equations in differential and integral form, boundary conditions, wave equation, time-harmonic fields, plane waves, electromagnetic radiation, dipole antenna, Poynting theorem, distributed circuits and transmission lines.
Linear Systems Vector spaces, orthogonality, the continuous and discrete bi-lateral and uni-lateral Fourier transform, the bi-lateral and uni-lateral Laplace transform, convolution, and correlation; Introduction to discrete Fourier transform and Fast Fourier transform via MatLab; the Z transform.; matrices, eigenvectors, and eigenvalues; numerical methods for linear systems through stability and causality for control systems for analog applications and up-sampling an down-sampling for discrete systems.
Probabilistic Systems Analysis Development of analytical tools for the modeling and analysis of random phenomena with application to problems across a range of engineering and applied science disciplines. Probability theory, sample and event spaces, discrete and continuous random variables, conditional probability, expectations and conditional expectations, and derived distributions.
Data Structures Data structures and algorithms are studied through major programming projects. Topics include linked lists, trees, graphs, dynamic storage allocation, and recursion.
Digital Logic Systems  W/lab Integrated circuit logic families and their characteristics. Review of combinatorial and sequential design using SSI devices. Arithmetic circuits, shift registers, and counters. Random access and read only memories. Design of memory systems. Waveshaping devices and display devices. Programmable logic arrays and their applications. Asynchronous and synchronous system design using MSI and LSI devices. Finite state machines and the specification of system controllers. Systematic approaches to controller realization.
Discrete Mathematics Sets, relations and functions, logic and methods of proof, combinatorics, graphs and digraphs.
Junior Design Project Introduction of the engineering method: concept, planning and analysis, design, test. Integration of theoretical concepts from circuit theory, digital and analog electronics, signal processing, engineering economics, and engineering design practices to deliver a working prototype. Use of microcontroller and peripherals, analog-to-digital converters, digital signal-processors, memory and computer aided design tools.
Senior Design Project A comprehensive design project undertaken during the senior year, individually or as a team, under the guidance of a faculty supervisor.
Senior Design Project A comprehensive design project undertaken during the senior year, individually or as a team, under the guidance of a faculty supervisor. The work is spread over two terms.Please see departmental website for specific details.
Introduction To Vlsi Design Topics include the structure of the MOS transistor, theory of operation, fabrication methods, CMOS circuit design, subsystem design, the PLA and finite state machines, introduction to memory design, system timing techniques.
Computer Engineering  W/lab Topics covered include computer abstractions, performance measurements, instruction set architectures, designing processor datapath and control, pipelining, memory hierarchy, I/O, multiprocessors. The associated lab consists of designing, implementing, and validating a simplified MIOS processor using Verilog, a hardware description language.
Operating Systems Fundamental issues in operating system design. Concurrent processes: synchronization, sharing, deadlock, scheduling. Relevant hardware properties of uniprocessor and multiprocessor computer systems.
Introduction to Circuits for Electrical and Computer Engineers This course is an introduction to electronic circuits. We start with the basic quantities used to characterize circuit operation (like current, voltage, and power) and then enforce several physical laws to form the basis of our approach to circuit analysis. Networks comprising passive circuit elements such as resistors, inductors, and capacitors will be examined under constant dc, transient, and sinusoidal steady-state conditions. Active components including transistors and Op-Amps will be introduced and used to build simple amplifiers and switching power converters.
Signals and Information Introduction to signal processing. Topics include frequency-based representations: Fourier analysis and synthesis; discrete time linear systems: input/output relationships, filtering, spectral response; analog-to-digital and digital-to-analog conversion; continuous time signals and linear time invariant systems: frequency response and continuous-time Fourier transform.
Intelligent Physical Systems This course include topics on algorithms, field programmable gate arrays, wireless communication, sensors, actuators, power, and mechanics. Students will learn the value and trade-offs between theory, simulation, and physical implementations, and gain familiarity with rapid prototyping techniques, system debugging, team work, leadership skills, time management, and how to disseminate work to a broader audience through wiki-pages.
Electromagnetic Fields and Waves Covers static, quasi-static, and dynamic electromagnetic fields and waves. Topics include Maxwells equations (integral and differential forms), fields of charge and current distributions, boundary conditions, fields near conductors, method of images, material polarization and dielectrics; energy, work, and power in electromagnetic systems; wave propagation and polarization, waves in media (dielectrics, conductors, and anisotropic materials); reflection, transmission, and refraction at media interfaces; guided waves in transmission lines, Smith charts, transients; metallic and dielectric waveguides; radiation and antennas, antenna arrays, electric circuits for transmission and reception, aperture antennas and diffraction.
Introduction to Probability and Inference for Random Signals and Systems Probability theory is a mathematical discipline that allows one to reason about uncertainty: it helps us to predict uncertain events, to make better decisions under uncertainty, and to design and build systems that must operate in uncertain environments. Topics include probability models, combinatorics, countable and uncountable sample spaces, discrete random variables, probability mass functions, continuous random variables, probability density functions, cumulative distribution functions, expectation and variance, independence and correlation, conditioning and Bayess rule, concentration inequalities, the multivariate Normal distribution, limit theorems (including the law of large numbers and the central limit theorem), Monte Carlo methods, random processes, and the basics of statistical inference.
Embedded Systems An introduction to the design of embedded systems, with an emphasis on understanding the interaction between hardware, software, and the physical world. Topics covered include assembly language programming, interrupts, I/O, concurrency management, scheduling, resource management, and real-time constraints.
Introduction to Microelectronics This course include topics as basic semiconductor physics, electrons and holes in semiconductors, electrical transport in semiconductors, PN junctions and diodes, photodetectors and solar cells, Metal-Oxide-Semiconductor (MOS) capacitors, MOS field effect transistors (FETs), bipolar junction transistors (BJTs), large signal and small signal models of electronic devices, single stage amplifiers, multistage amplifiers, differential amplifiers, analog circuit analysis and design, high-frequency models of devices, high-frequency circuit analysis, digital logic and MOS logic devices, complimentary MOS (or CMOS) logic gates, fundamental trade-offs in high speed analog and digital circuit design.
Mathematics of Signal and System Analysis This course include topics as foundational material about sets and functions; modular arithmetic and public-key cryptography; inner products, orthogonal representations, and Fourier analysis; LTI systems as mappings on function spaces; sampling and interpolation; singular-value decomposition; and, as time permits, an introduction to wavelets and elementary convex analysis.
Ethical Issues in Engineering Practice 3 Studies ethical issues involved in engineering practice. Explores the engineers role in technical decision-making in organizations. Considers the engineers relationship to the uses of technology in society, especially emerging technologies. Case studies covered include the Space Shuttle Challenger, the Space Shuttle Columbia, The Macondo Well Blowout, The Ford Pinto Case, The VW Emissions scandal, the Tesla Automatic Driving accident, Three Mile Island, Chernobyl, Fukushima, and the Bhopal case, among others. Technology topics considered include brain-machine interface, human enhancement, genetic engineering, intelligent autonomous systems, privacy and surveillance, energy technologies, and environmental issues, among others. Codes of ethics in engineering, ethical theory, philosophical models of knowledge production, and sociological models of human and technological agency are introduced to analyze these issues.
Engineering Quantum Mechanics 3 An introduction to quantum mechanics at a level suitable for advanced undergraduates and MS/PhD students. This course will focus on both fundamental aspects of quantum mechanics, and its applications in modern materials science and engineering. The emphasis will be on understanding and interpreting the behavior of materials on the quantum level. Topics to be covered include: the failures of classical physics; the Schrdinger equation (time-dependent and time-independent); barriers and tunneling; heat capacity and thermal transport; electronic band structure (Blochs theorem, Dirac comb); formal aspects related to operators, commutators, compatible observables; and angular momentum (spin).
Physics of Semiconductors and Nanostructures 4 Covers basic solid state and semiconductor physics relevant for understanding electronic and optical devices. Topics include crystalline structures, bonding in atoms and solids, energy bands in solids, electron statistics and dynamics in energy bands, effective mass equation, carrier transport in solids, Boltzmann transport equation, semiconductor homo- and hetero-junctions, optical processes in semiconductors, electronic and optical properties of semiconductor nanostructures, semiconductor quantum wells, wires, and dots, electron transport in reduced dimensions, semiconductor lasers and optoelectronics, high-frequency response of electrons in solids and plasmons.
Random Signals in Communications and Signal Processing 4 Introduction to models for random signals in discrete and continuous time; Markov chains, Poisson process, queuing processes, power spectral densities, Gaussian random process. Response of linear systems to random signals. Elements of estimation and inference as they arise in communications and digital signal processing systems.
Linear Algebra for Engineers Linear algebra and its applications. Topics include matrices, determinants, vector spaces, eigenvalues and eigenvectors, orthogonality and inner product spaces; applications include brief introductions to difference equations, Markov chains, and systems of linear ordinary differential equations. May include computer use in solving problems.
Physics III: Oscillations, Waves, and Quantum Physics For majors in engineering (including bio-, civil, and environmental engineering), computer and information science, physics, earth and atmospheric science, and other physical and biological sciences who wish to understand the oscillation, wave, and quantum phenomena behind everyday experiences and modern technology including scientific/medical instrumentation. Covers the physics of oscillations and wave phenomena, including driven oscillations and resonance, mechanical waves, sound waves, electromagnetic waves, standing waves, Doppler effect, polarization, wave reflection and transmission, interference, diffraction, geometric optics and optical instruments, wave properties of particles, particles in potential wells, light emission and absorption, and quantum tunneling.  With applications to phenomena and measurement technologies in engineering, the physical sciences, and biological sciences.  Some familiarity with differential equations, complex representation of sinusoids, and Fourier analysis is desirable but not essential.
Digital Logic and Computer Organization This course provides an introduction to the design and implementation of digital circuits and microprocessors. Topics include transistor network design, Boolean algebra, combinational circuits, sequential circuits, finite state machine design, processor pipelines, and memory hierarchy. Design methodology using both discrete components and hardware description languages is covered in the laboratory portion of the course.
Exploring Engineering Introduction to the study and practice of engineering, including overviews of specific disciplines.
Calculus I An introduction to the calculus of algebraic, trigonometric and transcendental functions. Interpretation, significance and calculations of a derivative. Applications to geometry, biology, physics, economics, and other subjects
Classical and Modern Physics I The first course in a two-course sequence that surveys major areas of physics. Topics include Newtonian mechanics, relativity, thermodynamics and statistical mechanics, and gravity
Differential Equations Basic methods of solving ordinary differential equations. Systems of linear differential equations, Laplace transform, applications and selected topics.
Calculus II Methods of integration including integration by parts, numerical approximations, and improper integrals. Sequences, series, including Taylor series. Complex numbers, polar coordinates, parametric functions, differential equations, and applications.
Classical and Modern Physics II The second course in a two-course sequence that surveys major areas of physics. Topics include electricity and magnetism, light and waves, quantum mechanics, and particle physics.
Foundations of Electrical and Computer Engineering Foundational concepts of electrical and computer engineering. Development of skills in simulation, testing, and programming. Introduction to electronic and computing system design principles.
Linear Algebra Linear equations, matrices, vector spaces, linear transformations, eigenvalues, inner products, Gram-Schmidt algorithm, singular value decomposition.
Calculus III Calculus of vector-valued functions and functions of several variables. Multiple, line, and surface integrals; applications, and extrema. Green's, Stokes' and Divergence Theorems
Circuit Theory & Application Analysis and design of simple DC and AC circuits including Thevenin equivalents, time domain and sinusoidal response, power transfer, and complex impedance. Design of practical circuits and fundamentals of system integration
Digital System Design. Introduction to digital design focusing on representation and abstraction in digital systems.
Geology for Engineers Basic principles, including properties of rocks and soils, hydrology, surface processes, rock mechanics, environmental parameters, geological hazards, and engineering case histories.
Discrete Structures Logic, sets; mathematical induction; relations, functions; combinatorics and graph theory.
Signals and Systems Theory Introduction to the general theory of analog systems with an emphasis on linear and time-invariant systems. Topics include elementary operator theory, Fourier/Laplace analysis, linear network analysis, elementary analog filter design, and sampling & interpolation.
Embedded and Cyber-Physical Systems Introduction to design and analysis of embedded and cyber-physical systems. Concepts include sensing, processing, decision-making, actuation, and communication. Techniques include systems modelling using various abstractions, and systems implementation using sensors, actuators, circuits, and external modules, interfacing with embedded software on microcontrollers.
Geophysics Introduction to geophysical principles and methods (seismic, gravity, magnetic, electrical, electromagnetic and GPR) applied to both near-surface and solid earth studies. Emphasis placed on active learning by hands-on geophysical data collection focused on environmental and engineering applications.
Introduction to Electrical and Computer Engineering Design This introductory ECE design course covers basics of electronic design focusing particularly on fabrication, measurement, and professional communication. Students will design, fabricate, and test electronic circuits and learn standards for manufacturability and professional communication.
Probabilistic System & Data Analysis. Introduction to the probabilistic description of signals, systems, and data. Topics include random variables/vectors/processes, statistical data characterization, expectations, information measures, and transformations of random data. The course includes a discussion of the foundations of detection, classification, and estimation theory.
Data Structures & Algorithms. Introduction to data structures and algorithms using an object-oriented approach. Topics include software-engineering principles, object-oriented programming, recursion, basic data structures, algorithm analysis, and team programming
Physical/Environmental Geology Introduction to Earth's dynamic systems, plate tectonic processes that make Earth a unique planet, and human interaction with Earth. Geologic factors and limitations that affect use or management of the environment. Not open to students who have taken GEOL 250.
Software Engineering and Design. Fundamentals of software design and software engineering. Students will participate in large-scale, team-based software development project
Electronics I Introduction to semiconductor components and circuits. Device physics, operation, and modeling; design applications of operational amplifiers, diodes, and transistors; PN junctions; digital logic gates.
Computer Systems This course provides students the concepts, technologies, and skills needed for advanced study in computer engineering. It includes aspects of computer organization, computer architecture, operating systems, networking, and performance evaluation and the relationship between them.
Digital Signals and Communications Introduction to digital signal processing and digital communications with an emphasis on linear and time-invariant systems. Topics: discrete time, Fourier transform (DTFT), the Fourier series, the fast Fourier transform (FFT), the z-transform, digital filters, and modulation techniques for digital signals.
Operating Systems Design Introduction to operating system design including processor management, scheduling, memory management, resource allocation, file systems, and concurrency.
ECE Capstone Design I ECE Capstone Design I
ECE Capstone Design II ECE Capstone Design II
Mobile Computing Mobile computing ecosystem including apps, devices, wireless networks, and back-end systems. Includes at least one major project; the specific course content will vary based on projects, student interest, and current technology trends. This course typically includes a considerable amount of software development.
Digital VLSI Circuit Design Introduction to digital integrated circuit design, from wafer fabrication through structured design techniques. Teams conceptualize, design, simulate, layout, extract, and verify small VLSI systems using appropriate CAD tools.
Communication and Information Systems Digital and analog communication systems, modulation techniques, noise considerations, optimum receivers. Prerequisite: ECEG 270 or permission of the instructor
Digital Speech and Audio Processing. Theory and application of digital speech and audio processing. Topics include speech and audio (MP3) coding, artificial speech synthesis, automatic speech recognition, and audio effects.
Computer Communication Networking An introduction to computer networking using the seven-layer Open Systems Interconnection model. Hands-on exploration of the data link, network, transport, and application layers. Prerequisite: Junior status.
Introduction to Electrical and Computer Engineering Insight into electrical and computer engineering is gained through videos and the use of computer software to learn basic problem-solving skills.
Intermediate Programming and Engineering Problem Solving Introduction to elementary data structures, program design and computer-based solution of engineering problems. Topics include use of pointers, stacks, queues, linked lists, trees, graphs, software design methodology, programming in the Linux environment, and lab.
Programming Fundamentals Fundamental programming concepts, including consideration of abstract machine models with emphasis on the memory hierarchy, basic programming constructs, functions, parameter passing, pointers and arrays, file I/O, bit-level operations, programming in the Linux environment, and lab.
Calculus II  Transcendental functions, techniques of integration, numerical integration, improper integrals, sequences and series, Taylor series with applications, complex variables, differential equations. (I) Credit for both this course and MATH 1440 may not be applied toward a degree program.
Composition I Composition I
Composition II  Composition II
Calculus I Limits. Continuity. Derivative: definition, rules, geometric and rate-of-change interpretations, applications to graphing, linearization and optimization. Integral: definition, fundamental theorem of calculus, substitution, applications to areas, volumes, work, average.
Calculus-Based Physics I Calculus-Based Physics I
Calculus-Based Physics II Calculus-Based Physics II
Circuit Analysis I  Basic elements and sources. Energy and power. Ohm's law and Kirchhoff's laws. Resistive networks, node and loop analysis. Network theorems. First-order and second-order circuits. Sinusoidal sources and complex representations: impedance, phasors, complex power. Three-phase circuits.
Instrumentation  Introduction to laboratory practices and the use of test equipment. Measurements on basic electrical components, dc and ac circuits using ohmmeters, voltmeters, ammeters and oscilloscopes.
Computer Logic Design Binary number systems. Boolean algebra. Combinational, sequential and register transfer logic. VHDL. Arithmetic/logic unit. Memories, computer organization. Input-output. Microprocessors.
Circuit Analysis II  Analysis of balanced three-phase circuits. Laplace transform with applications to circuit analysis. Passive and active filters. Fourier series and Fourier transform analysis.
Advanced Eng. Mathematics  First and second order Ordinary Differential Equations are solved with various methods including Laplace Transforms, matrices, eigenvalues and other techniques involving linear algebra. Applications will be emphasized using MATLAB.
Macroeconomic Principles  Macroeconomics is the study of national and global economies. Topics include output, unemployment and inflation; and how they are affected by financial systems, fiscal and monetary policies.
Microeconomic Principles This course will provide a broad overview of microeconomics. Microeconomics is the study of issues specific to households, firms, or industries with an emphasis on the role of markets. Topics discussed will include household and firm behavior, demand and supply, government intervention, market structures, and the efficient allocation of resources.
Software Design  Design of software systems using modern modeling techniques. Relationship between software design and process, with emphasis on UML and its interface application code. Exposure to design patterns, software frameworks, and software architectural paradigms.
Professional and Technical Communication  Professional and Technical Communication will introduce students to the different types of documents and correspondence that they will create in their professional careers. This course emphasizes the importance of audience, document design, and the use of technology in designing, developing, and delivering documents.
Calculus III  Vector operations, vector representation of planes and curves, functions of several variables, partial derivatives, gradient, tangent planes, optimization, multiple integrals in Cartesian cylindrical and spherical coordinates, vector fields, line integrals and Green’s theorem.
Signals and Systems  Fourier series and transforms, discrete time Fourier series/transform, Z-transform, sampling theorem, block diagrams, modulation/demodulation and filters, Computer implementations.
Data Structures and Algorithms An introduction to data structures and algorithms. Topics include asymptotic notation recurrence relations, sorting, hash tables, basic priority queues, balanced search trees and basic graph representation and search.
Electronics I  Introduction to diodes, bipolar and field-effect transistors. Analysis and design of digital circuits, gates, flip-flops and memory circuits. Circuits employing operational amplifiers. Analog to digital and digital to analog converters.
Microprocessors  Computers and Microprocessors: architecture, assembly language programming, input/output and applications.
Probabilistic Methods in Engineering Introduction to probability, random variables, random processes, probability distribution/density functions, expectation, correlation, power spectrum, WSS processes, confidence internals, transmission through LTI, applications of probability.
Introduction to Mathematical Thinking and Discrete Structures Limits. Continuity. Derivative: definition, rules, geometric and rate-of-change interpretations, applications to graphing, linearization and optimization. Integral: definition, fundamental theorem of calculus, substitution, applications to areas, volumes, work, average.
Senior Design I  Design methodology and development of professional project oriented skills including communication, team management, economics and engineering ethics.
Senior Design II  Prototypes are built and tested to sponsor specifications, and reports made to sponsor in addition to a Final Report and Poster Session presentation.
Operating Systems  Fundamental principles of modern operating systems design, with emphasis on concurrency and resource management. Topics include processes, interprocess communication, semaphores, monitors, message passing, input/output device, deadlocks memory management, files system design.
Comp. Networks Theoretical and practical study of computer networks, including network structures and architectures. Principles of digital communications systems. Network topologies, protocols and services. TCP/IP protocol suite. Point-to-point networks; broadcast networks; local area networks; routing, error and flow control techniques.
Introduction to Computer Science and Engineering Technology This course is the first course in computer hardware and software for CSET majors. Introduction to Single and multi-user operating systems, command-line processing and some internet tools are covered. Most of the course focuses on introduction to programming and software development.
Electrical Instrumentation Laboratory Provides an opportunity for freshman Computer Science and Engineering Technology students to gain laboratory experience with basic electrical instrumentation and basic computer components.
Introduction To Logic An introduction to the symbolic analysis of argument components and structures. Topics include definition, syllogistic reasoning, semantics, sentential logic and probability.
Engineering Technology Orientation Overview of careers in engineering technology, information about each program in Engineering Technology, and skills required for success in technological fields, such as computer skills.
College Composition I Explanatory and persuasive writing in both personal and public genres; instruction and practice in generating, focusing, developing, researching and presenting ideas in ways consistent with one's subject, purposes and intended audience.
Object Oriented Programming and Data Structures This course teaches object oriented program design, analysis, and verification with an introduction to data structures including but not limited to list, queue, stack and tree. The course emphasizes Programming Methodology and its impact on programs and the use of Data Abstractions and the implementation of Data Abstractions using classes.
Technical Physics I Topics include measurement, statics, Newton's laws, friction, work, energy, power, impulse and momentum, and simple machines. Includes integrated laboratory.
Digital Logic Fundamentals This course covers the fundamentals of digital logic circuits. Topics include number systems, logic gates, Boolean algebra, logic simplification, Karnaugh maps, adders, multipliers, multiplexers and decoders. Elementary digital circuits including flip-flops, counters, shift registers, memory devices, programmable logic devices and integrated circuits are also covered.
Science And Technical Report Writing Instruction and practice in multiple forms of technical and scientific communication for varied scientific and technical audiences. Emphasis on writing informational and analytical reports and documents in medical, scientific or technical fields. Additional focus on writing for multiple audiences and in different mediums, including online mediums.
Technical Physics II Topics include thermodynamics, electricity, and magnetism, electromagnetic radiation, optics, atomic and nuclear physics. Includes integrated laboratory.
Calculus For Engineering Technology I Differential calculus of algebraic and trigonometric functions, including limits, curve sketching, motion, maxima/minima, related rates, integral calculus of algebraic functions.
PC and Industrial Networks Current concepts and technologies used with personal computers and PLCs in both industrial (factory-floor) and commercial data networks. Topics include PC networking hardware and software, PLC hardware and programming and PLC networking alternatives.
Assembly Language and Computer Architecture This course focuses on the analysis, design, and programming of computer microprocessor architectures. Topics include performance metrics, the design of a machine's instruction set architecture (ISA). This course examines the bride between low-level hardware and executable software, and includes programming in assembly language (representing software programs).
Fundamentals Of Electricity An introduction to basic analytical techniques for resistive and reactive DC and AC electric circuits, and an introduction to electronic devices, including diodes and transistors. No credit towards EET degree.
Calculus For Engineering Technology II Transcendental functions, methods of integration, applications of the integral, polar coordinates, vectors and vector operation, lines and planes, parametric equations.
Discrete Structures An introduction to the discrete structures used in computer science to develop software including proof techniques, Boolean logic, graphs, trees, recurrence relations, functions, combinatorics, and number theory.
Mechatronics I A study of programmable controllers emphasizing program development, logic development and troubleshooting. Emphasis on relays, timers, counters, integer math and scan-dependent programming. Factory floor control concepts are stressed.
Professional Development An introduction to the performance expectations of the engineering profession. Topics covered include resume writing, public speaking, interviewing skills, ethics, social responsibilities and the value of continuing education and professional registration.
Applied Statistics And Design Of Experiments Introduction to probability, statistical inference and design of experiments. Topics include confidence intervals, tests of hypothesis, regression, analysis of variance, factorial experimental designs and propagation of experimental errors.
Embedded Systems Design This course covers different aspects of real-time embedded systems implementation with low-level access to hardware resources of microcontrollers. Topics include but not limited to low-level and high-level microcontroller programming covering assembly and C, I/O access, interrupt-driven programming, timers, serial interfacing, analog-to-digital (ADC), and digital-to-analog (DAC). Uses system design approach, such as flow charts, finite state machines (FSM) while implementing embedded systems is emphasized.
Numerical Methods And Linear Algebra Topics include: matrices, characteristic roots, solution of linear and nonlinear equations, curve fitting, integration, differentiation and numerical solution of ordinary differential equations. MATLAB is introduced and used to analyze problems. Additional topics are chosen from Google's page rank algorithm, Digital Image Compression, and others.
Introduction to Algorithms The course covers topics in basic algorithm design and analysis of traditional algorithms such as sorting algorithms, selection algorithms and graph algorithms, with the focus on building correct and efficient algorithms based on the known algorithms. Besides, advanced data structures such as hash tables, binary search trees are covered in the course.
Database-Driven Web Sites Creation of dynamic Web applications that interact with a database using client-side scripts, server-side scripts and compiled server programs. Includes database fundamentals, scripting language fundamentals and server considerations.
Software Engineering and Human Interfacing An introduction to software engineering processes for technology students. Includes: user requirements, software specification, design approaches, human-computer interfacing, software tools, validation, modification, maintenance, documentation, lifecycle models, and intellectual property considerations.
Operating Systems This course teaches the fundamentals of operating systems concepts. It discusses the following topics: process scheduling, memory management, kernel and user mode, system calls, context switches, inter-process communication, I/O and file systems.
Computer Networks And Data Communication Computer network architectures and their application to industry needs. Major topics include vocabulary, hardware, design concepts, current issues, trends, hardware, multi-user operating systems, network protocols, local and wide area networks, intranet and internet communications, analog and digital data transmissions.
Applied Programming Languages How to select the most appropriate language for a specific engineering technology application. Topics include comparison of programming languages by evolution, formal specifications, structures, features, application domains, programming paradigms, implementation of syntax, semantics and program run-time behavior.
Senior Technology Capstone Senior Technology Capstone
﻿Foundations of Electric Circuits Covers basic electric circuit concepts and laws; circuit theorems; mesh and node methods; analysis of first-order electric circuits; forced and natural response; sinusoidal steady state analysis; complex frequency.
General Chemistry II Covers chemical equilibrium, including acid-base equilibria in solution; electrochemistry; organic chemistry; polymers; and petroleum.
Introductory Programming for Engineers An introduction to the fundamentals of programming and algorithmic problem solving with applications in engineering. Emphases include (a) producing clear, robust, and efficient code, and (b) conceptualizing and designing computational algorithms to solve engineering problems. Upon completion, students will possess the programming skills necessary to perform computational analysis in any engineering discipline.
Introduction to Civic Engagement  This course is designed to help students develop skills as active participants in a pluralistic, democratic society through direct service, education and reflection opportunities.
Programming for Engineers  An introduction to the fundamentals of programming and algorithmic problem solving with applications in engineering. Emphases include (a) producing clear, robust, and efficient code, and (b) conceptualizing and designing computational algorithms to solve engineering problems. Upon completion, students will possess the programming skills necessary to perform computational analysis in any engineering discipline.    This course is designed for students with some high-school Computer Science or programming experience in any language.
ECE Laboratory This course has an emphasis on measurement systems, and develops both theory and application. The software and digital and analog hardware used are relevant to both electrical and computer engineers. Multi-week design projects and design teams are used to prepare students for Senior Design work.
Senior Design Project II  Requires written and oral progress reports. This is a writing intensive course.
Programming for Engineers II This course will cover advanced usage and understanding of programming concepts using Python within the Linux environment.  By the end of the course, students will not only possess strong programming capabilities but will also have a firm grasp on scientific computing fundamentals. Students should already have a working knowledge of bash, python, pylint, tmux/GNU screen, X11 tunnelling, and at least one terminal based editor (vim, nano, joe, etc)
The Drexel Experience 0.0 This course introduces first year students to university life, his/her major, our community, and Co-op.
General Chemistry I  Covers fundamental principles of chemistry, stoichiometry, atomic and molecular structure, chemical bonding, states of matter, thermochemistry, and periodicity.
Techniques of Speaking A workshop course in improving public speaking skills. Provides experience in speeches of explanation, persuasion, and argument.
Senior Design Project III  Requires written and oral final reports, including oral presentations by each design team at a formal Design Conference open to the public and conducted in the style of a professional conference.
Linear Engineering Systems  Provides an overview of systems and modeling; specifically using linear algebra as the model.  Specific emphasis will be placed on developing models of engineering systems and the use of computational tools for solutions of the problems.  The focus of the lab will be the use of MATLAB for solution of contemporary engineering problems.
Introduction to Engineering Design Methods  Introduces the design process, including information retrieval, problem definition, proposal writing, patents, and design notebooks. Includes presentations on problem areas by experts from industry, government, and education.
Fundamentals of Physics II Second of a four course sequence teaching fundamental physics to engineering and science majors.  Topics include: electrostatics, capacitors, charges in motion, insulators, semiconductors, conductors, superconductors, voltage and current measurements, magnetism, electromagnetic induction, magnetic materials, quantum dots, magnetic resonance phenomenon.
Multivariate Calculus Vectors, curves, partial derivatives, gradient, constrained optimization, coordinate system, multiple integrals, and applications.
Calculus II Definite integrals, Fundamental Theorem of Calculus, integration techniques, applications of integration, numerical integration and differential equations.
Foundations of Electric Circuits II Covers analysis of operational amplifiers, second-order electric circuits; ac power; and an introduction to the Laplace transform.
English Composition III  Advances multilingual (non-native speakers of English) students' development in the reading, writing, and research processes. Some courses may focus on the student's academic and discipline-specific experiences, while others may be based on literary or social themes. Enhances multilingual students’ ability to read texts critically and to reflect on their own and others’ writing, scholarly and literary works, and social events. Promotes a positive attitude toward writing.
Calculus I Functions, limits and continuity, derivatives, trancendental functions, and applications.
Dynamic Engineering Systems Provides an overview of dynamic systems and modeling; specifically using differential equations as a model.  Specific emphasis will be placed on developing models of dynamic systems and the use of computational tools for solutions of the problems.  The focus of the lab will be the use of MATLAB for solution of contemporary engineering problems.
Fundamentals of Physics I  First of a four course sequence teaching fundamental physics to engineering and science majors.  Topics include: description of motion, inertial and non-inertial frames, special relativity, Newton's Laws, translational and rotational equilibrium, one- and two-dimensional motion, fundamental forces, inverse square laws, Gauss' Law, Bohr's quantization, rotational dynamics, potential energy, black holes, determinism and chaos.
Composition and Rhetoric I: Inquiry and Exploratory Research Develops students’ abilities to use writing as a tool for inquiry. Introduces genre theory, writing as a process, revision, and strategies of primary and secondary research. Reviews grammar, style, and documentation conventions.
Essential Biology Introduces essential biological concepts to engineering students. Content covers five core topics: cells, genetics, evolution, ecology and physiology with application to societal concerns about biotechnology, health, conservation biodiversity and bioethics. Evolution will be woven throughout the course as a unifying theme in understanding all aspects of biology.
Data Structures  Covers stacks, queues, linked allocation, binary trees, internal searching and sorting, hashing, and applications.
Advanced Programming for Engineers This course will cover advanced usage and understanding of programming concepts using the C programming language within a Linux development environment. C will serve as a foundation for future embedded firmware and system level software authorship as well as a means to better understand the underlying program execution model and memory organization used by modern computing systems.
Discrete Mathematics  Elementary set theory, combinatorics, elementary number theory, graphs, and special topics chosen from formal language theory, graph algorithms, coding theory, and other applications.
Digital Logic Design Number systems and representation, two's complement arithmetic, digital logic devices, switching algebra, truth tables, minimization of Boolean functions, combinational logic design and analysis, sequential circuit analysis and design.
Technical Communication Develops skills in communicating technical information. Focuses on writing letters, resumes, proposals, reports, and instructions. Offers extensive writing practice along with exercises and presentations. This is a writing intensive course.
Digital Systems Projects  Studies the theory of digital system design and the topdown design methodology using hardware description language and software tools for simulation, synthesis and Field Programmable Gate Array (FPGA) implementation.
First-Year Engineering Design In this course, students will focus on applying the engineering design process to problems of particular interest in the various engineering fields.  A key component of the course is a term-long project where students will work in teams to solve an engineering problem.
English Composition II  Advances multilingual (non-native speakers of English) students’ abilities to use of writing as a tool for research and reflection and their understanding of writing as a process. Develops the critical evaluation and integration of information into students’ own writing as they research social, political, and educational open-ended issues. Continues review of grammar, organization, style, and documentation conventions. Enhances effective strategies for secondary research and collaboration skills. Promotes positive attitude towards writing.
Computer Organization & Architecture This course will cover the principles of designing microprocessors using solid engineering fundamentals and quantitative cost/performance trade-offs.  Topics will cover instruction set architectures, arithmetic for computers, assessing and understanding processor performance, processor datapath and control, pipelining, cache design, and virtual-memory design.
Teacher Education: Mathematics Math 112 emphasizes team-based approaches to working and learning, regular problem solving, and an appreciation for how mathematics is connected with your discipline.
Composition and Rhetoric III: Themes and Genres  Advances students' development in the writing and research processes and their understanding of how genres of writing shape meaning. Some courses may focus on the student's academic and discipline-specific experiences; Others may be based on literary or social themes. Promotes a critical reading of texts, reflective analysis, and a positive attitude toward writing.
Introduction to Engineering Design & Data Analysis This course introduces students to engineering design and concepts in data collection, analysis,  modeling, and presentation that are central to all fields of engineering.
Cells and Genetics  An introduction to the concepts of cell and function, cell and reproduction, cell communication, genetic inheritance, and population genetics. The relevance of genetics to society and ethical issues are included.
Design with Microcontrollers Offers hands-on experience in the design of controllers that incorporate microcontrollers as an embedded component in a larger system. The microcomputer topics to be studied will include architecture, software, programming and interfaces.
Senior Design Project I  Introduces the design process, including information retrieval, problem definition, proposal writing, patents, and design notebooks. Includes presentations on problem areas by experts from industry, government, and education. This is a writing intensive course.
Probability and Data Analytics for Engineers This course will cover topics related to probability and statistics. Probability topics include sample space and probability, discrete and continuous random variables (single and multiple), and their properties and applications to modeling, and the central limit theorem. Topics in statistics will include parametric and non-parametric hypothesis testing, data analytics and related topics, computational approaches and bootstrapping.
Composition and Rhetoric II: Advanced Research and Evidence-Based Writing Advances students’ development in the writing processes. Promotes a critical evaluation and integration of information into their own writing as they research complex and open-ended issues. Identifies the relationships between rhetorical situations, the status of claims, and the need for evidence and warrants. Continues review of grammar, style, and documentation conventions. Encourages collaboration and effective search strategies of the Internet and library resources. Promotes students’ reflective analysis and a positive attitude toward writing.
Advanced Programming Tools and Techniques  Introduction to the basic principles of programming practice: testing, debugging, portability, performance, design alternatives, and style.  Application in a variety of programming languages, programming environments, and operating systems. Introduction to tools used in the software development process for improving program functionality, performance, and robustness.
Signals and Systems I This course covers time and frequency domain analysis of both continuous and discrete time signals and systems. Topics covered include a discussion of fundamental signals and basic system properties, convolution, the Fourier series, the Fourier transform, and introductory filtering. Students will learn to design and analyze the input output relationships of linear time-invariant signals, and will discuss applications in the field of electrical engineering.
Introduction to Computer Networks History of the Internet; introduction to packet switching, circuit switching and virtual circuit switching; statistical multiplexing; protocol layering; metrics of network performance including bandwidth, delay and loss; medium access protocols and Ethernet; routing algorithms; end-to-end issues; flow and congestion control; an overview of application layer protocols.
Engineering Ethics  Provides critical reflection on the nature of engineering and technology and on the ethical obligations and responsibilities unique to the engineering profession. Topics include the social responsibilities of engineering, the nature of professionalism, professional autonomy, whistleblowing, conflicts of interest, organizational (dis)obedience, the ethics of risk assessment, and the place and purpose of engineering codes of ethics.
Fundamentals of Physics III  Third of a four course sequence teaching fundamental physics to engineering and science majors. Topics include: oscillations, EM waves, interference, diffraction, wave-particle duality, energy-matter equivalence, uncertainty relations, Schrodinger's equation, Hydrogen atom, laser, and nuclear physics.
English Composition I  Develops multilingual (non-native speakers of English) students' abilities to use writing as a tool for research and reflection. Introduces the concept of genre, writing as a process, reflection on students’ own and others’ work, revision, and approaches to primary and secondary research. Reviews grammar, organization, style, and documentation conventions. Promotes positive attitudes toward writing.
INTRODUCTION TO AERONAUTICS Introduces students to the applied science of air-breathing atmospheric flight. The course describes airplanes and how they fly from a design and application perspective. Included are topics in fluid dynamics, airfoil and wing theory, aircraft performance, stability, structures, and aircraft design.
APPLICATIONS OF CYBER ENGINEERING This course focuses on the engineering aspects of cyber operations, cyber defense, and cyber attacks, as a follow-on to SY110. There are three main areas of study, including the host section (a single computer terminal), the network section, and the wireless communication section. Each area of study culminates in a detailed description of a common type of cyber attack and the defenses against it. Lecture material is reinforced and supplemented with labs/security exercise that demonstrate the theoretical concepts in an isolated, virtual environment.
FOUNDATIONS OF CHEMISTRY I The first in a two-semester sequence presenting the fundamental laws and theories of chemistry. Major topics include chemical stoichiometry, periodic trends, atomic structure, chemical equilibrium, thermodynamics, nuclear chemistry, electrochemistry and kinetics. The lecture material is complemented with experiments designed to develop the student's laboratory skills. Naval applications of chemistry are introduced throughout the courses to provide an awareness of chemistry in normal Navy operations.
FOUNDATIONS OF CHEM II This is the second in the two-course foundations of chemistry sequence. See SC111 for a general course description. In this version of SC112, naval applications of chemistry including body armor, corrosion, nuclear power, boiler water quality, aircraft deicing, and scuba diving will be emphasized.
CALCULUS I The first of a traditional two course sequence covering differential and integral calculus of one real variable and infinite series.
CALCULUS II Continuation of Calculus I.
CALCULUS III WITH VECTOR FIELDS Differential and integral calculus of several real variables; vector analysis including integral theorems.
GENERAL PHYSICS I The first of a two course sequence emphasizing the fundamental principles of classical physics and introduce a variety of applications. Topics include mechanics, electricity, magnetism, wave motion, fluids, sound and light. Lectures, recitations, hands-on laboratories, and large-scale demonstration lectures are employed.
GENERAL PHYSICS II GENERAL PHYSICS II
RHETORIC AND INTRO TO LITERATURE I The first of a two course sequence stressing the writing of rhetorically effective and grammatically correct expository prose. During the first semester students read essays, short stories and plays, and they write brief essays.
RHETORIC AND INTRO TO LIT II RHETORIC AND INTRO TO LIT II
AMERICAN NAVAL HISTORY This course examines the antecedents, origins and development of the United States Navy and Marine Corps within the framework of America's growth as a continental and, eventually, global power, with particular emphasis on the development of naval and maritime strategy.
THE WEST IN THE PRE-MODERN WORLD THE WEST IN THE PRE-MODERN WORLD
ASIA IN THE PREMODERN WORLD ASIA IN THE PREMODERN WORLD
U. S. GOVERNMENT AND CONSTITUTIONAL DEVELOPMENT Basic concepts of American democracy, the Constitution, political process, structure and functions of national government and factors influencing its operation; emphasis on legal and ethical demands placed on government officials, both civilian and military, as defined by the Constitution and statute.
INTRODUCTION TO NAVIGATION A comprehensive introduction to basic navigation concepts, voyage planning, and contact tracking on maneuvering boards. The course objective is to develop skills in the practical uses of the navigation chart. Midshipmen are introduced to the navigation chart format and associated plotting tools and techniques and learn the concepts of chart coordinates, while measuring and calculating distances, times directions and speeds.
BASIC NAVIGATION A comprehensive introduction to basic navigation concepts, voyage planning, and contact tracking on maneuvering boards. The course objective is to develop skills in the practical uses of the navigation chart. Midshipmen are introduced to the nautical chart format and associated plotting tools and techniques, learning the concepts of chart coordinates by measuring and calculating distances, times, directions, and speeds.
ADVANCED NAVIGATION ADVANCED NAVIGATION
Electrical Fundamentals and Applications Provides an introduction to AC and DC circuit theory appropriate to model shipboard systems. Circuits of resistors, capacitors, inductors and sources are analyzed to predict steady state and first-order transient voltage, current, and power. Impedance matching, filters, transformers, motors/generators, and three-phase power distribution systems are introduced in the context of shipboard application. Laboratory exercises use tools and equipment found in the fleet and allow for a comparison of theoretical and actual circuit performance
APPLICATIONS OF CYBER ENGINEERING The course begins with a brief review of the fundamentals of cyber security, including network architecture, digital signal representation, and digital data transmission. This is followed by terminal-related topics such as assembly level programming, high speed memory, buffer overflow attack, Windows & Linux operating systems, vulnerabilities, and authentication. The core network activities of the OSI model are presented with emphasis on security in a cyber-warfare based environment. Network vulnerability, and hardware and software techniques to protect data are presented. The course ends with wireless topics with emphasis on wireless network security, digital modulation, basic antenna theory, spread spectrum and frequency hopping.
Applications of Cyber Security- Systems Majors This course focuses on concepts of cyber security applied to electronic communication. Students will first concentrate on computer engineering systems and program design to understand cyber vulnerabilities. They will then focus on wired networking at the physical layer whereby the particular Controller Area Network (CAN) specifications will be used to investigate the details and perform attacks on the nodes. Finally, students will be introduced to wireless communication with a focus on wireless network security, including Fourier analysis, filters, gain and noise. In the labs, they will investigate modulation, antennas and propagation. The course ends with eavesdropping, jamming, error correction and encryption in ZigBee and WIFI networks.
Computer Networks with Security Applications This course provides a foundation in the fundamentals of data and computer communications. Emphasis is placed on protocol and network design within the framework of the TCP/IP network architecture. Critical technical areas in data communications, wide-area networking, and local area networking are explored.  Cyber security considerations, vulnerabilities, and solutions are examined at all levels of the network stack.
Operating Systems This is an introductory course covering fundamental concepts and principles of computer operating systems with emphasis on process management including threads, memory management, file system structures, I/O management, system protection, security and distributed computing. Students will engage in a number of programming projects.
Wireless Networks An introductory course in wireless networking and wireless network security. Major topics will include the wireless channel; the IEEE 802.11 (WiFi), Bluetooth and WiMax standards; wireless network security; 4G cellular networks; and advanced wireless networks such as wireless sensor networks.
Compilers This course provides students with an introduction to compilers and compiler-based tools.  Course topics will include building usable data structures from the parsed code, analyzing code for errors, optimizing code for performance, and generating machine specific code.  Labs will focus on learning and using industrial strength tools such as LLVM to analyze and instrument programs
Directed Research Course The purpose of EX49X is to engage midshipmen in research under the guidance of a faculty mentor, providing them an opportunity to study independently and make original contributions to a field of special interest.  A midshipman taking EX49X will typically investigate an unexplored area or examine previously reported research results within a new context or using a new approach. Research by midshipmen contributes significantly to the Naval Academy's goal of promoting habits of lifelong learning among its graduates.
Electrical Fundamentals and Applications Provides an introduction to AC and DC circuit theory appropriate to model shipboard systems. Circuits of resistors, capacitors, inductors and sources are analyzed to predict steady state and first-order transient voltage, current, and power. Impedance matching, filters, transformers, motors/generators, and three-phase power distribution systems are introduced in the context of shipboard application. Laboratory exercises use tools and equipment found in the fleet and allow for a comparison of theoretical and actual circuit performance.
University Success in College Experience and offers a global, comprehensive and personalized approach to student success through textbook, stimulating lectures, action research, leadership development, library initiatives, and service learning.
Calculus I with Laboratory. Functions, limits, continuity, differentiation, limiting forms, applications, properties of continuous functions, analytic geometry and integration. The Laboratory component is designed to reinforce the lecture component with activities requiring the use of technology in the form of computers with selective software and graphing utilities.
Programming Fundamentals.  This is the first course in the computer science programming sequence and is required of all computer science majors. Course objectives include: introduction to problem solving methods and algorithm development; definition of language syntax and semantics of a high level programming language; and developing the ability to design, code, debug, document, and successfully execute programs. Topics include objects and classes, data types, applets and graphics, decision statements, iteration, methods, testing and debugging, arrays, sorting and searching, inheritance, interfaces and polymorphism
History of Civilization I A global survey and study of the histories of major geographical regions and populations between humans prehistory beginnings and their civilizational, societal, and cultural developments by the 15th century. Additionally, the course provides and promotes student learning outcomes that include content literacy about the human historical experience and the honing of specific skill setsi.e., reading comprehension, critical, and analytical thinking as well as effective written and oral communication.
History of Civilization II A global survey and study of the histories of population groups, their regional geographics and their civilizational and cultural developments from the 15th and the 21st century. The course emphasizes both content literacy and enrichment as well as the honing of skill sets, especially students reading comprehension, analytical and critical thinking, problem solving and effective oral and written communication
Composition I This course is the first part of the two-semester freshman composition program and is designed to give intensive study and practice in writing themes. Emphasis is placed on grammar and mechanics, the sentence, the paragraph, and the essay
Composition II with emphasis on critical thinking and writing essays; writing the research paper, business letters, and resumes.
Digital Logic This is an introductory course to digital design. Topics include number systems, binary logic, Boolean algebra, truth tables, minimization of Boolean functions. K-maps, and Flip-Flops, Designs include combinational circuits, counters, and sequential circuits.
General Physics I Introduction to mechanics, wave motion, sound, and heat
Calculus III with Laboratory Infinite sequences and series, differential calculus of functions of several variables, multiple integrals. The laboratory component is designed to reinforce the lecture component with activities requiring the use of technology in the form of computers with selective software and graphing utilities.
General Physics II A calculus-based continuation of PHY 211. Introduction to electricity, magnetism, optics, and modern physics.
Object-Oriented Programming.  Then the emphasis shiftsto object-oriented analysis and design. This course covers I/O streams, exception handling, threads, reflection, UML, object-oriented analysis and design, object-oriented graphical user interfaces, design patterns, and refactoring.
Circuit Theory This course introduces concepts and basic laws in the analysis of AC and DC linear electric circuits. Topics include mesh and nodal analysis. Thevenins and Nortons theorems, superposition principle, transients in RLC circuits, phasor notation, and frequency response.
Engineering Analysis This course introduces the principles and applications of engineering mathematics, including linear algebra, Fourier analysis, and complex variable theory
Computer Organization and Design.  This course introduces the basic computer organization, which includes the Central Processing Unit (CPU) architecture, memory organization, and input/output subsystem. It covers instruction sets, addressing modes, hardwired control, and microprogrammed control. Projects emphasized simple CPU designs.
Discrete Structures for Computer Science. Introduces the foundations of discrete mathematics as they apply to computer science, focusing on providing a solid theoretical foundation for further work. Topics include basic logic, proof techniques, sets, bags, ordered structures, graphs, trees, facts and properties of functions, and construction techniques
Electronics Lab This laboratory course includes experiments that validate the concepts covered in CPE 330Electronics. Experiments include diode circuits, BJT characteristics, FET characteristics, and MOSFET circuits.
Ordinary Differential Equations.  Introduction to differential equations, first-order differential equations, higherorder differential equations, series solutions of linear equations, the Laplace transform and systems of linear first-order differential equations.
Engineering Mechanics I. Calculus-based statics of particles and rigid bodies, equilibrium; distributed forces; centroids; structures, trusses, frame, machines; forces in beams and cables; friction; moments of inertia, real life examples for engineering applications and systems approach
Embedded Microprocessor Systems. This course covers the architecture, operation, and applications of microprocessors. Topics include microprocessor programming, address decoding, interface to memory, interfacing to parallel and serial input/output, interrupts, and direct memory access. Course project is to design, build, and program a simple microprocessor-based system.
Synthesis with Hardware Descriptive Language This course provides an overview of digital logic design. It covers modeling and simulation of basic digital systems using a hardware descriptive language. Topics include behavioral, data flow, and structural modeling
General Chemistry I. A study of the types and properties of matter, measurement, qualitative and quantitative descriptions of chemical reactions, atomic structure, bonding and thermochemistry.
Probability and Statistics for Engineers Introduction to concepts of probability and statistics required to solve problems in various disciplines; mathematical basis for probability and statistics includes axioms of probability, continuous sampling distributions, and discrete probability, hypothesis testing, confidence intervals, probability estimations for risk assessment, data processing and statistical inference, statistical techniques of data analysis, simple and multiple regression model development; stochastic processes, emphasis is on the application of probability, statistics and reliability to rational decision making, data analysis and model estimation in engineering context.
Engineering Economy Introduction to economic principles, application of economic principles to multidisciplinary engineering problems; calculation of capitalized costs, present worth, prospective rates of return, and annual costs, economy of equipment replacement, market forces and firm analysis; case studies and group project.
Data Structures and Algorithms.  The concepts of data abstraction and data structures are developed. For the basic data structures of linked lists, stacks, queues, hash tables, graphs, and trees, associated algorithms are described and analyzed. The course also treats  JACKSON STATE UNIVERSITY | 260 recursion, sorting, fundamentals of software engineering,
Signals and Systems. This course introduces theoretical analysis of signals and systems. Topics include timedomain response and convolution, Fourier transform, frequency-domain response using Fourier series, and Laplace transform, discrete Fourier series and transform, sampling, z-transform, and relationships between time and frequency descriptions
Computer Architecture This course covers computer architecture design issues. Topics include organization of CPU, processor systems design, computer arithmetic, memory system organization and architecture, interfacing and communication, performance, and multiprocessing.
Operating Systems.  This course introduces the major concepts of process communication and synchronization, protection, performance measurement, and causes and evaluations of the problems associated with mutual exclusions and process synchronization among concurrent processes. This course introduces and analyzes various operating systems in terms of processor management, memory management, device management, information management, and distributed systems management
Senior Design Project I Senior Design Project I
Philosophy Option Philosophy Option
Fine Arts Option Fine Arts Option
Senior Design Project II  Senior Design Project II
Digital VLSI Design. This course introduces principles of the design and layout of Very Large Scale Integrated (VLSI) circuits with concentrations on the Complementary Metal-Oxide-Semiconductor (CMOS) technology. Topics include MOS transistor theory and CMOS technology, characterization and performance estimation of CMOS gates. Course projects involve layout designs and simulations using computer-aided design tools.
Digital System Testing and Design for Testability This course introduces fundamental techniques for detecting defects in VLSI circuits. Topics include fault models, fault detection, and schemes for designing systems to be easily testable and with self-test capability.
Communication Systems.  This course introduces students to analog and digital modulation techniques. Topics include random processes, power special density, effects of nosie on, and bandwidth requirements of, different modulation schemes
Computer Networks This course introduces students to network protocols and network architectures. Topics include characteristics and principles related to Wide Area Networ A(WAN), and network devices and their relationship with network protocols and architectures. It also provides methods for characterizing and analyzing communications systems performance.
Digital Signal Processing. This course introduces the theory and algorithms for processing deterministic and stochastic signals. Topics include discrete signals, linear filtering; Fast Fourier Transform, nonlinear filtering, spectrum estimation, linear prediction, adaptive filtering, and array signal processing.
Principles of Chemistry This course is a study of the fundamentals of chemistry. A survey of atomic structure, periodicity, bonding, nomenclature, stoichiometry, gas laws, and solution chemistry is provided for those students with no background in these areas.
Principles of Chemistry Laboratory This course is an introduction to the academic chemistry laboratory and is intended for students with no prior experience. The course will cover health and safety issues, preparation and use of common glassware/lab equipment, proper recording of qualitative and quantitative observations, and common lab techniques.
General Physics I This first term of a one-year, introductory, calculus-based physics course is suitable for science and engineering students.  The topics include motion, forces, rotations, gravity, and elasticity.
General Physics I Laboratory This first semester of a one-year sequence in laboratory work emphasizes experimental techniques, procedures and formal report writing. Laboratory experiments reinforce or extend the work of the lecture portion of the course. Emphasis is on mechanics.
General Physics II Topics treated include electricity and magnetism, circuits, electromagnetic oscillations and waves, physical optics, and geometrical optics.
General Physics II Laboratory General Physics II Laboratory
Calculus I The topics covered include derivatives of polynomials, trigonometric, exponential and logarithmic functions, applications of the derivative, the definite integral, and the fundamental theorem of calculus.
Calculus II The topics covered include techniques of integration, applications of the integral and infinite series, including Taylors series.
Linear Algebra This course is an introduction to the theory and application of vector spaces, linear transformations, matrix representations, eigenvalues, and eigenvectors. A software package will be used in this course.
Discrete Mathematics for Computer Science This course provides a foundation in mathematical proofs and abstract mathematics in the context of discrete mathematics. Mathematical topics in the course are chosen for their relevance to computer science, and include combinatorics, set theory, graph theory, and recurrence relations.
Introduction to Engineering This course is an introductory engineering course exposing students to a cross section of topics in computer engineering discipline to assist them with their education career choices. Students are taught to work in teams, introduced to the design process, utilize math and computer programs to analyze raw data and properly display their results in a presentation to their peers.
Computer Science 1 Students learn a modern programming language and the basic skills needed to analyze problems and construct programs for their solutions. The emphasis of the course is on the techniques of algorithm development, correctness, and programming style.
DC Circuit Fundamentals This course covers DC circuit analysis, including mesh analysis, nodal analysis, Thevenin conversion, Norton conversion, power, magnetism and magnetic circuits, capacitance, and inductance. An introduction to electrical laboratory procedures and the measurement of basic circuit parameters is also included.
AC Circuit Fundamentals Studies include single time constant circuits, phasors, and the j operator, RLC circuits with sinusoidal, steady-state sources, impedance and admittance, AC formulation of classic network theorems, complex network equations, complex power, frequency response, transformers, and two-port network models.
Computer Organization 1 In this course, students will study the internal organization, characteristics, performance and interactions of a computer systems functional components. Binary codes and binary arithmetic, digital logic, central processor organization, instruction set architecture, input/output fundamentals, and memory architecture are covered.
Computer Science 2 The topics covered include linked-lists, trees, stacks, queues, classes, recursion, and a variety of data representation methods. Further topics in software engineering and programming style as well as algorithms for sorting and searching are included.
Solid State Electronics Devices studied include: diodes, bipolar junctions transistors, MOS field effect transistors, thyristors, voltage regulators and operational amplifiers.
Solid State Electronics Laboratory The student will develop the laboratory skills necessary for integration of electronic devices in applications such as filtering, amplification, and voltage regulation.
Digital Systems I This course covers the analysis and design of logic circuits using Boolean algebra, Karnaugh maps and truth tables. It provides an introduction to the student to the basic concepts of computer architecture. In addition, it covers number systems, operation and codes. Combinational digital circuits are also studied.
C Programming for Engineer This is an advanced-level programming course using the C programming language. Methods for solving computer engineering problems using the C programming language are studied. The fundamental of UNIX Operation System and shell scripts are also introduced.
Computer Organization 2 The course presents the functional organization of computers, multicore and multithreaded processors, high-performance storage, multiprocessor and multicomputer parallel architectures, and error detecting/correcting codes.
Digital Systems II It covers the analysis and design of sequential (counters and shift registers) logic systems. Programmable Logic Devices (PLD) and associated Computer Aided Design (CAD) software are used to implement digital circuits by using the schematic design entry method. Johnson counter and Ring counter are studied. The general methods of analysis and design  for Finite State Machine (FSM) is also introduced.
Signals and Systems This course provides an introduction to the student to the basic concepts of signals and system modeling. The students will develop and understand time-domain and frequency-domain analysis of both continuous and discrete systems and signals.
Semiconductor Device Fundamentals This course will provide the fundamental knowledge of semiconductor physics, materials, devices and fabrication technology. The students will learn semiconductor band theory, semiconductor materials and statistics, pn junction, bipolar transistor, heterojunction, Schottky junction and solar cells. The course will focus on the MOSFET designs for advanced Very Large Scale Integrated Circuit (VLSI) technology from its physical structure, accurate modeling, manufacturability and applications by using computer simulation.
A&D Communications This course is an introduction to communication systems. Topics include: information theory, channel capacity, A/D and D/A techniques, modulation (AM, FM, and digital), noise sources, quantization, and transmission lines including Smith Charts.
Digital Circuits III - Hardware Description Language Students in this course will learn a Hardware Description Language (HDL) which is used to design and simulate very large scale digital integrated circuits. Different modeling and design approaches will be covered as well as different simulation techniques.
Digital Filter Design This course introduces digital filters as applied in digital signal processing and sampled data control systems. Complex algorithms will be introduced for the design of digital filters.
Embedded System Design I The following issues will be discussed, such as embedded processor selection, hardware/firmware partitioning, number conversion, computer hardware structure, memory technology, logic circuits, development tools, firmware architecture, firmware design, and firmware debugging. An industry standard microcontroller will be studied, and its architecture and instruction set will be covered.
Embedded System Design II It provides the knowledge of designing microcontroller-based embedded computer systems by using assembly and C programs. In addition, the course will also examine the Real-time Operating Systems and their impact on performance. Computer engineering applications will also be emphasized.
VLSI Circuits and Systems This course will explore the fundamentals of Very Large Scale Integrated Circuit (VLSI) design. The following design specifications will be addressed, such as functionality, performance, reliability, manufacturability, testability, cost, design layout rules and checking, circuit extraction, simulation, and verification.
Senior Design I This is a Senior Experience, capstone course designed to teach engineering design skills to students through project based learning. The course will focus on team project incorporating the application of fundamental engineering knowledge and skills. Projects requires planning and design in consultation with faculty advisors and industry contacts. Through this course the students will learn the design process in a hands on way through conceptualization, construction, testing and presenting a deliverable project.
Senior Design II The project is built, tested and demonstrated. Written technical reports and oral presentations on the project are required. Part of this course involves the student working with a faculty member who acts as a consultant.
Intro to the Profession I Introduces the student to the scope of the engineering profession and its role in society and develops a sense of professionalism in the student. Provides an overview of electrical engineering through a series of hands-on projects and computer exercises. Develops professional communication and teamwork skills.
Circuit Analysis I Ohm's Law, Kirchhoff's Laws, and network element voltage-current relations. Application of mesh and nodal analysis to circuits. Dependent sources, operational amplifier circuits, superposition, Thevenin's and Norton's Theorems, maximum power transfer theorem. Transient circuit analysis for RC, RL, and RLC circuits. Introduction to Laplace Transforms. Laboratory experiments include analog and digital circuits; familiarization with test and measurement equipment; combinational digital circuits; familiarization with latches, flip-flops, and shift registers; operational amplifiers; transient effects in first-order and second-order analog circuits; PSpice software applications.  / Circuit Analysis II Sinusoidal excitation and phasors. AC steady-state circuit analysis using phasors. Complex frequency, network functions, pole-zero analysis, frequency response, and resonance. Two-port networks, transformers, mutual inductance, AC steady-state power, RMS values, introduction to three-phase systems and Fourier series. Design-oriented experiments include counters, finite state machines, sequential logic design, impedances in AC steady-state, resonant circuits, two-port networks, and filters.
Digital Systems Number systems and conversions, binary codes, and Boolean algebra. Switching devices, discrete and integrated digital circuits, analysis and design of combinational logic circuits. Karnaugh maps and minimization techniques. Counters and registers. Analysis and design of synchronous sequential circuits.
Digital Computers&Computing Basic concepts in computer architecture, organization, and programming, including: integer and floating point number representations, memory organization, computer processor operation (the fetch/execute cycle), and computer instruction sets. Programming in machine language and assembly language with an emphasis on practical problems.
Engineering Electronics Physics of semiconductor devices. Diode operation and circuit applications. Regulated power supplies. Bipolar and field-effect transistor operating principles. Biasing techniques and stabilization. Linear equivalent circuit analysis of bipolar and field-effect transistor amplifiers.
Microcomputers/Embedded Comp Microprocessors and microcontrollers. Standard and special interfaces. Hardware design and software development tools. Memories. Interrupt systems. Microcomputer system design and troubleshooting. Design with embedded computing systems. Emphasis on examples and applications.
Computer Organization & Design This course provides the students with understanding of the fundamental concepts of computer architecture, organization, and design. It focuses on relationship between hardware and software and its influence on the instruction set and the underlying Central Processing Unit (CPU). The structural design of the CPU in terms of datapath and control unit is introduced. The technique of pipelining and hazard management are studied. Advanced topics include instruction level parallelism, memory hierarchy and cache operations, virtual memory, parallel processing, multiprocessors and hardware security. The end to end design of a typical computer system in terms of the major entities including CPU, cache, memory, disk, I/O, and bus with respect to cost/performance trade-offs is also covered.
Object-Oriented Programming I Introduces the use of a high-level object-oriented programming language as a problem-solving tool, including basic data structures and algorithms, object-oriented programming techniques, and software documentation. Designed for students who have had little or no prior experience with computer programming. For students in CS and CS-related degree programs.
Object-Oriented Programming II Introduces more advanced elements of object-oriented programming, including dynamic data structures, recursion, searching and sorting, and advanced object-oriented programming techniques. For students in CS and CS-related degree programs.
Discrete Structures Introduction to the use of formal mathematical structures to represent problems and computational processes. Topics covered include Boolean algebra, first-order logic, recursive structures, graphs, and abstract language models.
Data Structures and Algorithms Implementation and application of the essential data structures used in computer science. Analysis of basic sorting and searching algorithms and their relationship to these data structures. Particular emphasis is given to the use of object-oriented design and data abstraction in the creation and application of data structures.
Systems Programming Examines the components of sophisticated multilayer software systems, including device drivers, systems software, applications interfaces, and user interfaces. Explores the design and development of interrupt-driven and event-driven software.
Operating Systems Introduction to operating system concepts-including system organization for uniprocessors and multiprocessors, scheduling algorithms, process management, deadlocks, paging and segmentation, files and protection, and process coordination and communication.
Electrodynamics Analysis of circuits using distributed network elements. Response of transmission lines to transient signals. AC steady-state analysis of lossless and lossy lines. The Smith Chart as an analysis and design tool. Impedance matching methods. Vector analysis applied to static and time-varying electric and magnetic fields. Coulomb's Law, electric field intensity, flux density and Gauss's Law. Energy and potential. Biot-Savart and Ampere's Law. Maxwell's equations with applications including uniform-plane wave propagation.
Software Engineering Study of the principles and practices of software engineering. Topics include software quality concepts, process models, software requirements analysis, design methodologies, software testing and software maintenance. Hands-on experience building a software system using the waterfall life cycle model. Students work in teams to develop all life cycle deliverables: requirements document, specification and design documents, system code, test plan, and user manuals.
Intro Computer Cyber Security Computer security as threats and defense mechanisms. Introductory cryptography and key management. Authentication and authorization. System security. Network security. Cloud and web security. Hardware security.
Intro Comp Ntwks with Lab Emphasis on the physical, data link, and medium access layers of the OSI architecture. Different general techniques for networking tasks, such as error control, flow control, multiplexing, switching, routing, signaling, congestion control, traffic control, scheduling will be covered along with their experimentation and implementation in a laboratory.
Calculus I Analytic geometry. Functions and their graphs. Limits and continuity. Derivatives of algebraic and trigonometric functions. Applications of the derivative. Introduction to integrals and their applications.
Calculus II Transcendental functions and their calculus. Integration techniques. Applications of the integral. Indeterminate forms and improper integrals. Polar coordinates. Numerical series and power series expansions.
Multivariate & Vector Calculus Analytic geometry in three-dimensional space. Partial derivatives. Multiple integrals. Vector analysis. Applications.
Introduction to Diff Equations Linear differential equations of order one. Linear differential equations of higher order. Series solutions of linear DE. Laplace transforms and their use in solving linear DE. Introduction to matrices. Systems of linear differential equations.
Probability/Statistics for ECE This course focuses on the introductory treatment of probability theory including: axioms of probability, discrete and continuous random variables, random vectors, marginal, joint, conditional and cumulative probability distributions, moment generating functions, expectations, and correlations. Also covered are sums of random variables, central limit theorem, sample means, and parameter estimation. Furthermore, random processes and random signals are covered. Examples and applications are drawn from problems of importance to electrical and computer engineers.
Matrix Alg & Complex Variables Vectors and matrices; matrix operations, transpose, rank, inverse; determinants; solution of linear systems; eigenvalues and eigenvectors. The complex plane; analytic functions; contour integrals; Laurent series expansions; singularities and residues.
General Physics I: Mechanics Vectors and motion in one, two and three dimensions. Newton's Laws. Particle dynamics, work and energy. Conservation laws and collisions. Rotational kinematics and dynamics, angular momentum and equilibrium of rigid bodies. Gravitation. Oscillations.
Gen Physics II: Elect&Magntism Waves charge, electric field, Gauss' Law and potential. Capacitance, resistance, simple a/c and d/c circuits. Magnetic fields, Ampere's Law, Faraday's Law, induction, and Maxwell's equations. Traveling waves, electromagnetic waves, and light.
Gen Physics III for Engnrs Sound and fluid mechanics. Temperature, first and second laws of thermodynamics, kinetic theory and entropy. Reflection, refraction, interference and diffraction. Special relativity. Light and quantum physics, structure of the hydrogen atom. Atomic physics, electrical conduction in solids, nuclear physics, particle physics and cosmology.
Principles of Chem I w/out Lab An introduction to the foundations of chemistry, including: atoms and molecules; stoichiometry of chemical reactions; thermochemistry; properties of gases; states of matter, chemical solutions; the molecular basis for chemical reactivity; atomic structure; periodicity; and chemical bonding.
Thermodynamics Introduction to thermodynamics including properties of matter; First Law of Thermodynamics and its use in analyzing open and closed systems; limitations of the Second Law of Thermodynamics; entropy.
Introduction to Human Biology This course, designed for non-majors in biology, covers selected topics in biology of particular relevance to humans and to human health and disease. Topics include: Introductory biochemistry and cell structure, organization, and regulation of body systems; human genetics; human development; biotechnology; introduction to human pathogens and infectious diseases including sexually-transmitted diseases and immunologic diseases such as AIDS; human ecology; and human evolution.
Topics in Humanities Topics will introduce students to the humanities at IIT and to provide intensive instruction in writing.
Industrial Culture An interdisciplinary course that examines the development of modern industrial society and the impact of science and technology on our culture. Readings drawn from history, literature, and philosophy. This course is also writing instruction intensive.
Age of Darwin An introduction to the humanities through an investigation of important changes in our culture associated with Darwin's theory of evolution. Readings drawn from literature, philosophy, and science. This course is also writing instruction intensive.
Life Stories An interdisciplinary study of biographies and autobiographies. In addition to considering such works as a genre, the course examines the historical events and the philosophical issues that have shaped the lives and attitudes of the writers/subjects.
Digital Culture Introduces major topics in digital culture while providing instruction in scholarly practice with emphasis on research and writing. Topics include technical and cultural history of the internet, academic writing, and humanities research methods.
Topics in Humanities Topics will introduce students to the humanities at IIT and to provide intensive instruction in writing.
﻿
Introduction to Computer Science in C++.  Fundamentals of computer science are introduced, with emphasis on programming methodology and problem solving. Topics include basic concepts of computer systems, software engineering, algorithm design, programming languages and data abstraction, with applications. The high level language C++ is fully discussed and serves as the vehicle to illustrate many of the concepts.
Calculus I.  Topics include limits, differentiation, applications of differentiation, and integration.
Wireless Communication Systems.   Introduction to wireless system design and engineering. Develops an understanding and appreciation of the wireless engineering problems such as cellular layout design, resource allocation, mobility management, capacity and performance and signaling load calculations. Introduces physical layer building blocks such as modulation, synchronization, coding, diversity, equalization, and spreading.
Differential Equations.   Methods for solving ordinary differential equations are studied together with physical applications, Laplace transforms, numerical solutions, and series solutions.
Co-op Work Experience II.  Approval of department; Approval of CDS. Cooperative Education and Internships. Students gain major-related work experience and reinforcement of their academic program. Mandatory participation in seminars and completion of a report.
Computer Organization and Architecture.   Emphasizes the hardware design of computer systems. Topics include register transfer logic, central processing unit design, microprogramming, ALU design, pipelining, vector processing, micro-coded arithmetic algorithms, I/O organization, memory organization and multiprocessing.
Freshman Seminar.   Addresses issues related to a successful college life during weekly seminars. Topics include time management, study skills, interpersonal relationships, wellness, multicultural issues and career decision making. Freshman Seminar is a graduation requirement for all first-time, full-time freshmen.
Microprocessors. An introduction to microprocessor system organization and assembly language programming. The course covers the architecture, instruction set and assembly language of a specific microprocessor. Other topics included are memory organization, input/output interfacing, interrupt processing as well as exception processing. The problems associated with the design of a single board computer are also covered.
Digital Systems Lab.  Digital Systems Lab.
Principles of Business.  This course explores strategies that allow companies to grow and compete in today’s global marketplace, along with skills you will need to turn ideas into action for success in business. You will get an overview of key business processes, and an understanding of how they work together. Learning will be reinforced by real time case studies. A comprehensive project-based learning exercise will allow you to act as a management consultant and relate what you cover in class to a real company.
Microprocessor Laboratory.  In this laboratory the students are expected to learn to apply their theoretical knowledge of both the hardware and software aspects of microprocessors. To attain this objective the students are required to construct a microprocessor based single board computer (SBC), with adequate interfacing capabilities to be able to perform some useful control tasks. Programming of the device is done in assembly language. Some of the experiments that follow the construction project deal with software while others deal with the problems of interfacing of microprocessors.
Calculus II.   Topics include integration, applications of integration, series, exponential and logarithmic functions, transcendental functions, polar coordinates, and conic sections.
Electrical & Computer Engineering Project II. Electrical & Computer Engineering Project II.
Programming Language Concepts.   Conceptual study of programming language syntax, semantics and implementation. Course covers language definition structure, data types and structures, control structures and data flow, run-time consideration, and interpretative languages.
Applied Numerical Methods.  Introduction to numerical methods with emphasis on mathematical models. Implements and investigates numerical techniques for the solution of linear and nonlinear systems of equations, eigenvalue problems, interpolation and approximation, techniques of optimization, Monte Carlo methods, and applications to ordinary differential equations and integration.
Engineering Ethics and Technological Practice: Philosophical Perspectives on Engineering. A philosophical examination of the nature of engineering practice and applied technology. Considers such questions as: How do the societal functions of engineers and the practical application of technologies relate to basic moral and intellectual values? What moral obligations are implied by the uses of technology? What are the ethical duties of engineers in the practice of their careers? How are technological practice and engineering related to questions about knowledge and reality? This course satisfies the three credit 300 GER in History and Humanities.
Advanced Computer Systems Design Lab.  Design laboratory component of the advanced computer systems technical track offered to COE majors in the senior year. Experiments emphasize advanced CPU design concepts, such as RISC approaches and exception handling, multiprocessor and systolic array computers, and FPGAs. Develop software programs to test the capabilities of these hardware designs.
Principles of Operating Systems.   Organization of operating systems covering structure, process management and scheduling; interaction of concurrent processes; interrupts; I/O, device handling; memory and virtual memory management and file management.
Introduction to Discrete Event Systems. Introduces logical models, timed models, and stochastic timed models of discrete event systems. Applies petri net methodology to the modeling of computer systems, flexible manufacturing systems, communication networks, and robotics. Contrasts the approaches of simulation, elementary queueing theory, and Markov processes.
Fundamentals of Engineering Design.  Teams of students work on open-ended engineering projects. Sections are offered to represent an introduction to real-world engineering design problems in a specific engineering discipline. Topics covered include introduction to basic engineering design elements, processes, measurements, product and project design and development, with hands-on experiments in a specific major area. Students also learn to use engineering tools for computer-aided design and simulation. Technical writing and oral presentation along with project management skills are emphasized. Students are required to take an FED section corresponding to their declared major. Undecided students will be placed in FED sections which best correspond to their interests according to space availability.
Signal Transmission.   Signal transmission both within and between digital systems. Topics include the telegrapher's equations, wave propagation, lattice diagrams, transients in digital systems, crosstalk, proper termination for high-speed logic, and the transmission characteristics of various interconnecting geometries.
Circuits and Systems I. The basic concepts of electric circuit theory and system analysis. Topics include basic circuit elements, loop and node analysis, network theorems, sinusoidal steady-state analysis, power, resonance, mutual inductance, and ideal transformers.
Probability and Statistics.  Descriptive statistics and statistical inference. Topics include discrete and continuous distributions of random variables, statistical inference for the mean and variance of populations, and graphical analysis of data.
Systems Simulation.   This course introduces computer simulation as an algorithmic problem solving technique. Includes discrete simulation models, elementary theory, stochastic processes, use of simulation languages, random number generators, simulation of probabilistic processes, design of simulation experiments, validation of models, queueing systems, and applications to the design and analysis of operational systems. The GPSS language is covered in detail.
Co-op Work Experience I. Cumulative GPA 2.5; Approval of department; Approval of CDS. Cooperative Education and Internships. Students gain major-related work experience and reinforcement of their academic program. Mandatory participation in seminars and completion of a report.
Electricity & Magntsm ECE Appl. This course emphasizes applications of electricity and magnetism to circuit problems, explores electric fields and magnetic fields of non-trivial charge and current distributions, introduce students to complex variables, and emphasizes methods for solving large linear problems. It provides a strong coupling of the underlying physics with calculus.
Electrical Engineering Laboratory I.  Assembling, testing and analysis of basic analog circuits. Emphasis electronic measurement techniques, instrumentation and data analysis. Simulations of dc, ac, and transient circuit response on the personal computer.
Electrical and Computer Engineering Project II. Progress of the project is monitored by the instructor with demonstrations and presentations at given due dates of the regularly scheduled course. An oral presentation and demonstration of the project by the student team must be given and a written report submitted at the end of the course. Successful projects are approved for the presentation at the Senior Design Project Workshop in the presence of students, faculty and industry representatives.
Electronic Circuits I.  The electronic devices, junction diodes, bipolar transistors and field-effect transistors, are introduced and studied based on semiconductor physics models.  The study then continues with analysis and design of main digital electronic circuits (NMOS and CMOS) inverters and logic gates, MOS memory and storage circuits) and with introduction to analog electronic circuits such as simple one transistor amplifiers.
Calculus III B.   Topics include vectors, curvature, partial derivatives, multiple integrals, line integrals, and Green's, divergence, and Stokes' theorems.
Career Planning Seminar for En. This course aims at providing engineering students with multidisciplinary and career planning skills in a seminar environment with emphasis on career planning, resume writing, and interview skills.
Discrete Analysis for Computer Engineers.  An introduction to mathematical logic, Boolean algebra, and Karnaugh maps. Other topics include functions, equivalence relations and partially ordered sets, counting, graph theory and finite state machines. The emphasis is on computation but proofs will be addressed.
Electrical and Computer Engineering Project I.  Discussion of issues related to the engineering profession, including such topics as: intellectual property, sources of technical information, engineering codes and standards, professional organizations, professional registration. Required of all ECE students.
Physics I Lab. Physics I Lab.
Linear Algebra.   Matrices, determinants, systems of linear equations, vector spaces, linear transformations, eigenvalues, eigenvectors, and related topics.
Digital Data Communication.  Topics include signal classification, correlation, spectral analysis, noise, signal transmission through linear systems, principles of digital data transmission, AM, FM and pulse modulations, sampling and digitalization of signals, inter-symbol interference and equalization, channel capacity, data compression techniques, error detection and correction methods.
Computer Communications Lab.  2 Experiments with different protocols and standards used in the TCP/IP computer communications, including Ethernet/802.3 standard, Address Resolution Protocol (ARP), Internet Protocol (IP), Transport Control Protocol (TCP), User Datagram Protocol (UDP), and others. Exercises with network measurements and virtualization tools, and configurations of some commercial routers are included.
Computer Communications Networks.   Topics include the OSI reference model, the physical, data link, network, and transport layers, TCP/IP, LANs (including token ring, token bus, and ethernet), ALOHA, routing and flow control.
Engineering Management.  Restriction: junior or senior standing. An introduction for engineering majors to the fundamentals of engineering economics and the management process for engineering and development. Major topics include capital investment justification methods, project organization, scheduling and control techniques, legal, quality, and staffing issues.
Advanced Computer Architecture.  Introduces common performance measures used by hardware and software designers to facilitate comparative analysis. Main topics are: advanced pipelining, good instruction sets, CISC and RISC microprocessors, introduction to parallel computing, and a brief historical survey of computer designs.
Computer Engineering Design Lab.   Topics include combinational and sequential logic design using CAD tools, design based upon PLA/PLD devices, computer interface design using hardware and software, and an open-ended design project such as a central processing unit design.
Introduction to Electrical and Computer Engineerin Familiarize students with various disciplines, career opportunities and curricula in electrical and computer enginneering. Invited speakers include faculty and industrial representatives.
Digital Design.   The design of combinational and sequential logic circuits used in digital processing systems and computers. Basic register transfer operations are covered. Topics include Boolean algebra, minimization techniques and the design of logic circuits such as adders, comparators, decoders, multiplexers, counters, arithmetic logic units, and memory systems.
Physics I.   Elementary mechanics with an emphasis on the fundamental concepts and laws of mechanics, especially the conservation laws. Topics are scalar and vector quantities of mechanics; rectilinear and circular motion; equilibrium and Newton's laws of motion; work, energy, momentum; the conservation laws. Lab must be taken concurrently. .
Physics II Lab.   Physics II Lab.
General Chemistry I.  The first semester of a two-semester sequence in chemistry. Introduces the basic concepts of chemistry, including chemical reactions and bonding, electronic and molecular structure, gases and thermochemistry.
Introduction to Computer Science II in C++..   A study of advanced programming topics with logical structures of data, their physical representation, design and analysis of computer algorithms operating on the structures, and techniques for program development and debugging. Course covers program specifications,  correctness and efficiency, data abstraction, basic aspects of simple data structures, internal searching and sorting, recursion and string processing. Algorithmic analysis is also discussed.
Advanced Computer Architecture II.  Overview of recent advances and topics of current active research in the field of Computer Architecture. Includes: new computing paradigms such as brain inspired non-von Neumann architectures, stochastic computing, hybrid memory systems and other architectures leveraging emerging memory technologies. Systolic array systems; new interconnect architectures including NoCs; GPU-accelerated computing etc. are also discussed.
English Composition: Writing, Speaking, Thinking II. Focuses on enhanced written and oral communication skills; emphasizes reading and interpretation of literary forms; critical analysis; methods of research using print and on-line sources; report writing and writing about literature.
English Composition: Writing, Speaking, Thinking I. Focuses on developing written and oral communication skills; emphasizes writing expository and research essays; preparing oral reports; drafting, revising, editing; evaluation and proper documentation of source material; using rhetorical strategies such as narration and argument.
Circuits and Systems II.   A continuation of circuits and systems with special emphasis on transient response. Topics include Laplace transform analysis, transfer functions, convolution, Bode diagrams, and Fourier series.
General Chemistry A systematic treatment of the fundamental laws and theories of chemistry and their applications. Designed for science and engineering majors.
General Chemistry Lab General Chemistry Lab
First Year Seminar An introduction to multiple aspects of engineering as well as the university intellectual life. A primary focus is on programming and the use of computers within the engineering disciplines. Through a focus on hands-on projects performed in teams, the course introduces students to commonalities and differences among the engineering disciplines, modes of inquiry, project design, teaming, skills in professional/technical writing, persuasive arguments (based on evidence, logic and critical thinking), innovation, and the use of multiple languages (English, computing, graphic) to communicate technical ideas to colleagues and clients.
Calculus-Analytic Geometry I An introduction to calculus for engineering, science and mathematics students, with an emphasis on conceptual understanding, problem solving, and modeling. Topics covered include: limits, continuity, derivatives of algebraic, trigonometric, and transcendental functions, applications of the derivative including optimization problems and linear approximations, antiderivatives, introduction to the definite integral, and the Fundamental Theorem of Calculus.
Reasoning This course helps students develop the foundational skills of critical reading, thinking, analysis, and writing. Students will analyze and evaluate different approaches to formal and informal arguments, reconstruct arguments from a range of sources, assess the quality of various types of evidence, and demonstrate careful use of statistics.
Survey of Westrn Civilizatn I A survey of the origins of western civilization in the Near East; classical Greek and Roman civilizations; and developments in Europe to 1648.
Survey of Westrn Civilizatn I A survey of the origins of western civilization in the Near East; classical Greek and Roman civilizations; and developments in Europe to 1648.
First Year Seminar First Year Seminar
Calculus-Analytic Geometry II Topics covered are: techniques of integration, applications of the integral, improper integrals, sequences and infinite series with an introduction to convergence tests, parametric equations, and polar coordinates.
PHYS 103 Scientific Physics I 4.00 credits Calculus-based introductory physics. Mechanics, including Newton's laws, conservation laws, fluids, oscillations, and waves. Five hours of lecture with experimental demonstrations and problems.
Scientific Physics I Lab Scientific Physics I Lab
Philosophy of Human Nature Philosophical study of human nature, the human condition, the meaning and value of human life, and the human relationship to ultimate reality, with attention to such issues as the nature and possible existence of the soul, the relation between body and mind, belief and knowledge, freedom vs. determinism, and the possibility of human immortality.
Intro Digital Logic 3.00 credits Number systems and codes, Boolean Algebra, Logic gates and flip-flops. Verilog HDL. Combinational and sequential Logic Design using CPLDs.
Intro Digital Logic Lab Intro Digital Logic Lab
Computer Science II An examination of dynamic memory management and recursion; an introduction to basic data structures and algorithmic analysis.
Circuit Analysis I Fundamental electrical laws; network theorems. Basic circuit elements: resistance, inductance, capacitance, independent and controlled sources, and op-amps. Techniques of circuit analysis; steady-state and transient responses; first-order and second-order circuits; complex numbers; sinusoidal analysis.
Circuit Analysis I Lab Circuit Analysis I Lab
Discrete Structures Topics taken from sets, functions, matrices, ordered sets, partially ordered sets, directed graphs, algebraic systems, recursive definitions, and algorithms.
Continuing Education Continuing Education
Microcomputer Arch & Assm Prog Study of components of simple computer systems: CPU's memory, registers, busses, computer control, microprogramming, assembly language programming.
Microcomp Arch & Assm Prog Lab Microcomp Arch & Assm Prog Lab
Circuit Analysis II Sinusoidal steady-state analysis; RMS value; real , reactive, and complex powers; balanced three-phase circuits; second-order circuits; frequency response; Bode plots; resonance; complex frequency; transfer functions; two-port circuits; magnetically coupled circuits; transformers.
Calculus-Analytic Geometry III A treatment of multivariable calculus and the calculus of vector fields. Topics include: vectors and vector-valued functions, partial derivatives, multiple integration, curl and divergence, line integrals, Green’s theorem, Stokes’ theorem, and the Divergence theorem.
Scientific Physics II Calculus-based introductory physics. Thermodynamics, electricity and magnetism, and optics. Five hours of lecture with experimental demonstrations and problems.
Scientific Physics II Lab Scientific Physics II Lab
Algorithm&Abstract Data Struct Algorithm analysis using O-notation, sorting, heaps, balanced binary search trees, and hash tables.
Electronics Design I Introduction to electronics design concepts; semiconductor devices and their associated electrical behavior; amplifier modeling, design, and trade-offs; practical designing, building, testing, and analyzing of electronic circuits.
Electronics Design I Lab Electronics Design I Lab
Signals and Systems Signals and systems; types of signals; properties of systems; convolution integral; Fourier series; Fourier transform and applications; Laplace transform and applications; Sampling Theorem.
Ordinary Differential Equation Solution methods for first order equations and for second and higher order linear equations. Includes series methods and solution of linear systems of differential equations.
Embedded Computer Systems The micro controller as an engineering component. Hardware expansion with analog and digital devices. Board level design of real-time systems. Design of user-friendly interactive displays.
Embedded Computer Systems Lab Embedded Computer Systems Lab
Electronics Design II Frequency response and distortion; tuned circuits; operational amplifiers; power amplifiers; feedback concepts and oscillators; digital circuits; astable circuits; data conversion; practical design and application of electronic circuits.
Electronics Design II Lab Electronics Design II Lab
Probabilistic Mtds Elect Eng Introduction to probability; random variables; multiple random variables; elements of statistics; applications in electrical and computer engineering.
Engineering Design Fundamentals of the engineering design process fundamentals: project requirements analysis and specification, system design, detailed design, testing and written and oral presentations. Project management: tasks, schedules, budget, critical items and fall back options.
Old and New Testament A study of both Old and New Testament as the scriptures of Christianity.
Digital System Design Modern methods of digital design realization. Technology independence. Designs utilizing gate arrays and custom integrated circuits. Use of high level design software. Extensive use of Verilog hardware design language for system description, simulation and implementation.
Digital System Design Lab Digital System Design Lab
Operating Systems Study of operating systems internals. Topics include concurrent programming, memory management, file system management, scheduling algorithms, security.
Senior Design Project I Elective senior design project of an interdisciplinary or specialized nature involving both technical and non-technical aspects of an engineering problem for students in any of the engineering majors.
Parallel Computing Parallel Programming platforms; principles of parallel algorithm design; basic communication operations; analytical modeling of parallel programs; programming using the message-passing paradigm (MPI); programming on shared address space platforms (POSIX Thread and OpenMP); and other advanced topics.
Biomedical Informatics & Comp Investigation of the role of computers in the provision of medical services; study of the nature of clinical data, medical information exchange standards, data storage, retrieval, integration and analysis and privacy issues; medical decision-making support; design of healthcare information systems; genomic medicine and its techniques.
Survy Westrn Civilztn I Honors A survey of the origins of western civilization in the Near East; Greek and Roman civilizations; and developments in Europe to 1648.
Survey of Westrn Civilizatn II A survey of European history from the seventeenth century to the present with emphasis on ideas, politics, and social changes.
Computer Architecture Introduction to fundamental concepts in the design and implementation of computing systems. Topics include fundamentals of computer design, performance and cost, instruction set architecture, computer arithmetic, data path control, processor technology, pipelining, memory system (caches, virtual memory).
Senior Design Project II Ongoing completion of an elective senior design project of an interdisciplinary or specialized nature involving both technical and non-technical aspects of an engineering problem for students in any of the engineering majors.
Fund of Engineering Exam Proctoring of the practice examination for Students in preparation for the Fundamental of Engineering Exam (1st exam toward professional licensing), and of the School of Engineering and Applied Sciences assessment surveys (dates and times are announced during the semester).
College Composition Understanding and writing for rhetorical situations; critical reading and response; writing source-based argument for academic and public audiences.
Digital Circuit Logic Fundamentals of digital circuit logic, including Boolean algebra; Karnaugh maps; multiplexers, decoders, ROMS, PLAS, flip-flops, counters; sequential networks; and state tables.
Calculus for Physical Scientists I Limits, continuity, differentiation, and integration of elementary functions with applications; conic sections.
Awareness and Appreciation of Design Awareness and appreciation of design as it exists in the context of everyday life and is expressive of cultural character and human creativity. Awareness and appreciation of design comes as a natural consequence of learning how to recognize and interpret the elements from which it is created.
History of Agriculture in the United States Relationships in agriculture. Historical/Native American/early practices, industrial agriculture, technologies, philosophy, green revolution.
DC Circuit Analysis Basic DC circuit analysis. Use of scientific-oriented software to solve problems and analyze small projects.
No Prior Programming Experience Computer programming for students without previous programming experience. Topics include variables, assignment, expressions, operators, booleans, conditionals, characters and strings, control loops, arrays, objects and classes, file input/output, interfaces, recursion, lists, and sorting.
Prior Programming Experience Computer programming for students with limited programming experience. Problem decomposition for good design; expressions, operators, booleans, conditionals, characters and strings, control loops, arrays, objects and classes, file input/output, interfaces, recursion, lists, and sorting.
Calculus for Physical Scientists II Transcendental functions, integration techniques, polar coordinates, sequences and series, with mathematical software.
Physics for Scientists and Engineers I Forces, energy, momentum, angular momentum, oscillations, waves, heat, thermodynamics
Data Structures Object oriented concepts, assertions, inheritance, polymorphism, algorithms and data structures using an object oriented language.
Introduction to Microprocessors Microprocessor organization, assembly language, I/O techniques, real-time interfaces, applications, hardware/software.
Calculus for Physical Scientists III Vector functions, partial differentiation, cylindrical and spherical coordinates, multiple integrals, line integrals, Green's theorem.
Physics for Scientists and Engineers II Electricity and magnetism, circuits, light, optics
Discrete Structures and their Applications Integer representations and properties, propositions, predicates, sets, functions, program proofs, induction, counting, complexity; Python implementations of these concepts.
Circuit Theory Applications Basic circuit analysis techniques and applications to engineering design problems.
Introduction to Communications Principles Basic concepts in design and analysis of communication systems.
Introduction to Ordinary Differential Equations First and second order equations, series, Laplace transforms, linear algebra, eigenvalues, first order systems of equations, numerical techniques.
Software Development with C++ Developing and modifying large software. Relating programming language to its machine implementation. C++ programming for experienced programmers.
Linear System Analysis I Continuous and discrete time signals and systems representations in time and frequency domain; time convolution.
Electronics Principles I Discrete component semiconductor devices, characteristics and applications. Rectifier circuits, single-stage and multi-stage amplifiers.
Digital System Design Laboratory Small digital circuits are designed and simulated using very high speed hardware description language and synthesis tools.
Digital System Design State machines with PLAs as controllers and small computers; timing and race elimination considerations; state and microprogramming implementation.
Algorithms--Theory and Practice Analysis, design, implementation and applications of algorithms.
Electronics Principles II Discrete and integrated-circuit amplifiers-frequency response, negative feedback; digital logic circuits.
Operating Systems Introduction to operating systems including memory organization, I/O control, multitasking, process control, coordination, and resource management.
Linear System Analysis II Laplace and Z transforms, applications to modulation, filtering and sampling, state space representation.
Computer Organization and Architecture CPU design; microarchitecture; data path and control path; pipelining; memory system; I/O system; program optimization by system software/hardware.
Senior Design Project I Senior Design Project I
Writing in the Disciplines: Sciences Learning writing strategies for addressing general audiences in sciences.
Professional and Technical Communication Professional writing and presentation skills applied to students' major fields.
Senior Design Project II Senior Design Project II
Computer Networks Circuit/packet switching, protocols, LAN/MAN, TCP/IP, error correction, wireless LANS, mobile networks.
Principles of Microeconomics Introduction to decision-making by households, firms, and government, and resulting allocation of resources through markets.

Rhetorical Communication This course provides students with the knowledge and skills necessary for successful, goal-driven written, oral, and visual communication in academic and professional contexts.  All subjects and professional fields require effective (i.e., rhetorical) communication directed at well-defined audiences to explain information and to offer a compelling rationale, and this course illustrates the process-oriented approach needed to achieve rhetorical objectives.  Rhetorical Communication also introduces students to the knowledge-producing and critical thinking potential of language, the impact of technology on language and information, and the nature of communication as ethical action.
General Chemistry I This introductory Chemistry course is recommended for all science and Engineering majors as well as Clinical Lab Science, Pre-medical, Pre-dental, Pre-veterinary, and Pre-pharmacy majors. The course includes an introduction to stoichiometry, atomic structure, chemical bonding, properties and reactions of inorganic compounds, introductory thermodynamics, acids and bases, and oxidation-reduction reactions
EPADS I This course has two concurrent parts. First, students are introduced to engineering design, team development, problem-solving, and a team design project, which requires the students to create, design, and build simple electrical and mechanical devices that perform specific functions subject to defined constraints. Second, students develop engineering skills, such as how to create solid models (using software such as SolidWorks) and how to apply basic electrical, mechanical and computer engineering concepts and techniques.
First-Year Seminar This course helps prepare new students for the creative, interdisciplinary, and rigorous modes of inquiry that characterize a York College education.  The First-Year Seminar is intended to create a sense of intellectual community for students and faculty, to emphasize attainment of key learning outcomes, to introduce students to college-level rigor and expectations, to encourage the academic growth of students, and to purposefully expose students to a variety of co-curricular experiences and resources available at York College.
Calculus I Both a theoretical and an applied approach to physics and engineering are emphasized in this in-depth study of introductory calculus topics. The topics of the course include a review of algebra and trigonometry, limits, differentiation, and applications of the derivative. Prerequisite: A strong background in algebra and trigonometry or precalculus. Placement is based on MSAT score and high school math background.
Fundamentals of Computer Science I This course introduces the fundamental techniques of algorithm design and program construction using procedural constructs. Topics will include problem analysis; algorithm design; and implementation and debugging strategies using good programming practices. The course will cover basic data structures including variables, arrays, strings, records, and pointers; and control structures including decisions, iterations, functions, and file I/O. The course will focus on applications from computer science and engineering using C/C++/C#.
Introduction to Electrical Engineering This course introduces students to the basic concepts of electrical engineering while developing the measurement and instrumentation skills necessary for electrical and computer engineers.  Topics include voltage, current, power, DC circuit analysis and circuit transient response.  Students will learn hands-on skills such as operation of oscilloscopes and function generators, circuit bread boarding, soldering, component selection and arrangement.  A combination of laboratory exercises and mini-projects will be based on practical real-world applications, introducing students to the sub-disciplines within electrical engineering.
Rhetorical Communication This course provides students with the knowledge and skills necessary for successful, goal-driven written, oral, and visual communication in academic and professional contexts.  All subjects and professional fields require effective (i.e., rhetorical) communication directed at well-defined audiences to explain information and to offer a compelling rationale, and this course illustrates the process-oriented approach needed to achieve rhetorical objectives.  Rhetorical Communication also introduces students to the knowledge-producing and critical thinking potential of language, the impact of technology on language and information, and the nature of communication as ethical action
Calculus II Topics in this second course in calculus include the definition and theory of the definite integral; numerical integration; integral applications; the calculus of logarithms, exponential, inverse, and hyperbolic functions; techniques of integration; and applications of the integral to physics and engineering.
Engineering Physics: Mechanics A calculus-based Physics course in mechanics for engineering and science majors. The use of vectors is emphasized throughout this course. Topics include vectors, linear and rotational motion, Newtons Laws, friction, work and energy, conservation of linear and angular momentum, collisions, moment of inertia, simple harmonic motion, gravitation, and (if time permits) waves
Fundamentals of Computer Science II This course introduces advanced object-oriented constructs such as abstraction, virtual methods, and generic classes. Advanced data structures including arrays, linked lists, queues, stacks, trees, heaps, and hash tables will be discussed both natively as well as through standard template libraries. Fundamental sorting and searching algorithms will be introduced. Basic analytical and proof techniques will be used to characterize the data structures and algorithms discussed. The course will focus on implementing applications from computer science and engineering using languages such as C++/C#/Java
Design and Analysis of Digital Circuits This course focuses on fundamentals in the analysis and design of digital circuits. Boolean algebra, gate-logic, combinational and sequential gates, and related logic networks, such as encoders, multiplexers, registers, counters, timers, and comparators, are introduced. Synchronous and asynchronous circuits are studied. Open-collector, tri-state, and programmable logic devices are introduced. Popular logic families and interfacing issues between digital and analog systems are studied. The laboratory focuses on the design, analysis, and verification of digital systems.
Engineering Career Training Preparation This one-credit-hour seminar prepares students for their first co-op work assignment. Activities may include industrial field trips to meet with York College co-op students who give tours and presentations of their engineering experiences. Senior Engineering students who have finished their three co-op terms may be invited to present and discuss their experiences in a formal panel discussion. Guest speakers from industry, including an engineering co-op mentor and human resource manager, may be invited to discuss topics related to the real world of engineering work. Exercises may include role playing and situational ethics
Differential Equations The course in differential equations covers the standard methods of solving ordinary differential equations and their applications to physics and electrical and mechanical engineering. Topics include methods for first solving order differential equations; second and higher-order equations; numerical methods for non-linear differential equations; and series solutions.
Engineering Physics: Electricity & Magnetism A calculus-based Physics course in electricity and magnetism for engineering and science majors. This course introduces the student to the topics of static electricity, electric fields, Gauss Law, electric potential, capacitance, resistance, current, voltage, magnetic fields, Amperes Law, Faradays Law, and inductance
Software Engineering and Design This course describes the software development process in detail, including the software life cycle and models of software development; requirements analysis and software design techniques, including structured analysis and object-oriented approaches; techniques for software quality assurance, including design reviews, testing, metrics, and an introduction to program verification; and software project planning, organization, and management.
Fundamentals of Computer Engineering An introduction to the design and operation of digital computers, including information representation, logic design, integrated circuits, register transfer description, basic computer organization and machine-level programming. The relationship between software and hardware is stressed. Topics include fundamentals of computer architecture, computer arithmetic and digital logic, memory system organization and architecture, interfacing and communication, device subsystems, machine level representation of data, assembly level machine organization, functional organization, multiprocessing, and alternative architectures
Fundamentals of Electrical Engineering This course builds upon DC circuit analysis techniques learned in ECE100 to expand these analytical techniques to circuits involving resistors, capacitors, and inductors (e.g., Kirchoffs laws, nodal and mesh analyses, and superposition) in both steady state and transient cases.  Steady state AC circuit analysis is performed using concepts of phasors, impendance, frequency response, filtering, damping, resonance, and power.  The transient response of first and second order circuits are principally examined.  Operational amplifiers and related topics such as feedback, stability, gain-bandwidth product, and compensation are studied, focusing on typical circuit applications. A hands-on laboratory component supplements the theoretical analysis to enhance student learning and to build practical circuit applications.
Mathematical Methods in Engineering This course covers topics of applied mathematics that build upon differential and integral calculus and that are particularly relevant to engineering majors. These topics include Complex Numbers, Linear Algebra, Vector Calculus, Fourier Series and Transforms, and Special Functions
Data Structures This course is an in-depth examination of important data structures, their algorithms, and implementation techniques. Both abstract and concrete data structures are discussed including sequences, stacks, queues, maps, sets, graphs, array lists, linked lists, skip lists, search trees, heaps, and hash tables. Students will implement and apply the data structures through a series of programming assignments
Operating Systems This course provides an introduction to the fundamentals of operating systems. Topics include inter-process communication, process scheduling, deadlock, memory management, virtual memory, file systems, and distributed systems. Formal principles are illustrated with examples and case studies of one or more contemporary operating systems. Also, students will study a widely used operating system such as Windows or UNIX with an emphasis on system programming for the operating system. Topics include kernel design, the I/O system, scheduling algorithms, process control, inter-process communication, system calls, and memory management.
Design and Analysis of Analog Circuits This course focuses on fundamentals of the analysis and design of analog circuits. Diodes and transistors, including LEDs, BJTs, FETs, and other related circuit technologies are examined.  The underlying semiconductor physics of these components, their equivalent circuits and frequency-dependent impedance characteristics are studied thoroughly. Their roles in switching, isolation, amplification, and other signal processing circuits are examined in detail. The course culminates in a design project integrating project specifications/constraints, circuit analysis and design, component selection, and design tradeoffs resulting in an end product for a customer
Introduction to Signal Processing This course introduces system-level analysis tools for analyzing signal and system performance using time and frequency domain techniques. Focusing primarily on digital systems, the course covers analog-digital conversion, digital systems, the z-transform, discrete Fourier transform, as well as filter design and analysis.
Discrete Mathematics with Applications This course introduces students to fundamental concepts in discrete mathematics and their application to solve problems in computer engineering and computer science. Topics include sequential and quantified logic, proof techniques using sets, relations, and functions. Additionally, students will be introduced to the mathematics of recursion and algorithm efficiency, as well as graph, tree, and automata structures
Random Signals This course introduces the student to probability and statistics and applies these concepts to the design and analysis of engineering systems, which inherently have noise (random components to their signals). Topics include the axioms of probability, functions of one and two random variables, moments and conditional statistics, correlation and autocorrelation functions, sequences of random variables, and commonly encountered probability distribution/density functions. Applications are primarily focused on Gaussian and Markov processes, matched filters, Wiener filters, mean square estimation, and parameter estimation.
Microprocessor System Design This course discusses more advanced concepts in microprocessor architecture, programming, and interfacing. Speculative and out-of-order design techniques and theory are presented, as are concepts of locality, data transfer, and communication. A low-level programming language is introduced as well as high-and low-level programming tasks. Interfacing issues between power circuits and microprocessors are introduced as well as techniques for data conversion.
Communication Networks This course introduces the fundamental concepts of analog and digital communication networks and examines applications associated with optical and wireless communications. Using an information theory approach, computer network interconnections are analyzed in terms of efficiency and accuracy. Topics include communication network architecture; protocols, flow control, and routing; local and wide area networks; voice and data communications; data security and integrity; performance evaluation; source and channel coding; compression and decompression technology
Capstone Design I Engineering seniors, operating in design teams, apply principles of the design process to create a product or process to meet the needs of a customer. Projects may originate in industry, as a contest sponsored by a professional society, or in other venues. The design team, with the guidance of a faculty advisor, must plan, direct, conduct, and effectively communicate the results of the design effort through a professional engineering report and oral presentation. The design project will include material within and beyond the curriculum as well as technical and non-technical considerations. Design projects often result in a deliverable prototype
Engineering Cooperative Work Experience Co-op is a graduation requirement for all Engineering students. The student spends a total of three semester terms plus interim periods employed in an industrial organization or enterprise performing engineering-related work. Beginning with the summer term after the students sophomore year, he or she alternates work semesters with academic semesters until the spring semester of the senior year. Co-op employment is coordinated and monitored by the participating faculty member and the industrial mentor. Co-op reports are approved and signed by all three parties. Permission of the instructor is required to withdraw once a student is registered
Analysis of Algorithms This course studies fundamental algorithms, strategies for designing algorithms and mathematical tools for analyzing algorithms. Fundamental algorithms studied in this course include graph algorithms; algorithms for sorting and searching; hashing; integer arithmetic; and selected combinatorial tasks. Mathematical tools include asymptotic notations and methods for solving recurrences. Algorithm design strategies include the greedy method, divide-and-conquer, dynamic programming, and randomization
Capstone Design II Capstone Design II
Embedded System Design This course emphasizes methods for designing real time software and choosing hardware for embedded computers. Relevant theory and background from real-time systems and computer engineering will be covered in the lectures, including event-based and clock based sampling, switching control, and interrupt and scheduling techniques. Basic microcontroller, sensor, and actuator technologies will be reviewed. In the laboratory, students use tools to design and build a safe, reliable, and robust embedded system
Automatic Control This course introduces fundamental principles and applications of the automatic control of linear, time-invariant systems. Controller design includes the use of root locus plots and frequency domain techniques.  Additionally, students will evaluate these techniques for performance, stability, and compensation
Applied Control This course introduces fundamental principles and applications of applied control. Topics include analytical techniques for digital control, design using transform and state-space methods, and multi-input, multi-output systems. The laboratory is dedicated to hardware implementation of proportional, integral, derivative (PID) control and other advanced controllers, as well as computational methods for discrete system analysis and controller design.
Calculus I  Topics include: limits, continuity, differentiation and integration, applications of the derivative and the integral.
Calculus II Techniques and applications of integration; transcendental functions; indeterminate forms; improper integrals; parametric equations and polar coordinates; sequences and series; Taylor's theorem.
Comprehen. General Chemistry Fundamental laws and theories of chemical reactions. Topics include atomic structure, bonding, theory, stoichiometry, properties of matter; chemical thermodynamics, electrochemistry and kinetics.
Principles of Physics I An introductory course which will include material from mechanics, thermodynamics and waves. Elementary differential calculus will be used.
Calculus I Topics include: limits, continuity, differentiation and integration, applications of the derivative and the integral.
Computing for Engineers This is an introductory course in the foundations of computing, computational thinking, and engineering problem-solving using programming. The course introduces students to the concepts of design and analysis of algorithms and construction of programs for engineering problem-solving. Topics such as arrays, data types and related operations, decision, looping, input/output, functions, files, and plotting.
Program Design for Engineers This course will introduce engineering students to applications for engineering problem-solving and object-oriented programming principles in Electrical and Computer Engineering using standard (ANSI) C and C++.
Composition I This course introduces students to the conventions of academic and professional writing through the rhetorical practices of reading and composing texts. Students will use critical thinking and information literacy skills to develop texts through the processes of writing, revision, and reflection.
Logic Circuit Design Computer systems and digital design principles. Architectural concepts, software, Boolean algebra, number systems, combinational datapath elements, sequential logic and storage elements.
First Year Seminar  Seminar designed to develop foundational information literacy skills and apply them to academic inquiry, academic planning, and campus engagement.
Composition II This course develops students' knowledge of writing beyond the proficiency emphasizing interpreting, evaluating, and synthesizing information to create arguments from a variety of sources using more advanced research methods.
Discrete Mathematics  Covers important discrete mathematical objects such as sets, relations and functions, graphs and trees. An introduction to mathematical logic and reasoning, and the concept of an algorithm and its complexity will be covered.
Ordinary Differential Equations The study of differential equations involving functions of one variable. Topics include: linear and non-linear differential equations, initial value problems, existence and uniqueness theorems, systems of differential equations, stability, computational methods and Laplace transform methods.
Programming Principles I  Provides a fundamental understanding of the development of computer solutions to solve problems with emphasis on structured, top-down development and testing. Concepts include the following: an overview of computer system design, problem solving and procedural abstraction design of computer solutions, algorithm development using simple data types and control structures, implementation and testing of programmed problem solutions, design modularization using subprograms and structured and user-defined data types.
Circuit Analysis I This course introduces the students to the basic concepts of circuit theory and analysis. Topics covered are basic elements and sources, energy and power, Ohm’s law, Kirchhoff’s law, nodal and mesh analysis, Thevenin’s and Norton’s theorems, capacitors, inductors, transient analysis, first-order and second-order circuits.
Principles of Physics II An introductory course which will include electrostatics, electric current and circuits, and electromagnetism, and may also include optics and modern physics. Elementary calculus will be used. Laboratory exercises supplement the lecture material
Introduction to Signal Processing with Lab  This course introduces students to signal processing for discrete-time and continuous-time signals, convolutions, filtering, frequency response, Fourier series, Fourier transform, Laplace transform, and Z-transform to be used in real applications such as in communication systems, image processing, circuits, biomedical engineering and computer engineering. Laboratory emphasizes computer-based signal processing.
Digital Design Lab   Design and implementation of digital systems, including a team design project using CAD tools, discrete chip-set and FPGA. Both schematic and hardware description language are used for digital design.
Programming Principles II Emphasis is on advanced techniques such as recursion, regular expressions, refactoring, object oriented programming concepts and constructs, reusing components, templates/generics, interfaces and classes. Experiences include use of an integrated development environment and shared (code) repositories.
Technical Communication  Teaches students to improve written, oral and visual communication by requiring assignments relevant to their proposed professions. The focus is on the type of communication required by the scientific and engineering discourse communities.
Microcontrollers with Lab Fundamental concepts of microcontroller architecture, including the Central Processing Unit (CPU), memory devices (ROM & RAM), Input/output peripheral devices and sensor interfacing. Students learn to write programs in C and Assembly languages used to implement real practical applications using microprocessors. The course includes laboratory activities in support of instruction.
CORE Capstone Course In this course students will make connections among their core curriculum, their career goals, and their external activities, and articulate how these connections inform their understanding of their place in the world.
Circuit Analysis II w/ Lab The course focuses on advanced topics in circuit analysis and design. Topics include Phasor analysis, three-phase systems, AC steady-state power, transformers, transfer functions, Bode plots, passive and active filters, Laplace and Fourier transforms, and two-port networks.
Systems Software Provides basic concepts of computer software systems including operating systems, language translators, utilities, linkers and loaders, system component interface, diverse programming language concepts, and interfaces.
Advanced Engineering Analysis This course also introduces the basic concepts of statistics and design of experiments such as randomization, replication, blocking, hypothesis Testing, Z-test, t-test, ANOVA, pair-wise comparisons, and randomized complete block designs. Matlab and Minitab software are used to support instruction.
Database Systems The fundamental concepts of database management systems (DBMS) including logical and physical database organization, date models and design issues. Emphasis will be placed upon the rational data model including design and implementation using commercial database systems.
Data Structures Introduction to abstract data types such as lists, stacks, queues, and trees, and algorithm analysis.
Microelectronics with Lab A study of the characteristics and design of bipolar junction and metal oxide semiconductor integrated circuit devices with emphasis on commercial and industrial applications including operational amplifiers, digital logic, and solid state memory.
U.S. A Comprehensive Survey Surveys the United States from precolonial times to the present with special attention to Georgia. Satisfies the Georgia History and U.S.
American Government Surveys government and politics, with additional attention to the government and the Constitution of Georgia. Topics include the constitutional structure of American government, the role of non-governmental institutions such as interest groups and mass media, the role of governmental institutions such as Congress and the Presidency, the operation of major political process such as elections and policy making, and the interaction between institutions and processes.
Computer Syst Design  Digital computers with emphasis on design and simulation are covered including instruction set design, processor implementation, pipelining, cache design, memory hierarchy, and input/output. The course also includes laboratory activities in support of instruction.
Concepts of Health and Physical Activity This course combines health-related content knowledge with weekly participation in fitness or sport based physical activity. The health-related topics may include; behavioral change, personal safety, components of fitness, nutrition and weight management, prevention of chronic disease, mental health and stress management, substance use and abuse, and sexual health.
Rhetoric and Writing. An introductory writing course that includes instruction in practical reasoning and the principles of rhetoric. Three lecture hours a week for one semester.
Engineering Physics I A general survey of physics; primarily laws of motion, heat, and wave phenomena.
Laboratory for Engineering Physics I Two laboratory hours a week for one semester
Engineering Physics II Electricity and magnetism, optics, and atomic phenomena
Laboratory for Engineering Physics II Two laboratory hours a week for one semester
Differential and Integral Calculus.  Introduction to the theory and applications of differential and integral calculus of functions of one variable; topics include limits, continuity, differentiation, the mean value theorem and its applications, integration, the fundamental theorem of calculus, and transcendental functions.
Sequences, Series, and Multivariable Calculus. Certain sections of this course are designated as advanced placement or honors sections; they are restricted to students who have scored well on the Advanced Placement Calculus BC exam or have the consent of the mathematics adviser. This is the second semester of the accelerated calculus sequence. The theory and applications of sequences and infinite series, including those involving functions of one variable, and an introduction to the theory and applications of differential and integral calculus of functions of several variables; subjects include methods of integration, parametric equations, sequences, infinite series, power series, functions of several variables, partial derivatives, and multiple integrals.
Differential Equations with Linear Algebra. Ordinary differential equations, introduction to vector spaces, linear operators and eigenvalues, systems of linear differential equations, introduction to partial differential equations and Fourier series.
Matrices and Matrix Calculations. Restricted to non-mathematics majors. Techniques of matrix calculations and applications of linear algebra.
Discrete Mathematics. Subjects include logic, set theory, relations and functions, combinatorics, and graph theory and graph algorithms.
British Literature. Introduction to masterpieces of the British literary tradition, emphasizing historical, generic, and thematic connections.
Introduction to Electrical Engineering. The scope and nature of professional activities of electrical engineers, including problem-solving techniques; analysis and design methods; engineering professional ethics; analysis of analog resistive circuits, including Thevenin/Norton equivalents, mesh analysis, and nodal analysis; and operational amplifiers (DC response).
Introduction to Computing. Motivated, bottom-up introduction to computing; bits and operations on bits; number formats; arithmetic and logic operations; digital logic; the Von Neumann model of processing, including memory, arithmetic logic unit, registers, and instruction decoding and execution; introduction to structured programming and debugging; machine and assembly language programming; the structure of an assembler; physical input/output through device registers; subroutine call/return; trap instruction; stacks and applications of stacks.
Digital Logic Design. Boolean algebra; analysis and design of combinational and sequential logic circuits; state machine design and state tables and graphs; simulation of combinational and sequential circuits; applications to computer design; and introduction to hardware description languages (HDLs) and field-programmable gate arrays (FPGAs).
Introduction to Embedded Systems. Embedded systems; machine language execution; assembly and C language programming; local variables and subroutines; input/output synchronization; analog to digital conversion and digital to analog conversion; debugging; and interrupts.
Software Design and Implementation I. Basic problem solving, design and implementation techniques for imperative programming; structured programming in the C/C++ language; programming idioms; introduction to software design principles, including modularity, coupling and cohesion; introduction to software engineering tools; elementary data structures; asymptotic analysis
Linear Systems and Signals. Representation of signals and systems; system properties; sampling; Laplace and z-transforms; transfer functions and frequency response; convolution; stability; Fourier transform; feedback; and control applications. Computer analysis using MATLAB or Python.
Engineering Communication. Restricted to electrical engineering majors. Advanced engineering communication skills, with emphasis on technical documents, oral reports, and graphics; collaborative work involving online communication and research. Three lecture hours a week for one semester.
Probability and Random Processes. Probability, random variables, statistics, and random processes, including counting, independence, conditioning, expectation, density functions, distributions, law of large numbers, central limit theorem, confidence intervals, hypothesis testing, statistical estimation, stationary processes, Markov chains, and ergodicity. Three lecture hours a week for one semester.
Introduction to Engineering Design. Introduction to the engineering design process; assessing engineering problems and customer needs; acquiring, documenting, and verifying requirements; high-level system design principles; effects of economic, environmental, ethical, safety, and social issues in design; writing design specifications.
Algorithms Advanced problem solving methods; algorithm design principles; complexity analysis; study of the nature, impact, and handling of intractability; study of common algorithmic classes and their applications.
Embedded Systems Design Laboratory.  Design of microcontroller-based embedded systems; interfacing from both a hardware and software perspective; and applications, including audio, data acquisition, and communication systems
Software Design and Implementation II. Methods for engineering software with a focus on abstraction; specification, design, implementation, and testing of object-oriented code using a modern development tool-set for complex systems; design and implementation of object-oriented programs in Java; abstract data types; inheritance; polymorphism; parameterized types and generic programming; the operation and application of commonly used data structures; exception handling and fault tolerance; introduction to algorithm analysis; teamwork models.
Computer Architecture. Characteristics of instruction set architecture and microarchitecture; physical and virtual memory; caches and cache design; interrupts and exceptions; integer and floating-point arithmetic; I/O processing; buses; pipelining, out-of-order execution, branch prediction, and other performance enhancements; design trade-offs; case studies of commercial microprocessors. Laboratory work includes completing the behavioral-level design of a microarchitecture.
Data Science Principles. Principles of unsupervised and supervised learning; exploratory data analysis; feature engineering; predictive modeling for regression and classification; clustering algorithms; neural networks and stochastic gradient descent methods; scalable models for Big Data sets; case studies; programming predictive models in Python and R.
Data Science Laboratory.  Predictive modeling, regression and classification, data cleaning and preprocessing, feature engineering, unsupervised methods, principal component analysis, data clustering, model selection and feature selection, entropy and information theory, neural networks, deep learning, machine learning for signals and time-series data.
Digital Signal Processing. Sampling, aliasing, truncation effects; discrete and fast Fourier transform methods; convolution and deconvolution; finite and infinite impulse response filter design methods; Wiener, Kalman, noncausal, linear phase, median, and prediction filters; and spectral estimation.
Real-Time Digital Signal Processing Laboratory Architectures of programmable digital signal processors; programming for real-time performance; design and implementation of digital filters, modulators, data scramblers, pulse shapers, and modems in real time; and interfaces to telecommunication systems.
Wireless Communications Laboratory. The fundamentals of wireless communication from a digital signal processing perspective; linear modulation, demodulation, and orthogonal frequency division multiplexing; synchronization, channel estimation, and equalization; communication in fading channels; and wireless standards.
Software Engineering and Design Laboratory. The design and development of large-scale software systems using automated analysis tools. Generation of concrete software engineering artifacts at all stages of the software life-cycle. Design principles and methods; design and modeling tools; collaborative development environment; object-oriented design and analysis; design patterns and refactoring; integration and testing tools; debugger and bug finder; program comprehension; software life-cycle and evolution.

Introduction to Electrical Engineering An introductory course to Electrical & Computer Engineering topics including electronic terms, numbering systems, software tools, and documentation practices. College algebra and trigonometry are strongly recommended.
Introduction to Engineering Introduction to engineering for students in the pre-engineering program. Engineering as a profession and career opportunities.
Introduction to Electrical Circuits The basics of analog circuits as an introduction to Electrical Engineering. Concepts of voltage, current, power, resistance capacitance and inductance. Circuit analysis techniques such as Kirchhoffs Laws, node voltages, and mesh currents. Thevenins and Nortons equivalent circuits, sinusoidal steady state and phasors
Fundamentals of Electrical Circuits Fundamental electric-circuit techniques including: time domain transient responses for 1st and 2nd order circuits, Laplace transforms, Fourier series, and filters
Digital Circuits An introduction to digital electronics, integrated circuits, numbering systems, Boolean algebra, gates, flip-flops, multiplexers, sequential circuits, combinational circuits, and computer architecture. Introduction to hardware description language and programmable logic devices. Lecture and lab combination. Laboratory activities to include the design, construction, analysis, and measurement of basic digital systems.
Digital Circuits An introduction to digital electronics, integrated circuits, numbering systems, Boolean algebra, gates, flip-flops, multiplexers, sequential circuits, combinational circuits, and computer architecture. Introduction to hardware description language and programmable logic devices. Lecture and lab combination. Laboratory activities to include the design, construction, analysis, and measurement of basic digital systems.
Engineering Seminar An engineering seminar course designed to prepare the student for professional engineering employment. Topics to include resumes, hiring criteria, interviewing techniques, engineering ethics, professional and societal responsibilities, lifelong learning, diversity, creative problem solving, goals, quality, timeliness, and continuous improvement.
Project Management Project Management course is designed to prepare students for the senior capstone project.  The course will include development of a contract, goal setting, time management, budgeting, project funding, project leadership and team building principles.  Engineering economics, team work, quality statistics and continuous improvement will also be discussed.  Other topics include project life cycles, organization and risk management.
Microelectronics I Fundamental semiconductor device characteristics including diodes, MOSFETs and bipolar transistors; small and large signal characteristics and design of linear circuits. Lecture and lab combination. Laboratory activities to include the design, construction, computer simulation, and analysis of semiconductor circuits, amplifiers and power supplies.
Signals and Systems Topics related to the analysis of linear time invariant continuous and discrete systems and signal transformations, convolution, frequency spectra, Laplace transforms, Z transforms, and fast Fourier transforms. Lecture and lab combination. Laboratory activities to include the computer simulation, analysis, and numerical modeling of signals and systems
Digital Systems Introduction to microprocessor architecture, arithmetic logic units, memory systems, input/output interfaces, peripheral devices, and communication. Lecture and lab combination. Laboratory activities to include the programming and operation of microprocessor circuits.
Embedded Systems Design and implementation of a microcontroller or microprocessor embedded system including assembly language programming, interfacing to peripherals, interrupt handling and debugging techniques. Lecture and Lab. Laboratory exercises build toward a final embedded systems project.
Internship Internship
Senior Project I Senior Project I
Senior Project II Senior Project II
Control Systems Topics related to control theory, analysis, and testing of systems in the time domain, frequency domain and state space. Lecture and lab combination.
Structured Computing in a Selected Language Introduction to structured problem solving using objects, data enumeration and encapsulation in a selected language. The language for a particular instance of this course will be based upon demand.
Programming I This course covers basic operating system navigation and components of the program development process. The majority of the course covers basic problem solving and program design of a software application using a selected language. Topics presented and discussed depending on selected language include: thinking logically to solve problems, working with input/output devices, compilation and library use, structured programming and modularity concepts, conditional and iterative structures including recursion, object oriented design, data types and structures, and pointers.
Object-Oriented Programming An introduction to the C++ language. Topics will include data types, control structures, functions, pointers, arrays, I/O streams, classes, objects, encapsulation, overloading, inheritance and use of these concepts in problem solving.
Computational Structures An overview of the fundamentals of algorithmic, discrete mathematics applied to computation using a contemporary programming language. Topics include sets, functions, logic, matrices, relations, graphs, trees, regular expressions, grammars, finite state machines, and data encoding.
Introduction to Data Structures and Algorithms General principles of common data structures and design of efficient algorithms. Topics include: arrays, linked-lists, stacks, queues, trees, graphs, tables, storage and retrieval structures, searching, sorting, hashing, and algorithmic analysis. Emphasis will be on abstraction, efficiency, re-usable code, and object-oriented implementation
Computer Architecture/Organization Computers are essential to modern life, yet most people use them with no understanding of how they accomplish everything they do. This course will explore how computers function from a technical perspective, allowing students to see why they work and are designed the way they are. The course will focus on Von Neumann computers, covering a variety of topics including logic gates, basic digital circuit concepts, number and data representation, the processor implementation, BIOS, buses, interrupts, addressing, memory management, and storage. The practical implementation of this knowledge will be examined by introducing assembly language code.
Operating Systems An overview of computer operating system from the programmers point of view. Input-output hardware, interrupt handling, properties of external storage devices, associative memories and virtual address translation techniques, optimizing programs for performance, concurrent programming with threads, and network programming.
Digital VLSI Design Introduction to Digital VLSI design.  Includes the development of standard cell library of common CMOS circuits.  Use of hardware description language and CAD tools for the design and simulation of custom large-scale digital systems.  Students will understand the impacts and tradeoffs from speed, power consumption, and thermal properties of large-scale custom ICs.
Advanced Semiconductor Devices  Introduction to advanced semiconductor physics and devices.  Topics include carrier transport theory, energy band diagrams, PN junctions, metal-semiconductor junctions, BJTs and MOSFETs.  Study of current semiconductor process technologies and discussion of off-roadmap technologies.
Digital Signal Processing Theory, application, and implementation of digital signal processing (DSP) concepts, from the design and implementation perspective. Topics include: Fast Fourier transforms, adaptive filters, state-space algorithms, random signals, and spectral estimation
Image Processing Advanced image processing theory and methods. Topics include digital image formation, transformation, filtering, enhancements, segmentation and morphological processing.  Lectures, computer assignments and project
Professional and Technical Writing This course introduces students to the basic theories and practices of technical communication. Using audience, purpose, and context as their guides, students create various professional and technical documents, such as formal and informal reports, instructions, proposals, job application materials, brochures, web media, and presentations
Business Communication Application of oral and written communication, including diversity and international aspects of communication
Calculus II Transcendental functions, techniques of integration, analytic geometry, infinite series.
Linear Algebra and Differential Equations Introduction to Linear Algebra and Differential Equations. Systems of linear equations, matrices, vector spaces, eigenvalues. First and second order differential equations and models, higher order linear equations, linear systems.
Elementary Linear Algebra Systems of linear equations, matrices, vector spaces, eigenvalues linear transformations, orthogonality.
Ordinary Differential Equations Methods of solution for ordinary differential equations. Exact equations, linear equations Laplace Transforms, series solutions.
Probability and Statistics I Introductory probability theory and mathematical statistics, including applications
Physics for Scientists and Engineers II Second semester of a two semester sequence in calculus-based physics. This semester covers topics in electricity and magnetism, electromagnetic waves, light and optics, relativity, and quantum, atomic, and nuclear physics.

The Bible and the Gospel An introductory course on the nature of the Bible, helpful tools for biblical interpretation, biblical practices that engender growing in spiritual maturity, and the Gospel-sharing task of all believers. Topics of emphasis include the content and appeal of the Gospel, the Holy Spirit’s role in inspiring the Bible and in applying the Bible to the believer’s life, gaining a valid interpretation of the author’s textual meaning, and the role of the local church in spiritual growth.
Chemistry for Engineers Fundamental concepts of chemistry are developed with applications of chemistry to engineering disciplines. Students learn measurement, number handling, the Periodic Table, descriptive properties of atoms, elements, molecules, and ions, chemical reactions, stoichiometry, chemical bonding, equilibrium, thermodynamics, gas laws, and the nature of solids and liquids.
Fundamentals of Speech Public speaking and strong verbal communication skills are critical components of many careers. Students learn to inform others about ideas, advocate for a position, work in groups and teams, listen and critique messages, and practice conflict resolution. These skills are imperative to prepare students for an increasingly diverse workforce.
Object-Oriented Design Using C++ Further development of student problem solving and programming skills beyond CS-1210 by increased exposure to the C++ language features including pointers, object-oriented language contructs and design principles, memory management mechanisms, exception handling, event-driven programming, and graphical user interfaces (GUI).
C++ Programming Introduction to computer programming, software engineering principles, structured program design and implementation, using the C++ programming language; students will become familiar with common commands for managing the file system and constructing programs in the Linux operating system.
Digital Logic Design Introduction to digital logic design, number systems, Boolean algebra, Karnaugh maps, computer simulation tools, combinational network design, flip flops, counters, state machines, and sequential networks.
Circuits Introduction to basic circuit analysis using Ohm’s law, Kirchoff’s laws, independent and dependent sources, Thévenin and Norton equivalency and source transformations, transient responses in RC, RL, and RLC circuits, phasor analysis of RLC circuits, power in AC circuits, introduction to 3-phase circuits, mutual inductance, frequency response, Transforms, Laplace circuit analysis, Fourier Series, and introduction to transfer functions. Computer simulations and bread-board circuits are constructed and evaluated in the laboratory.
The Engineering Profession Introduction to the basic concepts and skills necessary to function effectively as a Christian engineer; ethical and moral issues in engineering practice and engineering computer applications.
Engineering Graphics Introduction to basic techniques of sketching, drawing, dimensioning, multiple views, sectioning, multi-view projections, and pictorial views. Introduction to commercial software for threedimensional solid modeling and preparing engineering drawings.
Calculus I First course of a two-course sequence covering basic concepts of analytic geometry and single variable calculus. Includes limits and single variable calculus. Includes limits and derivatives of algebraic and transcendental functions, applications of the derivative, single variable integration, including the Fundamental Theorem of Calculus and integration by substitution, and applications of integration, including solving differential equations and finding volumes of revolution.
Calculus II The second course of a two-course sequence covering the basic concepts of analytic geometry and single variable calculus. Includes techniques of integration such as integration by parts, trigonometric substitution and partial fractions, improper integrals and L’Hopital’s rule, sequences, series, expansion of functions into Taylor and power series, conic sections, plane curves, calculus of parametric equations and polar coordinates, vectors and geometry in three-space, vector-valued functions and curvature.
General Physics I Basic concepts of mechanics using calculus. This is the first of a three-course sequence intended for students in the physical sciences and engineering programs. Topics include linear and rotational motion in three dimensions, oscillatory motion, gravitation, fluid mechanics, and basic concepts of wave motion
Old Testament Literature Survey of the entire Old Testament, giving special attention to authorship, historical background, and the theme of each book with attention to literary genre. This study traces the history of the Hebrew nation from its origin to the time of Jesus Christ.
Data Structures Using Java Introduction to the proper use of data structures for developing efficient software; data structures include stacks, queues, priority queues, hash tables, trees, and graphs. Students will develop skill in object-oriented design and the Java programming language.
Operating Systems A state-of-the-art survey of operating system principles. Covers fundamental technology and contemporary design issues such as threads, real-time systems, multiprocessor scheduling, distributed systems, and security. Course content is developed through lectures, student research of the relevant literature, presentations, and programming projects using both C++ and Java.
Computer Architecture Introduction to computer architecture with an emphasis on hardware, RISC vs. CISC, pipeline and vector processing, I/O, and memory hierarchy including caches. Students design and construct a small microprocessor using a logic simulator and then write an assembler for their processor.
Statics and Mechanics of Materials Introduction to analyzing forces in isolated and connected rigidbody systems; vector analysis, forces, moments, resultants, twoand three-dimensional equilibrium, centroids, distributed loading, moment of inertia, friction, trusses, frames, and machines. Introduction to the theoretical and experimental analysis of deformable bodies subject to applied loads; normal and shear stress and strain, strain energy, torsion, stresses in beams, deflection of beams, combined stress, stress transformation, failure theories, and buckling of columns. Design project required.
Composition Designed to assist the student in developing the skills necessary to meet the demands of typical writing situations, both academic and professional. The course will introduce the student to the common expository writing methods of description, narration, analysis, persuasion, and research presentation.
Discrete Math for Computer Science An introduction to mathematical foundations of computer science, including propositional and predicate calculus, methods of proof, sets and relations, recurrences, graphs and trees, and program correctness and proofs
Differential Equations Study of the standard techniques employed in the solution of differential equations with emphasis on those arising from physical problems.
General Physics II Basic concepts of electricity and magnetism, light, and optics using calculus. This is the second of a three-course sequence intended for students in the physical sciences and engineering programs. Topics include electricity, magnetism, Maxwell’s equations, DC and AC circuits, geometrical and physical optics.
Physical Activity and Healthy Living Study of the role of physical activity in the Christian life from a scriptural, physiological, and psycho-sociological perspective.
New Testament Literature Survey of the entire New Testament, including the historical background of the Inter-Testamental period, giving special attention to main events, the authorship and content of each book with attention to literary genre, and the unfolding of God’s redemptive purpose through the Lord Jesus Christ.
Theology I An introductory reflection on the theological task, the doctrines of the triune God, creation and humanity, revelation, and sin by means of a conversation between the Bible and classic and contemporary theological literature. This theological reflection will be brought to bear on contemporary challenges.
Algorithms Introduction to classical algorithms that have broad application in solving computer science problems; topics include analysis of algorithms, advanced data structures, graph algorithms, numerical methods, and NP-completeness.
Microcontrollers Introduction to the fundamentals of microcontrollers and embedded systems, including microcontroller architecture, assembly and C programming, peripheral interfacing, data communications, and the cybersecurity concerns associated with microcontrollers and embedded systems.
Advanced Digital Logic Design Advanced treatment of digital logical design techniques and practices with emphasis on rapid electronic prototyping and effective use of advanced computer-aided design tools; schematic, textual, and VHDL design entry; arithmetic circuits, advanced finite-state machines, and advanced controller implementations. Three lecture hours per week with periodic integrated laboratory; multiple projects and laboratory experiences including a class design contest usually involving a robot.
Linear Systems Introduction to linear time-invariant analysis of continuous and discrete-time systems, using both time and frequency domain methods that include convolution, Fourier Series, Fourier, Laplace, and Z transforms; classical and computer solution methods are utilized.
Electronics I Introduction to semiconductor electronic device theory and applications. Topics include ideal and nonideal operational amplifiers, diodes, field-effect transistors (FETs), and bipolarjunction transistors (BJTs).
Professional Ethics Introduction to the theories of morality and philosophical issues of determining what is true and what is good. Applications are made to professional conduct, engineer-client relations, and product liability. Legal problems and the engineering code of ethics are discussed from a biblical perspective.
Politics and American Culture This course serves as an introductory study of America’s constitution and political institutions, with emphases on political participation, political culture, and public policy
Introduction to the Humanities Historical study of the relationship of music, art, and literature to the dominant cultural, religious, and philosophical trends and their relationship to Christian theism.
Design of Wood Structures Extension of structural design theory to cover design of wooden structures. Examination of both ASD and LRFD design criteria and both national and international design codes. Includes structural detailing and computer based structural analysis.
World Mythology Study of mythologies, the theories of myth and myth making, and the incorporation of myth in selected literary works.
Theology II An introductory reflection on the theological task, the doctrines of Christ, salvation, the Holy Spirit, the Church, and last things by means of a conversation between the Bible and classic and contemporary theological literature. This theological reflection will be brought to bear on contemporary challenges with a focus on developing the students’ practice of theological thinking.
Advanced Computer Architecture Advanced study of computer architecture with an emphasis on performance, performance metrics, benchmarks, integer and floating point concepts, data-path and control, super-scalar processing and pipelining, memory hierarchy, I/O and peripherals, vector, array and parallel processors, and multiprocessors.
Computer Networks This course is an introduction to computer networking. The course will present the layered network architecture of the internet and examine the services and functions that each layer performs. The wellknown protocols of each layer will be explored in-depth through written homework, programming assignments, and packet-capture labs (using Wireshark, for example). Important fundamental networking topics will be emphasized such as packet switching, addressing, performance measurement, reliable data transfer, and routing. Additional topics such as peer-to-peer networking, wireless and mobile networking, and the history of the internet will also be addressed.
Computer Engineering Senior Design I Design and development of electronic products to meet specific requirements. Introduction to computer system design, power supply design, hardware-software co-design, software engineering, system performance trade-offs, electronic design tools, prototype methods, estimating and managing time and cost constraints, and project management.
Computer Engineering Senior Design II Student teams will complete their capstone project, submit weekly progress reports, prepare a formal final report, and make a formal design review presentation.
Senior Seminar Required weekly meeting of senior engineering and computer science majors to discuss the transition into the professional work environment.
Thermal Systems Introduction to engineering thermodynamics, properties of pure substances, work, heat, enthalpy, and first law of thermodynamics. Introduction to conduction and convection modes of heat transfer.
Introduction to Biology Structure and function of plant and animal cells with emphasis in central concepts.
CMOS VLSI Design Introduction to CMOS VLSI design with emphasis on circuit analysis, modeling, mask layout, simulation, and design verification; both theoretical concepts and CAD tools are used together for circuit design and verification.
United States History I Survey and analysis of the development of the United States from the colonial period through Reconstruction. The course examines ethnic, social, military, political, economic, and ideological themes in order to achieve a broad understanding of American civilization to 1877. Attention is given to the dominant Christian influences that have tended to shape our cultural, social, and political development.
Introduction to Arabic Language and Culture Introduction of the Arabic script and basic vocabulary used for greetings and other everyday situations. Introduction to various aspects of Arab culture, including history, religion, literature, politics, and daily life.
Calculus I Introduction to calculus, including functions, limits, continuity, derivatives and applications of the derivative, sketching of graphs of functions, definite and indefinite integrals, and calculation of area. The course is especially recommended for science, engineering and mathematics majors.
Calculus II Continuation of MATH140, including techniques of integration, improper integrals, applications of integration (such as volumes, work, arc length, moments), inverse functions, exponential and logarithmic functions, sequences and series.
Differential Equations for Scientists and Engineers An introduction to the basic methods of solving ordinary differential equations. Equations of first and second order, linear differential equations, Laplace transforms, numerical methods and the qualitative theory of differential equations.
Discrete Structures Fundamental mathematical concepts related to computer science, includin finite and infinite sets, relations, functions, and propositional logic. Introduction to other techniques, modeling and solving problems in computer science. Introduction to permutations, combinations, graphs, and trees with selected applications.
General Physics: Mechanics and Particle Dynamics First semester of a three-semester calculus-based general physics course. Laws of motion, force, and energy; principles of mechanics, collisions, linear momentum, rotation, and gravitation.
General Physics: Vibration, Waves, Heat, Electricity and Magnetism Second semester of a three-semester calculus-based general physics course. Vibrations, waves, fluids; heat, kinetic theory, and thermodynamics; electrostatics, circuits, and magnetism.
General Physics: Vibrations, Waves, Heat, Electricity and Magnetism (Laboratory) Lab includes experiments on mechanics, vibrations, waves, heat, electricity and magnetism.
General Chemistry for Engineers The nature and composition of matter, solutions, chemical reactions, equilibria, and electrochemistry, with applications to various fields of engineering.
Introduction to Engineering Design Students work as teams to design and build a product using computer software for word-processing, spreadsheet, CAD, and communication skills.
Introduction to Electrical & Computer Engineering An exploration of topics within Electrical & Computer Engineering (ECE). Students will be introduced to key elements of both the Electrical Engineering and Computer Engineering curriculum, including: circuits, computing systems and software, communications and controls, electrodynamics and waves, microelectronics, signal processing, and power systems.
Technology and Consequences: Engineering, Ethics, and Humanity What makes a technology socially responsible? At UMD, the Fearless Ideas campaign asks us to aim our enthusiasm for technology at big real problems. At the same time, we are coming to appreciate the increasingly complex nature of technological systems as they become integrated into all forms of infrastructure, we realize they may be unpredictable, interdependent on social and biological systems, and have unintended consequences. In this midst of this complexity, people make decisions with far reaching impacts. How then do we follow our passion for technology and innovation but also stay skeptical in a way that allows us to consider the potential and shortcomings of technology? Designed for both engineering and non-engineering students wishing to explore and assess the impact of engineering technology on society and the role of society in generating that technology.
Electric Circuits Design, analysis, simulation, construction and evaluation of electric circuits. Terminal Relationships. Kirchoff's laws. DC and AC steady state analysis. Node and mesh methods. Thevenin and Norton equivalent circuits. Transient behavior of first- and second-order circuits. Frequency response and transfer functions. Ideal op-amp circuits. Diode and transistor circuits.
Elements of Discrete Signal Analysis Discrete-time and continuous-time signals, sampling. Linear transformers, orthogonal projections. Discrete Fourier Transform and its properties. Fourier Series. Introduction to discrete-time linear filters in both time and frequency domains.
Digital Logic Design The design and analysis of combinational and synchronous sequential systems comprising digital logic gates and flip-flop memory devices; underlying tools such as switching and Boolean algebras and Karnaugh map simplification of gate networks; design and use of decoders, multiplexers, encoders, adders, registers, counters, sequence recognizers, programmable logic arrays (PLAs), read-only memories (ROMS, PROMS), and similar devices. Arbitrary radix conversion.
Digital Circuits and Systems Laboratory Introduction to basic measurement techniques and electrical laboratory equipment (power supplies, oscilloscopes, voltmeters, etc.). Design, construction, and characterization of digital circuits containing logic gates, sequential elements, oscillators, and digital integrated circuits. Introduction to digital design and simulation with the Verilog Hardware Description Language (HDL).
Analog and Digital Electronics Conceptual operation of transistors and diodes. Large and small signal operation of BJTs and MOSFETs. Basic transistor configurations. Logic circuits and semiconductor memory. Multi-transistor circuits including differential amplifiers and current mirrors. Frequency response.
Engineering Probability Axioms of probability; conditional probability and Bayes' rules; random variables, probability distribution and densities: functions of random variables: weak law of large numbers and central limit theorem. Introduction to random processes; correlation functions, spectral densities, and linear systems. Applications to noise in electrical systems, filtering of signals from noise, estimation, and digital communications.
Computer Organization  Structure and organization of digital computers. Registers, memory, control and I/O. Data and instruction formats, addressing modes, assembly language programming. Elements of system software, subroutines and their linkages.
Digital Computer Design Hardware design of digital computers. Arithmetic and logic units, adders, multipliers and dividers. Floating-point arithmetic units. Bus and register structures. Control units, both hardwired and microprogrammed. Index registers, stacks, and other addressing schemes. Interrupts, DMA and interfacing.
Object-Oriented Programming II Introduction to use of computers to solve problems using software engineering principles. Design, build, test, and debug medium -size software systems and learn to use relevant tools. Use object-oriented methods to create effective and efficient problem solutions. Use and implement application programming interfaces (APIs). Programming done in Java.
Introduction to Computer Systems Introduction to the interaction between user programs and the operating system/hardware. Major topics include C programming, introductory systems programming, and assembly language. Other concepts covered include UNIX, machine data representation, thread management, optimization, and virtual memory. Programming is done in the Linux Environment.
Organization of Programming Languages A study of programming languages, including their syntax, semantics, and implementation. Several different models of languages are discussed, including dynamic, scripting (e.g., Ruby, Python) functional (e.g., OCaml, Haskell, Scheme), and memory safe systems programming (e.g., Rust). Explores language features such as formal syntax, scoping and binding of variables, higher-order programming, typing, and type polymorphism. Introduces finite automata, context free grammar, parsing, lambda calculus, and basics of security attacks and software security.
Algorithms  A systematic study of the complexity of some elementary algorithms related to sorting, graphs and trees, and combinatorics. Algorithms are analyzed using mathematical techniques to solve recurrences and summations.
Operating Systems A hands-on introduction to operating systems, including topics in: multiprogramming, communication and synchronization, memory management, IO subsystems, and resource scheduling polices. The laboratory component consists of constructing a small kernel, including functions for device IO, multi-tasking, and memory management.
Technical Writing The writing of technical papers and reports.
Capstone Design Project:Microprocessor-Based Design his course provides a team-based experience in the design and implementation of a microprocessor-based system to solve a real-world problem. A product specification or client requirement forms the basis for the student teams development of an initial technical design specification. The team then divides into smaller groups for the parallel development of hardware and software subsystems of the product device. Upon completion and test of the various subsystems, software and hardware components are integrated into the system prototype and the system is tested and documented.
Capstone Design Project: Modern Digital System Design A real-world digital system design experience that prepares students for careers in FPGA and ASIC design. Student teams use the Verilog hardware description language together with industry-standard simulation and synthesis tools to design medium-complexity digital chips that are ultimately configured and tested on FPGAs with real-world applications. Results from these projects will be presented through in-class presentations and written reports.
Capstone Design Project: Mixed Signal VLSI Design This course covers the design of very large scale integrated (VLSI) circuits including analysis and simulation of digital and analog circuits, layout, and component selection. The material involves extensive use of Computer-Aided Design (CAD) tools for circuit simulation and layout and draws upon knowledge from 300-level EE courses Following current industry paradigms, students work in teams to design, thoroughly simulate, and specify physical layout of mixed signal VLSI circuits prior to their fabrication in a foundry.
Capstone Design Project: Multimedia Signal Processing An introductory course on multimedia signal processing bringing real-world design experience to students using state-of-the-art multimedia software and hardware. Lectures will provide basic theories and principles on multimedia compression, processing, communications, security, and recognition.
Capstone Design Project: Autonomous Control of Interacting Robots The course involves students in the design,development, and application of autonomous robotic systems.The robots are 4 wheeled vehicles with on-board sensors (cameras, acoustic sensors),computers and wireless communications capabilities. The students work in teams to program the the robots to accomplish a task individually and in teams of 2 or more robots. Applications vary from semester to semester, including racing with passing, soccer, search and identify.
Capstone Design Project; Electric Cars A capstone course on the design of electric cars, which will be designedwith the objective to participate in the Formula SAE racing competition.This is a system level design course, which will eventually use a combination of off-the-shelf components. The major components inside theelectric car include lectric motor, power inverter, drive circuit, battery management system, sensors and encoders etc. This course will also discuss level simulation of electric vehicle along with the electrical components in Autonomie software.
Capstone Design Project; Electric Bikes A capstone course on the design of safe, light and utilitarian electric bikes for personal transportation. It is systems level and will make use of a combination of off-the-shelf and custom-made components. These vehicles must meet either one of these design challenges such as extended range superior terrain climbing capability. In addition, the vehicle must contain a plethora of wireless sensors for safety and convenience, such as GPS, on-board cameras, theft deterrent systems, communications and navigation. It must be able to operate under different road conditions, at all hours and even in slightly inclement weather.
Intermediate Topics in Computer Engineering; Advanced FPGA System Design using Verilog Intermediate Topics in Computer Engineering; Advanced FPGA System Design using Verilog
Topics in Computer Engineering; Reverse Engineering and Hardware Security Laboratory Topics in Computer Engineering; Reverse Engineering and Hardware Security Laboratory
Integrated Circuit Fabrication Laboratory Characterization of wafers and fabrication steps. Oxide growth, lithography, dopant diffusion, and metal deposition and patterning will be discussed in the lectures and carried out in the lab in fabricating NMOS transistor circuits. The transistor characteristics will be measured and related to the fabrication parameters.
Microelectronics Design Laboratory Students design and build fairly sophisticated circuits, mainly compose of discrete transistors and integrated circuits. Many of the projects are designed to require that students synthesize from what they have learned in many of the disciplines in electrical engineering. Students learn they can actually use their knowledge to build something very practical, which may include a high-fidelity amplifier, a radio, a memory cell, a transmitter, etc.
Communications Design Laboratory This course explores the signal processing and communication system theoretical concepts presented in ENEE 322 Signals and Systems, ENEE 324 Engineering Probability, ENEE 420 Communication Systems, and ENEE 425 Digital Signal Processing by implementing them on actual hardware in real time. In the process, students gain experience using equipment commonly used in industry, such as, oscilloscopes, spectrum analyzers, error rate test sets, channel simulators, digital signal processors, analog-to-digital and digital-to-analog converters, and signal generators. The experiments are based on using a Texas Instruments TMS320C6713 DSP Starter Kit (DSK) stand-alone board that communicates with the PC through a USB port.
Computer Laboratory This laboratory course focuses on the hardware/software interface in computer systems. Hand-on experiments are used to teach design, construction, analysis, and measurement of both hardware and software for embedded systems. Projects emphasize using microcontrollers for control, sensing, and communication through various I/O devices.
Control Systems Laboratory Students will design, implement, and test controllers for a variety of systems. This will enhance their understanding of feedback control and familiarize them with the characteristics and limitations of real control devices. They will also complete a small project. This will entail writing a proposal, purchasing parts for their controller, building the system, testing it, and writing a final report describing what they have done.
Electrical Machines Laboratory Experiments involving single and three phase transformers, induction machines, synchronous machines and D.C. machines.
Senior Projects in Electrical and Computer Engineering Senior Projects in Electrical and Computer Engineering
Lasers and Electro-optic Devices Modern physical optics: Gaussian beams, optical resonators, optical waveguides; theory of laser oscillation, rate equations; common laser systems. Selected modern optoelectronic devices like detectors and modulators. Role of lasers and optoelectronics in modern technology.
Physical Principles of Wireless Communications Physical Principles of Wireless Communications
Topics in Electrophysics; Quantum Phenomena in Electrical Engineering The course provides fundamental understanding of quantum mechanical principles for electrical engineering and nanotechnology applications. It is designed to acquaint electrical and computer engineering students with concepts on which modern electronic and optical devices are based. Topics include: wave phenomena and wave-particle duality, photons and quantum states, entanglement, paradoxes, quantum crytography, Schrodingers equation in 1-dimension, bound states, tunneling, scattering problems, optoelectronic and electronic devices and superconducting Josephson's junctions.
Independent Study in Electrical and Computer Engineering Independent Study in Electrical and Computer Engineering
Renewable Energy Solar Energy Conversion Systems: History of Photovoltaic (PV) Systems, PV Cell, Module and Array Models and Equivalent Circuits, Characteristic Resistance, Fill Factor, Effects of Parasitic Resistances, Mismatch Effects, Shading, Bypass Diodes, Sun Tracking Systems, Maximum Power Point Tracking (MPPT) Techniques, Isolated and Non-isolated Switch-mode DC/DC for PV Systems, Inverter Design and Control, Sizing the PV Panel and Battery Pack in PV Applications. Wind Energy Conversion Systems: Introduction to Wind Energy Harvesting, Horizontal and Vertical Wind Systems, Fundamentals of Wind Energy Harvesting Systems, Variable Speed and Fixed Speed Wind Energy Conversion Systems (WECS), Wind Turbines and Different Electrical Machines in Wind Applications, Induction Machine and Dynamic Model of Induction Machines, Synchronous Generators and Dynamic Model of SG, Control of Wind Energy Conversion Systems.
Power Electronics This course is suitable for undergraduate and graduate students who wan to learn the basic principles of power electronics and its applications. Special emphasis is placed on interdisciplinary nature of power electronics. Strong and intimate connections between power electronics and circuit theory, electronic circuits, semiconductor devices, electric power, magnetic, motor drives and control are stressed.
Power Systems Interconnected power systems, transmission lines, load flow studies, unit commitment and economic dispatch. Three phase networks, machine models. Symmetrical components, fault analysis and unbalanced operation. Power system transients, stability and numerical methods in power system analysis.
Digital Control Systems Introduction to techniques for the analysis and design of linear contro systems and implementation of control systems using digital technology. Topics include linearization, solution of linear equations, z-transforms and Laplace transforms, design of linear controllers, optimal control, and digital implementation of control designs. Students will use MATLAB for the solution of problems and the design of control systems.
Control Systems  Mathematical models for control system components. Transform and time domain methods for linear control systems. Introductory stability theory. Root locus, bode diagrams and Nyquist plots. Design specifications in the time and frequency domains. Compensation design in the time and frequency domain. Introduction to sampled data systems.
Topics in Computer Engineering; CAD Tools Verilog or VDHL hardware description languages (HDLs) and graphical printed ciruit design CAD packages are used to create a digital system implemented on a printed circuit-board. A practical design for hardware incorporating a processor and interface devices is to be created by the student. Simulation is used to explore practical issues of system performance and device resource constraints, and a printed-circuit board proof-of-concept will be produced by the student.
Computer Systems Security Theoretical and practical aspects of computer systems security. Topics covered include symmetric/asymmetric encryption, message authentication, digital signatures, access control, as well as network security, web security and cloud security. Students acquire tools necessary for designing secure computer systems and programs and for defending against malicious threats (e.g., viruses, worms, denial of service).
Microprocessors Microprocessor architectures, instruction sets, and applications. Bus structures, memory, I/O interfacing. Assembly language programming, LSI device configuration, and the embedding of microprocessors in systems.
Topics in Signal Processing; Machine Learning A broad introduction to machine learning and statistical pattern recognition. Topics include: Supervised learning (Bayesian learning and classifier, parametric/non-parametric learning, discriminant functions, support vector machines, neural networks, deep learning networks); Unsupervised learning (clustering, dimensionality reduction, autoencoders). The course will also discuss recent applications of machine learning, such as computer vision, data mining, autonomous navigation, and speech recognition.
Communication Networks The main design issues associated with computer networks, satellite systems, radio nets, and general communication networks. Application of analytical tools of queuing theory to design problems in such networks. Review of proposed architectures and protocols.
Digital Signal Processing Sampling as a modulation process; aliasing; the sampling theorem; the Z-transform and discrete-time system analysis; direct and computer-aided design of recursive and nonrecursive digital filters; the Discrete Fourier Transform (DFT) and Fast Fourier Transform (FFT); digital filtering using the FFT; analog-to-digital and digital-to analog conversion; effects of quantization and finite-word-length arithmetic.
Communication Systems Fourier series, Fourier transforms and linear system analysis; random signals, autocorrelation functions and power spectral densities; analog communication systems: amplitude modulation, single-sideband modulation, frequency and phase modulation, sampling theorem and pulse-amplitude modulation; digital communication systems pulse-code modulation, phase-shift keying, differential phase shift keying, frequency shift keying; performance of analog and digital communication systems in the presence of noise.
Advanced Electronic Devices Advanced devices and their physical operation, providing a thorough description of those parts not usually covered in introductory electronics courses. These include Schottky and tunnel junctions, negative resistance devices used in wireless communication, homo-structure compound semiconductor transistors, hetero-structure (quantum effect) transistors, non-volatile memory devices, photonic devices such as LEDs and solid-state lasers, solar cells, photo-detectors and camera imagers, as well as bio-related components. Special consideration will be given to achieve an understanding of noise processes that limit electronic device performance. In all cases, system-level applications will be illustrated.
Advanced Analog and Digital Electronics Examination of analog and digital device models for analysis, design, and simulation of transistor level electronic circuits, emphasizing Metal Oxide Silicon Field Effect Transistors (MOSFETs); fundamental single transistor configurations; frequency response, feedback, and stability of multi-transistor circuits, such as current mirrors, differential amplifiers, voltage references, operational amplifiers and data converters; complementary Metal Oxide Silicon (CMOS) implementations of static and clocked digital as well as mixed signal circuits.
Electromagnetic Theory Introduction to electromagnetic fields. Coulomb's law, Gauss's law, electrical potential, dielectric materials capacitance, boundary value problems, Biot-Savart law, Ampere's law, Lorentz force equation, magnetic materials, magnetic circuits, inductance, time varying fields and Maxwell's equations.
Introduction to Device Physics  Basic physics of devices including fields in solids, crystal structure, properties of electrons and holes. Current flow in Si using drift-diffusion model. Properties of the pn junction. Properties of devices including BJTs, FETs and their physical characteristics.
Computer & Network Security An introduction to the topic of security in the context of computer systems and networks. Identify, analyze, and solve network-related security problems in computer systems. Fundamentals of number theory, authentication, and encryption technologies, as well as the practical problems that have to be solved in order to make those technologies workable in a networked environment, particularly in the wide-area Internet environment.
Computer Networking  Computer networks and architectures. The OSI model including discussion and examples of various network layers. A general introduction to existing network protocols. Communication protocol specification, analysis, and testing.
Data Structures Description, properties, and storage allocation functions of data structures including balanced binary trees, B-Trees, hash tables, skiplists, tries, KD-Trees and Quadtrees. Algorithms for manipulating structures. Applications from areas such as String Processing, Computer Graphics, Information Retrieval, Computer Networks, Computer Vision, and Operating Systems.
Introduction to Artificial Intelligence Introduces a range of ideas and methods in AI, varying semester to semester but chosen largely from: automated heuristic search, planning, games, knowledge representation, logical and statistical inference, learning, natural language processing, vision, robotics, cognitive modeling, and intelligent agents. Programming projects will help students obtain a hands-on feel for various topics.
Introduction to Machine Learning Machine Learning studies representations and algorithms that allow machines to improve their performance on a task from experience. This is a broad overview of existing methods for machine learning and an introduction to adaptive systems in general. Emphasis is given to practical aspects of machine learning and data mining.
Bioinformatic Algorithms, Databases, and Tools An introduction to the main algorithms, databases, and tools used in bioinformatics. Topics may include assembly and analysis of genome sequences, reconstructing evolutionary histories, predicting protein structure, and clustering of biological data. Use of scripting languages to perform analysis tasks on biological data. No prior knowledge of biology is assumed.
Database Design Students are introduced to database systems and motivates the database approach as a mechanism for modeling the real world. An in-depth coverage of the relational model, logical database design, query languages, and other database concepts including query optimization, concurrency control; transaction management, and log based crash recovery. Distributed and Web database architectures are also discussed.
Game Programming An introduction to the principles and practice of computer game programming and design. This includes an introduction to game hardware and systems, the principles of game design, object and terrain modeling, game physics, artificial intelligence for games, networking for games, rendering and animation, and aural rendering. Course topics are reinforced through the design and implementation of a working computer game.
Computer Vision An introduction to basic concepts and techniques in computervision. This includes low-level operations such as image filtering and edge detection, 3D reconstruction of scenes using stereo and structure from motion, and object detection, recognition and classification.
Computer Graphics An introduction to 3D computer graphics, focusing on the underlying building blocks and algorithms for applications such as 3D computer games, and augmented and virtual reality (AR/VR). Covers the basics of 3D image generation and 3D modeling, with an emphasis on interactive applications. Discusses the representation of 3D geometry, 3D transformations, projections, rasterization, basics of color spaces, texturing and lighting models, as well as programming of modern Graphics Processing Units (GPUs). Includes programming projects where students build their own 3D rendering engine step-by-step.
Introduction to Compilers Topics include lexical analysis, parsing, intermediate representations, program analysis, optimization, and code generation.
Programming Language Technologies and Paradigms Programming language technologies (e.g., object-oriented programming), their implementations and use in software design and implementation.
Introduction to Human-Computer Interaction Assess usability by quantitative and qualitative methods. Conduct task analyses, usability tests, expert reviews, and continuing assessments of working products by interviews, surveys, and logging. Apply design processes and guidelines to develop professional quality user interfaces. Build low-fidelity paper mockups, and a high-fidelity prototype using contemporary tools such as graphic editors and a graphical programming environment (eg: Visual Basic, Java).
Programming Handheld Systems Fundamental principles and concepts that underlie the programming of handheld systems, such as mobile phones, personal digital assistants, and tablet computers. Particular emphasis will be placed on concepts such as limited display size, power, memory and CPU speed; and new input modalities, where handheld systems differ substantially from non-handheld systems, and thus require special programming tools and approaches. Students will apply these concepts and principles in the context of an existing handset programming platform.
Design and Analysis of Computer Algorithms Fundamental techniques for designing efficient computer algorithms, proving their correctness, and analyzing their complexity. General topics include graph algorithms, basic algorithm design paradigms (such as greedy algorithms, divide-and-conquer, and dynamic programming), network flows, NP-completeness, and other selected topics in algorithms.
Elementary Theory of Computation Techniques are developed to determine the difficulty of a problem relative to a model of computation. Topics include Finite Automata, P, NP, decidability, undecidability, and communication complexity.
Introduction to Computational Game Theory Game theory deals with interactions among agents (either human or computerized) whose objectives and preferences may differ from the objectives and preferences of the other agents. It will also provide a comprehensive introduction to game theory, concentrating on its computational aspects.
Selected Topics in Computer Science; Introduction to Wireless Communications and Software-Defined Radio  Selected Topics in Computer Science; Introduction to Wireless Communications and Software-Defined Radio
Computational Methods Basic computational methods for interpolation, least squares, approximation, numerical quadrature, numerical solution of polynomial and transcendental equations, systems of linear equations and initial value problems for ordinary differential equations. Emphasis on methods and their computational properties rather than their analytic aspects. Intended primarily for students in the physical and engineering sciences.
Introduction to Numerical Analysis I Floating point computations, direct methods for linear systems, interpolation, solution of nonlinear equations.
Combinatorics and Graph Theory General enumeration methods, difference equations, generating functions. Elements of graph theory, matrix representations of graphs, applications of graph theory to transport networks, matching theory and graphical algorithms.
Cryptography The theory, application, and implementation of mathematical techniques used to secure modern communications. Topics include symmetric and public-key encryption, message integrity, hash functions, block-cipher design and analysis, number theory, and digital signatures.
Calculus III Introduction to multivariable calculus, including vectors and vector-valued functions, partial derivatives and applications of partial derivatives (such as tangent planes and Lagrange multipliers), multiple integrals, volume, surface area, and the classical theorems of Green, Stokes and Gauss.
Applications of Linear Algebra Various applications of linear algebra: theory of finite games, linear programming, matrix methods as applied to finite Markov chains, random walk, incidence matrices, graphs and directed graphs, networks and transportation problems.
Introduction to Abstract Algebra Integers; groups, rings, integral domains, fields.
Linear Algebra An abstract treatment of finite dimensional vector spaces. Linear transformations and their invariants.
Introduction to Number Theory Integers, divisibility, prime numbers, unique factorization, congruences, quadratic reciprocity, Diophantine equations and arithmetic functions.
Advanced Calculus I First semester of a year course. Subjects covered during the year are: sequences and series of numbers, continuity and differentiability of real valued functions of one variable, the Riemann integral, sequences of functions and power series. Functions of several variables including partial derivatives, multiple integrals, line and surface integrals. The implicit function theorem.
Advanced Calculus II Advanced Calculus II
Linear Algebra for Scientists and Engineers Basic concepts of linear algebra. This course is similar to MATH 240, but with more extensive coverage of the topics needed in applied linear algebra: change of basis, complex eigenvalues, diagonalization, the Jordan canonical form.
Partial Differential Equations Linear spaces and operators, orthogonality, Sturm-Liouville problems and eigenfunction expansions for ordinary differential equations. Introduction to partial differential equations, including the heat equation, wave equation and Laplace's equation. Boundary value problems, initial value problems and initial-boundary value problems.
Complex Variables The algebra of complex numbers, analytic functions, mapping properties of the elementary functions. Cauchy integral formula. Theory of residues and application to evaluation of integrals. Conformal mapping.
Transform Methods for Scientists and Engineers Fourier transform, Fourier series, discrete fast Fourier transform (DFT and FFT). Laplace transform. Poisson summations, and sampling. Optional Topics: Distributions and operational calculus, PDEs, Wavelet transform, Radon transform and applications such as Imaging, Speech Processing, PDEs of Mathematical Physics, Communications, Inverse Problems.
General Physics: Electrodynamics, Light, Relativity and Modern Physics Third semester of a three-semester calculus-based general physics course. Electrodynamics, Maxwell's equations and electromagnetic waves, geometrical optics, interference, diffraction, special theory of relativity, and modern physics. PHYS270 and PHYS271 (lab) must be taken in the same semester.
General Physics: Electrodynamics, Light, Relativity and Modern Physics (Laboratory)  Lab includes experiments on ac circuits, magnetism, light and modern physics.
Principles of Modern Physics A survey of atomic and nuclear phenomena and the main trends in modern physics. Appropriate for students in engineering and other physical sciences.
Special Problems in Physics Special Problems in Physics

Academic Writing and Reading Introduces students to principles of effective written communication and critical reading. Stresses invention, drafting, revising, editing, and self-assessment, along with effective critiquing and collaborating
Technical Communications for Engineers and Computer Scientists A modular approach to oral and written communication of complex technical information to an expert audience. Includes describing technical mechanisms and processes; designing and using tables, graphs, charts, and figures; producing technical proposals, progress reports, feasibility reports, and formal reports; and doing technical briefings.
Calculus I Examines limits, the derivative, differentiation, applications of the derivative, antiderivatives, Riemann sums, the definite integral, and the fundamental theorem of calculus.
Technology and Society Examines and evaluates the consequences of technology on individuals, organizations and society to recognize its benefits, potential, and limitations. Explores current social, ethical, legal and philosophical topics to understand how the Digital Revolution impacts society.
ARTS ARTS
SOCIAL SCIENCES SOCIAL SCIENCES
General Physics I Introductory survey of mechanics for science and engineering students. Uses of interpreting physical phenomena. Topics include vectors, kinematics, dynamics, energy, momentum, rotation, oscillation and thermodynamics.
General Physics II Introductory survey of electricity and magnetism. Uses calculus in interpreting physical phenomena. Topics include electric field and potential, currents, DC circuits, magnetic fields, Faradays law, and optics.
Calculus II Integration techniques, applications of the definite integral, first-order differential equations, vectors and vector operations, parametric equations and polar coordinates, infinite series.
Computer Science I Basic concepts of programming and programming languages. Structured programming, stepwise refinement, and object-oriented development.
Computer Science II Advanced concepts of computer programming. Use of data structures and tools that facilitate programming.
Data Structures and Algorithms Study of the implementation of data structures and control structures in professional computer programs. Introduction to the fundamentals of complexity and analysis. Study of common standard problems and solutions (e.g., transitive closure and critical path). Emphasis on high-level language software design
Operating System Concepts and Usage Provides introduction to Linux and Windows operating systems and system administration. Covers files and directories, ownership and sharing, programs and processes, system calls, libraries, dynamic linking, command line shells, scripting, regular expressions and secure network protocols
Computer Organization Organization and sequential operation of digital computers. Binary and hexadecimal number systems, 2s complement arithmetic, program control, memory organization and hierarchy, addressing modes, stacks and parameter passing, interrupts and traps, I/O devices, DMA, cache, and virtual memory.
Digital System Design Basics of digital computer hardware and design. Topics include switching algebra and switching functions, logic design of combinational and sequential circuits, storage elements, register-level design, and instrumentation. Integrated Writing course
Microprocessor-Based Embedded Systems Introduction to small, special-purpose microprocessor systems. Topics include hardware design issues, software design and implementation, and real-time operating systems.
Operating System Internals and Design Overview of operating systems internals. File-system usage and design, process usage and control, virtual memory, multi user systems, access control. Course projects use C++ language.
Circuit Analysis I Basic elements and laws, circuit analysis techniques and concepts, energy storage elements, first and second order circuits, sinusoidal steady state analysis.
Linear Systems I Continuous-time signals and systems, time domain analysis, Laplace transform, Fourier series, Fourier transform, Bode analysis. Various approaches to system and signal modeling.
Electronic Devices and Circuits Introduction to basic solid-state electronic devices for discrete and integrated circuits. Major topics include carrier flow in semi-conductors, p-n junction theory, semiconductor diodes, bipolar junction transistors, field effect transistors, biasing, introduction to amplifiers, and frequency response.
Differential Equations with Matrix Algebra Introduction to differential equations with matrix theory. Matrices, determinants, vector spaces, least squares solutions, eigenvalues/eigenvectors, matrix diagonalization; first order differential equations, second and higher order linear equations, forced oscillations, systems of linear differential equations, phase plane, and Laplace transforms
Discrete Mathematics for Computing Discrete mathematics useful in computing. Emphasis on mathematical induction, recurrence relations, asymptotic behavior of functions, and algorithm analysis.
Applied Statistics I Introduction to probability, random variables and their expectations, some commonly used discrete and continuous distributions, concept of random sampling and sampling distributions. Use of computer software packages for simulating, summarizing, and displaying data.
Statistics for Engineers Application of statistical techniques to engineering testing, development, and manufacturing. Basic principles of data collection and descriptive statistics; axioms of probability; discrete/continuous random variables and probability distributions; sampling theory; statistical inference; correlation/regression; analysis of variance.
First-Year Seminar First-Year Seminar
Calculus with Analytic Geometry I Differential calculus topics include derivatives and their applications to rates of change, related rates, linearization, optimization, and graphing techniques. The Fundamental Theorem of Calculus, relating differential and integral calculus begins the study of Integral Calculus. Antidifferentiation and the technique of substitution is used in integration applications of finding areas of plane figures and volumes of solids of revolution. Trigonometric functions are included in every topic
General Physics: Mechanics Calculus-based introduction to classical mechanics, including such topics as: measurement, dimensional analysis, motion in one-dimension, vectors, motion in 2 and 3 dimensions, relative and circular motion, force and dynamics, Newton's Laws, friction, kinetic energy, work, potential energy, energy conservation, systems of particles, center of mass and momentum, elastic and inelastic collisions, rotation (moments of inertia), rolling motion, torque, angular momentum, static equilibrium, gravitational force and Kepler's laws, gravitational potential energy, oscillations, waves (transverse and longitudinal, superposition of waves). This course is designed to provide students with a working knowledge of the elementary physics principles mentioned above, as well as their applications, and to enhance their conceptual understanding of physical laws. The exact model of instruction varies at different campuses due to different resources and class sizes. Students attend several class meetings including at least one lab or activity period per week. Use of a combination of computer-based and traditional lab exercises is expected and collaborative learning exercises will be used in both small class sessions. The introduction of data acquisition and analysis methods (often making use of modern computer tools) will be stressed in the laboratory/activity period. Course evaluation is based on a combination assessments such as homework, quizzes, lab reports, midterm and final exams, and other evaluative tools. The course is an important prerequisite for later work in many science and engineering disciplines.
Introduction to Programming Techniques Design and implementation of algorithms. Structured programming. Problem solving techniques. Introduction to a high-level language, including arrays, procedures, and recursion.
English Composition An overview of composition studies, with particular attention to the schools of writing pedagogy.
Health and Physical Activity Health and Physical Activity
Calculus with Analytic Geometry II is the second course in a two- or three-course calculus sequence for students in science, engineering and related fields. Calculus is an important building block in the education of any professional who uses quantitative analysis. This course further introduces and develops the mathematical skills required for analyzing growth and change and creating mathematical models that replicate reallife phenomena. The goals of our calculus courses include to develop the students' knowledge of calculus techniques and to use the calculus environment to develop critical thinking and problem solving skills. This course covers the following topics: logarithms, exponentials, and inverse trigonometric functions; applications of the definite integral and techniques of integration; sequences and series; power series and Taylor polynomials; parametric equations and polar functions.
Intermediate Programming Object-oriented programming, recursion, fundamental data structures (including stacks, queues, linked lists, hash tables, trees, and graphs), the basics of algorithmic analysis, and an introduction to the principles of language translation.
General Physics: Electricity and Magnetism General Physics: Electricity and Magnetism (4) (GN)(BA) This course meets the Bachelor of Arts degree requirements. Calculus-based introduction to classical electricity and magnetism, including such topics as, electric charge and electric fields, Gauss's law, electric potential, capacitance, current, resistance, and circuits, magnetic fields, and fields due to currents, induction and inductance, magnetism of matter, Maxwell's equations, and electromagnetic oscillations.
Chemical Principles I is the first semester of a two-semester, comprehensive general chemistry course which introduces students to the basic principles of chemistry with an emphasis on the relationships between the microscopic structure and macroscopic properties of matter. Principles are illustrated with examples from the sciences, engineering and technology, and from everyday life. Topics covered are atomic structure and periodic properties, molecular compounds and chemical bonding, molecular structure, intermolecular forces, the properties of gases, liquids, and solutions, chemical reactions, stoichiometry and thermochemistry
Experimental Chemistry I Students are introduced to laboratory safety and good experimental technique, how to keep a proper laboratory notebook, and interpret experimental data. The course introduces laboratory experimentation in the context of a variety of specific topics, such as reactions in solutions, spectroscopy, acids and bases, and the synthesis and analysis of chemical compounds.
Ordinary Differential Equations First- and second-order equations; special functions; Laplace transform solutions; higher order equations.
Introduction to Digital Systems Introduction to logic design and digital systems. Boolean algebra, and introduction to combinatorial and sequential circuit design and analysis.
Matrices The initial portion of the course teaches the fundamentals of solving linear systems. This requires the language and notation of matrices and fundamental techniques for working with matrices such as row and column operations, echelon form, and invertibility. The determinant of a matrix is also introduced; it gives a test for invertibility. In the second part of the course the key ideas of eigenvector and eigenvalue are developed. These allow one to analyze a complicated matrix problem into simpler components and appear in many disguises in physical problems. The course also introduces the concept of a vector space, a crucial element in future linear algebra courses. This course is completed by a wide variety of students across the university, including students majoring in engineering programs, the sciences, and mathematics
Introduction to Microeconomics  Introduction to Microeconomics
Effective Speech Introduction to speech communication: formal speaking, group discussion, analysis and evaluation of messages.
Circuits and Devices Introduction to electrical circuit analysis, electronic devices, amplifiers, and time-domain transient analysis.
Calculus and Vector Analysis Introduction to electrical circuit analysis, electronic devices, amplifiers, and time-domain transient analysis.
General Physics: Wave Motion and Quantum Physics General Physics: Wave Motion and Quantum Physics (2) (GN)(BA) This course meets the Bachelor of Arts degree requirements. Calculus-based introduction to the basic concepts of wave motion, geometrical optics, interference phenomena, photons, wave mechanics, and the structure of matter, including such topics as: electromagnetic waves: Poynting Vector, polarization and reflection, geometrical optics: mirrors, refraction, lenses, optical instruments, interference and diffraction, photons and matter waves, energy quantization, structure of matter: hydrogen atom, conduction of electrons in solids, and nuclear physics and nuclear energy.This course is designed to provide students with a working knowledge of the elementary physics principles mentioned above, as well as their applications, and to enhance their conceptual understanding of physical laws. The exact model of course instruction varies at different campuses due to different resources and class sizes. Students attend several class meetings including at least one lab or activity period per week. Use of a combination of computer-based and traditional lab exercises is expected and collaborative learning exercises will be used in small class settings. The introduction of data acquisition and analysis methods (often making use of modern computer tools) will be stressed in the laboratory/activity period. The course is an important prerequisite for later work in many science and engineering disciplines.
Discrete Mathematics for Computer Science Discrete mathematics and foundations for modern computer science. Topics include sets, relations, logic, algorithms, graphs, finite state machines and regular expressions.
Effective Writing: Technical Writing is an advanced writing course designed to help students in science and engineering develop the writing strategies that they will need to communicate successfully on the job and to help them understand why those strategies are appropriate and effective. A key emphasis will be on the rhetorical principles of effective communication, including context analysis and defining clear, actionable purposes. Students will gain experience with a wide range of technical writing genres, including reports, descriptions, definitions, procedures, job application documents, emails, memos, and web applications. Students will also learn about the importance of document and graphic design, including how best to design communications to maximize their potential for success.
Data Structure and Algorithms Fundamental concepts of computer science: data structures, analysis of algorithms, recursion, trees, sets, graphs, sorting.
Advanced Digital Design Theory, design, and implementation of digital circuits based on combinational and sequential circuits; implementation of designs using hardware description language
Electronic and Circuit Design Electronic and Circuit Design
Microprocessors This course is designed to provide students with strong foundation in microprocessor programming and hardware interfacing both in the classroom and laboratory settings. This course is a required course in the Electrical Engineering BS curriculum and is intended to be taken by students who have completed their digital systems and first electronics course requirements. As such, the course integrates materials from the above undergraduate electrical courses in addition to related math, engineering, and science courses.
Statistical Analysis I  Probability concepts; nature of statistical methods; elementary distribution and sampling theory; fundamental ideas relative to estimation and testing hypotheses.
Signals and Systems: Continuous and Discrete-Time Transient response, frequency response, Bode plots, resonance, filters, Laplace transform, Fourier series and transform, discrete-time signals/ systems; sampling z-transform. is a course designed to study the characteristics of continuous and discrete time linear systems. These include signal and power input/output relationships in both domains, impulse responses, and the differential equations that describe these systems. Convolution is an essential component of any linear systems course, therefore several classes will be devoted to this topic in order that students fully understand the concept. Fourier series is used to determine the spectral content of periodic signals thus illustrating how a signal is distributed in frequency. This is very important when determining bandwidth requirements. There will be a brief refresher on the trigonometric Fourier series then the exponential series will be studied extensively. The Fourier transform can be used to determine the spectral content of virtually any signal encountered in the undergraduate curriculum, aperiodic, or periodic. It is also valuable in determining the frequency response characteristics of linear systems. Some filter theory is included in the course along with the Laplace transform. Much of the signal processing performed today is done digitally so the remainder of the course will approach most of the aforementioned topics from the viewpoint of the discrete domain with a strong emphasis on sampling and aliasing. Finite impulse response filters will be introduced along with recursive filters using the bilinear transform method.
VLSI Design Circuits VLSI Design Circuits
Embedded Systems Design Design/development of embedded systems for data acquisition, process control, and special-purpose computing systems; peripheral interfacing, serial/parallel communications and bus systems. CMPEN 352W Microprocessor-based System Design (3) In this course students learn how to design application specific embedded systems. Embedded systems are increasingly important as they are used in industrial applications, personal computing, and consumer products. Embedded systems are based on microprocessors and microcomputers, but are not intended to be general-purpose computers. In the laboratory students will design, implement, and validate application specific embedded systems. Being a writing-across-curriculum course, students will learn effective techniques of reporting their technical designs.
Introduction to Computer Architecture Introduction to Computer Architecture (3) This course will introduce students to the architecture-level design issues of a computer system. They will apply their knowledge of digital logic design to explore the high-level interaction of the individual computer system hardware components. Concepts of sequential and parallel architecture including the interaction of different memory components, their layout and placement, communication among multiple processors, effects of pipelining, and performance issues, will be covered. Students will apply these concepts by studying and evaluating the merits and demerits of selected computer system architectures.
Computer Engineering Design Computer Engineering Design (3) This course prepares senior computer engineering students for industrial engineering design and project management. It covers the engineering design process, project planning and evaluation, engineering ethics, and engineering economy.
Communications Network Data transmission, encoding, link control techniques; communication network architecture, design; computer communication system architecture, protocols
Operating Systems Resource management in computer systems. Process scheduling, memory management, file system design, I/O management, Unix operating system.
Health and Physical Activity Health and Physical Activity
Computer Engineering Project Computer Engineering Project
Introduction to Computer and Electrical Engineering 1 Introduction to computer engineering and electrical engineering through in-class tutorials to support hands-on activities in the computer and electrical engineering disciplines focusing on computer engineering topics relevant to both disciplines.
Foundations in Rhetoric Process-based introduction to applying rhetorical principles to source-based writing and speaking with multimedia for diverse audiences.
Calculus 1 Functions of one variable, limits and continuity. The derivative and the definite integral with applications.
General Physics with Introductory Calculus 1 Survey of classical physics for science and engineering majors. Kinematics in one and two dimensions. Newton's laws of motion and dynamics, including rotation of rigid bodies. Energy concepts in physical systems, harmonic motion and thermodynamics with applications. A command of high school algebra, geometry and trigonometry is assumed.
Introduction to Computer and Electrical Engineering 2 Introduction to electrical engineering and computer engineering through in-class tutorials to support hands-on activities focusing on electrical engineering topics relevant to both disciplines. Guest presentations by EECE instructors and industry representatives describe the education and skills needed for engineering careers in these disciplines.
Introduction to Computer Programming Students are introduced to computer programming with an emphasis on object-oriented programming (OOP) and OOP design methodologies. The students learn about typical programming constructs including data types, data structures, control structures, data input and output techniques as well as several algorithms used for solving engineering problems. In addition, students learn to use modern programming tools in an integrated development environment by focusing on developing software solutions to significant engineering problems.
Principles of Sociology An introductory survey of the discipline including social structures, social institutions, social differentiation and stratification, social power, the processes of human interactions, and methods of sociological investigation.
Calculus 2 The transcendental functions. Techniques of integration including numerical methods. Elementary differential equations. Infinite sequences and series, Taylor Series.
General Physics with Introductory Calculus 2 A survey of classical electromagnetic theory, with an introduction to modern physics. Electricity and magnetism: Coulomb's law, Gauss' law, the electric field and the electric potential, circuits, Ampere's law, Faraday's law, electromagnetic waves.
Electric Circuits 1 Ohm's law and Kirchhoff's laws. Mesh and loop analysis of resistive circuits with DC sources. Source transformations. Thevenin's and Norton's theorems. Natural and step response of first- and second-order circuits. Circuits with ideal op amps.
Circuits Laboratory 1.  Introduction to circuit design, construction, and test. The basics of circuit construction techniques and electronic test measurement skills are covered. Circuit components such as resistors, inductors, capacitors and op-amps are used. Emphasis placed on DC and transient response of circuits.
Professional Development for Engineers Objective is to assist engineering students with their career discernment and to promote professional development. Focuses on the skills needed to secure a job and provides resources and tools to conduct a job search. Topics include: professional development; engineering options; cooperative education and internship opportunities; ethics as well as job search, resume writing, interviewing, professional communication and networking techniques.
General Chemistry 1 Introductory college chemistry. Fundamental principles of chemistry including stoichiometry, physical states of matter, energy relationships, periodic table, atomic and molecular structure and solutions.
Data Structures Introduction to algorithm analysis and complexity theory presented in the context of data structures and the algorithms used to manipulate them. Includes traditional abstract data types, such as lists, stacks, queues and trees; as well as concepts of indexing, hashing and time/space complexity.
Calculus 3 Three-dimensional analytic geometry including parametric equations, vectors and vector functions. The differential and integral calculus of functions of several variables.
Foundations in Philosophy To help students critically engage their own experience as it relates to fundamental philosophical questions about the human condition, focusing on moral value and the meaning and purpose of human life.
Electric Circuits 2 Sinusoidal steady-state analysis. Power in AC circuits. Linear and ideal transformers. Laplace transform methods and circuit analysis applications. Passive and active frequency-selective circuits. Fourier methods. Overview of discrete-time analysis.
Software Methodologies The first course in software engineering, covering the software life cycle, proper selection of data structures and algorithms, and the availability and choice of programming paradigms for appropriate design and implementation of well-engineered software.
Digital Electronics Introduces students to the basic principles of digital circuit analysis and design. Topics covered include: Boolean Algebra, number systems, basic logic gates, standard combinational circuits, combinational design, timing diagrams, flip-flops, sequential design, standard sequential circuits and programmable logic devices.
Circuits Laboratory 2 Circuit design, construction and test skills are expanded to include digital circuits and programmable logic devices as well as passive and active filters. Emphasis placed on DC, AC and transient response of circuits containing passive and active devices.
Differential Equations Methods and techniques applicable to first order, nth order, and systems of first order differential equations. Eigenvalues, eigenvectors, the Wronskian, Laplace transforms, linearization and phase portraits.
Foundations in Theology: Finding God in all Things Investigates the principle that God can be found in all things. How are we to envision God and the virtuous life in light of the theological and scriptural understandings of the prophets, Jesus and human existence from which that Catholic, Jesuit conviction springs? What differentiates a faith understanding from other academic, scientific and secular ways of thinking and drawing conclusions? How are we to assess the merits of theological truth claims? How can the Ignatian imperative to see God in all things translate into an obligation to promote justice in the world? What distinctive set of tools for advancing justice emerge from such an understanding?.
Electronic Devices and Applications Electronic components are discussed including semiconducting diodes, bipolar junction transistors, field effect transistors, etc. These devices are analyzed from their terminal characteristics and their behavior in representative electronic circuits. Applications for devices include simple power supply analysis and design, class A amplifier analysis including transistor biasing and stability analysis, simple digital logic gates, etc.
Introduction to Microcontrollers Laboratory Introduction to the use of microcontrollers and embedded systems with a focus on software and hardware typically encountered in sensor and control applications.
Discrete Mathematics Introduction to set theory, logic, mathematics induction, finite state machines, graph theory, modular arithmetic, Boolean algebra, and coding theory. Applications in computer science are emphasized.
Foundations in Methods of Inquiry Compares and contrasts the approach of three different disciplines to a common theme. Asks students to reflect on what disciplinary methods they find most appealing or challenging, and why.
Computer Hardware Overview of computer system design. Cost and performance specification. Design of arithmetic and logic units. Fundamentals of central processor architecture and a comparative study of computer instruction set architectures. Detailed study of microprocessors, including instruction execution timing and other timing considerations. Discussions of memory and I/O devices, including the interfaces to the CPU and I/O transfer techniques. Study of common bus standards.
Operating Systems and Networking Introduces the fundamental concepts of operating systems together with the basics of networking and communications including: memory management, scheduling, concurrent processing, device management, file systems, networking, security and system performance.
Statistical Methods Probability, discrete and continuous distributions. Treatment of data, point and interval estimation, hypothesis testing. Large and small sample method, regression, non-parametric methods. An introductory applications-oriented course recommended for students who wish to acquire a basic understanding of statistical methods.
Embedded Systems Design This course introduces students to embedded systems, the types of hardware that can support such systems, and the interfacing used in embedded systems. The course is a combined laboratory and lecture course, which directly applies the embedded systems techniques using hardware description and assembly languages to field programmable gate array technology.
Principles of Design Course content focuses on a structured product design and development process that includes project definition, customer needs identification, product specification, concept generation, and concept selection.
Senior Design Project Focus on detailed design, prototyping, and testing design concepts. Includes topics directly relevant to student design projects and careers in the engineering profession.
The Service of Faith and Promotion of Justice Designed to integrate the Marquette core by emphasizing the reflection on and application of knowledge and skills developed in the core for life beyond Marquette University. Special focus on vocation and discernment invites students to evaluate their coursework at Marquette alongside their own worldview and transcendent commitments in order to identify ways they are uniquely equipped to work for justice in the world.
General Chemistry I Provides broad coverage of chemistry principles with inorganic and organic systems applications.
Intro. to Computer Science I Introduces the fundamental concepts of programming from an object-oriented perspective. Topics include simple data types, control structures, array and string data structures, algorithm development, and debugging techniques. Emphasizes good software engineering principles and developing fundamental programming skills in the context of a language that supports the object-oriented paradigm.
College Comp & Rhetoric  A composition course emphasizing expository writing, analytical reading, and academic and civic argumentation in a range of print, oral, and digital genres.
Calculus I Emphasizes physical science applications. Includes plane analytic geometry, differentiation, applications of the derivative, differential equations, integration and applications.
Computer Science I The course emphasizes basic software design, expands the students’ knowledge of programming language syntax, expands the students’ ability to think and design in an object-oriented paradigm. Introduces the students to UML, pseudocode, and simple planning for the design of software. Also introduces the students to templates and the C++ STL.
Statics  Vector statics of particles and rigid bodies, including equilibrium in two and three dimensions, center of gravity, centroids, distributed loads, truss analysis, simple structures and machines, friction, and internal actions.
Calculus II Includes elementary functions, derivatives, integrals, analytical geometry, infinite series and applications.
Engineering Physics I  Provides introduction to physics with calculus for engineering students. Includes classical mechanics, gravitation and mechanical waves. Laboratory sessions illustrate principles studied.
Computer Science II Builds on the introduction to object-oriented programming with an emphasis on algorithms, data structures, and software engineering
Dynamics (1) Vector dynamics of particles and rigid bodies, including impulse-momentum and work-energy.
Electric Circuit Analysis Basic concepts of electric circuit theory, dependent sources, network theorems, first and second order circuits, phasors, three-phase circuits.
Calculus III Applies calculus to situations described by more than one variable. Includes vectors, multivariable equations and functions, parameterization of curves and surfaces, partial derivatives, directional derivatives, the gradient, optimization methods, integration over curves and surfaces using Cartesian, polar, cylindrical, and spherical coordinates, vector fields, and Green’s, Stokes’s, and the Divergence Theorems.
Engineering Physics II Introduction to physics with calculus for engineering students. Includes electricity, magnetism and heat. Laboratories illustrate principles studied.
Computer Organization Introduces students to the organization and architecture of computer systems, beginning with the standard von Neumann model and then moving forward to more recent architectural concepts.
Circuits and Signals Review of sinusoidal steady state analysis and ac power. Mutual inductance and linear transformers. Laplace transform. Laplace transform in circuit analysis. Frequency dependent circuits, including RLC circuit resonance. Magnitude and phase response, complex poles and zeros. Bode plots.
Digital Systems Design Binary logic, digital logic gates, reduction of Boolean expressions, combinational logic design. MSI and LSI combinational logic ICs, flip-flops, synchronous and asynchronous sequential systems design, MSI and LSI sequential system ICs, and algorithmic state machines.
Discrete Structures Introduces the mathematical concepts that serve as foundations of computer science: logic, set theory, relations and functions, graphs (directed and undirected), inductively defined structures (lists and trees), and applications of mathematical induction. Provides an introduction to abstract and rigorous thinking in advanced mathematics and computer science.
Applied Differential Equations I Includes solution of ordinary differential equations, integral transforms. Emphasizes construction of mathematical models arising in physical science and other areas.
Signals And Systems Discrete and continuous-time signals and systems. Topics include linear time-invariant systems; convolution; difference equations; FIR and IIR systems; sampling, aliasing, reconstruction, and quantization. Frequency domain concepts include discrete and continuous Fourier transforms, Z-transforms, system frequency response, Laplace transform properties, and applications of digital filters and DFT analysis.
Electronics I  Physical characteristics and models of semiconductor devices with application to electronic circuit design. Diode circuits, single transistor amplifiers, biasing, and load lines.
HDL Digital Design Hardware Description Language design of digital systems. Industrial CAD tools are used to produce a functional description of hardware that is both simulated and then synthesized into hardware. Methods to describe both combinational logic and synchronous devices are given. Devices such as CPLDs and FPGAs are targeted in this design process.
Electronics II Analysis and design of microwave and RF circuits with applications to communication and radar systems. Review of transmission line concepts and the Smith Chart, scattering parameters, microstrip lines, and matching networks. Analysis and design of microwave and RF amplifiers, oscillators, and mixers.
Probabilistic Signals & Systems Fundamentals of probability and statistics for engineers; reliability in engineering systems; random processes, statistical estimation, auto/cross correlation and power spectral density functions and linear filtering of random signals.
Microprocessors Design of microcomputers, controllers and instruments which use microprocessors. Semiconductor memory design, CPU architecture, bus structure and timing, input-output interfaces and devices, assembly language programming, assemblers, compilers, editors and simulators.
Computer Networks OR Examines network protocols using a top-down approach based on the Internet model. Course focuses on the application, transport, network and link layers. Also covers wireless communication. Discusses problems and current solutions regarding the efficient use of network resources in the global, multi-media Internet.
Network Hardware Basic LANs, Ethernet LAN architecture, and classical Ethernet CSMA/CD MAC protocol. 10Mbps, 100 Mbps, and gigabit Ethernet architecture. Introduction to switching, queuing theory, architecture, design and performance analysis of switch fabrics. Architecture, design, algorithms and performance analysis of Routing.
Electromagnetics A thorough study of static electric and magnetic fields using vector methods with an introduction to dynamic fields.
Senior Design I Students choose a senior design project and complete the preliminary design. This stage of senior design includes investigation of alternative solutions that meet the project's requirements, cost analysis, and building the prototype circuit.
Senior Design I  Students complete the senior design project partially designed in EE 4820. The final result of the senior design project includes assembly of a PC board hardware that meets the project's requirements and final report describing the design procedure, designed hardware and software, and results of final testing.
Network Synthesis Characterization and design specification of analog filters. First and second order passive and active filters. Butterworth and Chebyshev filter responses. Audio frequency active filter synthesis using operational amplifiers.
Digital Signal Processing. Sampling and oversampling A/D's; FIR and IIR digital filter design, effects of quantization, practical realizations; applications of the discrete and fast Fourier Transform (DFT and FFT); correlation, periodograms, window effects, multi-rate techniques, multi-dimensional signal processing, and other topics in digital signal processing.
Semiconductor Materials and Devices Physical properties of semiconductor materials and devices, including crystal lattices and energy bands, carrier generation, transport, and recombination. PN, metal-semiconductor, and heterojunction operation. Field Effect Transistors, including Metal Oxide Semiconductor (MOSFET), Junction (JFET), MEtal Semiconductor (MESFET), and High Electron Mobility (HEMT) transistors. Bipolar Junction (BJT) and Heterojunction (HBT) Transistor operation.
Hardware Digital Signal Processing Hands-on introduction to real-time digital signal processing. Programming DSP algorithms using C on modern DSP hardware. Students gain deep understanding of fundamental DSP concepts by implementing selected applications including sampling, reconstruction, FIR and IIR filters, signal generation, and FFT. Hardware concepts include EDMA, memory maps, interrupts, buffered serial ports.
VLSI Design Introduction to CMOS processing, MOS fundamentals including devices models; switching and timing; analog subcircuits and amplifiers; inverters and CMOS gates; concept of standard cells and fully custom design; use of SPICE, digital simulation, and chip layout and verification software.  /
Integrated Calculus Analysis Geometry I Topics from plane analytic geometry. Introduction to differentiation and integration.
General Chemistry Stoichiometry; atomic structure; periodic properties; ionic and covalent bonding; molecular geometry; gases, liquids, and solids; thermochemistry. Required of students majoring in science and students in engineering. Preparation equivalent to one year of high school chemistry is strongly recommended for students enrolling in this course.
Fundamentals Of Speech Communication A study of communication theories as applied to speech; practical communicative experiences ranging from interpersonal communication and small group process through problem identification and solution in discussion to informative and persuasive speaking in standard speaker-audience situations.
First Year Seminar For Engineers The course will provide the foundations for students enabling them to: learn to succeed, work together in teams, understand the field chosen for study, and orient to the University life and environs.
Elementary Engineering Design An introduction to engineering design
Integrated Calculus Analysis Geometry II Completion of introductory study of topics in plane analytic geometry and the calculus of one variable, infinite series
Mechanics Calculus-based. Statics; uniform and accelerated motion; Newtons laws; circular motion; energy, momentum, and conservation principles; dynamics of rotation; gravitation and planetary motion; hydrostatics and hydrodynamics; simple harmonic motion; wave motion and sound.
English Composition I Emphasis on the organization of the expository theme. Directed writings of themes based on personal experience, on the relationship between experience and language, and on the relationship between experience and ideas.
Software Tools For Engineers Introduction to MATLAB and engineering problem solving with MATLAB. Students will be introduced to arrays, relational and logical operations, control flow of sequence, selection and repetition, function definition, 2-D and 3-D graphics, data analysis, Graphical User Interface (GUI) development and Simulink.
Multivariate Calculus Parametric equations and calculus, solid analytic geometry, vector functions, differential and integral calculus of functions of two or more variables, and an introduction to vector calculus with applications.
Electricity And Optics Heat, kinetic theory, elementary thermodynamics, heat transfer. Electrostatics, AC/DC circuits, electromagnetism, magnetic properties of matter; geometrical and physical optics.
Linear Circuit Analysis I Volt-ampere characteristics for circuit elements; independent and dependent sources; Kirchhoffs laws and circuit equations. Source transformations; Thevenins and Nortons theorems; superposition, step response of 1st order (RC, RL) and 2nd order (RLC) circuits. Phasor analysis, impedance calculations, and computation of sinusoidal steady state responses. Instantaneous and everage power, complex power, power factor correction, and maximum power transfer. Instantaneous and average power
Electronic Measurement Techniques Experimental exercises in the use of laboratory instruments. Voltage, current, impedance, frequency, and wave form measurements. Frequency and transient response. Elements of circuit modeling and design
Programming For Engineers Introductory C programming course. Students will be introduced to basic syntax, standard mathematics library, control structures, user-defined functions, arrays, pointers, structures, and file I/Os. Laboratory exercises will accelerate learning of fundamental materials through supervised practice.
Differential Equations A first course in ordinary differential equations. First order differential equations, linear and nonlinear systems of differential equations, and second order differential equations
Linear Algebra Introduction to linear algebra. Systems of linear equations, matrix algebra, vector spaces, determinants, eigenvalues and eigenvectors, diagonalization of matrices, applications.
Linear Circuit Analysis II Use of Laplace Transform techniques to analyze linear circuits with and without initial conditions. Characterization of circuits based upon impedance, admittance, and transfer function parameters. Determination of frequency response via analysis of poles and zeros in the complex plane. Relationship between the transfer function and the impulse response of a circuit. Use of continuous time convolution to determine time domain responses. Properties and practical uses of resonant circuits and transformers.
Introduction to Digital System Design An introduction to the analysis and design of combinational and sequential digital systems, with an emphasis on practical design techniqes and rapid protoyping on a contemporary programmabe logic device using a modern hardware description language (HDL) and electronic design automation (EDA) software
Object Oriented Programming The C++ and Java programming languages are presented. Students will be introduced to classes, inheritance, polymorphism, class derivation, abstract classes, interfaces, function overloading and overriding, container classes and template classes.
Signals And Systems Classification, analysis and design of systems in both the time- and frequency-domains. Continuous-time linear systems: Fourier Series, Fourier Transform, bilateral Laplace Transform. Discrete-time linear systems: difference equations, Discrete-Time Fourier Transform, bilateral Z-Transform. Sampling, quantization, and discrete-time processing of continuous-time signals. Discrete-time nonlinear systems: median-type filters, threshold decomposition. System design examples such as the compact disc player and AM radio.
Signs And Systems Lab Experiments covering the analysis and design of systems in both the time and frequency domains
Data Structures Data structures describe the way that computer programs organize and store information. This course introduces the specification, representation and manipulation of the basic data structures common to much of computer programming such as: linked lists, arrays, stacks, queues, strings, trees, graphs, search trees, heaps, hash tables, and B-trees
Engineering Economics And Project Management Introduction to principles of engineering project management and techniques. Topics include technical feasibility studies, project specifications, scheduling, validation, lifecycle costing, and economic analysis. The focus is on managing an engineering project through scheduling, budgeting, resource management, execution and control.
Microprocessor System Design And Interfacing An introduction to basic computer organization, microcontroller instruction sets, microcontroller programming using assembly and C language, microcontroller interfacing and peripherals, and embedded system design.
Discrete Mathematical Structures This course is the study of finite and discrete mathematical structures relating to the theory of computation. Topics will include directed and undirected graphs and their relation to these structures, combinatorial problems inherent in computation, Boolean algebra, and recurrence relations
Probabilistic Methods In Electrical And Computer Engineering An introductory treatment including probability of events, discrete and continuous random variables, multiple random variables, sums of random variables and long-term averages, and elementary random processes. Applications involving uniform, Gaussian, exponential, geometric and related random variables. Introduction to parameter estimation and hypothesis testing. Discussion of wide-sense stationary random processes, including correlation functions, spectral densities and the response of linear time invariant systems. Course examples are drawn from signal processing, wireless communications, system reliability, and data science.
Computer Organization And Design Design of computer systems with emphasis on computer hardware. Topics discussed include: Introduction to Basic Design Concepts, Computer Abstraction and Technology, Role of Performance, Instruction Language, Arithmetic for Computers, Processor Data Path and Control, Enhancing Performance with Pipelining, and Exploiting Memory Hierarchy. Students design and implement a RISC processor in the laboratory
Written And Oral Communication For Engineers Course focuses on written and oral communication specifically for the environment, with special attention given to purpose, organization, audience analysis, and appropriate situational protocol. Written work emphasizes technical reports, technical descriptions, research skills, principles of document design, collaborative writing, and routine correspondence. Oral work emphasizes project presentations, conference planning and leadership, and small group dynamics
Analog and Digital Electronics Electronic amplifiers; operational amplifier circuits; diode characteristics and circuit applications; bipolar junction transistor (BJT) and MOSFET characteristics, operating modes biasing, linear amplifier configurations; ideal characteristics of logic devices; basic logic devices using BJTs and MOSFETs
Senior Engineering Design I The senior engineering design courses I and II constitute a two-semester sequence of an interdisciplinary activity. The objective of these courses is to provide engineering students with supervised experience in the process and practice of engineering design. Projects are chosen by the students or the faculty. Students working in teams pursue an idea from conception to realistic design. The course concludes with a substantial written and oral design review before a faculty team. Class discussions will include the ethical responsibility of engineers, impact of engineering solution in a global/societal context, and small-group interactions.
Introduction To Communication Theory Signal analysis, introduction to digital communication and pulse code modulation. Introduction to amplitude modulation and frequency modulation. Introduction to information theory
Software Engineering Design I The design and implementation of larger scale software in Java. Introduction of software engineering design concepts. Application of fundamental concepts and programming strategies useful in the context of any programming language.
Senior Engineering Design II The senior engineering design courses I and II constitute a two-semester sequence of an interdisciplinary activity. The objective of these courses is to provide engineering students with supervised experience in the process and practice of engineering design. Projects are chosen by the students or the faculty. Students working in teams pursue an idea from conception to realistic design. The course is climaxed by the presentation of a substantial written report and a formal oral presentation before faculty and students
Ethics For The Professions A study of the ethical problems faced by professionals in engineering, management, and other professional fields. Topics include: ethical theories, moral decision-making, social responsibility, employee rights and responsibilities, the environment, truth telling, affirmative action, privacy and confidentiality, whistle-blowing, and deception.
New Student Seminar  Topics include overviews of the various disciplines, curricula and advising, ethics and professionalism, student organizations and extracurricular activities, senior projects, and career planning.
Calculus I Limits, continuity and derivatives of algebraic, trigonometric, exponential and logarithmic functions. Curve sketching, optimization and other applications of the derivative. Antiderivatives, Riemann sums, the definite integral, and the fundamental theorem of calculus.
Introduction to Digital Logic Design An introductory course in digital logic circuits covering number representation, digital codes, Boolean Algebra, combinatorial logic design, sequential logic design, and programmable logic devices.
Programming I Problem solving using a high level programming language and object oriented software design. Fundamental stages of software development are discussed: problem specification, program design, implementation, testing, and documentation. Introduction to programming using an object oriented language: using classes, defining classes, and extending classes. Introduction to algorithms and data structures useful for problem solving: arrays, lists, files, searching, and sorting.
Principles of Microeconomics An analytical introduction to microeconomics. Topics include theory of markets, public policy, international trade, economic efficiency, and equity.
Principles of Macroeconomics An analytical introduction to macroeconomics. Topics include determination of aggregate income, employment, inflation, exchange rates, and the role of fiscal and monetary policy in dealing with unemployment, inflation, and economic growth.
Calculus II volume, arc length, work and average value. Infinite sequences and series and Taylor series. Polar coordinates, vectors and the geometry of space.
General Physics I for Engineers General Physics I for Engineers
General Physics I Laboratory Experiments in classical mechanics and thermodynamics. The course includes practice on the ethics of recording and presentation of data.
Circuits I Analysis of linear electrical circuits: Kirchoff's laws; source, resistor, capacitor and inductor models; nodal and mesh analysis; network theorems; transient analysis; Laplace transform analysis; steady-state sinusoidal analysis; computer-aided analysis.
Programming II This course continues developing problem solving techniques by focusing on the imperative and object-oriented styles using Abstract Data Types. Basic data structures such as queues, stacks, trees, and graphs will be covered. Recursion. Basic notions of algorithmic efficiency and performance analysis in the context of sorting algorithms. Basic Object-Oriented techniques. An associated laboratory will develop projects reinforcing the lecture material.
Calculus III Multivariable functions, partial derivatives and their applications, multiple integrals and their applications. Vector-valued functions, line and surface integrals, Green, Gauss and Stokes Theorems.
Applied Differential Equations Linear ordinary differential equations, Laplace transforms, systems of equations, and applications.
Elementary Linear Algebra Systems of linear equations, matrices, vector spaces, linear transformations, and applications.
Discrete Structures Mathematical foundations including logic, sets and functions, general proof techniques, mathematical induction, sequences and summations, number theory, basic and advanced counting techniques, solution of recurrence relations, equivalence relations, partial order relations, lattices, graphs and trees, algorithmic complexity, and algorithm design and analysis. Throughout there will be an emphasis on the development of general problem solving skills including algorithmic specification of solutions and the use of discrete structures in a variety of applications.
Circuits II Continued study of electrical circuits: Steady-state power analysis, three-phase circuits, transformers, frequency response, and two-port network analysis.
Electromagnetics I Electrostatic and magnetostatic fields in a vacuum and material media. Electromagnetic fields and Maxwell's equations for time-varying sources. The relationship between field and circuit theory. Simple applications of Maxwell's equations.
Electronic Circuits I Introduction to diodes, BJTs and MOSFETs, and their use in electronic circuits, especially digital circuits.
Programming Language Paradigms The course is a survey of programming languages: their attributes, uses, advantages, and disadvantages. Topics include scopes, parameter passing, storage management, control flow, exception handling, encapsulation and modularization mechanism, reusability through genericity and inheritance, and type systems.
Embedded Systems This course will address internal organization of micro-controller systems, sometimes called embedded systems, used in a wide variety of engineered systems: programming in C and assembly language; input and output systems; collecting data from sensors; and controlling external devices.
Software Engineering I This course is an introduction to software engineering, and it covers the systematic development of software products. It outlines the scope of software engineering, including life-cycle models, software process, teams, tools, testing, planning, and estimating. It concentrates on requirements, analysis, design, implementation, and maintenance of software products. The laboratory covers CASE tools, configuration control tools, UML diagrams, integrated development environments, and project specific components.
Signal and System Analysis Fourier signal analysis (series and transform); linear system analysis (continuous and discrete); Z-transforms; analog and digital filter analysis. Analysis and design of continuous and discrete time systems using MATLAB.
Digital Systems Design The design of digital systems from a hardware point of view. The implementation of functional and control units using programmable logic devices. Introduction to VHDL and its use in modeling and designing digital systems.
Applied Mathematical Statistics I A first course in statistics for students with the techniques of calculus at their disposal. The following topics are studied with illustrations and problems drawn from various fields of applications: basic notions of probability and probability distributions; classical estimation and testing procedures for one and two sample problems; chi-square test.
Computer Systems Design Laboratory I A two semester lecture/laboratory course involving the specification, design, implementation, analysis, and documentation of a significant hardware and software computer system. Laboratory work involves software, hardware, and hardware/software trade-offs. Project requirements include consideration of ethics, economics, manufacturing, safety, and health aspects of product development.
Introduction to Communication Networks An introduction to the principles used in communication networks is given in this course. Topics include a discussion of the uses of communications networks, network traffic, network impairments, standards, layered reference models for organizing network functions. Local Area Network technology and protocols are discussed. Link, network, transport layer protocols, and security are introduced. TCP/IP networks are stressed. VoIP is used as an example throughout the course. Basic concepts of network performance evaluation are studied, both analytical and simulation techniques are considered.
Computer Architecture The structure, design, analysis, and evaluation of computer processors and systems. The design of instruction sets. Principles and techniques of parallelism at the data transfer (memory hierarchy), data processing (pipelines), and concurrent instruction execution.
General Physics III Introduction to modern physics. Topics include special relativity, optics, and introductions to quantum mechanics and solid state physics.
Intermediate Physics Laboratory I Experiments in optics and modern physics. Development of experimental skills, data reduction, error analysis, and technical writing. One lab meeting per week and one lecture per week on topics including error analysis and experimental design, and the development of professional ethics in regard to citation and data presentation.
Computer Systems Design Laboratory II A two semester lecture/laboratory course involving the specification, design, implementation, analysis, and documentation of a significant hardware and software computer system. Laboratory work involves software, hardware, and hardware/software trade-offs. Project requirements include consideration of ethics, economics, manufacturing, safety, and health aspects of product development.
Introduction to Operating Systems The objective of this course is to provide the students with the concepts necessary to enable them to: a) identify the abstract services common to all operating system, b) define the basic system components that support the operating system's machine independent abstractions on particular target architectures, c) consider how the design and implementation of different systems components interact and constrain one another, not merely how one or two important parts work in isolation, and d) understand the means by which fundamental problems in operating systems can be analyzed and addressed. Programming assignments address topics including process creation, inter-process communication, system call implementation, process scheduling and virtual memory. Laboratory exercises primarily focus on use of tools and concepts required for the programming assignments but include a small number of independent topics.
Human-Computer Interaction This course introduces principles of human-computer interaction. Important topics to be presented include: human factors, human-centered design and evaluation, graphical user interfaces, multimedia system integration, interactive systems development, computer-supported cooperative work, human cognitive skills, accessibility, alternative input/output media, and emerging technologies.
Electronic Devices and Properties of Materials An introduction to crystal structures, and metal, insulator, and semiconductor properties. Topics covered include the thermal, electric, dielectric, and optical properties of these materials. A significant portion of this course is devoted to the properties of semiconductors and semiconductor devices.
Introduction to Communication Networks An introduction to the principles used in communication networks is given in this course. Topics include a discussion of the uses of communications networks, network traffic, network impairments, standards, layered reference models for organizing network functions. Local Area Network technology and protocols are discussed. Link, network, transport layer protocols, and security are introduced. TCP/IP networks are stressed.
Introduction to Communication Networks An introduction to the principles used in communication networks is given in this course. Topics include a discussion of the uses of communications networks, network traffic, network impairments, standards, layered reference models for organizing network functions. Local Area Network technology and protocols are discussed. Link, network, transport layer protocols, and security are introduced. TCP/IP networks are stressed.
Fiber Optic Communication Systems Description and analysis of the key components in optical communication systems. Topics covered include quantum sources, fiber cable propagation and dispersion characteristics, receiver characteristics, and system gain considerations.
Introduction to Ohio State and Computer Science and Engineering Introduction to Ohio State and Computer Science and Engineering
Fundamentals of Engineering I Engineering problem solving utilizing computational tools such as Excel and Matlab; hands-on experimentation; modeling; ethics; teamwork; written, oral and visual communications.
Fundamentals of Engineering II Introduction to 3D visualization and CAD; engineering design-build process; teamwork; written, oral and visual communications; project management.
Calculus I Differential and integral calculus of one real variable.
Engineering Mathematics A Techniques of integration, Taylor series, differential calculus of several variables.
Mechanics, Thermal Physics, Waves
Software I: Software Components Intellectual foundations of software engineering; design-by-contract principles; mathematical modeling of software functionality; component-based software from client perspective; layered data representation.
Software II: Software Development and Design Data representation using hashing, search trees, and linked data structures; algorithms for sorting; using trees for language processing; component interface design; best practices in Java.
Foundations I: Discrete Structures Propositional and first-order logic; basic proof techniques; graphs, trees; analysis of algorithms; asymptotic analysis; recurrence relations.
Foundations II: Data Structures and Algorithms Design/analysis of algorithms and data structures; divide-and-conquer; sorting and selection, search trees, hashing, graph algorithms, string matching; probabilistic analysis; randomized algorithms; NP-completeness.
Systems I: Introduction to Low-Level Programming and Computer Organization Introduction to computer architecture at machine and assembly language level; pointers and addressing; C programming at machine level; computer organization.
Systems II: Introduction to Operating Systems Introduction to operating system concepts: process, CPU scheduling, memory management, file system and storage, and multi-threaded programming.
Principles of Programming Languages Formal languages and grammars; recursive descent parsing; data types, expressions, control structures, parameter passing; compilers and interpreters; memory management; functional programming principles.
Social, Ethical, and Professional Issues in Computing Social, ethical, and professional issues facing computing professionals; ethical principles; discussion of case studies.
Ethics in the Professions: Introduction to Computing Ethics and Effective Presentation An introduction to ethical theory with a special focus on ethical issues that arise in the computing profession. It includes student presentations and feedback to improve discussion skills.
Introduction to Analog Systems and Circuits Circuit theory and applications of passive components and Op amps. Introduction to analog systems using differential equations and Laplace transforms.
Introduction to Digital Logic Introduction to the theory and practice of combinational and clocked sequential networks.
Linear Algebra Matrix algebra, vector spaces and linear maps, bases and dimension, eigenvalues and eigenvectors, applications.
Foundations of Higher Mathematics Introduction to logic, proof techniques, set theory, number theory, real numbers.
Introduction to Probability and Statistics for Engineers Introduction to probability, Bayes theorem; discrete and continuous random variables, expected value, probability distributions; point and interval estimation; hypotheses tests for means and proportions; least squares regression.
Software Engineering Techniques Software engineering issues, techniques, methodologies and technologies; software lifecycle activities: requirements analysis, architecture, design, testing, deployment, maintenance; project management; enterprise software systems; frameworks.
Introduction to Database Systems Database systems use, logical design, entity-relationship model, normalization, query languages and SQL, relational algebra and calculus, object relational databases, XML, active databases; database design project.
Introduction to Computer Architecture Organization of hardware and software in modern computer systems, including instruction set design, processor control, ALU design, pipelining, multicores and accelerators, and memory subsystem design.
Computer Networking and Internet Technologies Computer networks, communication protocols, Internet TCP/IP and applications, wireless communications and network security.
Survey of Artificial Intelligence I: Basic Techniques Survey of basic concepts and techniques in artificial intelligence, including problem solving, knowledge representation, and machine learning.
Project: Design, Development, and Documentation of Web Applications Intensive group project involving design, development, and documentation of a web application; client-side and server-side scripting; communication skills emphasized; builds programming maturity.
Project: Design, Development, and Documentation of Interactive Systems Intensive group project involving design, development, and documentation of an interactive software system, a 2D interactive game; communication skills emphasized; builds programming maturity.
Project: Design, Development, and Documentation of System Software Intensive group project involving design, development, and documentation of system software including an assembler and a linking loader; communication skills emphasized; builds programming maturity.
Capstone Design: Software Applications Capstone design project: application of software engineering techniques, methodologies and technologies in software lifecycle activities using enterprise software frameworks; teamwork, written and oral communication.
Capstone Design: Game Design and Development Capstone design project; conceptual and technical design and implementation of interactive game, integrating custom code and toolkits; teamwork, written and oral communication skills.
Capstone Design: Computer Animation Capstone design project: conceptual and technical design and implementation of computer animation incorporating animation elements; teamwork, written and oral communication skills.
Capstone Design: Knowledge-Based Systems Capstone design project; conceptual and technical design; theory and practice of knowledge-based systems; teamwork, written and oral communication skills.
Capstone Design: Information Systems Capstone design project; information system principles: database design methods and tools, indexing, searching, application development, testing, evaluation; teamwork, written and oral communication skills.
Fundamentals of Mathematics for Engineers This application-oriented, hands-on, introduction to engineering mathematics course will provide an overview of the salient math topics most heavily used in beginning engineering courses. All math topics will be presented within the context of an engineering application, and reinforced through extensive examples of their use in the core engineering courses.
Honors Problem Solving Problem solving beyond what is encountered in standard programs.
Transition Engineering Calculus Integral calculus, Taylor series, differential calculus of several variables.
Engineering Mathematics B Multiple integrals, line integrals, vector fields, second order ordinary differential equations.
Software Requirements Analysis Information systems analysis; object-oriented analysis models and tools; use cases, system modeling using UML; requirements specification development; term project.
Introduction to Database Systems Systematic organization of data on cloud computing architectures; basic indexing techniques, including B-tree and hash-based indexing; fundamentals of query optimization, including access path selection and cardinality estimation; full and partial replication; data partitioning and distributed task scheduling.
Automata and Formal Languages Machine-based and grammatical models of computation; finite automata and regular languages, pushdown automata and context-free languages, Turing machines; non-determinism; Church's Thesis.
Professional Practice in Industry Preparation and submission of a comprehensive report based on actual employment experience in a co-op job in industry.
The UNIX Programming Environment Introduction to the UNIX programming environment including: shell programming (csh); regular expressions; makefiles; grep, sed, and awk programming languages.
Individual Studies in Computer Science and Engineering Designed to give the student an opportunity to pursue special studies not otherwise offered.
Undergraduate Research in Computer Science and Engineering Opportunity for undergraduate student to conduct research in Computer Science and Engineering.
Undergraduate Research in Computer Science and Engineering Opportunity for undergraduate student to conduct research in Computer Science and Engineering.
Computer Science and Engineering Research for Thesis Supervised research and project work arranged individually.   General Education Writing and Related Skills (6 hrs) Social Sciences (6 hrs) Historical Study (3 hrs) Arts and Humanities (6 hrs) Cultures and Ideas and Professional Ethics (3 hrs)
EGR First-Year Seminar The EGR First-Year Seminar is designed to assist new students in making a successful transition from learning in high school (or from another college) to learning in engineering at Baylor.
Introduction to Engineering  Introduction to the engineering profession. Topics include engineering disciplines, ethics, the impact of technology on the world, analysis and design using a team design project, and computer-aided design and problem solving.
Introduction to Engineering Analysis  Introduction to fundamental techniques used in engineering analysis.
Engineering Design I  Introduction to the engineering design process via team-based projects encompassing the design, construction and testing of an engineering device or system. Projects will emphasize oral, written, and graphical engineering communication skills and topics related to engineering professionalism.
Engineering Design II  A capstone design course for emphasizing the decision-making process that must be used by a practicing engineer to apply the basic sciences in order to convert resources optimally to meet stated objectives.
Social and Ethical Issues in Engineering Study of the relationship between engineering, technology, and society. Topics include philosophical perspectives on engineering and technology, technological values, impact of technological change, social and ethical responsibilities of engineers, and public technology policy.
Calculus I Differential calculus of a single variable. Introduction to the definite integral and the Fundamental Theorem of Calculus.
Calculus II  Integral calculus of a single variable, differential equations, slope fields, and power series.
Calculus III  Differential and integral calculus of several variables, Green's Theorem.
Ordinary Differential Equations  Differential equations of first order, linear equations of order two and higher, introduction to power series methods, elements of the Laplace Transform, some facts from linear algebra and systems of differential equations.
Linear Algebra Vectors, matrix operations, linear transformations, fundamental properties of vector spaces, systems of linear equations, eigenvalues, and eigenvectors.
Numerical Methods Numerical differentiation and integration, linear systems of equations, numerical solutions of ordinary differential equations, curve fitting, and computational techniques.
Basic Principles of Modern Chemistry I  An introduction to chemical reactions; the mole concept; properties of gases, solids, liquids, and solutions; atomic structure; periodic properties; chemical bonding, and molecular structure.
The Christian Scriptures  An introduction to the Old and New Testaments (their contents, historical backgrounds, and major themes), and to appropriate strategies for interpretation of the Bible.
The Christian Heritage  An introduction to Christian life and thought, from the early church to the present, through an examination of great texts with an emphasis on Christian doctrine, ethics, witness and institutions.
Thinking and Writing  A course designed to help students better understand English grammar, rhetoric, and usage for correct and effective writing. The course focuses on the several steps in organizing and writing the expository essay for a variety of purposes.
Technical Writing Emphasis on theories, principles, and practices of effective technical writing and writing in the sciences. Students will compose technical genres such as reports, proposals, memos, and documentation with an emphasis on usability, accessibility, data analysis, information design, ethics, writing style, and collaboration.
Chapel University Chapel is the oldest tradition at Baylor. For more than 160 years, Baylor students have gathered to worship together, to engage important issues of our day, and to be inspired by speakers, artists, academicians, and leaders from every vocation.
General Physics I  Principles and applications of mechanics, wave motion, sound, and heat with emphasis on fundamental concepts, problem solving, notation, and units.
General Physics II Principles and applications of electricity, magnetism, light, and modern physics, with emphasis on fundamental concepts, problem solving, notation, and units.
The Intellectual Tradition of the Ancient World Close reading and discussion of foundational texts that establish the parameters of morality, aesthetics, religion, and philosophy.
Medieval Intellectual Traditions: Literature and Thought in Context Interdisciplinary close reading and discussion of major literary texts in relation to social, philosophical, and theological contexts of historic development in Western cultures from the medieval to the early modern period.
Digital Logic Design Boolean algebra, number systems and representations, analysis and design of combinational and sequential logic circuits, minimization, small- and medium-scale integrated devices, programmable logic, and simulation of digital circuits.
Digital Logic Design Laboratory Laboratory experience in digital circuit design using modern CAD tools and programmable logic devices.
Microprocessor Systems  Program development of microprocessor systems using assembly and C/C++ programming languages. Topics include processor architecture, data representation, exceptions, I/O devices, memory management, and real-time operating system principles.
Electrical Circuit Theory Linear circuit elements, sources, Kirchhoff's laws, mesh and nodal analysis, Thevenin and Norton equivalent circuits, resistive network analysis, sinusoidal steady-state analysis, AC and DC power, transient analysis of RL, RC, and RLC circuits.
Electrical Circuit Laboratory Laboratory experience in electrical circuit design using discrete components, standard bench equipment, and simulation in modern CAD software.
Applied Electromagnetic Fields  Vector description of the electric and magnetic properties of free space (using the laws of Coulomb, Ampere, and Faraday). Maxwell's electromagnetic field equations. Wave propagation in unbounded regions, reflection and refraction of waves, waveguides, and transmission lines.
Embedded Systems Design  Design and implementation of embedded computer systems using microcontrollers, sensors and data conversion devices, actuators, visual display devices, timers, and applications specific circuits. Software design using microprocessor cross-development systems and real-time operating system principles.
Automatic Control Systems Analysis and design of linear feedback control systems. Laplace transforms, transfer functions, signal-flow graphs, electrical and mechanical system modeling, state variables, system stability, timedomain response, root-locus method, Nyquist criterion, and compensator design. Laboratory exercises to illustrate course concepts.
Digital Signal Processing Discrete-time signals and systems, sampling theory, z-transforms, spectral analysis, filter design, applications, and analysis and design of discrete signal processing systems.
Electronic Design Analysis and design of analog and digital electronic circuits using diodes, bipolar transistors, and field effect transistors. Design and application of digital and analog circuits.
Electronic Design Laboratory Laboratory experience in electronic design.
Computer Organization  Introduction to the organization and design of general-purpose digital computers. Topics include instruction sets, CPU structures, hardwired and microprogrammed controllers, memory, I/O systems, hardware description languages and simulations.
Signals and Systems Analysis of signals and systems in the time domain using differential equations and convolution with the impulse response, and in the frequency, domain using Fourier series, Fourier transforms, and Laplace transforms with transfer functions.
Image Formation and Processing Introduction to image formation systems that provide images for medical diagnostics, remote sensing, industrial inspection, nondestructive materials evaluation and optical copying. Image processing, including image enhancement, analysis, and compression. Student specialization through assignments and project.
Software Systems Software engineering methods and tools. Topics include the development lifecycle, requirements, specifications, design, implementation, verification, validation, and maintenance, project management and professional ethics.
Wireless Sensor Networks Characterization and design of large-scale wireless sensor networks. Topics include wireless channel utilization, media access protocols, routing, energy management, synchronization, localization, data aggregation, and security. Laboratory exercises using wireless sensor devices, cross-development, and real-time operating systems.
Bioinstrumentation  Principles of biomedical instrumentation and their real-world applications. Emphasis on understanding the basic design principles and technologies used in bioelectrical, biomechanical, and clinical instrumentation.
Adaptive H.P. Lifetime fitness activity class for students needing accommodation due to injury or disability. Prior to registration, students must present a medical statement from their physician outlining both the nature of the disability and recommendations for a variety of exercises to be done in class.
Beginning Aerobics Concepts of physical fitness and the development of movement routines are fundamental to this course. Material covered includes a basic understanding of fitness with various assignments relating to that knowledge.
Intermediate Aerobics  This course incorporates all of the aspects of the beginner course. In addition, it teaches complex dance/exercise routines to music and provides a vigorous and complete workout for the more advanced student.
Introduction to Computer Science I with Laboratory Introduction to computers, problem solving and algorithm development. Design, code, debug and document programs using techniques of good programming style and C++ programming language. Laboratory experiments and examples will be used to illustrate and reinforce concepts taught in the lectures.
American Constitutional Development An historical and institutional study of the background, content, development, and interpretation of the United States Constitution. This course is required for all bachelor's degrees.
Engineering Economic Analysis Designed to provide an economic foundation for engineering decisions. The course stresses methods for making optimum choices among engineering alternatives. Topics include cash flow and present value analysis; breakeven analysis; the impact of taxes and inflation on investment decisions; methods for assigning costs; the treatment of risk in decision making; and capital budgeting.
Probability and Statistics  Introduction to the fundamentals of probability, random variables, discrete and continuous probability distributions, expectations, sampling distributions, topics of statistical inference such as confidence intervals, tests of hypotheses, and regression.
Principles of Chemistry I  Introduction to basic facts and principles of chemistry including atomic and molecular structure, states of matter and thermodynamics.
Principles of Chemistry I Laboratory Laboratory course applying principles of thermodynamics, chemical analysis and laboratory practice.
English Composition I  Extensive and varied experience in developing writing skills, with practice in expressive, reflective, and analytic forms of writing.
Analytic Geometry-Calculus I  Limits; continuity; rates of change; derivatives and applications algebraic, trigonometric, transcendental functions; curve sketching, antiderivatives and integration, areas.
Tools for Computer Engineering Orientation to degree programs and design practice in electrical and computer engineering. Introduction to computer applications and resources for engineering studies.
English Composition II  Designed to develop skills in analyzing and writing persuasive arguments.
Introduction to Discrete Mathematics A foundation course in discrete mathematics with applications. Topics include sets, number systems, Boolean Algebra, logic, relations, functions, recursion, matrices, induction, graphs, and trees.
Analytic Geometry-Calculus II  Methods and applications of integration; sequences, series and power series; Taylor polynomials and Taylor series; parametric and polar coordinates.
Elementary Classical Physics I  Introductory physics for students of science and engineering. Classical kinematics and dynamics as related to contemporary physics. Oscillations, thermodynamics. Vectors and some calculus introduced as needed.
Digital Logic Design Boolean algebra and simplification of logic functions. Combinational and synchronous sequential circuits. Laboratory projects include design of digital systems with hardware description language and simulation.
Computer Science I Introduction to problem-solving methods and algorithms. Programming in a high-level language including how to design, code, debug and document programs with good programming style.
Analytic Geometry-Calculus III  Vector algebra, cylindrical, spherical coordinates, vector-valued functions, curvature; functions of several variables, limit, continuity, partial derivatives, differentials, directional derivatives, maxima and minima, multiple integrals, Divergence Theorem.
Elementary Classical Physics II  Fluid mechanics, mechanical and electromagnetic waves and wave phenomena, basic laws of electromagnetism, interference and diffraction, coherence, geometrical and physical optics. Includes laboratory activities.
Circuits I Laboratory Computation, computer aided circuit analysis, circuit theorem confirmation, report writing to include data analysis and reduction, introduction to electrical measurements.
Circuits I DC and AC linear circuit analysis. Operational amplifier circuits. Loop and nodal analyses. Network theorems. Phasor techniques, steady-state AC power, three-phase systems.
Computer Science II Dynamic memory allocation methods, elementary data structures, internal representations, and associated algorithms. Topics include lists, stacks, queues, trees, and sorting methods
Introduction to Ordinary Differential Equations3 Basic techniques for solving ODEs and systems of ODEs. Analysis of models involving differential equations of first order and simple equations of second order.
Circuits II Laboratory Computation, computer aided circuit analysis, circuit theorem confirmation, report writing to include data analysis and reduction, intermediate electrical measurements.
Circuits II Coupled magnetic circuits. Transient and frequency domain analyses of linear circuits. Bode plots, Laplace transforms, transfer functions, resonance, passive and active filters.
Computer Systems Introduces the design and architecture of modern computer systems. Data and instruction representation. Conventional computer organization. Hardware and software design processes. The hardware/software interface.
Signals & Systems Linear systems theory and transform analysis techniques for continuous and discrete systems. Convolutions, Laplace transforms, continuous and discrete Fourier transforms. Difference equations and Z transforms.
Physical Electronics PN junction, diffusion, tunneling, FET and BJT device physics, equivalent circuits for electronic devices, time and frequency analysis, biasing and logic families.
Operating Systems Concepts  Processes and threads. Process communication and resource sharing. Deadlock resolution. Memory management. File systems. Introduction to network operating systems.
Embedded Systems Interfacing Microcontroller structures and embedded peripherals. Interfaces to physical environments. Software access to peripherals including timers, ADCs and DACs. Synchronous and asynchronous communications. Interrupts. Real-time operating systems.
Design Project Seminar - Computer Engineering Engineering capstone project selection and proposal, including preliminary technical specifications. Professional ethics. Intellectual property. Societal impact issues in engineering design.
VLSI Design Digital logic circuits. Very large scale integration (VLSI) fabrication processes and layout design. Delay and power of digital circuits. Latches and flip-flops in VLSI. Memory design. System-level design issues. Design project.
Computer Systems Design Design of advanced processors at the microarchitecture level. Pipelining. Superscalar, vector and VLIW architectures. Instruction-level parallelism. Compiler support. Multiprocessor architectures.
Computer Networks Network architecture and protocol layering. Network design principles, communication protocols, and performance measures. Socket programming, routing, error detection and correction, access control, multimedia networking.
Digital Signal Processing Signal sampling and reconstruction; data-converter models. Unilateral and bilateral z transforms. Discrete Fourier Transform (DFT); Fast Fourier Transform (FFT). Digital filter structures and design methods.
Probability and Statistics for Engineers Introduction to probability, statistics, random variables, data descriptions, statistical inference, confidence intervals, hypothesis testing, design of experiments, and applications of statistics to engineering.
Senior Design Project I - Computer Engineering  Design and preparation phase of an engineering project. Requires project presentation, approval of a written proposal, and ordering of required parts.
Computer Architecture An introduction to the hardware organization of the computer at the register, processor and systems level. In-depth study of the architecture of a particular computer system family.
Compiler Design Techniques used in constructing compilers, including lexical and syntactic analysis, parsing techniques, object code generation and optimization.
Wireless Communications Theory and analysis of wireless communication systems, wireless propagation, multiple access, modulation, demodulation, multipath channel characterization, diversity, cellular and PCS services and standards.
Digital Communication Introduction to digital communications theory and systems. Sampling, formatting and baseband communications. Digital modulation techniques and optimal receivers. Error performance analysis. Error control.
VLSI Design & Automation Methodologies for automated design of VLSI systems. Computer-aided design tools and algorithms. Design for low power, high performance, testability. Research topics in VLSI design.
Networked Embedded Systems Foundations for design and deployment of asynchronous distributed systems. Wireless sensor-actuator systems. New frontiers in distributed systems including communication, localization, synchronization, failure detection and performance analysis.
﻿College Writing College Writing
Writing in Engineering Writing in Engineering
INTRODUCTION TO PROBLEM SOLVING WITH COMPUTERS Provides an introduction to problem solving and computer programming using the programming language Java. The course teaches how real-world problems can be solved computationally using the object-oriented metaphor that underlies Java. Concepts and techniques covered include data types, expressions, objects, methods, top-down program design, program testing and debugging, state representation, interactive programs, data abstraction, conditionals, iteration, interfaces, inheritance, polymorphism, arrays, graphics, and GUIs.
Calculus I Continuity, limits, and the derivative for algebraic, trigonometric, logarithmic, exponential, and inverse functions. Applications to physics, chemistry, and engineering.
Calculus II The definite integral, techniques of integration, and applications to physics, chemistry, and engineering. Sequences, series, and power series. Taylor and MacLaurin series. Students expected to have and use a Texas Instruments 86 graphics, programmable calculator.
Introduction to Linear Algebra Basic concepts of linear algebra. Matrices, determinants, systems of linear equations, vector spaces, linear transformations, and eigenvalues.
Ordinary Differential Equations for Scientists and Engineers Introduction to ordinary differential equations.First and second order linear differential equations, systems of linear differential equations, Laplace transform, numerical methods, applications.
General Physics I Mechanics is the study of motion of all types, from the smallest particles to the largest astrophysical objects. This course introduces the student to a number of concepts to help analyze classical motion, including kinematics, force, energy, and linear momentum. Newton's laws of motion and laws of universal gravitation are covered in detail. Instruction concentrates on basic principles of physics and general problem-solving techniques, both in class and in web-based homework assignments.
General Physics II Heat, kinetic theory, first and second laws of thermodynamics. Comprehensive study of electricity and magnetism from Coulomb's law to AmpEre's law. Applications to basic circuits and ending with AC circuits.
Intro to Electrical & Computer Engineering Within a small class, student teams explore real engineering designs.  This introduction to engineering design and/or manufacturing emphasizes development of communication skills
INTRODUCTION TO COMPUTATION Lecture, discussion. Basic concepts of discrete mathematics useful to computer science: set theory, strings and formal languages, propositional and predicate calculus, relations and functions, basic number theory. Induction and recursion: interplay of inductive definition, inductive proof, and recursive algorithms. Graphs, trees, and search. Finite-state machines, regular languages, nondeterministic finite automata, Kleene's Theorem
Intro to Programming for ECE A comprehensive introduction to computer programming with applications to various areas in electrical and computer engineering. Limited to ENGIN majors.
Intro to Digital and Computer Systems The theory of digital circuits and computer systems stressing general techniques for the analysis and synthesis of combinational and sequential logic systems.
Circuit Analysis I Mathematical models for analog circuit elements. Basic circuit laws and network theorems applied to dc, transient, and steady-state response of first- and second-order circuits. Modeling circuit responses using differential equations and the Laplace transform. Solving RLC networks in both the time and frequency domains. Computer projects and circuit simulations using MATLAB, Excel, and PSpice.
Circuit Analysis II With lab. Continuation of ECE 211. Analysis techniques for ac circuits, frequency response, resonance, Bode plots, phasor representation of sinusoidal steady-state systems, complex frequency domain, transfer functions. MOSFETs as amplifiers; operational amplifiers. Transformers, two-port networks, Fourier series.
Hardware Organization and Design I An introduction to computer architecture and hardware design. Computer abstractions and technology, performance evaluation, instruction set architectures, computer arithmetic, pipelining, memory systems, interfacing. Hardware description languages, machine languages and assembly languages.
Data Structures & Algorithms Data structures course using the Java programming language. Basic mathematical, logical, and programming concepts relevant to description and manipulation of information structures such as arrays, lists, trees, graphs, and files; the underlying principles of algorithm design and analysis applied to sorting and searching problems.
ECE Junior Seminar Overview of the electrical and computer engineering field, including introduction to various subdisciplines and the corresponding upper-level ECE courses.
Electronics I With discussions and lab. Use of nonlinear devices such as diodes, field effect transistors (FETs), and bipolar junction transistors (BJTs) in the design of simple analog and digital circuits. Design projects make use of PSPICE.
Signals and Systems This course focuses on the study of signals and linear systems. It constitutes the basic theory behind a further study of communication theory and systems, control theory and systems, signal processing, microwave and radar systems, networking and almost all disciplines of electrical engineering.
Electronics II Continuation of E&C-ENG 323. Design of more advanced electronic circuits. Design and analysis of integrated circuit amplifiers. Design and analysis of feedback amplifiers
Fields and Waves I The nature of electromagnetic fields and waves. Transmission lines modeled as distributed circuits. Propagation of waves and wave reflections on transmission lines. Review of vector analysis, coordinate systems, gradient, divergence, curl; review of surface and volume integrals. Electrostatic and magnetostatic fields and boundary conditions. Fields in conductors, dielectrics and magnetic materials. Time-varying fields and electromagnetic induction. Maxwell's equations for time-varying fields.
Semiconductor Devices & Materials Introduction to the quantum theory of solids and conduction processes in semiconductors. Theory of p-n junction diodes, bipolar junction transistors (BJTs), and field-effect transistors (FETs). Integrated circuits (ICs).
Computer Systems Lab I Lab. Design and analysis of digital computer (sub)systems, including sequential controllers, asynchronous system interfacing, bus arbitration, static and dynamic memory design, and microprogrammed microprocessor design. Use of hardware description languages and programmable logic. Breadboarding and use of diagnostic equipment.
Computer Systems Lab II Lab. Advanced computer systems engineering. CISC and RISC microprocessors, microcontrollers and their role in embedded systems. Integration of hardware and software, assembly language, memory systems, programmable logic, and I/O systems. Design methodologies. Manufacturing issues. Advanced diagnostic techniques.
Software Intensive Engineering Theoretical and practical foundations for engineering the production of contemporary and future software intensive systems.  Advanced engineering problem solving concepts and skills enabled by means of state of the art modeling and testing tools.  Provides the basis for the analysis and co-design of complex hardware and software systems.
Computer Networks and Internet This course explores the principles of computer networking and how the theoretical principles are implemented in practice.  Introduction to concepts, principles, and practice of computer communication networks and the Internet with examples from existing architectures, protocols and standards.  Emphasis on physical layer communication, data link layer protocols, routing protocols, transport layer protocols, application layer programming, network management, network security and wireless networks.
Senior Design Project I The course requires students to work in small design teams to solve a significant engineering problem. Students develop, design, and implement a solution to the engineering problem in conjunction with a faculty advisor. The course reinforces principles of the engineering design process and serves as a capstone for electrical and computer engineering knowledge obtained in the ECE curriculum. The consideration of the ethical and social implications of technology and the basic concepts of business are also aspects of the course. Each student design team is expected to present information related to their project in both written and oral formats. Preliminary paper design is followed by implementation in the lab using digital and analog hardware design techniques and through software engineering. It is expected that a complete or partially working system will be demonstrated at the end of the course.
Senior Design Project II Design of small electronic system built, refined, tested, and demonstrated. Final prototype shown to meet initial specifications.
Security Engineering This course provides an introduction to the new area of Security Engineering, and provides examples drawn from recent research at UMASS and elsewhere. Security Engineering is a multi-disciplinary field combining technical aspects of Applied Cryptography, Computer Engineering, and Networking as well as issues from Psychology, Sociology, Policy and Economics. Several guest lectures will be presented by experts in these disciplines.
Trustworthy Computing The Internet age of universal electronic connectivity is vital for every aspect of our lives and our economy.  It enables businesses, transportation, electronic banking, health records, as well as entertainment.  To maintain the integrity of the Internet, it is vital to protect and defend this infrastructure from malicious viruses, worms, eavesdropping, electronic fraud, denial-of-service attacks etc. In this course we introduce the fundamentals of network security as well as provide a practical survey of network security applications and standards as implemented on the Internet and for corporate networks.
Intro to VLSI Design With lab. Introduction to VLSI design and custom design methodology in MOS. Topics include: MOS devices and circuits, fabrication, structures, sub-system and system design, layout, CAD techniques, and testing.
Intro Communications & Signal Processing Continuous-time (CT) and discrete-time (DT) signals and systems. DT processing of CT signals. DT and CT random processes and noise models. Analog communication systems and their performance in noise. Digital filter design methods
Communication Systems Waveform coding, source coding and data compression. Pulse modulation systems: signal spaces, optimal receivers, probability of error. Baseband and bandpass data transmission. Introduction to channel coding
Digital Signal Processing With lab. IIR and FIR digital filter design. Applications of DFT and FFT. Transform domain analysis of discrete-time (DT) linear time-invariant systems: minimum phase, allpass, linear phase systems. Im-plementation of DT systems. Finite wordlength effects. Multirate digital signal processing. Power spectrum estimation. Lab includes projects using digital signal processors.
Computer Architecture Quantitative study of pipelined processor architectures, memory hierarchy, cache memory, Input/Output, RISC processors and vector machines.
Microelectronic Fabrication With lab. Semiconductor instructional processing laboratory (SIPL) and lectures. Principles and practice of modern microelectronic silicon device processing. Theory and practice of basic processing technology including photo-lithography, oxidation, diffusion, thin film deposition, ion implantation, packaging, yield, and process integration. State-of-the-art laboratory fabrication of working microelectronic devices and process simulation techniques
Optoelectronics Theory and applications of modern optoelectronic components such as waveguides and optical fibers, photodetectors, light emitting diodes, and semiconductor lasers. Emphasis on the physics and operating characteristics of optoelectronic semiconductor devices
Intro to Analog Integrated Circuit Design This course covers the basics of analog integrated circuit design.  Topics include standard circuit building blocks such as current mirrors, voltage references, single stage amplifier topologies, differential pairs.  Device models, bias choices, temperature effects, the body effect, and mismatch.  Op-amp and OTA design as well as frequency response, stability, and compensation.  Noise analysis is applied to various circuit configurations.  More complex topics will be discussed if time permits.
System Software Design This course provides an introduction to software systems with emphasis on operating system design and implementation. A key aspect is computer architecture and system software interaction. Topics include: process management, threading, synchronization, deadlocks, scheduling, security, IO systems, and distributed systems
Feedback Control Systems Time domain and frequency domain analysis and synthesis techniques for linear continuous-time feedback control systems. Topics include benefits and costs of feedback, modeling of dynamic systems,steady-state and transient performance, stability, PID control, root locus, frequency response, Nyquist stability cri-terion, and introduction to loop-shaping
ST - Electricity Infrastructure and Delivery in the Developing World This course surveys the current state of the electricity infrastructure in developing countries as well as the challenges and technology trends that are shaping the evolution of these systems. Concepts include infrastructure components, electricity access initiatives, measurement of electricity reliability and power quality, and the relationship between electricity and international development.
ST - Nanoelectronics This class covers the fundamental of the nanoelectronics discipline ranging from nanophysics, to nano structures and nanodevices. It provides first an overview of the fundamental physical principles required for understanding the electronic properties of matter at the nanoscale. From the basic description of quantum dots, wires and wells, we will review the main electrical property differences between atoms, molecules and nanostructures including Carbon nanotubes and Nanoribbons. An introduction to the electron transport properties in nanostructures is also provides.
Parallel and Distributed Programming Key concepts to parallel programming: processes, threads, synchronization (semaphores, mutual exclusion, transactional memories), profiling, performance evaluation, parallel patterns (fork-join, wavefront, stream), load balancing aspects and scheduling. APIs and tools for parallel programming with shared memory and message passing: Pthreads, OpenMP and MPI. Current trends related to multi/many-cores, GPU, FPGAs, dataflow, fog/edge/in-situ computing and cloud computing.
Photonics Introduction to the fundamental principles of photonics. The topics covered include: ray optics, physical optics, Gaussian beams, Fourier optics, optical waveguides, resonators, integrated optics component, optical amplifiers, and lasers.
Reverse Engineering Reverse Engineering
Modeling and Verification of Embedded Systems This course introduces the theoretical foundations of embedded systems, with a focus on applications in the domains of medical devices and other low-power systems. The topics covered will include modeling, scheduling, analysis and verification of systems with discrete, continuous, and hybrid dynamics.
Introduction to Computer Science: Java Continuation of the Java language and of programming techniques. More on Inheritance. Exception handling.
Introduction to Computer Science and Object-Oriented Programming: Java Introduction to computer science and programming using the Java language. Basic UNIX. Modularity and abstraction. Documentation, testing and verification techniques. Basic object-oriented programming including inheritance and dynamic binding. Exception handling. Event driven programming. Experience with AWT library or other similar library.
Basic Data Structures and Object-Oriented Design Use and implementation of basic data structures including linked lists, stacks, and queues. Use of advanced structures such as binary trees and hash tables. Object-oriented design including interfaces, polymorphism, encapsulation, abstract data types, pre-/post-conditions. Recursion. Uses Java and Java Collections.
Software Tools and Techniques Laboratory Hands on exploration of software development tools and techniques.  Investigation of the scientific process as applied to the development and debugging of programs. Introduction to and practice with specific software tools and techniques to aid in coherent software development processes. Emphasis is on weekly hands-on laboratory experiences including pre- and post-lab work, development of laboratory notebooking techniques as applied to software design.
Introduction to Discrete Mathematics Basic discrete mathematical structures: sets, relations, functions, sequences, equivalence relations, partial orders, number systems. Methods of reasoning and proofs: prepositional logic, predicate logic, induction, recursion, pigeonhold principle. Infinite sets and diagonalization. Basic counting techniques; permutation and combinations. Applications will be given to digital logic design, elementary number theory, design of programs, and proofs of program correctness.
Mathematics for Algorithm and Systems This course will provide an introduction to the discrete mathematical tools needed to analyze algorithms and systems. Enumerative combinatorics: basic counting principles, inclusion-exclusion, and generating functions. Matrix notation. Applied discrete probability. Finite automata.
Computer Organization and Systems Programming Introduction to organization of modern digital computers - understanding the various components of a computer and their interrelationships. Study of a specific architecture/machine with emphasis on systems programming in C and Assembly languages in a UNIX environment.
Introduction to Discrete Mathematics Basic discrete mathematical structure: sets, relations, functions, sequences, equivalence relations, partial orders, and number systems. Methods of reasoning and proofs: propositional logic, predicate logic, induction, recursion, and pigeonhole principle. Infinite sets and diagonalization. Basic counting techniques; permutation and combinations. Applications will be given to digital logic design, elementary number theory, design of programs, and proofs of program correctness
Fluency in Information Technology Introduces the concepts and skills necessary to effectively use information technology. Includes basic concepts and some practical skills with computers and networks.
Mathematical Beauty in Rome Exploration of topics in computing, engineering, and mathematics, applied to classical architecture in Rome, Italy. In-depth geometrical analysis and computer modeling of basic structures (arches, vaults, domes), and on-site studies of the Colosseum, Pantheon, Roman Forum, and St. Peter's Basilica. Concurrent enrollment required in 4GS and 6GS.
Introduction to Programming I Introduction to algorithms and top-down problem solving. Introduction to the C language, including functions, arrays, and standard libraries. Basic skills for using a PC graphical user interface operating system environment. File maintenance utilities are covered.
Mathematical Beauty in Rome Lab Companion course to CSE 4GS where theory is applied and lab experiments are carried out "in the field" in Rome, Italy. For final projects, students will select a complex structure (e.g., the Colosseum, the Pantheon, St. Peter's, etc.) to analyze and model, in detail, using computer-based tools. Concurrent enrollment required in 4GS and 6GS.
Matlab Programming for Engineering Analysis Computer programming in Matlab with elementary numerical analysis of engineering problems. Arithmetic and logical operations, arrays, graphical presentation of computations, symbolic mathematics, solutions of equations, and introduction to data structures.
Thermodynamics Fundamentals of engineering thermodynamics: energy, work, heat, properties of pure substances, first and second laws for closed systems and control volumes, gas mixtures. Application to engineering systems, power and refrigeration cycles, combustion
Cognitive Consequences of Technology This course examines the interrelationships of cognition and technology from the perspective of cognitive science. We address questions of importance for our increasingly technological society: How does technology shape our minds? How should what we know about our minds shape technology?
Introduction to Python  This class will teach fundamental Python programming skills and practices, including the “Zen of Python.” Students will focus on scientific computing and learn to write functions and tests, as well as how to debug code using the Jupyter Notebook programming environment.
Engineering Computation Students learn the C programming language with an emphasis on high-performance numerical computation. The commonality across programming languages of control structures, data structures, and I/O is also covered. Techniques for using Matlab to graph the results of C computations are developed.
UNIX Lab The objective of the course is to help the programmer create a productive UNIX environment. Topics include customizing the shell, file system, shell programming, process management, and UNIX tools
C++ for Java Programmers Helps the Java programmer to be productive in the C++ programming environment. Topics include the similarities and differences between Java and C++ with special attention to pointers, operator overloading, templates, the STL, the preprocessor, and the C++ Runtime Environment.
Undergraduate Seminar A seminar providing an overview of a topic of current research interest to the instructor. The goal is to present a specialized topic in computer science and engineering students. May be taken for credit three times when topics vary.
Perspectives in Computer Science and Engineering A seminar format discussion led by CSE faculty on topics in central areas of computer science, concentrating on the relation among them, recent developments, and future directions.
Independent Study in Computer Science and Engineering Independent reading or research by special arrangement with a faculty member.
Calculus for Science and Engineering I Foundations of differential and integral calculus of one variable. Functions, graphs, continuity, limits, derivative, tangent line. Applications with algebraic, exponential, logarithmic, and trigonometric functions. Introduction to the integral.
Calculus for Science and Engineering II Integral calculus of one variable and its applications, with exponential, logarithmic, hyperbolic, and trigonometric functions. Methods of integration. Infinite series. Polar coordinates in the plane and complex exponentials.
Calculus and Analytic Geometry for Science and Engineering Vector geometry, vector functions and their derivatives. Partial differentiation. Maxima and minima. Double integration.
Introduction to Differential Equations Ordinary differential equations: exact, separable, and linear; constant coefficients, undetermined coefficients, variations of parameters. Systems. Series solutions. Laplace transforms. Techniques for engineering sciences. Computing symbolic and graphical solutions using Matlab
Vector Calculus Change of variable in multiple integrals, Jacobian, Line integrals, Green’s theorem. Vector fields, gradient fields, divergence, curl. Spherical/cylindrical coordinates. Taylor series in several variables. Surface integrals, Stoke’s theorem. Gauss’ theorem. Conservative fields.
Physics—Mechanics A calculus-based science-engineering general physics course covering vectors, motion in one and two dimensions, Newton’s first and second laws, work and energy, conservation of energy, linear momentum, collisions, rotational kinematics, rotational dynamics, equilibrium of rigid bodies, oscillations, gravitation.
Physics—Electricity and Magnetism Continuation of Physics 2A covering charge and matter, the electric field, Gauss’s law, electric potential, capacitors and dielectrics, current and resistance, electromotive force and circuits, the magnetic field, Ampere’s law, Faraday’s law, inductance, electromagnetic oscillations, alternating currents and Maxwell’s equations.
Physics—Fluids, Waves, Thermodynamics, and OpticsContinuation of Physics 2B covering fluid mechanics, waves in elastic media, sound waves, temperature, heat and the first law of thermodynamics, kinetic theory of gases, entropy and the second law of thermodynamics, Maxwell’s equations, electromagnetic waves, geometric optics, interference and diffraction.
Introduction to Analog Design Fundamental circuit theory concepts, Kirchoff’s voltage and current laws, Thevenin’s and Norton’s theorems, loop and node analysis, time-varying signals, transient first order circuits, steady-state sinusoidal response. MATH 20C and PHYS 2B must be taken concurrently. Program or materials fees may apply.
Circuits and Systems Steady-state circuit analysis, first and second order systems, Fourier Series and Transforms, time domain analysis, convolution, transient response, Laplace Transform, and filter design.
Components and Circuits Laboratory Introduction to linear and nonlinear components and circuits. Topics will include: two terminal devices, bipolar and field-effect transistors, and large and small signal analysis of diode and transistor circuits
Engineering Probability and Statistics Axioms of probability, conditional probability, theorem of total probability, random variables, densities, expected values, characteristic functions, transformation of random variables, central limit theorem. Random number generation, engineering reliability, elements of estimation, random sampling, sampling distributions, tests for hypothesis.
Advanced Data Structures High-performance data structures and supporting algorithms. Use and implementation of data structures like (un)balanced trees, graphs, priority queues, and hash tables. Also memory management, pointers, recursion. Theoretical and practical performance analysis, both average case and amortized. Uses C++ and STL
Design and Analysis of Algorithms  Design and analysis of efficient algorithms with emphasis of nonnumerical algorithms such as sorting, searching, pattern matching, and graph and network algorithms. Measuring complexity of algorithms, time and storage. NP-complete problems
Software Engineering Introduction to software development and engineering methods, including specification, design, implementation, testing, and process. An emphasis on team development, agile methods, and use of tools such as IDE’s, version control, and test harnesses
Principles of Computer Operating Systems Basic functions of operating systems; basic kernel structure, concurrency, memory management, virtual memory, file systems, process scheduling, security and protection
Components and Design Techniques for Digital Systems Design of Boolean logic and finite state machines; two-level, multilevel combinational logic design, combinational modules and modular networks, Mealy and Moore machines, analysis and synthesis of canonical forms, sequential modules.
Digital Systems Laboratory Implementation with computer-aided design tools for combinational logic minimization and state machine synthesis. Hardware construction of a small digital system.
Introduction to Computer Architecture Introduction to computer architecture. Computer system design. Processor design. Control design. Memory systems.
Project in Computer Architecture Hands-on computer architecture project aiming to familiarize students with instruction set architecture, and design of process. Control and memory systems.
Linear Systems Fundamentals Complex variables. Singularities and residues. Signal and system analysis in continuous and discrete time. Fourier series and transforms. Laplace and z-transforms. Linear Time Invariant Systems. Impulse response, frequency response, and transfer functions. Poles and zeros. Stability. Convolution. Sampling. Aliasing.
Digital Circuits A transistor-level view of digital integrated circuits. CMOS combinational logic, ratioed logic, noise margins, rise and fall delays, power dissipation, transmission gates. Short channel MOS model, effects on scaling. Sequential circuits, memory and array logic circuits. Three hours of lecture, one hour of discussion, three hours of laboratory.
Advanced Digital Design Project Advanced topics in digital circuits and systems. Use of computers and design automation tools. Hazard elimination, synchronous/asynchronous FSM synthesis, synchronization and arbitration, pipelining and timing issues. Problem sets and design exercises. A large-scale design project. Simulation and/or rapid prototyping.
Computer Interfacing Interfacing computers and embedded controllers to the real world: busses, interrupts, DMA, memory mapping, concurrency, digital I/O, standards for serial and parallel communications, A/D, D/A, sensors, signal conditioning, video, and closed loop control.
Engineering Design Students complete a project comprising at least 50 percent or more engineering design to satisfy the following features: student creativity, open-ended formulation of a problem statement/specifications, consideration of alternative solutions/realistic constraints. Written final report required.
Engineering Group Design Project Groups of students work to design, build, demonstrate, and document an engineering project. All students give weekly progress reports of their tasks and contribute a section to the final project report.
Honors Project An advanced reading or research project performed under the direction of an ECE faculty member. Must contain enough design to satisfy the ECE program’s four-unit design requirement. Must be taken for a letter grade. May extend over two quarters with a grade assigned at completion for both quarters.
Viacar Design Project Students design, build, and race an autonomous car using principles in electrical engineering and computer science: circuit design, control theory, digital signal processing, embedded systems, microcontrollers, electromagnetism, and programming.
Teaching Teaching and tutorial activities associated with courses and seminars.
Engineering Hands-on Group Project Groups of students work to build and demonstrate at least three engineering projects at the beginning, intermediate, and advanced levels. The final project consists of either a new project designed by the student team or extension of an existing project. The student teams also prepare a manual as part of their documentation of the final project.
ECE Internship An enrichment program that provides work experience with public/private section employers. Subject to the availability of positions, students will work in a local company under the supervision of a faculty member and site supervisor.
Directed Group Study Topics in electrical and computer engineering whose study involves reading and discussion by a small group of students under direction of a faculty member.
Topics in Computer Science and Engineering Topics of special interest in computer science and engineering. Topics may vary from quarter to quarter. May be repeated for credit with the consent of instructor.
Seminar in CSE A seminar course on topics of current interest. Students, as well as, the instructor will be actively involved in running the course/class.
Senior Seminar in Computer Science and Engineering The Senior Seminar Program is designed to allow senior undergraduates to meet with faculty members in a small group setting to explore an intellectual topic in CSE (at the upper-division level).
Introduction to Computer Science Research Introduction to research in computer science. Topics include defining a CS research problem, finding and reading technical papers, oral communication, technical writing, and independent learning.
Teaching (4) Teaching and tutorial assistance in a CSE course under the supervision of the instructor.
Field Study in Computer Science and Engineering Directed study and research at laboratories away from the campus.
Directed Group Study Computer science and engineering topics whose study involves reading and discussion by a small group of students under the supervision of a faculty member.

Introduction to Computer Engineering This course overviews the field of computer engineering and provides an appreciation of the computer engineering curriculum. Fundamental concepts of computers, computing and engineering design are introduced. Topics include basic circuits, number systems, digital logic, computer organization, programming in the Matlab environment, teamwork, communication skills, ethics and professionalism, historical background and global, societal and environmental issues related to computers. Lab exercises familiarize students with lab equipment, experiments and data analysis.
Digital System Design I The course covers the specification, analysis, and design of basic digital systems, including the design of combinational and sequential circuits using basic logic components: AND, OR, INV, NAND, NOR, and XOR. Standard modules, such as decoders, multiplexers, shifter registers, adders, and counters, will be analyzed. Lectures will discuss fundamental design methodologies using Karnaugh Maps as well as Mealy and Moore state machines. The laboratory provides hands-on experiences of the design, implementation, and testing of digital systems using SSI, MSI, and FPGA components as well as CAD tools.
Computer Science I This course serves as an introduction to computational thinking using a problem-centered approach. Specific topics covered include: expression of algorithms in pseudo code and a programming language; functional and imperative programming techniques; control structures; problem solving using recursion; basic searching and sorting; elementary data structures such as lists, trees, and graphs; and correctness, testing and debugging.
Computer Science II This course delves further into problem solving by continuing the discussion of data structure use and design, but now from an object-oriented perspective. Key topics include more information on tree and graph structures, nested data structures, objects, classes, inheritance, interfaces, object-oriented collection class libraries for abstract data types (e.g. stacks, queues, maps, and trees), and static vs. dynamic data types. Concepts of object-oriented design are a large part of the course. Software qualities related to object orientation, namely cohesion, minimal coupling, modifiability, and extensibility, are all introduced in this course, as well as a few elementary object-oriented design patterns. Input and output streams, graphical user interfaces, and exception handling are covered.
Project-based Calculus I This is the first in a two-course sequence intended for students majoring in mathematics, science, or engineering. It emphasizes the understanding of concepts, and using them to solve physical problems. The course covers functions, limits, continuity, the derivative, rules of differentiation, applications of the derivative, Riemann sums, definite integrals, and indefinite integrals.
Project-based Calculus II This is the second in a two-course sequence intended for students majoring in mathematics, science, or engineering. It emphasizes the understanding of concepts, and using them to solve physical problems. The course covers techniques of integration including integration by parts, partial fractions, improper integrals, applications of integration, representing functions by infinite series, convergence and divergence of series, parametric curves, and polar coordinates.
University Physics I This is a course in calculus-based physics for science and engineering majors. Topics include kinematics, planar motion, Newton's Laws, gravitation, work and energy, momentum and impulse, conservation laws, systems of particles, rotational motion, static equilibrium, mechanical oscillations and waves, and data presentation/analysis.
First Year Writing First Year Writing
Assembly and Embedded Programming This course introduces embedded systems, along with fundamental computer organization, assembly language programming, and mixed language programming with C and assembly. Using a modern microcontroller and embedded systems IDE, such as the ARM Cortex-M0+ and Keil Microcontroller Development Kit, the course covers embedded programming concepts and interface modules, as well as addressing methods, machine instructions, assembler directives, macro definitions, code relocatability, subroutine linkage, data structures, I/O programming, exception processing, and interrupts
Digital System Design II This course presents modern approaches to the design, modeling and testing of digital system. Topics covered are: VHDL and Verilog HDL as hardware description languages (HDLs), simulation techniques, design synthesis, verification methods, and implementation with field programmable gate arrays (FPGAs). Combinational and both the synchronous and asynchronous sequential circuits are studied. Testing and design for testability techniques are emphasized and fault tolerant and fail safe design concepts are introduced.
Circuits I Covers basics of DC circuit analysis starting with the definition of voltage, current, resistance, power and energy. Linearity and superposition, together with Kirchhoff's laws, are applied to analysis of circuits having series, parallel and other combinations of circuit elements. Thevenin, Norton and maximum power transfer theorems are proved and applied. Circuits with ideal op-amps are introduced. Inductance and capacitance are introduced and the transient response of RL, RC and RLC circuits to step inputs is established. Practical aspects of the properties of passive devices and batteries are discussed, as are the characteristics of battery-powered circuitry.
Engineering Co-op Preparation Engineering Co-op Preparation
Discrete Mathematics for Computing This course introduces students to ideas and techniques from discrete mathematics that are widely used in Computer Science. Students will learn about the fundamentals of propositional and predicate calculus, set theory, relations, recursive structures and counting.
Multivariable Calculus  This course is principally a study of the calculus of functions of two or more variables, but also includes the study of vectors, vector-valued functions and their derivatives. The course covers limits, partial derivatives, multiple integrals, and includes applications in physics.
Differential Equations This course is an introduction to the study of ordinary differential equations and their applications. Topics include solutions to first order equations and linear second order equations, method of undetermined coefficients, variation of parameters, linear independence and the Wronskian, vibrating systems, and Laplace transforms.
Linear Algebra I This course is an introduction to the basic concepts of linear algebra, and techniques of matrix manipulation. Topics include linear transformations, Gaussian elimination, matrix arithmetic, determinants, vector spaces, linear independence, basis, null space, row space, and column space of a matrix, eigenvalues, eigenvectors, change of basis, similarity and diagonalization.
University Physics II This course is a continuation of PHYS-211, University Physics I. Topics include electrostatics, Gauss' law, electric field and potential, capacitance, resistance, DC circuits, magnetic field, Ampere's law, inductance, and geometrical and physical optics.
Introduction to Software Engineering An introductory course in software engineering, emphasizing the organizational aspects of software development and software design and implementation by individuals and small teams within a process/product framework. Topics include the software lifecycle, software design, user interface issues, specification and implementation of components, assessing design quality, design reviews and code inspections, software testing, basic support tools, technical communications and system documentation, team-based development.
Computer Organization Provides an understanding of the information transfer and transformations that occur in a computer, with emphasis on the relations between computer architecture and organization. Topics include design levels and their respective primitives, modules and descriptive media, register transfer and micro-operations, basic computer organization and design, central processor organization, control unit and microprogramming, memory organization, input-output organization, computer architecture defining the hardware/software interface, and from architecture to organization
Applied Programming in C An introduction to classical algorithms used in the solution of numerical problems encountered in science and engineering. The C language will be introduced as a tool for implementing these algorithms. Topics include an introduction to C, computer number representation and roundoff error, algorithms for finding roots of nonlinear equations, interpolation, numerical differentiation and integration, function approximation and data fitting solutions to systems of linear equations, and general matrix manipulation.
Co-op After completing Co-op Seminar (EGEN-099) or Co-op Workshop as well as meeting Co-op enrollment requirements, Computer Engineering students should register for CMPE-499 for each term of full-time, paid employment in the Computer Engineering field. Students who take on Spring-Summer or Summer-Fall Co-ops must register for both the semester term and the summer term. Students must obtain permission from the Computer Engineering office for any exception to the assigned Co-op blocks.
Circuits II This course covers the fundamentals of AC circuit analysis starting with the study of sinusoidal steady-state solutions for circuits in the time domain. The complex plane is introduced along with the concepts of complex exponential functions, phasors, impedances and admittances. Nodal, loop and mesh methods of analysis as well as Thevenin and related theorems are applied to the complex plane. The concept of complex power is developed. The analysis of mutual induction as applied to coupled-coils. Linear, ideal and non-ideal transformers are introduced. Complex frequency analysis is introduced to enable discussion of transfer functions, frequency dependent behavior, Bode plots, resonance phenomenon and simple filter circuits. Two-port network theory is developed and applied to circuits and interconnections.
Digital Electronics This is an introductory course in digital MOS circuit analysis and design. The course covers the following topics: (1) MOSFET I-V behavior in aggressively scaled devices; (2) Static and dynamic characteristics of NMOS and CMOS inverters; (3) Combinational and sequential logic networks using CMOS technology; (4) Dynamic CMOS logic networks, including precharge-evaluate, domino and transmission gate circuits; (5) Special topics, including static and dynamic MOS memory, and interconnect RLC behavior.
Interface and Digital Electronics (WI) This course covers various sensors, motors, signal conditioning circuits including amplification, filtering, level shifting, ADC, and DAC. Modern tools, such as Keil ARM MDK and PSpice will be used to simulate and debug modern microcontrollers, such as NXP Kinetis, analog active filters, and operational amplifier application circuits. Each team of two students is required to design a complete data acquisition system from sensors, amplification, filtering, ADC, and DAC to analog outputs through either wired transmission or wireless transmission circuits
Digital Signal Processing This course introduces the basic elements of continuous and discrete time signals and systems and fundamental signal processing techniques, such as FIR and IIR Filtering, the Fourier transform, the Discrete Fourier transform and the z transform. Theory is strengthened through MATLAB-based projects and exercises.
Computer Architecture The course covers various aspects of advanced uniprocessor computer architecture design. Instruction set architecture design alternatives are discussed with emphasis on the Reduced Instruction Set Computer (RISC) architecture. Techniques to enhance CPU performance such as pipelined execution optimizations, conditional branch handling techniques, exploitation of instruction-level parallelism, multiple-instruction issue and dynamic scheduling are studied. Cache, and memory hierarchy design and performance issues are also presented
Probability and Statistics I This course introduces sample spaces and events, axioms of probability, counting techniques, conditional probability and independence, distributions of discrete and continuous random variables, joint distributions (discrete and continuous), the central limit theorem, descriptive statistics, interval estimation, and applications of probability and statistics to real-world problems. A statistical package such as Minitab or R is used for data analysis and statistical applications.
Multidisciplinary Senior Design I This is the first half of a two-semester design course oriented to the solution of engineering problems. The mission is to enhance engineering education through a capstone design experience that integrates engineering theory, principles and processes within a collaborative environment. Working in multidisciplinary teams and following an engineering design process, students will assess customer needs and engineering specifications, evaluate concepts, resolve major technical hurdles, and employ rigorous engineering principles to design a prototype which is fully tested and documented
Multidisciplinary Senior Design II This is the second half of a two-semester design course oriented to the solution of engineering problems. The mission is to enhance engineering education through a capstone design experience that integrates engineering theory, principles and processes within a collaborative environment. Working in multidisciplinary teams and following an engineering design process, students will assess customer needs and engineering specifications, evaluate concepts, resolve major technical hurdles, and employ rigorous engineering principles to design a prototype which is fully tested and documented.
Digital Integrated Circuit Design This course will cover the basic theory and techniques of Digital Integrated Circuit Design in CMOS technology. Topics include CMOS transistor theory and operation, design and implementation of CMOS circuits, fabrication process, layout and physical design, delay and power models, static and dynamic logic families, testing and verification, memory and nanoscale technologies. Laboratory assignments and project facilitate in hands-on learning of circuit-level design and simulation, layout and parasitic extractions, pre and post-layout verification and validation, full-custom flow and Synthesis based flow, using industry standard CAD tools.
Data and Communication Networks This course will give an overview of the technologies, architectures and protocols used to build various types of computer and communication networks - wired or wireless. The emphasis will be placed on discussions of various network design problems and solution approaches. Specific issues covered in this course include: framing and coding, error detection, multiple access control, addressing, routing, flow and congestion control, scheduling and switching.

Computer Programming for Electrical and Computer Engineers I This is an introduction to computer programming from an engineering perspective. Topics covered include basics of program design, coding, execution, debugging, and correctness. Students learn to develop concise, well-documented, well-designed, maintainable code in the C programming language.
Calculus I Analytic geometry, differential and integral calculus, transcendental functions, and applications. Graphing calculator required.
Introduction to Interfaith Leadership This is a foundations course for the Interfaith Leadership Certificate Program. It is a required course for students in this program and is open to all students. The course introduces students to knowledge, vision, and skills of interfaith leadership and is applicable to all majors.
Natural Resources and American Economic Institutions This course explores how the American economy and quality of life is linked to the development of the nations resources. Focus is on the interaction of individual citizens, business, and government institutions from the Colonial Era to present. Topics explore the role of democracy, property rights, free markets, government, agencies, and financial institutions in the development of the United States
Drawing I Students are introduced to the visual language of drawing, the graphic elements, various drawing media, and the creative problems involved.
Computer Programming for Electrical and Computer Engineers II This is a continued introduction to computer programming from an engineering perspective. Concepts of Object Oriented programming and basic data structures are covered.  Students learn to develop concise, well-documented, well-designed, maintainable code in the C++ programming language.
Calculus II Integration, infinite series, introduction to vectors, and applications. Graphing calculator required.
Digital Circuits Introduction to boolean logic, finite state machines, basic datapath components, and register-transfer level (RTL) design. Design of combinational and sequential logic circuits with programmable logic devices. Design of digital systems. Simulations and timing analysis. Three lectures, one lab.
Physics for Scientists and Engineers I This course covers the study of motion and thermal physics including vectors, kinematics, forces, Newtons three laws of motion, circular motion and rotations, harmonic motion, momentum, energy and work, gravity, fluids, and thermodynamics. It includes lecture and required recitation.
Physics for Scientists and Engineers Lab I Computer-assisted laboratory investigations of mechanics and thermal physics principles taught
Algorithms and Data Structures This course focuses on strategies for the design and evaluation of algorithms and their associated data structures. Topics include recursion, sorting algorithms, graphs, binary trees, hash tables, priority queues, splay trees, disjoint set classes, dynamic programming, and greedy algorithms.
Electrical Circuits 1 Introduction to electrical circuits and basic circuit elements. Circuit theory, analysis techniques, and introduction to design. DC analysis. First-order inductive and capacitive circuits. Operational amplifiers. Mutual inductance. Introduction to computer-aided design and analysis
Intermediate Writing: Research Writing in a Persuasive Mode Writing of reasoned academic argument supported with appropriately documented sources. Focuses on library and Internet research, evaluating and citing sources, oral presentations based on research, and collaboration.
Linear Algebra This course teaches solutions of linear systems, matrix operations, matrix factorization, vector spaces, subspaces, linear independence, bases, linear transformations, eigensystems, orthogonality, Gram-Schmidt orthogonalization, and projections.
Physics for Scientists and Engineers II This course covers the study of waves, electricity and magnetism, optics, and quantum phenomena. Topics include electric and magnetic forces and fields, electric potential, Maxwells equations, DC and AC circuits, geometrical optics, wave nature of light, special relativity, and atomic, molecular, nuclear phenomena. The course includes lecture and required recitation.
Digital System Design This course consists of advanced projects in digital system design using field-programmable gate arrays and embedded microprocessor systems. Projects include signal processing and data communication applications.
Electrical Circuits 2 This course is a continuation of electrical circuits and basic circuit elements concepts. Topics include second-order RLC circuits, AC steady-state analysis, steady-state power and three-phase circuits, filters, and Bode diagrams. Lab work is required.
Ordinary Differential Equations Analytic solution techniques for ordinary differential equations. Initial value and boundary value problems and applications. Higher-order scalar equations, first-order linear systems, and Laplace transforms.
Numerical Methods for Engineers Numerical analyses applied to engineering problems, including simultaneous solutions of linear and nonlinear equations, optimization, curve fitting, numerical differentiation and integration, and numerical solutions of differential equations.
Biological Anthropology Survey of multidisciplinary field of biological anthropology. Includes study of fossil and living primates, fossil evidence for human evolution, bioarchaeology, contemporary human variation and adaptation, principles of evolutionary theory, and introductory population genetics.
Continuous-Time Systems and Signals Students learn time domain analysis of higher-order systems, including impulse response and convolution, and Laplace transform analysis of circuits and systems. They study frequency domain analysis, discrete Fourier series, Fourier transforms, and analog filter design. Some computer programming is required.
Microcontroller Hardware and Software This course covers synthesis of microcontroller systems, including hardware, programming, and interfacing. Topics include architecture basics, instruction set, assembly language programming, I/O, timing, and interrupts. The course includes hands-on implementation.
Computer Systems Programming and Architecture Students learn advanced assembly language and systems programming concerned with performance. The course covers the study of modern computer architecture issues, such as caching, pipelining, concurrent instruction execution, and virtual memory.
Discrete Mathematics Students learn logic and axiomatics, sets, functions, counting methods, recurrence relations, graph theory, Boolean algebras, combinatorial circuits, automata, grammars, and languages.
Language and Culture This course covers the use of language as a descriptive tool to understand human culture and how speakers use language to shape their culture as a whole, including their individual place within it, their interpersonal relationships, and transmission to the next generation.
Microelectronics I This course covers the fundamentals of transistors, operational amplifiers, and other integrated circuits, along with their utilization in amplifiers, switches, and other applications. Laboratory work is required.
Engineering Professionalism Introduces students to life as an engineer, including: the design process, working in teams, understanding professional and ethical responsibility, the impact of engineering on society, and the need for continued professional development. Also includes discussion of how engineering meets the contemporary needs of society.
Technical Communication for Engineers The goal of this course is to prepare engineering students with the foundational research, individual and collaborative technical writing, teamwork, and presentation skills necessary to be effective technical and professional communicators in academic and professional settings.
Statistics for Scientists Introduction to statistical concepts, graphical techniques, discrete and continuous distributions, parameter estimation, hypothesis testing, and chi-square tests.
Compiler Construction Review of programming language structures, translation, loading, execution, and storage allocation. Compilation of declarations, expressions, statements, and procedures/functions. Organization and design of a compiler.
Engineering Design I Individual or team engineering project proposal development. Interdisciplinary projects strongly encouraged. Written project proposal required.
Engineering Communications I Professional engineering project proposal writing methods, including budget development and project scheduling (Gantt) charts. Project progress report writing.
Introduction to Computer Networks This course includes an introduction to computer network terminology, network applications, network technologies, and internetworking. Students are introduced to protocol stacks and each layer is studied. Particular attention is paid to the TCP/IP protocol stack.
Nonlinear Dynamics This course introduces elementary concepts in dynamical systems, including canonical, continuous, and discrete models, equilibria, stability, and bifurcation of solutions of differential equations.
Real-Time Processors Students learn real-time processor architectures and methods used for digital signal processing, including C and assembly language programming, modern DSP and GPU architectures, and finite word-length effects. The laboratory includes implementation of hardware-based real-time systems.
VLSI Design Introduces the standard cell library-based design flow in VLSI, including design methodology and IP design, CMOS circuit design styles, and design technology for low power and thermal aware designs.
Globalization This course reviews how sociology, cultural geography, and economic anthropology analyze processes of globalization in postcolonial societies. It examines changing livelihoods, patterns of spatial incorporation and societal evolution, and emergent policy problems associated with rapid socioeconomic change.
Engineering Design II Design, development, and testing of the engineering project proposed in ECE 4820. Interdisciplinary projects strongly encouraged
Engineering Communications II Includes professional engineering project reports, oral design reviews, presentation graphics, and project presentation.
Programming Languages Theories of programming design and implementation. Introduction to variety of programming languages, showing how they represent trade-offs with respect to these theories.
Intelligent Systems Introduction to artificial intelligence topics, including software agent design, informed search, heuristics, inference (logical and probabilistic), knowledge representation, game playing, planning, machine learning, philosophy, and ethics.
Fundamentals of Engineering  This is an introductory course that focuses on the fundamental concepts of engineering. Topics are drawn from principles of bio-, civil, computer, electrical, environmental, and mechanical engineering and show the interdisciplinary nature of the profession. Foundational skills such as problem solving, engineering communication, and teamwork are included.
The Human Experience A writing-intensive interdisciplinary course that initiates first year students into the VU academic community by exploring significant themes in human experience, engaging students with resources from the areas of history, theology, philosophy, literature, and the arts.
Calculus I  A first course in the calculus sequence. Topics include limits, continuity, differentiation, application of the derivative, the Intermediate Value Theorem, definite integrals and the Fundamental Theorem of Calculus, with transcendental functions throughout.
Newtonian Mechanics  A study of classical mechanics, including static and dynamic systems, for students of physics, engineering, chemistry, and meteorology. Applications of calculus are made as appropriate.
Experimental Physics I  Laboratory experiments test and illustrate fundamental physics concepts
Fundamentals of Electrical Engineering  A study of the fundamental methods and theorems of electrical circuit analysis. Topics include steady-state and transient analysis of DC and AC circuits containing resistors, capacitors, inductors, and operational amplifiers.
The Human Experience  A writing-intensive interdisciplinary course that initiates first year students into the VU academic community by exploring significant themes in human experience, engaging students with resources from the areas of history, theology, philosophy, literature, and the arts.
Calculus II  Topics include techniques of integration, applications of the definite integral, improper integrals, an introduction to differential equations, convergence of sequences and series, Taylor series, parametric equations, and polar coordinates
Physics: Electricity, Magnetism and Waves Physics: Electricity, Magnetism and Waves
Healthy Lifestyles  This course is designed for freshmen (and transfer students) and should be taken during their first year of attendance at Valparaiso University. The course is aimed at promoting a concern in each student for their current level of health and physical fitness.
Technical Writing for Electrical and Computer Engineersw  An introduction to technical writing in electrical and computer engineering. Topics include writing impactful sentences and paragraphs, designing figures, charts, graphs, and tables to effectively convey technical information, and writing for a particular audience
Linear Circuit Theory I A study of the fundamental methods and theorems of electric circuit analysis. Topics include steady state and transient analysis of DC and transient circuits containing resistors, capacitors, inductors, and operational amplifiers.
Digital Logic Design  An introduction to digital logic concepts, including the analysis and design of combinational and sequential digital circuits.
Engineering Programming I  A study of the fundamental programming constructs, algorithms, and data structures using industry-standard software. An emphasis is placed on programming strategies and the application of computer algorithms to solve problems in engineering and mathematics.
Linear Systems and Matrices  Students will study properties of, and solutions to, linear equations and systems of linear equations. Related topics include matrices, properties of matrices, matrix algebra, determinants, eigenvalues, real vectors in two and three dimensions, vector algebra (including dot and cross products), linear combinations, and linear independence.
Ordinary Differential Equations  Study of differential equations of a single variable, and their solutions (graphical, exact, and numerical), applications of ordinary differential equations, Laplace transforms, introduction to systems of linear differential equations, use of eigenvalues and eigenvectors in solving such systems.
Advanced Logic Design  Includes the design of MSI and LSI digital circuits using a hardware description language (VHDL). Designs are also implemented in programmable logic devices (PALs, CPLDs).
The Design Process for Electrical and Computer Engineers A study of the design process as it relates to electrical and computer engineering. All steps of the design process will be considered in depth, and students will complete both incremental projects and a comprehensive design project that integrates their knowledge of the course material with technical design constraints.
Engineering Programming II  Topics include the implementation of linked lists, queues, trees, stacks, sets, and sorting algorithms, such as quick sort, merge sort, and bucket sort. Students are also introduced to object orientation.
Linear Circuit Theory I  A study of the fundamental methods and theorems of electric circuit analysis. Topics include steady state and transient analysis of DC and transient circuits containing resistors, capacitors, inductors, and operational amplifiers
The Christian Tradition  A study of the origins and development of Christian thought as it forms communities and engages the world.
Discrete Structures I An introduction to mathematical reasoning, algorithm analysis, and the concepts that provide a mathematical foundation for computer science. Topics include a review of sets, logic, proof techniques including mathematical induction, counting techniques, recurrences, RSA cryptography, graph algorithms, applications, and elementary analysis of iterative and recursive algorithms.
Electronics I  An introduction to semiconductor theory and the design and analysis of electronic circuits. Topics include diodes, field-effect and bipolar transistors, CMOS logic circuits, single state discrete transistor amplifiers, and multistage integrated-circuit amplifiers.
Signals and Systems Continuous and discrete systems and signals are considered in both time and frequency domains. Continuous-time linear systems topics include Fourier series, Fourier transforms, and Laplace transforms. Discrete-time topics include the discrete Fourier transform, the Z-transform, sampling, quantization, and discrete-time processing. Discrete and continuous filtering techniques are introduced.
Calculus III  Topics include conic sections, vector algebra, space curves, calculus of functions of several variables, multiple integration, calculus of vector fields.
Embedded Microcontrollers  The application of microcontrollers in embedded system design, emphasizing the interaction of hardware and software design. Topics include integrated development environments, CPUs, program and data memories, interrupts, digital inputs and outputs, timer peripherals, serial communication interfaces, and analog-to-digital converter peripherals.
Networking and Data Communications  Theory of interconnected digital systems including information flow control by packet and circuit-switching techniques and standards for communication between network nodes.
Digital Signal Processing  This course is an overview of the theory and techniques of the basic concepts of digital signal processing. Topics covered include design of FIR and IIR filters, construction of algorithms for real-time and off-line signal processing, relationships between analog and digital realizations, and real-time hardware considerations.
Embedded Microcontrollers II Topics include assembly language, low power modes, clock systems, real‐time operating systems, and hardware/software co‐design.
Statistical Analysis  An introduction to probability and statistics for students who have completed a semester of calculus. Topics include probability, empirical and theoretical frequency distributions, sampling, correlation and regression, testing hypotheses, and estimation of parameters, with an emphasis on illustrations and applications of these techniques.
Financial Decisions in Engineering  A discussion of essential financial issues that impact engineering decision-making. Topics include calculating measures of financial merit for engineering decisions and selecting the most economically desirable solution from among several alternatives.
Ethical Decisions in Engineering  A discussion of essential ethical issues that impact engineering decision-making. Topics include recognizing situations that require ethical judgment, and applying engineering codes of ethics to make ethical decisions. Concepts of sustainability and socio-political influence are also discussed.
Linear Circuit Theory II  Topics include AC circuits, power computations, transformers, frequency response, filters, Laplace transforms, and Fourier series.
Experience and Existence A study of the fundamental philosophical questions that arise as we attempt to understand the world around us and our experience of it. Topics covered may include the nature of time, space, and matter, the existence of God and of human souls, the nature of the human person and of consciousness, the reliability of sense- perception and the possibility of knowledge, the compatibility of faith, reason, and science, and so on.
Computer Architecture  The description, organization, and design of computer elements to perform effectively. Instruction set design, caches, pipelining, and microprogramming.
Biotechnology  An introductory study of modern biology in which those aspects of biotechnology that affect the welfare of humanity are emphasized.
Senior Design Project I The application of theoretical and experimental engineering concepts in the analysis and design of an engineering system. Students form teams to plan and organize a multidisciplinary project.
Integrated Circuit Fabrication and Design  An introduction to the fundamental principles of CMOS digital integrated circuit design. Extensive use of CAD tools for layout and simulation. Techniques for speed and size tradeoff are studied.
Senior Design Project II  Projects are built, tested, documented, and reported.
Simulation and Modeling Tools  A study of the software tools that are used by electrical and computer engineers to simulate circuits and to study electrical signals and systems.
Electromagnetic Field Theory  The study of fundamental laws of static and dynamic electric and magnetic fields using vector methods. Topics include transmission lines, Maxwell’s equations and electromagnetic radiation.
Globalization and Development A regional survey of the developing countries, with an emphasis on their economic, social, and political development in the context of growing global interconnectedness.
Discrete Mathematics  An introduction to mathematical reasoning, algorithm analysis, and the concepts that provide a mathematical foundation for computer science. Topics include a review of sets, logic, proof techniques including mathematical induction, counting techniques, recurrences, RSA cryptography, graph algorithms, applications, and elementary analysis of iterative and recursive algorithms.
Linear Algebra A study of linear algebra and an introduction to mathematical reasoning. Topics include systems of linear equations, matrices, determinants, vectors in n-space, abstract vector spaces, and linear transformations.
Principles of English Composition Systematic analysis of the components of effective writing, with regular practice and close individual assistance.
General Chemistry Lab Topics covered: basic measurement, atomic theory, electron configuration, periodicity, chemical reactivity and energetics, stoichiometry, gas laws and changes in state, bonding and molecular structure.
Differential and Integral Calculus I  Limits and continuity, differentiation, applications of differentiation to optimization and curve sketching, integration, the fundamental theorem of calculus, the substitution rule, applications of integration to computation of areas and volumes.
United States to 1865  A general survey of United States history to the end of the Civil War, with emphasis upon national political, diplomatic, economic, constitutional, social and intellectual developments.
Freshman Engineering Experience   Freshman Engineering Experience
Principles of English Composition Principles of English Composition
Differential and Integral Calculus II  The natural logarithmic and exponential functions, indeterminate forms, techniques of integration, improper integrals, parametric curves and polar coordinates, infinite sequences and series, vectors in two and three dimensions.
General Physics for Engineering and Science Majors  Vectors, kinematics and dynamics of particles, work and energy systems of particles, rotational kinematics and dynamics, oscillations, gravitation, fluid mechanics, waves.
American Federal Government A study of the structure, organization and powers of the executive, legislative and judicial branches including relationships between state and national governments. Emphasis upon political processes and popular government; elections, political parties, pressure groups, voting behavior.
Introduction to Computer Programming for Programmers Introduction to the design and implementation of computer software with an emphasis on abstraction and program organization for students with some prior programming experience. Topics include: variables and constants, arithmetic and Boolean expressions, conditional statements, repetition, methods, arrays, linear and binary search, basic sorting algorithms, object-oriented programming, documentation, and testing.
Differential and Integral Calculus III  Vectors and vector functions, functions of several variables, partial differentiation and gradients, multiple integration, line and surface integrals, Green-Stokes-Gauss theorems.
General Physics for Engineering and Science Majors Temperature, heat, thermodynamics, electricity, magnetism, optics.
Programming Structures and Abstractions The design and implementation of computer programs using disciplined methodologies. Use of several abstract data types. Software reuse through encapsulation, composition, aggregation, inheritance, polymorphism, and generics. Topics include recursion, GUI development, file processing, and unit testing. A program design tool will be used. Introduction to ethics in computer science, including philosophical ethics theories.
Digital Design Number systems, Boolean algebra, minimization procedures, combinational logic functions, introduction to sequential logic design, finite state machines and clocked (synchronous) sequential circuits. Analysis, synthesis and implementation are appropriately emphasized.
Introduction to Ordinary Differential Equations First order ordinary differential equations, linear differential equations with constant coefficients, two-by-two linear systems, Laplace transformations, phase planes and stability.
Data Structures Representation, analysis and implementation of data structures and associated algorithms including: algorithm complexity, sorting algorithms, lists, stacks, queues, search trees (AVL, Red-Black, Splay, 2-3), Heaps, Graphs, and Hashing. Written communications required in some projects. Ethical issues and tools and techniques used in writing secure applications will also be discussed.
Discrete Structures Introduction to the theory of discrete structures useful in computer science. Topics include combinatorics, relations, functions, computational complexity, recurrences, and graph theory.
Digital Signals and Filtering Digital signals and filter, discrete Fourier A and Z transforms, sampling.
Electrical Circuits I Introduction to circuit elements and the laws of electrical science. Loop and nodal analysis solution methods. Thevenin and Norton equivalent circuits. Superposition and source transformation methods. Laplace transform analysis of electrical circuits.
Professional Development Develop an understanding of engineering ethics, teamwork, leadership, and professional responsibility through the concepts of contemporary, social, and global issues.
Probability, Statistics and Random Processes Covers the role of statistics in electrical and computer engineering and includes substantial exposure to applications appropriate to the discipline: basic probability; random variables, vectors and processes; time averages, expectations and laws of large numbers; stationarity, autocorrelation and spectral analysis; minimum mean squared error estimation; detection and linear filtering; IID, Markov, independent increment, counting, Gaussian and Poisson random processes.
Electrical Circuits II Analysis of electrical circuits in both time and frequency domains. Continuation of AC circuit theory, use of two port network theorems, impulse response, convolution, and differential equations. Laplace and Fourier transform analysis of electrical circuits.
Electrical and Computer Engineering Circuits Laboratory Electrical laboratory procedures, circuit construction, debug and experimental Confirmation of the principles of circuit theory. Introduction to use of laboratory instrumentation, including skills in the use of the oscilloscope in the evaluation of DC and AC circuits. Use and application of diodes, operational amplifiers and programmable logic devices.
Introductory Electronics Small and large signal characteristics and models of electronic devices; analysis and design of elementary electronic circuits.
Microprocessor System Design Review of clocked sequential circuits; MSI/LSI devices and applications, including registers, busing, combinational functions; use of microprocessors and logic design using microprocessors. Emphasizes assembly of full functional units into workable systems.
Signals and Systems Linear systems; time domain analysis; frequency domain analysis; Fourier, Laplace and Z-transforms; introduction to communications and control.
Electrical and Computer Engineering Electronics Laboratory Electronic analog circuit design, simulation, construction, debugging and measurement of circuit behavior and noise using advanced instrumentation techniques; statistics-based circuit reliability theory; independent design skills development and technical writing.
Linear Algebra I Systems of linear equations, determinants, finite dimensional vector spaces, linear transformations and matrices, characteristic values and vectors.
Digital Design Laboratory Design of digital systems with integrated circuits and MSI/LSI and microprocessor interfacing.
Computer Architecture Covers basic concepts of computer system design and communication between components, along with current and historical examples of computer architecture.
Laboratory  (Special Projects) Individually supervised special engineering problems of experimental nature.  /  Optical Engineering Underlying theory and design of optical systems. Interference, diffraction and coherence phenomena will be examined as a basis for studying the limits of optical system performance. Other topics include a detailed study of polarization, the interaction of light with various media and geometrical optics.
Introduction to Control System Engineering Analysis and synthesis of control systems; control systems performance and applications.
Software Requirements and Specifications Students gain technical and professional skills by performing requirements engineering. Learn the tools, techniques, and methods for modeling software systems. Students practice written and oral communication skills and consider the impact of computing on individuals, organizations and society, and demonstrate their ability to engage in lifelong learning by gaining background in a domain outside of their own.
Theory of Computation Introduction to abstract machine theory and formal language theory. Topics include Turing machines, finite/pushdown automata, deterministic versus nondeterministic computations, context-free grammars, and mathematical properties of these systems.
Introduction to the University Experience for Engineers This course will also be the venue to introduce all School of Engineering students to the disciplines/departments across the School of Engineering.
General Physics I Calculus-based introductory course in mechanics
Engineering Innovation First year multi-disciplinary innovation projects primarily geared towards skill development in the areas of requirements analysis, creativity, conceptual design, design and problem-solving processes, prototyping, teamwork, and project communications. Application to the development of a new product or technology meeting societal needs.
Enrichment Workshop  A workshop structured to provide collaborative learning in fundamental engineering topics of calculus, chemistry, and physics
Analytic Geometry & Calculus Introduction to the differential and integral calculus; differentiation and integration of algebraic and transcendental functions with applications to science and engineering
The West & the World Survey of key themes in world history including the social, economic, cultural, political, and environmental forces that shaped the human past throughout the globe.
Introduction to Philosophy Introduction to philosophical reflection and study of some central philosophical questions in the Western intellectual tradition, including questions of ethics, human knowledge, and metaphysics
Writing Seminar I Introductory level course focused on writing as a mode of inquiry. Emphasis on developing college-level reading, writing, research, and critical thinking skills
Introduction to Electrical & Computer Engineering Introduction to electrical and computer engineering faculty, facilities, and curriculum
General Chemistry Comprehensive treatment of the fundamentals of general chemistry.
Algorithms & Programming I Introduction to computers and programming using a high-level, structured language. Topics include problem solving, algorithms, programming constructs, data representation, stepwise refinement, and debugging.
Enrichment Workshop II A workshop structured to provide collaborative learning in fundamental engineering topics of calculus, chemistry and physics facilitated by upper-class engineering students.
Analytic Geometry & Calculus II Conic sections, techniques of integration with applications to science and engineering, infinite series, indeterminate forms, Taylor's theorem
Principles of Oral Communication Introduces the relationship between communication and democratic life in contemporary and historical contexts. This course examines the importance of communication in achieving mutual understanding and provides the opportunity to demonstrate effective and ethical dialogue.
Introduction to Religious and Theological Studies This course introduces students to two academic disciplines: the study of religions as historical and embodied realities, and theology as faith seeking understanding. By learning about these two disciplines, students will gain a critical self-awareness of the ways in which the modern context shapes their engagement with religion. The course emphasizes learning how to read Scripture and other primary religious sources, and to learning how the Catholic intellectual tradition addresses the question of God, the meaning of human life, and the significance of human diversity.
Introduction to Engineering Cooperative Education Introduction to Engineering Cooperative Education offers an academic course for students who wish to participate in the Engineering Cooperative Education Program
Introduction to MATLAB Programming MATLAB system and development environment, vector and matrix operations using MATLAB, linear algebra and calculus using MATLAB, MATLAB graphics, flow control, symbolic math toolbox. Prerequisite(s): (CPS 132 or CPS 150) or equivalent.
Engineering Mechanics This course provides an introduction to mechanics as applied to engineering problems. Principles of force and moment balance, work, and energy conservation are applied to systems in static equilibrium. The similarity of balance laws applied to mechanical behavior to those used in thermodynamics and electric circuits is introduced. Students are introduced to the concepts of free-body diagrams and equivalent systems of forces, properties of areas and sections, analysis of simple structures, internal forces, stress, and material failure. Introduces a common problem-solving approach and processes to address and solve open ended problems and creative application of theory.
Analytic Geometry & Calculus III Solid analytic geometry, vectors and vector functions, multivariable calculus, partial derivatives, multiple integrals.
Circuit Analysis Principles of linear circuit analysis and problem solving techniques associated with circuits containing both passive and active components
Writing Seminar II Variable topic composition course focused on academic discourse, research, and argumentation. Instruction and practice in developing reading, writing, and research skills introduced in ENG 100 and employed across the curriculum.
The Physics of Waves Examination of analytical approaches and conceptual frameworks of physics applied to wave phenomena in a variety of physical systems. Topics include oscillation in mechanical and electrical systems, mechanical and electromagnetic waves, and geometrical and physical optics.
Introduction to Digital Systems. Introduction to binary systems, logic circuits, Boolean algebra, simplification methods, combinational circuits and networks, programmable logic devices, flip flops, registers, counters, memory elements, and analysis and design of sequential circuits.
Digital Systems Laboratory Logic gate characteristics; combinational logic design and analysis; latches and flip-flops; synchronous and asynchronous sequential logic; simple digital systems. Experiments include design and analysis of digital systems using breadboarding, FPGA boards, modeling and simulation tools, hardware description languages, and logic synthesis tools
Applied Differential Equations First order equations, linear equations with constant coefficients, systems of equations, the Laplace transform, numerical methods, applications.
Electronic Devices Study of the terminal characteristics of electronic devices and basic single stage amplifier configurations using bipolar junction transistors and field-effect transistors. Analysis of the devices includes a qualitative physical description, volt-ampere curves, and the development of small- and large-signal equivalent circuit models.
Engineering Thermodynamics This course provides an introduction to engineering thermodynamics, emphasizing the vital importance of energy generation and efficiency from a multi-disciplinary perspective. State descriptions of pure substances and mixtures. Control volume analysis and conservation principles applied to systems with respect to mass, energy, and entropy with applications to power, refrigeration, chemically reacting and other energy conversion systems. Introduces a common problem-solving approach and processes to address real, open ended problems and creative application of theory. Both analytical and computer solutions of engineering thermodynamics problems are emphasized. This course is part of the Integrated Engineering Core for all engineering
Electromagnetics Study of vector calculus, electro- and magneto-statics, Maxwell's equations, and electromagnetic plane waves and their reflection and transmission from discontinuities.
Fundamentals of Computer Architecture Study of computer systems organization, representation of data and instructions, instruction set architecture, processor and control units, memory devices and hierarchy, I/O devices and interfacing peripherals, high- to low-level language mapping, system simulation and implementation, applications and practical problems.
Signals & Systems Mathematical framework associated with the analysis of linear systems including signal representation by orthogonal functions, convolution, Fourier and Laplace analysis, and frequency response of circuits and systems
Professional Development Seminar II Junior level professional development seminar. Presentations on contemporary and professional engineering subjects by students, faculty, and engineers in active practice. The seminar addresses topics in key areas that complement traditional courses and prepare distinctive graduates, ready for life and work
Applied Electromagnetics Electromagnetic theory applied to problems in the areas of waveguides, radiation, electro-optics and electromagnetic interference and electromagnetic compatibility.
Engineering Probability & Random Processes. Axiomatic probability, derived probability relationships, conditional probability, statistical independence, total probability and Bayes' Theorem, counting techniques, common random variables and their distribution functions, transformations of random variables, moments, autocorrelation, power spectral density, cross correlation and covariance, random processes through linear and nonlinear systems, linear regression, and engineering decision strategies.
Discrete Signals & Systems. Introduction to discrete signals and systems including sampling and reconstruction of continuous signals, digital filters, frequency analysis, the z-transform, and the discrete Fourier transform.
Electronic Systems ELECTRONIC SYSTEMS Study of cascaded amplifiers, feedback amplifiers, linear integrated circuits, and oscillators including steady state analysis and analysis of frequency response
Social Science Integrated A theme-based course that varies across sections but shares common learning outcomes. Application of social science methods and social theory to critically examine human issues and problems from the perspective of at least three social science disciplines (anthropology, economics, political science, psychology and sociology). The course will emphasize outcomes related to scholarship, critical evaluation of our times, and the diversity of the human world.
Control Systems Study of mathematical models for control systems and analysis of performance characteristics and stability. Design topics include pole-placement, root locus, and frequency domain techniques.
Multidisciplinary Design I Application of engineering fundamentals to sponsored multidisciplinary-team design projects. In a combination of lecture and lab experiences, students learn the product realization process and project management. Product realization topics include idea generation, proposal development, design specifications, conceptualization and decision analysis. Project management topics include cost estimation and intellectual property management.
Communication Systems Study of amplitude, angle, pulse, and digital communication systems including generation, detection, and analysis of modulated signals and power, bandwidth, and noise considerations.
Multidisciplinary Design II One hour lecture and five hours of lab per week. Detailed evaluation of the Product Realization Process focusing on conceptual design, embodiment design, final design and prototyping is taught. Analysis of the design criteria for safety, ergonomics, environment, cost and sociological impact is covered. Periodic oral and written status reports are required. The course culminates in a comprehensive written report and oral presentation
Robotics I Robotics I
Robotics II Robotics II
Calculus I Limits, derivatives, and applications of differentiation. Definite and indefinite integrals. The fundamental theorem of calculus and applications of integration.
Calculus II Techniques of integration and improper integrals. Sequences and series. Power series and Taylor polynomials. Parametric and polar coordinates. Vectors and solid geometry.
Mechanics and Lab Mechanics and Lab
Introduction to Algorithms and programming and Lab Introduction to algorithms, their representation, design, structuring, analysis and optimization. Implementation of algorithms as structured programs in a high level languag
Introduction to Computer Systems and Lab Introduction to computer architecture, assembly language programming, system software and computer applications. Number systems and data representation. Internal organization of a computer. Primitive instructions and operations. Assembly language. Integrated lecture/lab environment
Data Structures and Program Design and Lab Introduction to data structures and the algorithms that use them. Review of composite data types, such as arrays, records, strings and sets. Role of the abstract data type in program design. Definition, implementation and application of data structures, such as stacks, queues, linked lists, trees and graphs. Recursion. Use of time complexity expressions in evaluating algorithms. Comparative study of sorting and searching algorithms
Calculus III
Analytical Reading  Analytical Reading
Expository Writing Expository Writing
Oral Communication Oral Communication
Social Sciences  Social Sciences
Arts and Humanities  Arts and Humanities
Comparative Cultures Comparative Cultures
History and Local Government History and Local Government
Calculus III Solid analytic geometry and space curves. Partial differentiation and applications. Multiple integrals. Line integrals and independence of path. Vector calculus including the divergence theorem and Stokes’ theorem.
Applied Differential Equations First order equations. Explicit solution methods, existence and uniqueness for initial value problems. Higher order linear equations. Undetermined coefficients and variation of parameters. Laplace transforms and transform solution methods. Linear first-order systems. Emphasis on engineering applications
Electricity and Magnetism Electric and magnetic fields, circuit theory and electromagnetic induction.
Physics III Third course of a sequence of courses intended primarily for physical science majors. Calculus-based course on thermodynamics, waves and modern physics.
Quantum Physics I Classical background, the wave function, Schroedinger equation, time development and stationary states, 1-dimensional problems, harmonic oscillator and formalism of quantum mechanics.
Introduction to Linear Algebra Systems of linear equations, matrices, determinants, eigenvalues, vector spaces and linear transformations, as well as introduction to inner products on Rn and spectral theorem for symmetric matrices.
Discrete Mathematics Propositional calculus, predicate calculus, set algebra, relations, functions, mappings, fields and number systems.
Biological Principles I Selected topics illustrating major concepts in biology, including the scientific process, heredity, evolution, taxonomy and systematics, ecology and animal behavior. Observations, experiments and demonstrations. Emphasis on unifying biological concepts and methods in science
Biological Principles II Selected topics illustrating major concepts in biology, including biological chemistry, cells, molecular genetics, animal development and plant and animal physiology. Observations, experiments and demonstrations. Emphasis on unifying biological concepts and methods in science
General Chemistry I Basic course in the fundamental principles and theories with special emphasis on chemical calculations. Includes a discussion of the kinetic molecular theory, atomic structures, the periodic table, solutions and oxidation-reduction.
General Chemistry II Introduction to kinetics, gas phase and solution equilibria, electrochemistry, chemical thermodynamics, radio, organic chemistry and the descriptive chemistry of the more familiar metals and nonmetals. Recitation portion deals with problem solving, review of the lecture material and quizzes. (Available for General Education, B1 Physical Science.
Computer Organization Extension of basic addressing concepts to more advanced addressability, such as base register and self-relative addressing. Comparative computer architecture focusing on such organizations as multiple register processors and stack machines. Basics of virtual memory input-output. Introduction to the concept of microprogrammable systems.
Advanced Data Structures Introduction to advanced data structures (particularly persistent structures) using object-oriented design. Main memory structures, hash tables and trees. Architectural foundations for files. Large-scale sorting. Hash-based persistent structures. Indexed files. Introduction to databases.
Introduction to Operating Systems and System Architecture and Lab Examination of the principal types of systems, including batch, multi-programming and time-sharing. Discusses networked system. Considers the salient problems associated with implementing systems, including interrupt of event driven systems, multitasking, storage and database management and input-output. Emphasizes some of the simple algorithms used to solve common problems encountered, such as deadlocks, queue service and multiple access to data
Introduction to Software Engineering Concepts and techniques for systems engineering, requirements analysis, design, implementation and testing of large-scale computer systems. Principles of software engineering for production of reliable, maintainable and portable software products. Emphasis on object-oriented analysis and design techniques. Topics include unit, integration and systems testing, configuration management, software quality assurance practices and an introduction to Computer Aided Software Engineering (CASE).
Computer Network Software Basic software design and analysis considerations in networking computers into coherent, cooperating systems capable of processing computational tasks in a distributed manner. Network topology, routing procedures, message multiplexing and process scheduling techniques.
Advanced Network Topics and Lab Architectural principles: naming, addressing, routing; congestion control, traffic management, QoS; wireless networks; overlay networks and virtualization; queueing theory; measurements; network security; switching and routing; content distribution; and proposals for future Internet structures.
Theory of Digital Systems and Lab Introduction to digital systems. Topics include number systems, binary codes, Boolean algebra, combinational logic design, logic minimization techniques, sequential circuits design, arithmetic operations, data transfers using register transfer notation, memory devices, digital system organization and digital subsystems design
Engineering Economy Engineering Economy
Electronics I and Lab Linear, piecewise-linear and nonlinear models for active devices and their interaction with passive network elements. Characteristics and behavior of operational amplifiers, diodes and transistors. Small signal amplifiers and their analysis at low, midband and high frequencies.
Linear Systems I Systematic development of linear system response models in both the time and frequency domains. Concentrates on continuous system models. Techniques developed include Laplace transform, Fourier analysis, impulse response, convolution and state variables for continuous linear systems.
Design of Digital Computers Structure and operation of a stored-program general-purpose digital computer. Design of computer hardware modules: arithmetic-logic units, control units, input-output units and memories. Basic organizations of digital computers. Fault diagnosis and fault tolerant design of digital systems
Digital Systems Design with Programmable Logic Designed to cover and compare a variety of programmable logic devices with design examples to show their applications. Emphasizes the implementation of digital systems with programmable logic devices and uses VHDL in design description and Vivado software in design simulation and verification.
Microprocessor Systems and Lab Studies of microprocessor architectures and microcomputer systems. Basic microprocessor software consideration and assembly language programming. Microcomputers system design considerations, applications and design with a microcontroller
Digital Electronics and Lab This course covers models of electronic nonlinear devices and their analysis for digital circuit applications. Additional topics include: the limitations of digital circuits; design of logic gates, memory elements and registers at the device level; system considerations with reference to various technologies including CMOS, Pseudo-NMOS, ECL, Pass Transistor, and dynamic logic circuits; and integrated circuit layout. Graduate students enrolled in the class will be required to develop computer simulation design programs that will produce results that meet a set of circuit specifications. Available for graduate credit
Probabilistic Systems in Electrical Engineering–Design and Analysis Develops and demonstrates techniques and models useful for solving a wide range of problems associated with the design and analysis of various probabilistic systems in electrical engineering application. These include radar, communication systems, sonar, control systems, information theory, computer systems, circuit design, measurement theory, vulnerability analysis and propagation.
Senior Design Project-Electrical I Senior Design Project-Electrical I
Senior Design Project-Electrical II Senior Design Project-Electrical II
Design of Digital Computers Structure and operation of a stored-program general-purpose digital computer. Design of computer hardware modules: arithmetic-logic units, control units, input-output units and memories. Basic organizations of digital computers. Fault diagnosis and fault tolerant design of digital systems
Pulse and Waveshaping Circuit Design and Lab Wave shaping and generation circuits with application to data acquisition and instrumentation. Design of multivibrator circuits, analog-to-digital and digital-to-analog converters, sample and hold amplifiers, and general interface circuits. Graduate students enrolled in the class will be required to develop computer simulation design programs that will produce results that meet a set of circuit specifications.
System on Chip Design Introduction to system on chip design methodology that includes the study of ZYNQ and ARM architectures, AXI Interconnect, memory, real-time operating system (RTOS), peripheral interface and components, and contemporary high-density FPGAs.
FPGA/ASIC Design Lab The lab accompanying course ECE 524 covers modeling of digital systems and electronic circuit design hierarchy and the role of methodology in FPGA/ASIC design. Hardware Description Language, VHDL, simulation and synthesis tools are utilized to elaborate the material covered throughout the course. The lab introduces the systematic top-down design methodology to design complex digital hardware such as FPGAs and ASICs. FPGA and ASIC design flow as well as design optimization techniques are discussed. For FPGAs, Xilinx Virtex and Actel SX architecture are covered.
Digital Design with Verilog and System Verilog and Lab  This course covers the use of Verilog and SystemVerilog Languages (IEEE Std. 1800) for the design and development of digital integrated circuits, including mask-programmed integrated circuits (ASICs) and field programmable devices (FPGAs). Hierarchical top down vs. bottom up design, synthesizable vs. non-synthesizable code, design scalability and reuse, verification, hardware modeling, simulation system tasks, compiler directives and subroutines are all covered and illustrated with design examples
ASIC Development Lab This course is a companion to ECE 527–Application Specific Integrated Circuit Development. In the lab, students apply the lessons of ECE 527 to code circuits in Verilog HDL, synthesize them for varying performance goals and modify the implemented designs for testability. This is accomplished through use of state-of-the-art industrial design automation software.
Very Large Scale Integrated Circuit Design Survey of VLSI technology and very large scale integrated systems. Problems that occur when ordinary circuits are replicated to involve millions of devices. CMOS technology, design styles up to the point of submission for fabrication. Computerized methods with high-density circuits with optimized speed and power consumption. Students perform simple layouts and simulations suitable for extension to a very large scale.
Data Communication Networks Layered network architectures and the TCP/IP model. Link layer error and flow control mechanisms. Packet switching. Wired and wireless local and wide area networks. Medium access control procedures. Internet working with switches, bridges and routers. Routing algorithms. Network security.

Critical Reading and Composition Instruction in strategies for critically reading and analyzing literature and non-literary texts; structured, sustained practice in composing expository and analytical essays.
Rhetoric and Composition Instruction and intensive practice in researching, analyzing, and composing written arguments about academic and public issues.
Calculus I Functions, limits, derivatives, introduction to integrals, the Fundamental Theorem of Calculus, applications of derivatives and integrals.
Calculus II Methods of integration, sequences and series, approximations.
General Chemistry I Survey of the principles that underlie all chemistry with applications illustrating these principles.
Essentials of Physics I Classical mechanics and wave motion. Calculus-level course for students of science and engineering.
Public Communication Introduction to theory and practice of oral communication in public, social, and institutional contexts. Includes foundational and cumulative training in the invention, performance, and critical analysis of oral communication, with emphasis on argumentation, persuasion, audience analysis, delivery, and ethical forms of engagement.
Professional Issues in Computer Science and Engineering Professional issues in the information technology professions; history and social context of computing; professional responsibilities; privacy; intellectual property; risks and liabilities of computer-based systems.
Elementary Arabic Elementary Arabic
History of Asian Art History of Asian Art
Introduction to African American Studies: Social and Historical Foundations Introduction to African American Studies: Social and Historical Foundations
ARTE 101 - Introduction to Art ARTE 101 - Introduction to Art
Vector Calculus Vector algebra, geometry of three-dimensional space; lines, planes, and curves in space; polar, cylindrical, and spherical coordinate systems; partial differentiation, max-min theory; multiple and iterated integration, line integrals, and Greens theorem in the plane.
Elementary Differential Equations Ordinary differential equations of first order, higher order linear equations, Laplace transform methods, series methods; numerical solution of differential equations. Applications to physical sciences and engineering.
Applied Linear Algebra General solutions of systems of linear equations, vector spaces and subspaces, linear transformations, singular value decompositions, and generalized inverse.
Discrete Structures Propositional and predicate logic; proof techniques; recursion and recurrence relations; sets, combinatorics, and probability; functions, relations, and matrices; algebraic structures.
Essentials of Physics II Classical electromagnetism and optics
Statistics for Engineers Basic probability and statistics with applications and examples in engineering. Elementary probability, random variables and their distribution, random processes, statistical inference, linear regression, correlation and basic design of experiments with application to quality assurance, reliability, and life testing.
Technical Writing Preparation for and practice in types of writing important to scientists, engineers, and computer scientists, from brief technical letters to formal articles and reports.
Algorithmic Design I Problem-solving, algorithmic design, and programming.
Algorithmic Design II Rigorous development of algorithms and computer programs; elementary data structures.
Computing in the Modern World An introduction to the field of computing: trends in computing technology, the profession, and careers; subdisciplines in computing; the nature of research and development.
Digital Logic Design Number systems, Boolean algebra, logic design, sequential machines.
Introduction to Computer Architecture Computer architecture, components. and organization; memory addressing; Input/Output; instruction sets; interrupts; assembly-language programming.
UNIX/Linux Fundamentals UNIX operating system, user-level system commands, and programming tools. UNIX scripting languages.
Advanced Programming Techniques Pointers; memory management; advanced programming language structures: operator overloading, iterators, multiple inheritance, polymorphism, templates, virtual functions; Unix programming environment.
Robotic Applications and Design Design and control of robots. Interactions between robots, sensing, actuation, and computation.
Electrical Science Fundamentals of electrical and electronic components. Basic network laws. Mathematical and computer tools for network analysis.
Introductory Electrical Engineering Laboratory Laboratory procedures, instrumentation and measurements, report writing, computer use in system design, testing, and troubleshooting. Integrative project-based learning environment including passive, active, electronic and electromechanical systems
Signals and Systems Analysis of continuous-time signals and systems in time and frequency domains, Fourier series and transforms, Laplace transforms; introduction to discrete-time signals.
Circuits Analysis of linear ac circuits using complex variables. Nodal and mesh analysis, Thevenin and Norton transformations, linearity, superposition, use of math solvers, circuit simulators, and computer-interfaced instrumentation.
Operating Systems Operating system structure and function; process implementation, scheduling, and synchronization; memory management; security; naming protection; resource allocation; network file systems.
Embedded Systems Fundamentals of embedded systems: hardware components, software components, hardware/software interface design, and hardware/software co-design.
Computer Systems Engineering System-level modeling and evaluation of computer systems: requirements elicitation and specification, architectural design, reliability and performance evaluation, Markov modeling, life-cycle cost analysis, project management.
Data Structures and Algorithms Techniques for representing and processing information, including the use of lists, trees, and graphs; analysis of algorithms; sorting, searching, and hashing techniques.
Introduction to Computer Networks Concepts and components of computer networks and the Internet; network applications; network protocol stack.
Capstone Computing Project I Capstone Computing Project I
Advanced Digital Design  Design techniques for logic systems; emphasis on higher-level CAD tools such as hardware description languages and functional modeling.
Programming Language Structures Formal specification of syntax and semantics; structure of algorithms; list processing and string manipulation languages; statement types, control structures, and interfacing procedures
Foundations of Computation Basic theoretical principles of computing as modeled by formal languages, grammars, automata, and Turing machines; fundamental limits of computation
Digital Signal Processing An introduction to analysis, design and applications of discrete time systems; z- and discrete Fourier transforms; frequency and impulse responses, FIR and IIR filters.
Control Systems Fundamentals of control systems. Analysis and design of control systems using physical system models. State variables, steady-state error, time- and frequency-responses, control system stability. Root locus analysis and controller design - PI, PD, PID, lead-lag compensator. Nyquist stability criterion.
Calculus I Topics covered include functions, limits and continuity, differentiation, applications of the derivative, optimization, antiderivatives, fundamental theorem of calculus, definite and indefinite integrals.
Foundations of Engineering Design Thinking I Foundations of Engineering Design Thinking I
General Chemistry I  This course is intended for students who expect to pursue further coursework in science or engineering. It involves the study of chemical nomenclature, stoichiometry, atomic structure, bonding theories, thermochemistry, periodic properties, solution calculations, and the gas laws.
General Chemistry Laboratory I Experimental work providing hands-on experience with concepts in fundamental chemistry, including chemical nomenclature, stoichiometry, thermochemistry, solution chemistry and related calculations, chemical bonding, and the gas laws.
English Composition This course emphasizes critical reading, writing, and textual analysis with particular focus on argument and research-based writing.
Calculus II Topics covered include techniques of integration, applications of the integral, sequences and series, and vectors.
Foundations of Engineering Design Thinking II You will continue to develop a holistic approach to integrating multiple disciplines to facilitate your ability to construct innovative and quantitatively rigorous engineering solutions. Finally, you will extend your skill development in project management, engineering fundamentals, sustainability, written, oral and graphical communication, logical thinking, and modern engineering tools (e.g., Excel, Python, LabVIEW, MATLAB, Visual Basic, CAD, Rapid Prototyping).
College Physics I This course covers topics in physics using methodsof calculus, algebra, and trigonometry, including vector arithmetic. The course includes the study of motion in one and two dimensions, and the applications of the concepts of force, work, energy, and momentum to linear and rotational motion. Simple harmonic motion, waves, elementary thermodynamics, and properties of solids, fluids, and gases are also explored.
College Physics Lab I College Physics Lab I
Programming for ECE Introduction to software methods for solving engineering problems. Emphasis is on the software development process including creating problem requirements, systematic software design, correct and maintainable C++ coding, and efficient software testing methods.
Introduction to COOP for CEAS This course is designed to introduce CECH students to the cooperative education (co-op) learning model and how it is executed through the Professional Practice Program. It will prepare students to maximize learning through and develop the strategies and necessary skills for effective participation in the Professional Practice Program.
Network Analysis Voltage, current, and power in electrical networks. Resistive networks:  Ohm’s law, Kirchhoff’s Laws, node voltage and mesh current analysis. Network theorems:  superposition, source transformations, Thévenin’s theorem.  Transient and steady-state solutions for RL, RC and RLC networks with constant forcing functions.  Use of phasors in steady-state analysis of networks with sinusoidal forcing functions. AC power circuit analysis. Magnetically coupled networks. Frequency response, resonance, bandwidth, and quality factor.
Digital Design Theory and practice of digital system design; combinational logic, synchronous sequential circuits, components and technologies, digital design processes including requirements generation, design and verification using Hardware Description Language (HDL) modeling and simulation, hardware synthesis, digital test design, digital circuit design labs included.
Multivariable Calculus Study of lines and planes, vector-valued functions, partial derivatives and their applications, multiple integrals, and calculus of vector fields.
Differential Equations and Laplace Transforms First and Second Order Differential Equations and Laplace Transforms.
Semiconductor Physics for Engineers The goal for SEMICONDUCTOR PHYSICS FOR ENGINEERS is to introduce the basic concepts of quantum mechanics and teach students to apply these concepts to a variety of physical situations. This course covers topics in modern physics including the special theory of relativity, wave properties of matter, quantum mechanics, the structure of the atom, statistical physics, molecules and solids, semiconductor theory and devices as well as nuclear physics.
COOP for CEAS  An individualized, progressive course of study utilizing cooperative education to facilitate and focus the process of integrating theory and practice through faculty-guided, discipline-related learning experiences. In addition the course develops and applies students 'observation, reflection, and evaluation skills related to specific learning objectives. Cooperative education learning objectives include topics and assignments designed to support increasing levels of professional knowledge and skills in the workplace, and enhance students' ability to critically analyze the learning gained through workplace experiences.  / Linear Algebra Study of linear equations, matrices, Euclidean n-space and its subspaces, bases, dimension, coordinates, orthogonality, linear transformations, determinants, eigenvalues and eigenvectors, diagonalization.
Electronics I  Operational amplifiers, nonlinear circuits, linear amplifiers, bipolar and field-effect stages, differential and multistage amplifiers; use of MATLAB and PSpice.
Electronics Laboratory I Computer controlled use of oscilloscope and spectrum analyzer, circuit simulation, operational amplifiers, transistor biasing and single-stage amplification, multi-stage and feedback amplifiers, active filters.
Engineering Data Structures Introduction to intermediate and advanced programming methods.  Objects, pointers, proper use of dynamic data structures, files.  Introduction to Unix/linux operating systems.
Signals and Systems Signals and Systems
Introduction to Effective Speaking This course introduces the principles of and practice in composition and presentation of speeches. Topics include speaker and audience relationship, organization of speeches, active listening skills, use of appropriate language, use of technology as an enhancement of speech, managing speech anxiety and developing a natural verbal and nonverbal delivery style.
COOP for CEAS An individualized, progressive course of study utilizing cooperative education to facilitate and focus the process of integrating theory and practice through faculty-guided, discipline-related learning experiences. In addition the course develops and applies students' observation, reflection, and evaluation skills related to specific learning objectives.
Probability and Statistics I An introduction to probability and statistics for students with a calculus background. The course covers sample spaces and probability laws; discrete and continuous random variables with special emphasis on the binomial, Poisson, hypergeometric, normal and gamma distributions; joint distributions; sampling distributions; one and two-sample parameter estimation problems; and one and two-sample tests of hypotheses. This course provides a foundation for the further study of statistics.
Introduction to Computer Architecture & Organization Fundamentals of computers. The stored program concept. Addressing modes, instruction formats, and instruction sets. Data path and control unit design. Hardwired and microprogrammed control. Memory components and the memory hierarchy.
Electronics II Frequency response of amplifiers, feedback systems, active filters, oscillators, tuned amplifiers, field-effect and bipolar digital circuits, use of MATLAB, PSPICE.
Electronics Laboratory II Multi-stage, tuned, large-signal, and power amplifiers, emitter-coupled oscillators, active filters, and transistor-transistor and emitter-coupled logic.
Software Engineering Software Engineering
Mid-Curricular Co-op Community for Engineering This course is required for students who have completed two cooperative education work terms. The course provides a forum for students to share their co-op experiences in community with their classmates and to explore career options and discipline specific topics of their choosing.
COOP for CEAS An individualized, progressive course of study utilizing cooperative education to facilitate and focus the process of integrating theory and practice through faculty-guided, discipline-related learning experiences. In addition the course develops and applies students' observation, reflection, and evaluation skills related to specific learning objectives.
Discrete Computational Structures Three undergraduate credits. Introduces discrete mathematical topics in the context of CS: mathematical induction, sets, propositional logic, relations and functions, algorithm analysis, graph theory.
Operating Systems & Systems Programming Introduction to concepts of modern operating systems and systems programming. Emphasis is on the concepts, algorithms and architectures of modern operating systems. Students will also learnUnix system programming such as synchronizing, inter-process communication, and networking.
Embedded System Design Introduction to microprocessors and their uses. Review of gate level digital fundamentals. Architecture and register set of CPU, types of memory, interfacing using FPGA technology. Use of assembly language to create binary machine code. Link to high level languages.
Advanced Data Structures and Algorithms Introduction to data abstraction; problem-solving with abstract data types, algorithm analysis and space/time complexity.
Technical and Scientific Writing Technical and Scientific Writing
Computer Engineering Senior Design I Each student selects a project advisor, and works with him/her to select a design problem, identify the requirements and specifications of the product, and design the product.
Computer Engineering Senior Design II Computer Engineering Senior Design II
COOP for CEAS An individualized, progressive course of study utilizing cooperative education to facilitate and focus the process of integrating theory and practice through faculty-guided, discipline-related learning experiences. In addition the course develops and applies students'observation, reflection, and evaluation skills related to specific learning objectives.
First-Year Seminar The First-Year Seminar provides an educational experience that is composed of several important components. First, it develops intellectual skills, such as critical analysis and synthesis, and communications skills, such as speaking and writing. Second, it broadens definitions of learning
Writing and Language A writing course focusing on writing as a process of discovery concerning ideas, drafting, revising and editing. Students read, write and speak about a variety of aspects of the power of language.
Advanced Writing and Language A writing course designed to explore the writing process and the history of the English language, its past and present uses and powers
Introduction to Engineering I Introduction to the study, practice and various branches of engineering, as well as the following skills: problem solving, teamwork, project management, design, sketching, and computer-aided rendering. Includes a design project, guest speakers and plant tour
Introduction to Engineering II Introduction to the development of mathematical techniques for engineering applications including Matlab and statistics. Also a study of engineering ethics, and written and oral technical communication
Introductory Mathematics for Physics This course covers the applied mathematics needed to complete the calculus-based introductory physics sequence. Topics include functions, graphs, coordinate systems, series representations, trigonometry, vectors, matrices, systems of equations, differentiation, integration, and differential equations
College Physics I Calculus-based introduction to the basic concepts of mechanics, classical kinematics and dynamics (linear and rotational motion, work and energy, impulse and momentum), friction, statics, universal gravitation, and relativity
Computer Science I The fundamental concepts of computer organization, machine-level representation of data, algorithmic development and structured programming are presented with an emphasis on the syntactic and execution characteristics of an object-oriented programming language, including data types; arithmetic operators and assignment; input/output, selection and iteration constructs; elementary data structures; and procedural abstraction.
Calculus I A thorough introduction to the basic concepts and techniques of the differential and integral calculus of elementary functions, including a study of limits and continuity. Applications to the physical, biological and social sciences are studied in detail
Computer Science II A continuation of the presentation of the computer software essentials. The course surveys fundamental data structures for information processing and corresponding algorithm construction. The implementation of these data structures is considered. Additional topics include recursion, file processing, classes and advanced object-oriented programming techniques
Circuit Analysis Introduction to linear circuit analysis and basic electric circuit components. Topics covered include DC analysis, AC analysis and transient analysis for circuits containing resistors, inductors, capacitors and diodes.
Microcomputer Architecture Board-level design of microcomputers and the study of various computer architectures and hardware/software computing platforms. Topics include computer ethics, hardware components such as memory registers, central processor types, controllers, peripherals, input/output architecture and devices, memory management and networking.
Calculus III that completes the topics of the calculus sequence, including three-dimensional analytic geometry, vectors and vector valued functions, and calculus of functions of several variables.
Differential Equations A study of analytical and numerical approaches to ordinary differential equations and related topics and applications including complex arithmetic, matrix algebra, Fourier series, Fourier transforms, Laplace transforms, mechanical vibrations, and RLC circuits.
College Physics II Calculus-based introduction to the basic concepts of electricity and magnetism. Covering topics on fields, waves, potential, current, resistance, capacitance, inductance, direct current circuits, alternating current circuits, and quantum machanics
Electronics Practical and theoretical study of fundamental components and circuits, including transistors, diodes, integrated circuits, power supplies, filters, amplifiers, control circuits and some digital electronics.
Science and Values Many people now recognize that for both good and ill, science is value-laden, e.g., scientists are influenced by ethical and political values when they do science. Scientists are people, just like the rest of us. The truth is that values shape research methods, agendas, and applications of scientific knowledge. More controversially, it maybe that even theory choice and theory testing are value-laden. So all this raises questions, how can we inform our consciences and pursue implementations of scientific and technological developments that are just and respectful of human dignity? What is the responsibility of the scientist or engineer for the uses their work is put to? By what means, in which respects, and to what extent does science change our world and does the world change science? Which of these changes are morally positive and which are not? To answer these questions we need an approach to science that integrates the history, philosophy, anthropology, psychology, sociology, and economics of science and scientists into a comprehensive analysis. This course will introduce the student to foundational ethical theories and principles, and then apply them to various case studies in the area of science and values.
Computer Organization and Architecture Introduction to Boolean algebra, design of combinational and sequential circuits, and their use in von Neumann computer architecture. Basic parts of computer systems including memory, control and input-output systems are studied. The student is expected to design a simple micro-programmed computer.
Systems Programming This course covers advanced programming and machine representation of data and data structures, including dynamic structures and files. Topics include memory allocation, run-time data organization, function linkage and parameter passing, interrupt processing and the relationship between high level and machine language.
Signals and Systems Analysis of continuous-time linear systems, discrete-time linear systems, and methods of signal sampling and reconstruction. Applications of Fourier Series, Fourier Transform and Laplace Transform. Exploration of digital signal processing using Matlab programming
Computer Organization and Architecture Introduction to Boolean algebra, design of combinational and sequential circuits, and their use in von Neumann computer architecture. Basic parts of computer systems including memory, control and input-output systems are studied. The student is expected to design a simple micro-programmed computer.
Electronics Practical and theoretical study of fundamental components and circuits, including transistors, diodes, integrated circuits, power supplies, filters, amplifiers, control circuits and some digital electronics.
Control Systems Design and analysis of continuous time-domain control systems using system modeling techniques and simulation software for control algorithms. Evaluation of control system performance and design criteria including feedback, stability, sensitivity, time and frequency response. Introduction to similar topics in the discrete-time domains. Includes a two-hour laboratory each week applying the theory to physical systems.
Digital Circuits and Computer Interfacing Digital logic and integrated circuits to implement logic; architecture and machine language programming of minicomputers and microprocessors; design, testing, and construction of instrument-to-computer and computer-to-instrument interfaces; design and testing of supporting software.
Advanced Computer Engineering Circuit level design and implementation of complete computer systems. Major laboratory projects require students to design, build, test and demonstrate computer hardware designs using Field Programmable Gate Arrays and bread boarded circuits. Class lectures include design of embedded systems, microcontrollers, microprocessors and supercomputers.
Fundamentals of Chemistry: Introduction to Molecular Science An introduction to the study of the material world from a conceptual, model-building viewpoint. Topics include: elements and compounds, atomic composition and electronic structure, bonding and molecular structure, physical properties, thermodynamics and reaction kinetics.
Operating Systems Principles and theories behind the design of operating systems and their practical implementation, including executives and monitors, task handlers, scheduling algorithms, file handlers, device drivers and interrupt handlers, theories of resource allocation and sharing, multiprocessing and interprocess communication.
Senior Project in Engineering I Senior Project in Engineering I
Senior Project in Engineering II Senior Project in Engineering II
Signals and Systems Analysis of continuous-time linear systems, discrete-time linear systems, and methods of signal sampling and reconstruction. Applications of Fourier Series, Fourier Transform and Laplace Transform. Exploration of digital signal processing using Matlab programming
Digital Circuits and Computer Interfacing Digital logic and integrated circuits to implement logic; architecture and machine language programming of minicomputers and microprocessors; design, testing, and construction of instrument-to-computer and computer-to-instrument interfaces; design and testing of supporting software.
Advanced Computer Engineering Circuit level design and implementation of complete computer systems. Major laboratory projects require students to design, build, test and demonstrate computer hardware designs using Field Programmable Gate Arrays and bread boarded circuits.
Control Systems Design and analysis of continuous time-domain control systems using system modeling techniques and simulation software for control algorithms. Evaluation of control system performance and design criteria including feedback, stability, sensitivity, time and frequency response. Introduction to similar topics in the discrete-time domains.
Science and Values Science and Values
Fundamentals of Chemistry: Introduction to Molecular Science An introduction to the study of the material world from a conceptual, model-building viewpoint. Topics include: elements and compounds, atomic composition and electronic structure, bonding and molecular structure, physical properties, thermodynamics and reaction kinetics
Communication Skills Communication Skills
College Algebra This course provides an in-depth study of the properties of algebraic, exponential and logarithmic functions as needed for calculus. Emphasis is on using algebraic and graphical techniques for solving problems involving linear, quadratic, piece-wise defined, rational, polynomial, exponential, and logarithmic functions.
Global Engagement Global Engagement
Public Speaking The critical study and practice of public speaking emphasizing the art of rhetoric from a humanistic perspective. Areas of study include research and preparation, ethics, audience analysis, and presentation of speeches.
Natural Sciences, Mathematics, and Technology Natural Sciences, Mathematics, and Technology
Introduction to Information Technology An introduction to Information Technology as an academic discipline and the structure of the Bachelor of Science in Information Technology degree. It also provides students with an introduction to the range of applications of Information Technology.
Programming for Info Tech Introduction to basic concepts and techniques of a contemporary programming language. Topics include language syntax, variables, decision structures, loop structures, functions, and IDE. Development of modular programs for event-driven applications.
Web Page Development A thorough introduction to the languages used to create web pages. Throughout it stresses the importance of good coding style. The course also introduces students to the principles of good human computer interface design, including design for people with disabilities
Data Programming I The course provides students with an introduction to the main concepts in programming including variables, expressions, statements, conditional execution, functions, iteration, strings, and files.
Programming Principles I Provides a fundamental understanding of the development of computer solutions to solve problems with emphasis on structured, top-down development and testing. Concepts include the following: an overview of computer system design, problem solving and procedural abstraction design of computer solutions, algorithm development using simple data types and control structures, implementation and testing of programmed problem solutions, design modularization using subprograms and structured and user-defined data types.
Data Programming II The course provides students with an introduction to the main concepts in programming related to data. The course focuses on data storage and the use of regular expressions to search data. The course also includes an overview of object oriented concepts.
Programming Principles II Emphasis is on advanced techniques such as recursion, regular expressions, refactoring, object oriented programming concepts and constructs, reusing components, templates/generics, interfaces and classes. Experiences include use of an integrated development environment and shared (code) repositories.
Introduction to Statistics I Introduction to Statistics I
Intro to Prof & Tech Writing Surveys the field of P&T, its various activities, and potential career paths
Fundamentals of Physical Activity and Health  This course combines health-related content knowledge with weekly participation in fitness or sport based physical activity. The health-related topics may include; behavioral change, personal safety, components of fitness, nutrition and weight management, prevention of chronic disease, mental health and stress management, substance use and abuse, and sexual health. The combined course content promotes a healthy lifestyle while teaching lifelong physical activities.
First-Year Seminar First-Year Seminar
Survey of Calculus Covers the fundamental elements of differential and integral calculus of algebraic, logarithmic and exponential functions. Topics include a brief review of algebraic principles, limits, derivatives and integrals. Appropriate technology will be incorporated throughout the course.
Discrete Mathematics Covers important discrete mathematical objects such as sets, relations and functions, graphs and trees. An introduction to mathematical logic and reasoning, and the concept of an algorithm and its complexity will be covered.
Business Intelligence Business Intelligence
Operating Systems Principles of the management of memory, processors, processes and deadlocks, synchronization of computing tasks, files, devices, and systems. Principles of network organization and network operating systems. Analysis and evaluation of comparative operating systems.
Introduction to Cyber Security This course teaches the fundamental concepts and principles of cyber security techniques. Topics include computer and network security, cyber stalking, social networks, fraud and abuse, web security, malware, computer viruses, encryption, techniques used by hackers and how to combat them, simulation and identification of different threat models, software vulnerabilities analysis, risk assessment and mitigation, prediction of potential attack vectors through data analysis and evaluation.
Database Design and Implementation The course provides students with the opportunity to develop in-depth knowledge of database design, implementation, and systems development. The course covers data modeling concepts, approaches and techniques, and stages in database development processes (conceptual and logical design, implementation and maintenance). The course also covers methods and approaches used in system analysis and design, including the system development life cycle. To reinforce the course concepts, students will carry out projects based on real world situations.
Systems Acquisition, Design, and Implementation This course provides a study of the acquisition, design, and implementation of information technology systems, including methods for investigating solutions, project planning and control, documentation, and specifications.
Electronic Commerce Principles and practices of E-commerce. including transaction and electronic payment systems, and business, legal, and security issues as they relate to E-commerce.
Senior Capstone Project I Senior Capstone Project I
Senior Capstone Project II  Senior Capstone Project II
Data Communications Fundamentals of practical aspects of computer networks and data communications; standards, protocols, topologies, architectures, routing devices, wireless technologies, and monitoring and management.
Information Technology Infrastructure This course allows students to develop a thorough understanding of the Information Technology infrastructure which includes computer hardware and networks that support various Information Technology applications, and network security. This course allows students to develop this knowledge as well as some fundamental skills in server, network system administration and management, and to become aware of the importance of information assurance and security in the design, implementation and administration of an Information Technology Infrastructure
Information Technology Issues and Management Covers case studies of Information Technology development projects to assist the student in the recognition of the need of an Information Technology development project. The student will study and critique the development, implementation and management of both successful and unsuccessful projects.
Internship in Information Technology Internship in Information Technology
Web Programming A survey of software development tools and frameworks used in the development and deployment of web and mobile based systems. Course content includes the implementation of client-side and server-side dynamic content.
Advanced Web Interfaces This course provides an introduction and application of human-computer interaction theories to web-based applications. It covers the evaluation of user interfaces using various techniques including heuristic evaluation and user testing
Web and Mobile Security Fundamentals Cybersecurity is a cornerstone of web-based solutions for mobile applications, networks, and e-commerce. IT professionals must learn to predict, prepare for, and defend against cyber attacks from a myriad of sources if they are to build and support the next generation of business solutions. In this course, you will learn the principles of designing, building, and testing secure web-based solutions. You will also learn how to identify and prevent common security vulnerabilities.
Distributed and Mobile Systems This course explores the infrastructure which forms the basis of commercial, web-enabled applications on mobile and small devices, as well as personal computers. The course will focus on designing mobile web applications that provide a high level of security, reliability, scalability and availability. Through this course, students will develop proficiencies in current web technologies employed by businesses
Knowledge Discovery and Data Mining The course covers the process of automatically extracting valid, useful, and previously unknown information from data sources and using the information to make decisions. This course is designed to provide students with a solid understanding of the knowledge discovery process and the use of data mining concepts and tools as part of that process
Data Analytics This course covers the basic issues involved in building and populating a data mart to support the planning, designing and building of business intelligence applications and data analytics. Core concepts related to business intelligence and analytics are covered
Datacenter Management This course covers datacenter infrastructure and management including technologies such as: virtualization, networking, server consolidation, green IT computing, and network storage configurations. Using virtualized platforms (hypervisors), various server, networking and infrastructure configurations are deployed, analyzed and managed. A number of server operating systems are deployed, administered and managed via remote locations. Best practices for security policies of cloud resources including permissions, privileges and server management are analyzed and performed.
Network Architecture This course covers the hardware required for interconnecting digital devices for the purpose of enabling data communication through a network. Bus architectures, ports, network cards, cabling, routers, switches. Ensuring network reliability. Optimizing network performance.
Network Security Fundamentals This course is intended to serve the needs of individuals interested in understanding the field of network security and how it relates to other areas of information technology. The course will take a broad look at network security and provide the knowledge necessary to prepare students for further study in specialized security areas or used as a capstone course to those interested in acquiring a general knowledge of the field.
Fundamental of IS Security Current standards and best practice in information assurance and security. Topics include the evaluation of security models, threat analysis, security risk assessment and risk mitigation, disaster recovery planning, cryptography and encryption algorithms, and security policy formation and implementation.
Network Security Concepts of network security, including: countermeasures and safeguards to networks such as remote access controls, firewalls, intrusion detection systems, data encryption, and virtual private networks
Ethical Hacking Ethical Hacking
English Composition I This is a composition course focusing on skills required for effective writing in a variety of contexts, with emphasis on exposition, analysis, and argumentation, and also including introductory use of a variety of research skills. Satisfactory placement test score or successful completion of Learning Support English and Reading are required prior to admission to this course.
English Composition II This is a composition course that develops writing skills that emphasizes interpretation and evaluation based on an introduction to fiction, drama, and poetry, and that incorporates a variety of more advanced research methods. An oral communication component may also be required.
College Algebra Emphasis will be placed on the study of functions, and their graphs, inequalities, and linear, quadratic, piece-wise defined, rational, polynomial, exponential, and logarithmic functions. Appropriate applications will be included.
Public Speaking This is an introductory course on basic public speaking with emphasis on theory, research, organization, writing, and delivery, with the organization of materials and the vocal and physical aspects of delivery in various speaking situations. Students will receive instruction through lecture, class discussion, and application of informative, persuasive, and impromptu speaking.
Calculus I This is the first course in a three-course sequence designed primarily to provide mathematics and science majors with necessary mathematical understanding and skills. Topics include limits, continuity, differentiation of algebraic and trigonometric functions, applications of the derivative, definite and indefinite integrals, the Fundamental Theorem of Calculus, and applications of the integral.
United States History to 1865 This is a survey of U.S. history to the post-Civil War period. Special emphasis will be placed on the political, intellectual, cultural, and economic forces that transformed the U.S. during the period. Meets state legislative requirements for United States and Georgia history.
World Literature I This is a survey of important works of world literature from the beginning through the 17th century.
Introduction to Fungi This course will cover the history of mycology (study of Fungi) and all the organisms traditionally studied by mycologists. Students will learn about the biology of fungi, different kinds of fungi, ecology, genetics, human uses of fungi, diseases caused by fungi, and modern issues relating to fungi. Students will also be required to participate in a lab section and several field trips.
Introduction to Insects This course will cover the origins and diversity of insects and related organisms, their anatomy and physiology, and their interactions with humans and ecosystems. Laboratory exercises will include collections, studies of diversity and anatomy and experiments on physiology.
Introduction to Anthropology This is a survey of general anthropology, the comparative study of humankind as a whole, including its major subdisciplines: cultural anthropology, archeology, linguistics, and physical anthropology. Through ethnographic descriptions, comparisons across time, and cross-cultural analysis, emphasis is placed on the great variety of cultural adaptations which various peoples have developed to survive and to meet human needs.
Principles of Macroeconomics This principles of economics course is intended to introduce students to concepts that will enable them to understand and analyze economic aggregates and evaluate economic policies.
Introduction to Information Technology This course uses short projects to introduce the student to the major information technologies of hardware, systems software, networking, web development, software and applications development, systems analysis, digital media, and database. Security and ethical issues as they affect the use of technologies are also discussed.
Introduction to Computer Programming This course is an introduction to computer programming, logic, design and implementation. Topics include software design, documentation, coding methods, data types, data structures, functions, subroutines and program control structures.
Application Development This course is an introduction to computer programming, logic, design and implementation. Topics include software design, documentation, coding methods, data types, data structures, functions, subroutines and program control structures.
Network Essentials This course covers the architecture, function, and configuration of computer hardware and networks, along with basic operating system software function. The students are introduced to network and communications concepts including operational issues surrounding network planning, configuration, monitoring, trouble shooting, and management.
Web Development This course introduces concepts and practices associated with Web site development. Focus is on site and page design, page layout techniques, styling methods, coding practices, selection of typography, graphics, and multimedia, accessibility issues, site publishing, testing and maintenance, and site marketing.
Discrete Mathematics This course is an introduction to discrete mathematics. Selected topics may include sets, logic, proofs, counting, number theory, graph theory, trees, or algorithms.
Systems Analysis and Design Using the object-oriented approach, students will analyze and define, using UML, the system requirements of the organization. Students will participate in either a simulation or case study in order to experience the operational flow of organizational systems. The technology independent logical model showing the requirements for the system will be created.
Human Computer Interaction This course covers the scientific principles, HCI design methodology, and the user-interface technology that are used in the HCI implementation. Topics include human cognition, HCI theories, user observation, task analysis, prototyping, evaluation techniques, user interface modalities, graphical user interface components, and accessibility.
Database Principles This course covers the basic principles and practices behind the modern database management system including: the models and methodologies that enable us to analyze and design data systems; the logical concepts that stand behind good database design; and the functional components of the DBMS and how they work together to bring about the management of data.
Project Management This course introduces the concepts and practices associated with Project Management. The focus is on the following knowledge areas in project management: scope, time, cost, quality, human resource, communication, risk, and procurement.
Foundations of Information Security This course covers an understanding of communications and IT infrastructures, their vulnerabilities, and the complexity of security threats faced by business and industry. Topics discussed are the development of security plans and practices; policies; awareness and compliance programs; protections; and legal and regulatory issues.
Legal and Ethical Issues This course provides the opportunity for IT majors to learn about the legal, regulatory, and ethical issues involved in the field of information technology. Topics include ethics, critical thinking, security, privacy, and current legal issues.
Senior Capstone Integrating their skills and knowledge accumulated/acquired throughout the Information Technology program, students (usually in teams of three to five members) will analyze, design, develop, implement, and assess an information system.
Critical Infrastructure Security and Resilience This course is an introduction to the policy, strategy, and practical application of critical infrastructure security and resilience from an all-hazards perspective. It describes the strategic context presented by the 21st century risk environment, and discusses the challenges and opportunities associated with the following: public-private partnerships; information-sharing; risk analysis and prioritization; risk mitigation and management; performance measurement, incident management; and addressing future risks.
Industrial Control Systems Security The course is designed to focus on how Industrial Control Systems function while looking at the security issues concerning the deployment of the technology in support of critical infrastructure.
Forensics/Data Recovery This course offers a disciplined approach to implementing a comprehensive accident-response plan with a focus on being able to detect intruders, discover what damage they have caused, and discover their identities.
Network Forensics and Incident Response Planning An examination of the detailed aspects of incident response and contingency planning consisting of incident response planning, disaster recovery planning, and business continuity planning. This course covers security incidents and intrusions, including identifying and categorizing incidents; responding to incidents; log analysis; network traffic analysis; tools; and creating an incident response team.
Cyber Systems Security This course applies advanced network security fundamentals and cutting edge technologies which involve security practices, evaluation, installation, selection, and administration of TCP/IP addressing, routing, intrusion detection, prevention systems, firewalls, and virtual private networks (VPNs). Administration and management of security of information.
Homeland Security This course will provide students with the vocabulary, important components, agencies and historical events associated with Homeland Security. Students will explore various state, national, and international laws and investigative efforts that address and combat Homeland Security issues.
Terrorism The course provides students with an opportunity to explore the phenomenon of terrorism by examining the political nature, and the theoretical underpinnings of domestic and international terrorism, along with the criminal justice response to homeland security.
Introduction to Computer Science and Engineering Technology This course is the first course in computer hardware and software for CSET majors. Introduction to Single and multi-user operating systems, command-line processing and some internet tools are covered.
Calculus with Applications to Business and Finance An introduction to differential and integral calculus. Topics include limits, derivatives, maxima/minima, indefinite and definite integrals with an emphasis on business applications and technology use.
Principles Of Macroeconomics Explaining the level and the growth of economic activity, its fluctuations and ways of achieving greater stability, including the roles of money, banking and international finance.
Engineering Technology Orientation Overview of careers in engineering technology, information about each program in Engineering Technology, and skills required for success in technological fields, such as computer skills.
College Composition I Explanatory and persuasive writing in both personal and public genres; instruction and practice in generating, focusing, developing, researching and presenting ideas in ways consistent with one's subject, purposes and intended audience.
Fundamentals Of Electricity An introduction to basic analytical techniques for resistive and reactive DC and AC electric circuits, and an introduction to electronic devices, including diodes and transistors.
Principles Of Microeconomics Theories of consumer behavior; determination of input and output; prices and quantities in factor and product markets; analysis of international trade and policy; applications include labor markets and income distribution.
Natural Sciences Core  Natural Sciences Core
Science And Technical Report Writing Instruction and practice in multiple forms of technical and scientific communication for varied scientific and technical audiences. Emphasis on writing informational and analytical reports and documents in medical, scientific or technical fields. Additional focus on writing for multiple audiences and in different mediums, including online mediums.
Financial Accounting Information This course is an introduction to financial accounting from the perspective of a financial statement user. Where appropriate, it provides a small and mid-sized company's perspective.
Technical Project Management General methodology of managing a technical project from concept to operational use. Emphasis is on the functions and responsibilities of the project manager related to maintaining project control and team management.
Small Computer Systems This course covers the various parts of a Personal Computer and how the hardware and software perform together. Content covers CPU development, various busses, memory devices, connections to peripheral devices, operating systems and additional topics concerned with the PC.
Accounting For Business Decision-Making This course is an introduction to management accounting, including the use and limitations of cost-volume-profit analysis for fundamental decisions concerning products, services and activities.
Object Oriented Programming and Data Structures This course teaches object oriented program design, analysis, and verification with an introduction to data structures including but not limited to list, queue, stack and tree. The course emphasizes Programming Methodology and its impact on programs and the use of Data Abstractions and the implementation of Data Abstractions using classes.
PC and Industrial Networks Current concepts and technologies used with personal computers and PLCs in both industrial (factory-floor) and commercial data networks. Topics include PC networking hardware and software, PLC hardware and programming and PLC networking alternatives.
Applied Statistics And Design Of Experiments Introduction to probability, statistical inference and design of experiments. Topics include confidence intervals, tests of hypothesis, regression, analysis of variance, factorial experimental designs and propagation of experimental errors.
Client-Server Computing Covers client-server architecture and programming techniques. Major topics include two-tier and three-tier client server architectures, programming considerations, cleanlayering, advanced graphical user interface controls, database processing, transaction processing and monitoring.
Advanced Web Site Design HTML forms, creation of static and animated web graphics, Dynamic Fonts, SMIL (Synchronized Multimedia Integration Language) as it relates to G2, Realtext, Realpix and XML. The course also covers Frames, META Tags, Optimizing Speed, Cookies, Imagemapping (from both sides), HTML, tables and Shockwave.
Information Technology Management The role of computers and information systems in business decision-making will be carefully examined. The student is expected to develop computer-based applications for business decision making and problem solving through the use of state of the art software, including advanced spreadsheets, database and web design tools.
Introduction To Database Systems In this course, the design and implementation of database management systems are studied. Students will develop significant skills in data modeling, database design and SQL
Database-Driven Web Sites Creation of dynamic Web applications that interact with a database using client-side scripts, server-side scripts and compiled server programs. Includes database fundamentals, scripting language fundamentals and server considerations.
Client-Side Scripting Introduction to the Document Object Model (DOM), JavaScript and VBScript scripting languages, cascading style sheets, browser recognition, browser-specific content, data validation and layers.
Web Application Development II Address web architecture, web server administration and security issues; analyze, design, develop, and implement extensive database oriented business processes using server-side and client-side processing.
SERVER-SIDE PROGRAMMING Covers Common Gateway Interface (CGI) programming on the Internet using the most popular scripting languages. Topics include client-side programs, server-side programs, distributed database creation and searching.
Managerial And Behavioral Processes In Organizations Introduction to managerial and organizational concepts designed to develop knowledge, attitudes, techniques and skills in creating and managing innovative, adaptive organizations. Interactive exercises, videos, cases, discussions and lectures will be used.
Computer Networks And Data Communication Computer network architectures and their application to industry needs. Major topics include vocabulary, hardware, design concepts, current issues, trends, hardware, multi-user operating systems, network protocols, local and wide area networks, intranet and internet communications, analog and digital data transmissions.
Web Server Administration Installation and configuration of the web server operating systems (e.g., UNIX, Windows NT), installation and administration of web daemon (e.g., Apache, Microsoft IIS). Site management, including file and directory hierarchy, web log analysis, installation and configuration of various utilities for gopher, ftp, text ending and email.
Principles Of Manufacturing And Service Systems This course provides an overview of the functions, problems, solution techniques and decision making processes within the manufacturing and service environment. Topics include concept of supply chain, sales and operations planning, MRP, materials management, quality management, and project management.
Applied Programming Languages How to select the most appropriate language for a specific engineering technology application. Topics include comparison of programming languages by evolution, formal specifications, structures, features, application domains, programming paradigms, implementation of syntax, semantics and program run-time behavior.
Senior Technology Capstone A comprehensive problem in engineering technology is assigned to a group of students who work together as a team to present a solution in a formal written and oral report.
HISTORY 102 U.S. History Since 1877 Credits: 3 This course covers American history from the end of Reconstruction to the present.
INFO-TEC 321 Introduction to Computing Resources Administration Credits: 3 This introductory course is designed to give an overview of a wide variety of technical, interpersonal, documentation, and managerial skills needed to become an effective systems administrator.
COMP-SCI 291 Discrete Structures II Credits: 3 Recurrence relations and their use in the analysis of algorithms. Graphs, trees, and network flow models. Introduction to Finite state machines, grammars, and automata.
COMP-SCI 456 Human Computer Interface Credits: 3 Design of human-computer interfaces considering the psychological and physical abilities of the user.  User interface design from a functional and ergonomic perspective. Contents organization, visual organization, navigation. Use of graphical user interface (GUI) and the development of high quality user interfaces.
COMP-SCI 423 Client/Server Programming and Applications Credits: 3 Fundamentals of Client/Server programming using socket interface; features of network programming including connection oriented and  connectionless communication in multiple environments (Windows, UNIX, and Java); other client/server mechanisms, such as RPC and RMI) and formal object environments designed to facilitate network programming (CORBA, COM and Beans).
DISC 200 Discourse II: Culture and Diversity (Writing and Speech) Credits: 3 Students will produce, perform, and analyze college-level, oral and written texts that are based on sustained academic research. Students will continue to develop their understanding of discourse analysis and language awareness in the context of a range of discursive forms. Students will interpret and synthesize college-level scholarship that addresses how diverse discourse communities define, evaluate, and transform individual, institutional, and cultural identities.
COMP-SCI 421A Foundations of Data Networks Credits: 3 This introductory course examines the analytical aspects of data communications and computer networking. Topics cover protocol concepts and performance analysis that arise in physical. data link layer, MAC sub layer, and network layer.
ACCTNG 210 Introduction To Financial Accounting Credits: 3 An overview of basic concepts and terminology associated with reporting financial information to parties outside of an organization. This course requires students to take an accompanying lab that meets one day a week.
COMP-SCI 303 Data Structures Credits: 3 Linear and hierarchical data structures, including stacks, queues, lists, trees, priority queues, advanced tree structures, hashing tables, dictionaries and disjoint-set. Abstractions and strategies for efficient implementations will be discussed. Linear and hierarchical algorithms will be studied as well as recursion and various searching and sorting algorithms. Programming concepts include Object Orientation, concurrency and parallel programming. Several in-depth projects in C++ will be required.
COMP-SCI 457 Software Architecture:  Requirements & Design Credits: 3 Introduction to requirements and design engineering with emphasis on organization and presentation of system requirements and designs for customers, users and engineers; validation of requirements and design with needs of system customer; examination of requirement and design changes during the lifetime of a system; transformation of informal ideas into formal detailed descriptions; examination of the different stages in the design process including architectural design, interface design and data structure design, database design, program and transaction design; examination of domain modeling criteria and examination of design quality attributes; non-functional attributes and project resource allocation.
CJC 364 The Supreme Court And The Criminal Process Credits: 3 Course examines recent Supreme Court decisions on the constitutional aspects of the administration of justice. Topics include the nationalization of the Bill of Rights and jurisdiction with an emphasis on problems involving the Fourth, Fifth, Sixth, Eighth, and 14th Amendments.
ENT 315 Entrepreneurial Mindset and Opportunity Recognition Credits: 3 This course teaches  students how to develop an entrepreneurial mindset.  Students will utilize play, creative problem solving, design thinking, and creativity tools while developing skills to mitigate risk and recognize opportunities.
COMP-SCI 424 Software Methods and Tools Credits: 3 This course covers a number of software methods and tools that are widely used in industry. These methods include architecture patterns and styles, software frameworks, unit testing, and version control. The covered software tools include Microsoft Project, IBM Rational Systems Modeler, Eclipse Plug-ins, JUnit, Subversion, and GIT. The course emphasizes practice. Students will use these methods and tools to develop a software system from the initial planning to final deployment.
MGT 306 Legal, Ethical And Regulatory Environment Of Business Credits: 3 The course looks at legal and moral thought, with attention to ethical issues in business.  Students are introduced to our common law system; selected areas of law, with attention to the inclusion of cultural and moral values; and an introduction to government regulation of business.
DISC 300 Discourse III: Civic and Community Engagement (Speech and Writing) Credits: 3 Students will put the knowledge and skills learned in Discourse I and II into practical use by engaging in a service-learning project that is interdisciplinary and intercultural. Students will use strategies of critical discourse analysis and critical language awareness to target the appropriate audience/recipients for their research  project, to develop innovative and rhetorically effective texts, and to reflect on their project’s purpose, methods, and consequences.
COMP-SCI 201R Problem Solving and Programming II Credits: 3 Problem solving and programming using classes and objects. Algorithm efficiency, abstract data types, searching and sorting, templates, pointers, linked lists, stacks and queues implemented in C++.
COMP-SCI 449 Foundations of Software Engineering Credits: 3 The course introduces concepts of software engineering (e.g. definitions, context) and the software development process (i.e. life cycle). Students will get a solid foundation in agile methodology, software requirements, exceptions and assertions, verification and validation, software models and modeling, and user Interface design. Various software architectures will be discussed.
DSOM 326 Production/Operations Management Credits: 3 This course presents an introduction to the concepts, models, and methods of operations management. Students will study approaches to planning, scheduling, and controlling product and service facilities, processes, cost, quality, quantity, production, capacity, inventory, and distribution requirements. Computer applications and computer-based operations control systems will be introduced as a means to effectively manage the operations functions of both product and service organizations.
COMP-SCI 420 Introductory Networking and Applications Credits: 3 This introductory course examines the systems aspects of the different LAN/MAN/WAN models, including topics such as protocols, network operating systems, applications, management and wireless communication systems. It also examines how the different models are interconnected using bridges and routers.
DISC 100 Discourse I: Reasoning and Values (Speech and Writing) Credits: 3 “Discourse” refers to the language, images, styles, genres, behaviors and other forms of communication used by specific social and professional groups. The techniques of discourse analysis and language awareness taught in this course will enable you to position yourself socially and professionally, helping you understand the discourse conventions, reasoning, and "commonsense" assumptions that create and define academic, political, professional, and other discourse formations and communities. Students will produce, perform, and analyze college-level, oral and written texts; and they will learn how written and oral performances function together in specific discourse communities.
COMP-SCI 191 Discrete Structures I Credits: 3 Mathematical logic, sets, relations, functions, mathematical induction, algebraic structures with emphasis on computing applications.
HISTORY 101 U.S. History to 1877 Credits: 3 This course offers a broad survey of American history up to 1877.
COMP-SCI 458 Software Architecture:  Testing & Maintenance Credits: 3 Introduction of software system testing (including verification), software process, software reuse, software maintenance, and software re-engineering.
HONORS 230 Honors American Government Credits: 3 This course will analyze the structure and operation of American government. Major topic areas include the historical development of American democracy, mass political behavior, political institutions, public policy, and their connections. The US and Missouri Constitutions provide a framework for the class and are examined in-depth throughout the class.
COMP-SCI 201L Problem Solving and Programming II - Lab Credit: 1 Programming exercises and demonstrations to reinforce concepts learned in COMP-SCI 201R and provide additional practice in C++ programming.
MGT 330 Understanding the Individual in the Organization Credits: 3 This course explores the micro dynamics of organizations: the individual and his/her relationship to other people, teams, and work groups. Topics will include: individual traits, behaviors, and skills for effective performance; self-assessment and professional development; staffing; motivation; individual and group dynamics; multicultural understanding and diversity; and ethical decision making.
COMP-SCI 431 Introduction to Operating Systems Credits: 3 This course covers concurrency and control of asynchronous processes, deadlocks, memory management, processor and disk scheduling, x86 assembly language, parallel processing, security, protection, and file system organization in operating systems.
POL-SCI 210 American Government Credits: 3 American government and politics, with special reference to the U.S. Constitution.  This course meets the state requirement for study of the U.S. and Missouri Constitutions.
INFO-TEC 426 Practical Network Security Credits: 3 This course examines common threats to computer network security and discusses various techniques to mitigate those threats. The course material is supplemented with lab assignments that implement network security tools and use them to build a small secure network. It discusses information hiding, traffic monitoring and control, intrusion detection, and security policy. Note: NOT FOR GRADUATE CREDIT.
INFO-TEC 429 Introduction to Cybersecurity Credits: 3 This course introduces students to cybersecurity and its domains. The course will cover topics such as cryptography, software development security, access control, security architecture, security operations, disaster recovery, and physical and environmental security.
COMP-SCI 451R Software Engineering Capstone Credits: 3 The course will focus on the requirements and project planning and managing of medium sized projects with deliverables of each phase of the software life cycle. Additional studies of system integration and architecture, software modeling, requirements specifications, configuration management, verification, validation, software evolution and quality and finally measurement, estimation and economics of the software process.
INFO-TEC 222 Multimedia Production and Concepts Credits: 3 Multimedia production and concepts will give an overview of multimedia technology and communication theory needed to deliver information and to produce interactive presentations for the web, portable media,  and for in-person presentations and demos. The course offers exposure to software, hardware, other multimedia technologies, authoring and copyright matters.
INFO-TEC 491 Internship Credits: 1-6 Students may participate in structured internships under the joint supervision of an employer and a faculty member. The student must carry out significant professional responsibilities that also have academic merit. The number of credit hours is based on the quality of the academic experience. Available for credit/no credit only, and students must be in good standing with a least 18 credit hours of CS/IT counting towards the degree.
ECON 202 Introduction To Economics II Credits: 3 Economics II deals primarily with microeconomics, firm analysis, the principles of demand, supply, elasticity, price determination, costs, income distribution, market structures, trade, and other related social, economic issues.  ECON 201 and ECON 202 are prerequisites for most other economics courses.
COMP-SCI 101 Problem Solving and Programming I Credits: 3 Problem solving, algorithms, and program design. Use of structured programming, lists, control structures, recursion, objects and files in Python. Introduction to graphical interface programming. Coding, testing and debugging using a modern development environment.
COMP-SCI 470 Introduction to Database Management Systems Credits: 3 This course covers database architecture, data independence, schema, Entity-Relationship (ER) and relational database modeling, relational algebra and calculus, SQL, file organization, relational database design, physical database organization, query processing and optimization, transaction structure and execution, concurrency control mechanisms, database recovery, and database security.
ANCH 308 Ethical Issues in Computing & Engineering Credits: 3 Societal and ethical obligations of computer science, IT, and electrical/computer engineering practice. Topics include ethical obligations of professional practice, electronic privacy, intellectual property, software and system security and reliability, and whistle-blowing. This course teaches the principles of ethical analysis and how technology, law, and ethics interact in society, to help the graduate confront and deal with the ethical challenges that arise in professional practice.
ACCTNG 211 Introduction To Managerial Accounting Credits: 3 An introduction to the use of cost accounting concepts and information in managing the activities of a business.
COMP-SCI 281R Introduction to Computer Architecture and Organization Credits: 3 Digital Logic and Data Representation, process architecture and instruction sequencing, memory hierarchy and bus-interfaces and functional organization.
STAT 235 Elementary Statistics Credits: 3 An introduction to descriptive and inferential statistics. Organization and presentation of data, averages and variations, elementary probability, random variables, special discrete distributions, normal distributions, sampling distributions, point estimation, confidence intervals, and hypothesis testing.
FIN 325 Financial Management Credits: 3 This course provides an overview of the relationship between business decisions and the value of the firm, as determined by the marketplace. Students will study the composition of capital structure, capital budgeting, and cost of capital theory, including incremental analysis of investment situations.
COMP-SCI 371 Database Design, Implementation and Validation Credits: 3 This course discusses in detail all aspects of database management systems. It covers in detail database design, implementation, and validation. In addition to these, it briefly covers implementation, tuning, database security, and implementation. The course is suitable for undergraduates and professionals alike.
COMP-SCI 349 Java Programming with Applications Credits: 3 The course covers the syntax and semantics of the Java programming language along with the use of essential class libraries. These topics will be taught in the context of application development. Students will learn how to write small to medium sized Java applications and applets. Specific topics covered include: essential classes in the Java API, interfaces, inheritance, exceptions, graphical user interface components, layout managers, events, I/O classes, Applets, data base access, and multithreading. Other topics will be covered as time permits.
COMP-SCI 101L Problem Solving & Programming I Lab Credit: 1 Programming exercises and demonstrations to reinforce concepts learned in COMP-SCI 101 and provide additional practice in Python programming.
MATH 210 Calculus I Credits: 4 Functions and graphs, rational, trigonometric, exponential functions, composite and inverse functions, limits and continuity, differentiation and its applications, integration and its applications.
MKT 324 Principles of Marketing Credits: 3 The course focuses on the processes involved in the marketing of goods and services, including the meaning and importance of marketing terminology, the marketing mix, the marketing concept, consumerism, market segmentation, market and marketing research, and the impacts of different competitive structures on marketing decision making.
Programming II for Information Technology and Systems Examines programming using traditional and visual development environments to learn event-driven, object-oriented design with emphasis on software development best practices for effective software maintenance and modernization.
Foundations of Information Management Examines the fundamental concepts involved in industry based database design, administration, and usage. Topics include information retrieval, database administration, database models, design theory, database security, and database driven application programming
Foundations of Human Computer Interaction for Information Technology & Systems Examines the principles of human computer interaction. Studies issues of computer and system design more holistically with an emphasis on how such systems can be improved through proactive designs. Topics include human factors, human-centered computing and evaluation, effective interfaces, accessibility, legal issues, and social and organizational context.
Foundations Web Design and Programming Examines selected topics in technology for web design and programming, paying particular attention to client interactions on the World Wide Web. Studies unique concepts and technologies in developing client-side of a web-based information system such as XHTML, CSS, JavaScript, DOM, XML, AJAX, JSON, and Web 2.0
Discrete Math for IT Examines selected topics of discrete mathematics and statistics as applicable to students of information technology and systems. Topics include basic logic, discrete probability, functions, relations, sets, hypothesis testing, sampling and description statistics, graphs and trees, regular expressions, and application of mathematics and statistics to information technology.
Foundations of Information Networking Explores computer networking and telecommunications fundamentals including LANs, WANs, Intranets, and the World Wide Web. Studies data communication concepts, models, and protocols. Practices installation, configuration, systems integration, and management of infrastructure technologies.
Foundations of Information Assurance Studies the need for information security policies, standards, and procedures. Topics include: trust models; security policy design and incident response; and tools and techniques to defend against, react to, and recover from a cyber attack.
Hardware and Software Systems Examines functions of hardware and software systems. Topics include CPU, memory, registers, addressing modes, busses, instruction-sets, multi processors versus single processors; peripherals: harddisks and storage, display, device controllers, input/output; operating systems functions and types; process, memory and file system management; and examples and contrasts of hardware architecture and operating systems.
Information Systems Analysis and Design Examines concepts and techniques for analyzing and designing software systems to meet maintenance and modernization requirements such as changes of business logics, integration, and computing paradigms. Topics include software aging, reengineering, modeling, pattern, process, and cases.
Managing Technical Teams Examines current topics and issues associated with study and practice of iterative and incremental development and project team management with emphasis on practical project experience. Studies topics like modeling computing projects through the discovery/invention/implementation cycle; learning, experiencing, and obtaining feedback on group dynamics; collaborative relationships; and conflict management.
Statistics Addresses introductory statistical concepts and analysis in modern society. Includes descriptive statistics, graphical displays of data, the normal distribution, data collection, probability, elements of statistical inference, hypothesis testing, and linear regression and correlation. Practical examples used to demonstrate statistical concepts.
Technical Writing Teaches objective-oriented and audience-centered communication for the workplace, while focusing on key genres of technical communication - reports, proposals, manual, and document design - essential for success in the professional world.
Computers, Ethics, and Society Analyzes social, political, and ethical implications of computer and information technologies. Covers Western ethical theories, professional ethics, and diverse topics in computer ethics. Emphasizes writing and the construction of ethical arguments.
Senior Project Focuses on detail, implementation, testing, deployment, maintenance, and demonstration of the capstone design project. Requires written and oral reports and creation of a final project binder.
Internship Gives experience working in real-world information technology environment. Demonstrates how the life cycle of information technology and systems such as maintenance, modernization, replacement, etc. is conducted within an organization.
Database Design Provides an overview of various data solutions used today. Covers RDBMS design, performance optimization, NoSQL, object database, object relational database, and big data. Focuses on choosing the optimal database for application and designing
Server Side Web Applications Examines selected topics in technology for client/server application, paying particular attention to client/server interactions on the WWW. Studies topics like multi-tier architecture, application server, database server, database middleware, forms, client-side programming, server-side programming, Component-Based Design (CBD), database programming for web application, rich client programming, and web services.
Network Security Covers cryptographic methods including public and private key algorithms. Examines protocols that utilize secure email, digital signatures, authorization, e-voting, and electronic cash. Examines the fundamentals of security issues arising from computer networks.
Computer Security Discusses the theoretical and practical issues surrounding computer security and data protection. Explores formal models of encryption and authentication. Examines operating system and program security with vulnerabilities analyses. Includes a lab component for demonstrating computer security techniques such as malware analysis, and access control.
CS 100.  Roadmap to Computing.  3 credits, 3 contact hours (3;0;0). An introduction to programming and problem solving skills using Python or other very high level language. Topics include basic strategies for problem solving, constructs that control the flow of execution of a program and the use of high level data types such as lists, strings and dictionaries in problem representation. The course also presents an overview of selected topics in computing, such as networking and databases.
IT 220.  Wireless Networks.  3 credits, 3 contact hours (3;0;0). Prerequisite: IT 120. This course introduces the students to the applied topic of Wireless Networks, focusing on applied methods, tools and technologies, as well as practical experience in designing & implementing wireless networks.  Topics include hardware, software, data, applications, communication, design & installation of wireless networks, together with the implementation, performance, security and limitations of such systems.
IS 219.  Adv Website Development.  3 credits, 3 contact hours (3;0;0). Prerequisites: (IS 117 or IT 202) and (CS 100, CS 113, or CS 115).  IS 218 is strongly encouraged as additional foundation knowledge. This course discusses the concepts and skills required to plan, design and build advanced websites, with a focus on sophisticated user interaction enabled by programming the web browser (such as Internet Explorer or Chrome). Such programming is known as client-side scripting. These interactive websites utilize forms to gather user inputs, and vary both the content and display of the webpages based on the current user tasks and preferences. This includes designing and dynamically changing tabs and menus, as well as expanding and contracting sections of pages. Students will develop a thorough understanding of website usability (designing effective sites that people like, security and user privacy, browser capability (ensuring websites work on every major web browser), and the tools and skills that web developers use to add interactive features to websites. These skills include Javascript (for programming interactive features), the Document Object Model or DOM (specifying the internal structure of web pages), JQuery (to access information utilizing this internal structure, create animations and generally streamline Javascript), browser variables (providing information about the browser characteristics), HTML input forms, form validation (ensuring correctness of user input), securing user input (to ensure user privacy), cookies (tracking user information), basic communication with the web server (which processes the information users input into forms), and AJAX ( which integrates many of these technologies). The course will be taught in a lab to ensure hands-on experience and will include substantial design and development projects.
IT 101.  Introduction to Information Technology.  3 credits, 3 contact hours (3;0;0). The foundations of information technology (IT), including basic computer architecture, various kinds of computer hardware, and networking technology, are introduced. Various data representation schemes, such as the binary number systems, are covered. Different levels of software are examined, including aspects of the operating systems from the perspective of the IT professional. The software development process is discussed. Database management software and SQL are dealt with, as are applications and languages developed around the internet and Web infrastructure. Overall, fundamental knowledge required of today's IT professional is obtained along with an appreciation of IT's impact on business and society. Hands-on experience with some important elements of the IT field is gained through various laboratory assignments.
IS 331.  Database Design Management and Applications.  3 credits, 3 contact hours (3;0;0). Prerequisite: IS 218 or IT 202. Businesses use databases extensively for analysis and decision-making because they provide efficient, large-scale information storage and rapid retrieval. Databases support the "back end functionality" of most large web systems. This course gives students extensive, pragmatic experience in designing, building, querying, updating, maintaining and managing relational databases, using the Structured Query Language (SQL). Proper database design principles are emphasized throughout the course, beginning with high level descriptions of relational databases using data modeling tools (such as entity-relationship or ER diagrams)and progressing to relational database design principles based on higher order normalizations. We will examine some poorly designed databases and show how these can be transformed into well designed databases. SQL will be extensively covered, and students will design and implement sophisticated SQL queries invoking self-joins, outer joins, correlated subqueries and related concepts. Students will explore and utilize design methodologies for input data validation and maintaining database integrity, and study issues of database privacy and security. Advanced topics to be discussed include the role of the Database Administrator (DBA), database life cycle activities, database denormalization, read-only databases and data warehouses. Hands-on experience will be gained by working with actual databases using industry-standard database management systems such as Oracle.
MIS 363.  Project Management for Managers.  3 credits, 3 contact hours (3;0;0). Prerequisite: Junior standing (57 credits). This course covers theories, tools, and techniques to manage projects in organizations. Students will learn how to put together a project charter, define project goals, and develop project teams, schedules, and budgets. The course will illustrate the key aspects of project lifecycles (initiation, planning, execution, monitor and control, and closing). It will also emphasize aspects of team, performance, risk, and quality management.
YWCC 307.  Professional Dev in Computing.  1 credit, 1 contact hour (1;0;0). Prerequisites: YWCC207  This course is designed for junior year students to reflect back on the college experience and to help plan for the future as a computing professional. The course will explore transitional issues that occur during the progression from student to professional through reflection on co-op and/or internship.
R202 202.  Gender Crime & Justice.  3 credits, 0 contact hours (0;0;0).
CS 458.  Technologies-Network Security.  3 credits, 3 contact hours (3;0;0). Prerequisite: CS 351. This course provides both an in-depth theoretical study and a practical exposure to technologies that are critical in providing secure communication over the Internet. Topics include remote access security, web security, wireless security, e-mail security, spam and spam filtering techniques, computer viruses and internet worms, honeypots and honeynets, security liability issues and compliance.
IS 375.  Discovering User Needs for UX.  3 credits, 3 contact hours (3;0;0). Prerequisites: none What new digital products or services need to be developed? How do you anticipate someone’s needs before they do? How do you understand how people interact with products? These are key questions that both interaction designers and start-up entrepreneurs need to answer. It’s all about understanding the user. We need to work with users to investigate or "research" their needs and how they interact with the product or service.  In this course, we take a deep dive into qualitative user experience (UX) research. UX research is the process of understanding why and how people use products and services. This course will teach you a set of research tools to discover user needs, investigate the user experience, and enhance the user experience by deriving design recommendations. We will cover techniques like ethnography, focus groups, interviewing, and analyzing qualitative data. We will be talking with user experience researchers at major companies and getting involved with actual user research. This practical, hands-on course will give you an insight into the psychology of user behavior and lay the foundation for students who are pursuing careers designing, evaluating, or marketing products for people.
COM 266.  Foundations of Game Production.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 101 and HUM 102 and IT 201 and IT 265 with grades of C or higher; HUM 102 may be taken concurrently as a co-requisite. This class introduces students to many of the tools and production methodologies needed for electron games. This class will focus heavily on content control and story handling through the use of scripting and game development tools. Students will learn a few scripting languages that are used in the games industry and create a new game experience. This course does not satisfy the three credit 200 GER in History and Humanities.
ACCT 117.  Principles Of Fin Accountng.  3 credits, 3 contact hours (3;0;0). This is an introductory course designed to develop fundamentals of financial accounting-a process of identifying, recording, and communicating economic events of an organization. This course will provide students with an opportunity to develop skills in applying financial accounting principles to record basic economic transactions, summarize and present such transactions in financial statements as well as analyze reported accounting information by using ratios.
MATH 337.  Linear Algebra.  3 credits, 3 contact hours (3;0;0). Prerequisite: MATH 112 with a grade of C or better or MATH 133 with a grade of C or better. Matrices, determinants, systems of linear equations, vector spaces, linear transformations, eigenvalues, eigenvectors, and related topics.
IT 286.  Foundations of Game Production.  3 credits, 3 contact hours (3;0;0). Prerequisites: IT 202 and IT 265. This class introduces students to many of the tools and design methodologies needed for electronic game production. This class will focus heavily on scripting, level design and content control as applied to game development. Students will learn a few scripting languages that are used in the games industry such as Unreal Script and Python. Students will work on projects to develop the levels, controls and scripts in order to create a new game experience with a professional game.
IT 114.  Advanced Programming for Information Technology.  3 credits, 3 contact hours (3;0;0). Prerequisites: CS 113 or CS 115. Problem solving techniques and program design knowledge are expanded with an eye toward IT-related applications. Various kinds of data structures are introduced, including classic containers such as lists, stacks, queues, and trees. Sorting and searching techniques are examined. The fundamentals of client/server programming and the use of sockets are covered. Recursion and its various applications are studied. The built-in class library features of an object-oriented programming language are exploited throughout.
IT 310.  E-Commerce Technology.  3 credits, 3 contact hours (3;0;0). An overview of the technologies relevant to electronic commerce. Communications and networking, web authoring tools, system security, databases and archiving, EDI, transaction processing, and factory/warehouse data networks. Provides competency to appraise tools such as HTTP servers, secure transaction software and firewalls, low and high-end database systems, heterogeneous networks, NNTP Servers, client software, procurement systems, and intelligent agents. Covers e-commerce models including agent-based and Java-based, electronic contracts and the electronic exchange of technical data, electronic cash systems and user security.
IT 265.  Game Architecture and Design.  3 credits, 3 contact hours (3;0;0). Prerequisite: IT 201 or equivalent. Course introduces students to the core concepts and design methodologies integral to designing and developing games and other Entertainment Software.
COM 350.  Digital Video Production.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. Instruction in the creation and editing of non-linear digital video; emphasis on team production of a short film; individual editing skills with Final Cut Pro editing software; development and editing of a variety of graphic formats and digital images; formulation of a script treatment; and development of a storyboard. Topics covered include: digital multi-media production; web-casting; interactive television; data-casting; CD and DVD production. This course satisfies the three credit 300 GER in History and Humanities.
IT 400.  Information Technology and the Law.  3 credits, 3 contact hours (3;0;0). This course will provide an introduction to legal concepts, principles and terminology as applied to modern information technology. The historical background and foundations of the various principles of U.S. Statutory and Common Law will be considered and will be used to explore how such principles may be applied to encompass and govern modern legal interactions in the U.S. and internationally. Through assignments and class discussion, which will often involve the Socratic Method, students will be expected to spot potential legal issues and make logical arguments for and against various legal propositions.
IT 266.  Game Modification Development.  3 credits, 3 contact hours (3;0;0). Prerequisites: IT 102 or IT 114 or CS 116 or CS 114. This course introduces students to the basic concepts of game programming and development. Students will learn how to reprogram a professional game engine, or Modification (Mod) development as it is referred to in the industry. Students will work with C intensively. Students will work on their own game projects utilizing the professional game engine.
OM 375.  Management Science.  3 credits, 3 contact hours (3;0;0). Prerequisite: MGMT 216. The course emphasizes decision modeling and how to apply modeling and process simulation techniques to solving various classes of problems that arise in operational functions in business settings. It covers decision modeling techniques that range from deterministic to probabilistic models. It also emphasizes the ability to recognize what modeling skills and techniques to use to answer specific business operation and process questions, the use of computer tools and process simulation techniques to solve problems, and on the interpretation and communication of model solutions.
IS 350.  Computers, Society and Ethics.  3 credits, 3 contact hours (3;0;0). Prerequisites: GER (CS 100, CS 101, CS 103, CS 104, CS 111, CS 113, CS 115, or BNFO 135), AND any History and Humanities GER 200 level course AND HUM 101. Examines the historical evolution of computer and information systems and explores their implications in the home, business, government, medicine and education. Topics include automation and job impact, privacy, and legal and ethical issues.
IS 392.  Web Mining and Information Retrieval.  3 credits, 3 contact hours (3;0;0). Prerequisites: IS 218, IT 114, or CS 114. This course introduces the design, implementation and evaluation of search engines and web mining applications. Topics include: automatic indexing, natural language processing, retrieval algorithms, web page classification and clustering, information extraction, summarization, search engine optimization, and web analytics. Students will gain hands-on experience applying theories in case studies.
IT 330.  Computer Forensic.  3 credits, 3 contact hours (3;0;0). Prerequisites: IT 230.  This course introduces students to the applied topic of Computer Forensic, the study of obtaining and analyzing digital information from computers that have been used to commit illegal actions (computer crime), for use as evidence in civil, criminal, or administrative cases.
IT 386.  3D Modeling and Animation.  3 credits, 3 contact hours (3;0;0). Prerequisite: IT 201. This class introduces students to the concepts of 3D modeling and animation, and putting those concepts into action by working with software. This class will be a hands-on, project focused  course, using 3D modeling packages, taking students from design to final render.
YWCC 207.  Computing & Effective Com.  1 credit, 1 contact hour (1;0;0). Prerequisites: Student of YWCC and sophomore/junior standing. Through encouraging collaboration and communication, this course addresses how to best present oneself via verbal and nonverbal communication. Students will learn how to effectively network, create resumes, interview and best present ideas. The skills learned in this course prepare students for co-op/internship opportunities as well as future employment.
HUM 101.  English Composition: Writing, Speaking, Thinking I.  3 credits, 3 contact hours (3;0;0). Entrance is determined by placement test score or completion of HUM 099 with a grade of C or better. Focuses on developing written and oral communication skills; emphasizes writing expository and research essays; preparing oral reports; drafting, revising, editing; evaluation and proper documentation of source material; using rhetorical strategies such as narration and argument.
CS 280.  Programming Language Concepts.  3 credits, 3 contact hours (3;0;0). Prerequisite: CS 114 OR CS 116 OR IT 114 OR IT 102. Conceptual study of programming language syntax, semantics and implementation. Course covers language definition structure, data types and structures, control structures and data flow, run-time consideration, and interpretative languages.
R202 310.  Case Proc Law Courts.  3 credits, 3 contact hours (3;0;0).
ENG 353.  Composing Documents for Print.  3 credits, 3 contact hours (3;0;0). R350 353.  Mod/Contemp Eng Nov.  3 credits, 0 contact hours (0;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. Explores information structuring via print and digital media; how computer technology has influenced the ways in which information is presented in modern culture. Focuses on the optimal ways to prepare and present information for technical and commercial use. Important concepts such as visual literacy and effective design are discussed and addressed. This course satisfies the three credit 300 GER in History and Humanities.
MGMT 480.  Managing Technology and Innovation.  3 credits, 3 contact hours (3;0;0). Prerequisite: Junior standing(57 credits). Introduction to an array of technologies affecting management functions to provide an appreciation and understanding of the importance of new technologies as critical success factors for modern organizations. An integrative approach is taken in analyzing how changes in technology affect individual, group, and organizational effectiveness.
IT 340.  Introduction to System Administration.  3 credits, 3 contact hours (3;0;0). Prerequisite: IT 120. This course will introduce the tasks and techniques required to perform as a system administrator of Linux systems. Topics to be covered include: booting, process control, the file system, managing users and resources, backups, configuration management, networking, the network file system, email servers, security, hardware devices, interoperability and daemons. Whenever possible, lectures will be augmented with hands-on exercises.
IT 202.  Internet Applications.  3 credits, 3 contact hours (3;0;0). Prerequisites: CS 100 or CS 113 or CS 115 or a course in a high-level programming language as approved by department. This course presents the concepts and software technologies that underline web-oriented, three-tier software architectures and applications. The enabling software mechanism include the markup languages (HTML5 and CSS3) used by browsers, client-side scripting languages and libraries (Javascript and AJAX), web servers and server-side-scripting languages (Apache, PHP, HTTP protocol), and background databases (SQL, MySQL). The course uses a hands-on, guided development approach with substantial assignments to illustrate the fundamental computing concepts systems, and technologies considered and to provide direct experience in their use.
CS 276.  2D Game Development.  3 credits, 3 contact hours (3;0;0). Prerequisites: CS 265 and CS 266 or IT 265 and IT 266. This course introduces students to the core concepts and skills necessary for the development of games utilizing 2D graphics. Students will learn how to set up and program their own 2D graphics based game engine. The engine will integrate 2D graphics, audio, input handling and network socket programming. Students will learn how to utilize their own custom 2D graphics and sounds into their projects. Once complete, students will have created two fully functional games.
IT 331.  Privacy and Information Technology.  3 credits, 3 contact hours (3;0;0). Prerequisite: Computing GUR. This course will introduce the legal, social and technical issues involving information privacy. Topics covered will include the historical development of information privacy law; law enforcement, technology and surveillance; government databases and records; privacy and business records and financial information; privacy and the media; health and genetic privacy and international privacy law.
R202 203.  Police And Community.  3 credits, 3 contact hours (3;0;0).
ENG 354.  Composing Documents for the Web.  3 credits, 3 contact hours (3;0;0). R350 354.  Mod/Contemp Eng Nov.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. Seminar and laboratory-based course designed for BA/BS majors; open to others with appropriate backgrounds and interests and permission of instructor. Follow up of ENG 353, explores information structuring via digital media, and how computer technology has influenced the ways in which information is presented in contemporary culture. Through guided interactive research, presents information for technical, commercial, and artistic use. Projects involve use of HTML editors, NJIT networks, and graphical and animation software. This course satisfies the three credit 300 GER in History and Humanities.
COM 335.  3-D Modeling and Animation.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, IT 201 and one History and Humanities GER 200 level course with a grade of C or higher. This class introduces students to the concepts of 3D modeling and animation, and putting those concepts into action by working with software. This class will be a hands-on, project focused course, using 3D modeling packages, taking students from design to final render. This course does not satisfy the three credit 300 GER in History and Humanities.
MATH 138.  General Calculus I.  3 credits, 3 contact hours (3;0;0). Intended for students who are not in Science or in Engineering. Prerequisite: MATH 107 with a grade of C or better, or MATH 110 with a grade of C or better or NJIT placement. An introduction to differential and integral calculus of a single variable.
IT 490.  Systems Integration.  3 credits, 3 contact hours (3;0;0). Prerequisites: CS 113, IS 331 and IT 340. The course will introduce the major design, implementation & distributed deployment issues regarding system integration, Network Operating Systems (NOS), cross platform database integration, e-commerce and e-business applications implementation, cross-servers & multiple locations e-sessions migration and the related communications security.
R202 301.  Cj Reserach Methods.  4 credits, 0 contact hours (0;0;0).
R202 331.  Delinquency Juv Justice.  3 credits, 3 contact hours (3;0;0).
IT 276.  Game Development.  3 credits, 3 contact hours (3;0;0). Prerequisites: IT 265 and IT 266, or, CS 265 and CS 266. This course introduces students to the core concepts and skills necessary for the development of games utilizing 2D graphics. Students will learn how to set up and program their own 2D graphics based game engine. The engine will integrate 2D graphics, audio, input handling and network socket programming. Students will learn how to utilize their own custom 2D graphics and sounds into their projects. Once complete, students will have created two fully functional games.
R202 102.  Criminology.  3 credits, 3 contact hours (3;0;0).
CS 357.  Fundamentals of Network Security.  3 credits, 3 contact hours (3;0;0). Prerequisites: CS 356 or IT 420. This course is designed for Computer Science and Information Technology students. They must have a networking course before taking CS 357. IT students take IT 420 and Computer Science students take CS 356. This course offers an in-depth study of network security issues, types of computer and network attacks, and effective defenses. It provides both a theoretical foundation in the area of security and hands-on experience with various attack tools, firewalls, and intrusion-detection systems. Topics include: network scanning, TCP/IP stack fingerprinting, system vulnerability analysis, buffer overflows, password cracking, session hijacking, denial-of-service attacks, intrusion detection.
IT 332.  Digital Crime.  3 credits, 3 contact hours (3;0;0). Prerequisite: Computing GUR. Comprehensive, multidisciplinary overview of the methods and means by which technology is used by the criminal in today's society. An examination of the historical, legal, technological and sociological aspects of cybercrime. The course covers the challenges of a new era of technology has brought to combating crime of all types, including terrorism. Topics covered will include: the sociology of the white collar criminal, the criminal justice system and law enforcement, computer security and deterrence/prevention.
IS 270.  Designing the Multimedia Experience.  3 credits, 3 contact hours (3;0;0). Prerequisite: Completion of 100 level course in the computing sciences: CS 101 or CS 111 or CS 113 or CS 115 or IS 118. Multimedia combines text, graphics, sound, video, and animation in a single application. Preparation for creating multimedia information systems, and understanding the crucial issues involving technology, design and effectiveness of multimedia applications. Programming techniques for integrating video, sound, animation, and graphics, and design strategies for multimedia information systems.
COM 303.  Video Narrative.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. Introduces various multimedia resources and environments in order to develop new strategies for both reading and writing within a visually-based, screen-oriented culture. Students will study different historical and theoretical lineages in videography, and learn hands-on techniques and technologies to produce independent media works of their own.  This course satisfies the three credit 300 GER in History and Humanities.
IS 117.  Introduction to Website Development.  3 credits, 3 contact hours (3;0;0). This course discusses the concepts and skills required to plan, design and build websites. It will be taught in a lab to ensure hands-on experience with each of these tasks. The course begins with an overview of web technologies. Students learn to plan websites, which includes determining the business and end-user requirements for the site. Design includes learning to develop "mockups" of how the site will look and how people will use it. The major tools for building websites will be industry standard HTML and XHTML to describe webpage content, and Cascading Style Sheets (CSS) for flexibly formatting the content. Using XHTML and CSS makes it relatively simple to change formats across the entire site, as well as "future-proofs" a website, allowing it to be viewed on every major web browser (such as Firefox or Chrome) and easily adapt to changes in future browser technology. The course features substantial hands-on projects comprising websites of several interlinked pages and images, enabling students to thoroughly learn the course's important concepts and skills.
COM 352.  Photojournalism.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. Through hands-on writing and photography supervised by the instructor, students develop competencies in discovering and creating an interdisciplinary viewpoint using a variety of writing methods and photographic viewpoints. Special focus on interpreting architecture and architectural detail, nature's conflict and place in urban and suburban environs, and the human interface with nature and man-made spaces. Particular emphasis is placed on the creative process and critical revision. This course satisfies the three credit 300 GER in History and Humanities.
IS 373.  Content Management Systems.  3 credits, 3 contact hours (3;0;0). Prerequisites: IS 117 or IT 202. This course provides a hands-on introduction to the design and implementation of enterprise-scale web systems built upon web based content management systems (CMS). CMS manage the creation, storage, retrieval, dissemination, and collection of information in order to meet the needs of businesses, organizations and individuals. Students learn to how to create blogs, discussion boards, wiki, intranets, and dynamic websites using popular CMS packages such as Wordpress and Drupal. Throughout the course students learn how to overcome common challenges that impact the design of these systems such as security for multi-user systems, content strategy, marketing and performance.
IS 421.  Advanced Web Applications.  3 credits, 3 contact hours (3;0;0). Prerequistes: IS 219 and (IS 331 or CS 431).  This course focuses on the design, development, and management of cloud-based web information systems, within the context of startup companies and established organizations.  Within the course, we examine business, organizational and technical challenges faced by developers, project managers, and the business development professionals that create web-based software products.  The course consists of readings, discussions, and a final team project that demonstrates modular design, planned scalability, maintainability, and the creation of a set of organizational processes that supports the continued support and development of the application.  Some of the topics covered in the course are: continuous deployment, continuous integration, automated unit testing, modular design, software team management, agile development, Kanban, customer focused development, and the technologies used to scale cloud applications.
HRM 301.  Organizational Behavior.  3 credits, 3 contact hours (3;0;0). Restriction: upper division standing. A foundation course in individual and group behavior in organizations. Processes such as perception, motivation and leadership are examined with a focus on issues central to technology-based organizations (innovation, creativity, managing technical professionals).
AD 150.  Color and Composition.  3 credits, 5 contact hours (2;3;0). Introduction to principles of 2D composition with emphasis on color use and color theory. Students are introduced to traditional media (watercolor and collage) and digital raster graphics (painting, image processing, and compositioning). Applications that include interior design, product/industrial design, advertising, web design, and fine arts are discussed. Concepts include grids and hierarchy, color models and mixing, color interaction, human response to color, printing, etc. Creative projects.
IT 491.  IT Capstone Project.  3 credits, 3 contact hours (3;0;0). Prerequisites: senior standing. An opportunity for students to integrate the knowledge and skills gained in previous information technology work into a team research project. The project involves investigation of current literature as well as implementation of either a part of a large application or the whole of a small system.
STS 349.  Advanced Music Technology.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. Students will learn the basics of notebook computer-based music composition and production. Emphasis will be on composition and making of music, learning the aesthetics necessary to get the most out of your machine. Course will require extensive work on your own laptop computer. Computer requirements: A PC or Macintosh system running Ableton Live. This course satisfies the three credit 300 GER in History and Humanities.
MATH 105.  Elementary Probability and Statistics.  3 credits, 3 contact hours (3;0;0). Consider notions of probability. Topics include the binomial and normal distributions, expected value, and variance. The notions of sampling, hypothesis testing, and confidence intervals are applied to elementary situations.
IT 120.  Introduction to Network Technology.  3 credits, 3 contact hours (3;0;0). An introduction to the basics of networking in a modern operating system environment. Emphasis is placed on the application and management of networking technology. Topics to be covered include: the OSI model, network hardware and technologies, network protocols, wired and wireless networks, TCP/IP. Whenever possible, concepts will be explained through the use of hands-on exercises that reinforce the lecture material.
ENG 355.  Television News Writing and Production.  3 credits, 4 contact hours (3;1;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. This course consists of lectures and hands-on practice with the basics of television news writing and production and a field trip to a television station. After learning the fundamentals, the class will then begin its own news production by refining the video taped "packages" and integrating them into a studio newscast they will write and produce while guided by the instructor and with technical support from the staff of Instructional Technology and Media Services. The semester culminates in a final program that can be delivered to the campus community through ITMS's cable network. This course satisfies the three credit 300 GER in History and Humanities.
CS 332.  Principles of Operating Systems.  3 credits, 3 contact hours (3;0;0). Prerequisite: CS 114 or CS 116 or IT 114 or IT 102. Organization of operating systems covering structure, process management and scheduling; interaction of concurrent processes; interrupts; I/O, device handling; memory and virtual memory management and file management.
IT 302.  Advanced Internet Applications.  3 credits, 3 contact hours (3;0;0). Prerequisites: IT 202 or IS 217. This course covers Internet-related software technologies in a more comprehensive, in-depth manner than IT 202. Topics considered include: client-side technologies like HTML5 and jQuery, JQuery UI (user interface) library, jQuery Mobile, CSS3 (transitions, animations), feature detection and polyfills using jQuery UI and Modernizr, advanced Javascript DOM and JSON (Javascript Object Notation), basic web services applications, JSONP. Advanced PHP topics considered include: sessions, cookies, HTTP exchanges, encryption, graphics library (CAPTCHA?s), and as time permits regular expressions and remote file access. An introduction to the Model-View-Controller (MVC) paradigm is presented using Ruby-on-Rails environment. Programming assignments are required which provide experience with the concepts covered.
MRKT 330.  Principles of Marketing.  3 credits, 3 contact hours (3;0;0). Prerequisites: MGMT 190 or MGMT 390 or departmental approval. Provides an understanding of how environmental factors (political, legal, economy, competition, socio-cultural, and technology) influence the design of product, pricing, promotion and distribution strategies. Topics discussed include strategies to satisfy target markets, market segmentation, buyer behavior, marketing ethics, and an introduction to global marketing issues. Fundamentals of marketing are integrated using cases, videos, and class projects.
IS 344.  Computing Applications in Business.  3 credits, 3 contact hours (3;0;0). Prerequisites: MIS 245 or IS 265 or ACCT 115 or ACCT 117 or MGMT 390 A comprehensive overview of the various types of computing applications used by businesses in order to run effectively and efficiently. All the major functional departments within organizations are examined and evaluated to see how applications are integrated to implement "business processes" that flow across department boundaries, and from suppliers to customers. Students will learn to model business situations and the design of applicable software solutions. A full-semester hands-on student project will provide experience in designing solutions to changes in the business environment.
CS 366.  3D Game Development.  3 credits, 3 contact hours (3;0;0). This course introduces students to the core concepts and skills necessary for the development of games utilizing 3D graphics. Students will learn how to set up and program their own 3D graphics based game engine using OpenGL. Students will learn how to load and display custom 3D models created using existing 3D modeling tools. Once complete, students will have created two fully functional 3D games and tools to work with them.
COM 376.  Game Design Studio.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher, and COM 266, COM 335, and COM 345 with a grade of C or higher. This class challenges students to apply what they have learned in previous courses about game design. Students work in groups to design and create games for various platforms. Groups will work closely with the instructor to get constant feedback and criticism on their work. Students will complete case studies of various game genres. Students will work on one large project and complete it in stages, as a project would in the industry. This course does not satisfy the three credit 300 GER in History and Humanities.
IS 247.  Designing the User Experience.  3 credits, 3 contact hours (3;0;0). This course covers the design and evaluation of the human-computer interface in interactive computer systems. Among the topics covered are approaches to interface design such as menus, commands, direct manipulation; screen layout strategies; metaphor models; models of human information processes; evaluation approaches such as protocol for analysis, interactive monitoring, use of surveys; and requirements for documentation and help. Students are expected to design interface mockups and evaluate them.
COM 345.  Character Modeling and Animation.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, IT 201 and one History and Humanities GER 200 level course with a grade of C or higher. This class builds on the concepts of 3D modeling and animation, applying those techniques to character creation and animation. This class focuses on the considerations and techniques involved in the creation and animation of character in 3D. This course does not satisfy the three credit 300 GER in History and Humanities.
MIS 245.  Introduction to Management Information Systems.  3 credits, 3 contact hours (3;0;0). Concepts of information systems, business process, hardware, software, systems analysis, e-commerce, enterprise systems and computer applications in organizations, techniques of systems analysis, systems designs, implementations, and information management (both technical and behavioral)are studied in the organizational context of management information needs.
FRSH SEM.  Freshman Seminar.  0 credits, 1 contact hour (1;0;0). Addresses issues related to a successful college life during weekly seminars. Topics include time management, study skills, interpersonal relationships, wellness, multicultural issues and career decision making. Freshman Seminar is a graduation requirement for all first-time, full-time freshmen.
IS 455.  IS Mgmt & Business Processes.  3 credits, 3 contact hours (3;0;0). Prerequisites: (IS 265 or MIS 245) and IS 390. Grade of C or better. This course will emphasize how information systems enable core and supportive business processes, as well as those that interface with suppliers, partners and customers. It will discuss basic administrative, management and policy issues associated with the impact of information systems on the user and organization. The second part of the course looks at business processes in organizations: what the business process view is and why it is important, how information systems can improve processes, and how Enterprise Resource Planning systems help with that improvement. Hands-on use of a major ERP system (SAP) is included.
IS 218.  Building Web Applications.  3 credits, 3 contact hours (3;0;0). Prerequisites: (IS 117 or IT 202) and (CS 100, CS 113, or CS 115). This course provides a critical, hands-on introduction to the design of Web-based Information Systems. We will explore and discuss emerging trends, capabilities, and limitations of web technologies used to capture, store, access, and disseminate information for both businesses and online communities. Students, working in groups, will design and develop different types of web applications, which will then be analyzed and critiqued by the students as to their usability in actual public and private settings. An open-source web content management system will be utilized throughout the course.
IT 420.  Computer Systems and Networks.  3 credits, 3 contact hours (3;0;0). Prerequisite: IT 120. This course provides students with an understanding of methods, tools and technologies required to work with computer systems and networks. It includes a detailed discussion of Internet/intranet issues, including standards, connectivity, performance, protocols, network configurations, network design, wireless technology, management and simulation through practical cases, covering both hardware and software systems.
IT 287.  Advanced Game Production.  3 credits, 3 contact hours (3;0;0). Prerequisite: IT 286 or COM 266. This course will build on tools and techniques presented in Foundations of Game Production and guide students through the development cycle of game levels. This will be a hands-on class that will teach students the development styles and revision techniques used in the professional game industry. Upon completion of the course, students will have first hand experience producing professional quality content for electronic games and a portfolio of work.
COM 351.  Documentary Studies.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. This course will allow students to study the methods by which documentary work is conducted and to complete a documentary project of their own. The course will connect the qualitative methods of the social sciences and the humanistic concerns of the arts by allowing students to study documentary subjects as captured by non-fiction, photography, film, tape recorder, and the World Wide Web. Special emphasis will be placed on narrative and metaphor. This course satisfies the three credit 300 GER in History and Humanities.
IT 430.  Ethical Hacking for System Administrators.  3 credits, 3 contact hours (3;0;0). Prerequisite: IT 340 or equivalent. This course will explore the various means that an intruder has available to gain access to computer resources. Traditional security analysis often falls short due to the rapidly evolving threats that exist. The course was developed to teach how system and network vulnerabilities are found and exploited and what steps can be taken to mitigate the risk.
IS 322.  Mobile Applications: Design, Interface, Implementation.  3 credits, 3 contact hours (3;0;0). Prerequisites: IS 218, IS 219, or IT 202. This course is a practical introduction to building applications for mobile devices. The course combines hands on design and development experience, with a conceptual overview and discussion of design and practical development issues. Taken into account will be constraints and requirements of devices with small screen sizes, limited battery power, limited computational power, etc. Tools used for building an application in the context of a specific device such as iPhone or an Android based device will be discussed. Students build a mobile application to demonstrate their understanding of mobile web constraints and tools.
STS 318.  Educational Media Design.  3 credits, 3 contact hours (3;0;0). Prerequisite: IT 201. Educational Media Design employs the instructional principles of constructivist pedagogy as the process used to develop a solution to develop courseware for K-12 audience. The course builds on the participatory design model of software engineering in order to develop integrated learning environments that support visual and verbal literacy; enables student to be able to plan, organize, and systematically develop instructional materials. This course implements instructional design theory and pedagogy in order to create an actual application for a computer-based environment. Same as IT 380. This course does not satisfy the three credit 300 GER in History and Humanities.
IT 201.  Information Design Techniques.  3 credits, 3 contact hours (3;0;0). Prerequisite: IT 101. This course presents an introduction to the theory and practice of information design. Topics covered include the theoretical foundations of information design, graphic design, content design, interaction design, usability, multimedia design, sound and video, animation, and an introduction to 3D modeling.
HUM 102.  English Composition: Writing, Speaking, Thinking II.  3 credits, 3 contact hours (3;0;0). Prerequisite: HUM 101 with a grade of C or better or HUM 100 with a grade of C or better. Focuses on enhanced written and oral communication skills; emphasizes reading and interpretation of literary forms; critical analysis; methods of research using print and on-line sources; report writing and writing about literature.
ENG 340.  Oral Presentations.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. Instruction and practice in effective oral presentations. Students deliver a wide range of presentations adapted to the needs of a variety of audiences. Topics include voice and diction, presentation skills, the effective use of visual aids, reporting technical material and audience analysis. This course satisfies the three credit 300 GER in History and Humanities.
IT 230.  Computer and Network Security.  3 credits, 3 contact hours (3;0;0). Prerequisite: IT 120. This course introduces the applied topic of Computer Security, presenting the evolution of computer security, the main threats, attacks & mechanisms, applied computer operations & security protocols, main data transmission & storage protection methods via cryptography, ways of identifying, understanding & recovery from attacks against computer systems, various methods of security breach prevention, network systems availability, applications security, recovery & business continuation procedures and counter systems penetrations techniques and the role of the US Government in security of national computer infrastructure.
CS 266.  Game Modification Development.  3 credits, 3 contact hours (3;0;0). Prerequisites: IT 102 OR IT 114 OR CS 116, OR CS 114. This course introduces students to the basic concepts of game programming and development. Students will learn how to reprogram a professional game engine, or Modification (Mod) development as it is referred to in the industry. Students will work with C extensively. Students will work on their own game projects utilizing the professional game engine.
ENG 352.  Technical Writing.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. An advanced writing course. Combines current theory with actual practice to prepare students as technical writers. Analyze complex communication situations and design appropriate responses through tasks that involve problem solving, rhetorical theory, document design, oral presentations, writing teams, audience awareness, ethical considerations, and gender equity issues. This course satisfies the three credit 300 GER in History and Humanities.
STS 347.  Introduction to Music.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. This course is an introduction to the history of music, from ancient to present times, Western, Eastern, folk, world, classical, jazz, rock, and electronic. The class aims to develop in the student an informed and critical ear to make sense of the vast array of music available today. We also cover the role that technology has played in transforming how we experience and create music, from the development of the piano to the computer. The course involves extensive music listening and writing about music. This course satisfies the three credit 300 GER in History and Humanities.
IS 465.  Advanced Information Systems.  3 credits, 3 contact hours (3;0;0). Prerequisites: Statistical GER (MATH 105, MATH 120, MATH 225, MATH 244, MATH 279, MATH 305, MATH 333, IE 331, ECE 321 or MNET 315), and (IS 265 or MIS 245) and IS 344, and (IS 331 or CS 431). This course serves as an introduction to data analysis, probability and statistics from an information systems perspective, including many of the techniques that are most relevant to the profession of Data Scientist for business, data and web analytics, as well as current research areas. The course emphasizes manipulation and analysis of relevant data sets. Course topics include the rudiments of probability and random variables, estimation, hypothesis testing, graphics and visualization, data warehousing and OLAP analysis, dashboard, scorecard, data mining algorithms, optimization techniques, DSS and knowledge systems. Students will get hands-on experience in designing and building a data warehouse. They will get hands-on experience building a dashboard with real-world data, and they will apply various data mining algorithms learned in class to solve real world problems.
IS 265.  Introduction to Information Systems.  3 credits, 3 contact hours (3;0;0). Information systems is the study of how organizations use information technology. This course is an overview of the information systems discipline, the role of information systems in organizations, and the changing nature of information technology. Computer tools for analysis and presentation are used.
COM 369.  Digital Poetry.  3 credits, 3 contact hours (3;0;0). Prerequisites: HUM 102 with a grade of C or higher, and one History and Humanities GER 200 level course with a grade of C or higher. An investigation of activities taken up by poets who integrate computer technology in their works. Students discuss and evaluate virtues of the dynamics presented in an array of titles that include algorithmic programming, graphical artistry, videography, holography, hypermedia, and sonic design in order to build an understanding of the combined values of these disparate forms of expression. This course satisfies the three credit 300 GER in History and Humanities.
IS 390.  Requirements Analysis and Systems Design.  3 credits, 3 contact hours (3;0;0). Prerequisite: CS 103, CS 113, CS 115, IS 218 or IT 202  A study of the information systems development life-cycle, from the initial stages of information requirements analysis and determination to the ultimate activities involving systems design. Theory, methodologies and strategies for information requirements analysis, including the assessment of transactions and decisions, fact-finding methodologies, structured analysis development tools, strategies of prototype development, and an overview of computer-aided software engineering (CASE) tools. Theory, methodologies and strategies for systems design, including design of user-interfaces, particularly menu-driven and keyword dialogue strategies, and issues in the proper design of computer output.
CS 113.  Introduction to Computer Science.  3 credits, 3 contact hours (3;0;0). Prerequisite: CS 100 with a grade C or better. Intensive introduction to computer science. Problem solving decomposition. Writing, debugging, and analyzing computer programs. Introduction to arrays and lists. Iteration and recursion. The Java language is introduced and used to highlight these concepts. A student receiving degree credit for CS 113 cannot receive degree credit for CS 115.
Introduction to Writing eaches rhetorical knowledge and skills, focusing on critical reading, writing, and thinking. Introduces writing for specific academic audiences and situations. Emphasizes writing as a process through multiple drafts and revisions.
College Algebra Includes inequalities, functions and their graphs, polynomial and rational functions, exponential and logarithmic functions, systems of linear and nonlinear equations, matrices and determinants, arithmetic and geometric sequences, and the Binomial Theorem.
Information Systems and Technology Fundamentals Explores the fundamental concepts of information technology and the role played by enterprise systems in business and organizational strategy. Introduces types of systems, computer organization and hardware, operating systems and networking, project planning, software development, computer ethics, and career paths for enterprise developers and IT professionals.
Computer Architecture and Systems Software Provides a thorough grounding in computer hardware, system software, and contemporary information system architecture. Examines hardware structure, operating systems theory, and systems software as part of a technical foundation for enterprise systems development and IT infrastructure procurement and management.
Personal Health and Wellness Examines the challenges to individual and community health, and encourages students to become actively engaged in preserving, protecting, and promoting health at all levels. Develops a greater appreciation for bodies and understanding of requirements to maintain or achieve good physical, mental, emotional, social, and spiritual health. Includes lecture, discussion groups, guest lecturers, media, and role-playing.
Intermediate Writing Emphasizes academic inquiry and research. Explores issues from multiple perspectives. Teaches careful reasoning, argumentation, and rhetorical awareness of purpose, audience, and genre. Focuses on critically evaluating, effectively integrating, and properly documenting sources.
Computer Programming I for IS IT Presents concepts of modern computer programming. Emphasizes problem-solving, algorithm development, and programming desgin. Stresses constructs, data representation, fundamental types and data structures, decision structures, repetition structures, methods, arrays, classes, and objects. Includes testing, debugging, and documentation. Introduces object-oriented, event-driven programming models.
Data Communication Fundamentals Explores introductory information and cybersecurity concepts: security technologies, methodologies, and tools. Topics include security models, risk assessment, threat analysis, attack types, encryption technologies, security implementation, access controls, business continuity, and security policies. Discusses current topics, trends, and career opportunities in information security. Includes lab assignments covering information security principles.
Introduction to System Administration--Linux/UNIX Introduces the UNIX Operating System using the popular Linux OS. Explores the Linux file system, Linux administration, OS utilities, and program features and uses. Aids the student in the development, understanding, and working knowledge of the details of the Linux Operating System, memory organization, disk architectures, and demand paged virtual memory. Includes OS installation, user creation, rights management, loading daemons, and server best practices.
Technical Communication Teaches basic technical writing skills used in a variety of professional settings. Emphasizes audience analysis, document design, and using precise language for a particular audience.
Business Statistics I Presents an application of statistics in business and economics covering methods of collecting, analyzing, and presenting data. Includes frequency distributions, averages, index numbers, probability, sampling, estimation, analysis of variance, time series, regression and correlation, and chi-square.
Introduction to System Administration--WIndows Client Introduces operation management of operating systems using Microsoft Windows. Introduces installation methods and troubleshooting, hardware device installation and management, storage management, disaster recovery planning and management. Aids the student in the development, understanding, and working knowledge of the Windows networking framework including peer-to-peer, workgroups, user profiles, domains, NTFS, and share-level permissions.
Information Security Fundamentals Explores introductory information and cybersecurity concepts: security technologies, methodologies, and tools. Topics include security models, risk assessment, threat analysis, attack types, encryption technologies, security implementation, access controls, business continuity, and security policies. Discusses current topics, trends, and career opportunities in information security. Includes lab assignments covering information security principles.
Web Systems Development Emphasizes interpretation of business processes, process modeling, and implementation of the models as web applications. Instructs how to implement web solutions that use a relational database backend to manage site data using an industry-standard programming language to interact with the database to produce dynamic web content. Covers parameter passing, cookie storage, and session variables. Introduces application platforms that can be customized to new business requirements. Teaches how to use content management systems (CMS) and how to customize such systems to quickly produce web applications to meet business needs.  / Systems Analysis and Design Introduces the systems development life cycle with a focus on systematic planning; requirements, process, and data analysis; and an overview of the design phase. Covers fundamental principles, effective processes, and techniques of project management, including scheduling and project control. Covers appropriate methodologies, tools, diagrams, and techniques for systems analysis, design, and project management. Requires working in teams to complete and present the first planning and analysis phases of a project for a client.
Systems Design and Implementation Focuses on the design and implementation of an information system using an agile, iterative development approach. Utilizes self-organizing teams that will deliver working software with ongoing customer collaboration. Introduces use of a source control system to manage code base, an agile project management tool, and encourages continuous integration practices.
Advanced System Administration--Linux/UNIX Explores enterprise systems administration using the UNIX/Linux operating system. Students learn advanced administrative tasks including server installation, network configuration and user management, file management, network services deployment, server security, back up and recovery, Shell scripting, source compilation, performance monitoring and tuning, troubleshooting, and managing hardware and component changes.
Advanced System Administration--Windows Server Explores enterprise systems administration using the Microsoft Windows Server operating system. Students learn advanced administrative tasks including server installation; hardware change management; software application management; network configuration and user management; file management; printing; network services deployment; server security; back up and recovery; scripting; performance monitoring, tuning, and troubleshooting.
Voice and Data Cabling Fundamentals For students interested in the physical aspects of voice and data network cabling and installation. Focuses on cabling issues related to data and voice connections and provides an understanding of the industry and its worldwide standards. Covers types of media and cabling, physical and logical networks, as well as signal transmission. Focuses on best practices and safety using copper and fiber-optic cabling. Requires students to install a complete cable infrastructure for a simulated telecommunications room.
Internetworking and Router Management Teaches the theory and implementation skills and techniques needed to configure, troubleshoot and support reliable TCP/IP internetworks. Discusses security and management issues. Offers the opportunity to build an internetwork with cables, network cards, and routers. Emphasizes the analysis and design of networks in organizations.
Web Application Security Examines web application vulnerabilities and remediation techniques. Explores various tools and techniques for mapping web applications and assessing their vulnerabilities. Includes authentication management, session management, cross-site scripting, SQL injection, and web server configuration.
Information Security--Network Defense and Countermeasures Examines advanced information security concepts through an applied viewpoint. Extends the student's understanding of security issues through hands-on application of real-world techniques and use of current security software. Topics include legal/ethical issues, use of security tools, network reconnaissance, password/brute-force attacks, firewall configuration, Honeypot deployment, intrusion analysis/detection, server hardening, and penetration testing.
Enterprise Network Architectures and Administration Examines management of resources used in enterprise computing environments from a practical, applied viewpoint. Extends the student's understanding of these concepts through hands-on application of real-world network, server, and software management techniques and addresses the problems associated with providing a secure, stable, reliable enterprise computing infrastructure. Includes principles of IT enterprise infrastructure management; configuration, analysis, and troubleshooting of virtual servers; redundancy and failover; directory service integration, access control and security; uptime monitoring and notification; backup and recovery; Storage Area Networking; Cloud computing platform choices, functionality, cost, deployment, flexibility, and adaptability.
Enterprise Information Security Management Provides perspective of key issues involved in IT activities across the organizational and technical security landscape. Examines management methodologies, staffing, and operational issues. Teaches use of financial analysis and decision-making methodologies to aid investment decisions at the operational, functional, and strategic levels. Illustrates use of risk assessment and contingency planning as applied to business continuity and disaster recovery strategies. Includes the use of Service Level Agreement for managing both internal and external relationships.
Global Ethical and Professional Perspectives in IS and IT Examines professional and ethical issues within the information systems and information technology fields with a global perspective. Covers ethical and legal issues IT professionals face dealing with computer and cybercrimes, privacy issues, freedom of expression, intellectual property, software development including risk analysis, and social networking. Includes career professional development through resumes, cover letters, and job interviews specific to information systems and technology. Focuses on global networked readiness, digital highways, and challenges that information technology organizations face.
Network Security and Operations Capstone Senior-level, capstone experience course. Enhances student cyber security knowledge with operational and business applications. Focuses on integrating cyber security principles as an organic part of an organization's processes. Covers barriers to implementing security policy, building a business case for cyber security, and incorporating cyber security into project management and software life cycles.
College Physics I Lab Provides firsthand experience with the laws of mechanics, fluids, waves, heat, thermodynamics, and data analysis.
College Physics I Covers mechanics, fluids, waves, heat, and thermodynamics.
Ethics and Values Challenges students to explore and clarify their values; critically read works of philosophy, literature, religion, and history toward understanding the basis of their ethical views; and read, study, research, discuss, and write about difficult ethical issues. Focuses on issues of good vs. evil, justice vs. injustice, equality vs. inequality, and the necessity of defining and examining happiness and values.
Cornerstone Engage first semester students in thinking about the ideas which shape our current and future views of ourselves, our communities, and the cosmos. Special attention is given to a Christian perspective on liberal education as a foundation for life-long integration of faith, ideas, and action.
Jesus: His Life and Teachings Students will study the canonical gospels (Matthew, Mark, Luke, John) and learn critical theories for analyzing them both as sources for understanding who Jesus was and for reflecting on what those stories mean for Christians today. May be used to satisfy Bible University Requirements.
Early Christians: Life, Literature and Community Students will study Acts through Revelation and learn critical theories for analyzing them both as sources for understanding how early Christian communities appropriated the stories of Jesus for their own contexts and for reflecting on how those stories inform Christian life today
Message of the Old Testament An overview of the Old Testament providing an outline of special themes and the overall purpose of the books. The basic message of the Old Testament as a whole, including content and theological themes, will be examined.
Composition and Rhetoric The theory and practice in reading and writing analytical and persuasive essays. Prerequisite: Meet one of the following - SAT Critical Reading score (old SAT) of 470 or above; SAT Reading + Writing score (new SAT) of 500 or above; ACT English score of 19 or above; or writing placement testing into ENGL 111. May be used to satisfy University Requirements.
Academic Composition Workshop Practice in reading and writing expressive and informative essays. Some persuasive writing will be included. A review of grammar and editing skills will also be included
Composition and Literature Expository, critical, and persuasive writing with research based on the reading of literary works.
Speech and Rhetoric Develops public speaking knowledge, skills, and attitudes through the interaction of rhetorical theory, practice, and analysis.
Environmental and Technological Science A study of environmental and technological sciences including natural resources and the impact of modern technology on the human environment. May be used to satisfy Science University
General Physics I Principles of mechanics, heat, and sound. An algebra-based physics course, designed primarily for liberal arts and pre-medical and pre-dental students.
Introduction to Communication This course provides a survey of the terminology, methods, theories, and topics within the discipline of communication
Civilization I Survey of the social, economic, religious, political and aesthetic activities of western civilization from the earliest times to 1660.
Introduction to Anthropology An overview of archeology; physical, linguistic, and cultural anthropology. Challenges students to a serious look at todays global village with its diversity of cultures and a fuller understanding of tribal loyalties in the midst of growing international interdependence. An appropriate world view is suggested, in contrast to provincialism
Introduction to Programming Using Scripting An introduction to computer programming using a scripting language such as Python or PHP, with an emphasis on problem solving and logic. Topics include: variables and constants, arithmetic operations, data input and output, Boolean logic, conditional and iterative program control structures, user-defined functions, simple algorithm design, and debugging strategies.
Introduction to Databases and Database Management Systems A survey of the logical and physical organization of data and their importance in computer processing. Introduces data models, relational database design, and associated ideas. Compares modern DBMS software. Examines data as a strategic organizational resource. Students develop the basic SQL scripting skills necessary to create tables, queries, forms, and reports. Provides initial training towards professional database certification.
Mobile Application Development Introduces the development of applications for mobile computing and technology. Students learn to develop applications for mobile computing devices such as the iPhone and iPod Touch. Includes theory, concepts, and hands-on programming
Advanced Mobile Application Development Continues Mobile Application DeveIopment, creating more complex applications for mobile devices such as the iPhone and iPod Touch. Includes theory, concepts, and hands-on programming.
Human-Computer Interaction Introduction to both the programmatic and psychological considerations surrounding shaping the computer tool to the user. The course will cover the details of implementing a graphical user interface, and how to make the interface as user-friendly as possible.
Systems Analysis and Design Fundamental principles and methodologies of system analysis and design. Presents the systems development life cycle, with specific emphasis on planning, problem definition, specification of structured system requirements, information gathering, data and process modeling techniques, logical and physical design, feasibility assessment, and implementation and maintenance issues for businesses and organizations.
E-Commerce A studio-based course integrating the key business strategies and technology elements of contemporary electronic commerce. Emphasizes the use of Internet technology and the World Wide Web as strategic business tools, and links organizational strategy and business models to networked information technologies
Management of Information and Technology Resources Surveys contemporary management issues concerning information and technology resources of a firm. Topics include leadership of information systems, technology planning and acquisition, information retention and policy development, develop-vs.-purchase paradigm, legal/ethical/contractual considerations, customer support, staffing and organizational issues, performance metrics, social trends, and emerging technology.
Web Technologies An introduction to the development of web pages used to display images, tables, forms, and frames. Topics include HTML, cascading style sheets, server- and client-side scripting, applets, and web databases and security. Also introduces Internet browsers, user computer configurations, standard protocols, XML compatibility, Dynamic HTML, and accessibility issues.
Web Application Development Continuation of Web Development I. Topics include: Rapid Application Development; client- and server-side scripting for user and database interaction; session/cookie management; and privacy and integrity issues. Students learn scripting languages such as JavaScript, Perl, and ASP and develop an understanding of the document object model.
Advanced Mobile Application Development Continues Mobile Application DeveIopment, creating more complex applications for mobile devices such as the iPhone and iPod Touch. Includes theory, concepts, and hands-on programming. Assumes a strong programming background.
Fundamentals of Networking and Data Communications A first course in data communications and networking. Topics include: IP networks and services, comparative network configurations and communications protocols, function and purpose of physical network components, resource sharing, client-server systems, administrative issues and tools, and industry standards. Provides initial training towards professional network certification. Laboratory graded and credited with course.
Systems Analysis and Design Fundamental principles and methodologies of system analysis and design. Presents the systems development life cycle, with specific emphasis on planning, problem definition, specification of structured system requirements, information gathering, data and process modeling techniques, logical and physical design, feasibility assessment, and implementation and maintenance issues for businesses and organizations.
E-Commerce A studio-based course integrating the key business strategies and technology elements of contemporary electronic commerce. Emphasizes the use of Internet technology and the World Wide Web as strategic business tools, and links organizational strategy and business models to networked information technologies.
Fundamentals of Networking and Data Communications A first course in data communications and networking. Topics include: IP networks and services, comparative network configurations and communications protocols, function and purpose of physical network components, resource sharing, client-server systems, administrative issues and tools, and industry standards. Provides initial training towards professional network certification
Introduction to Computer and Information Security A survey of the fundamental concepts of computer and information security, including policies and technologies used to achieve secure networks, systems, computing facilities, and information resources. Topics include common system vulnerabilities and threats; models and mechanisms for mandatory, discretionary, and role-based access controls; authentication technologies; ethical issues; and related ideas
Database Administration A comprehensive presentation of the concepts and techniques of modern database administration. Topics include: system/software evaluation, selection, installation, operations, and maintenance; capacity planning and re-engineering; and utilities and tools for trouble-shooting, backup/ recovery, and performance monitoring/tuning. Discusses approaches and standards for organizing and managing the database resources, users, and technology of an enterprise.
Management of Information and Technology Resources Surveys contemporary management issues concerning information and technology resources of a firm. Topics include leadership of information systems, technology planning and acquisition, information retention and policy development, develop-vs.-purchase paradigm, legal/ethical/contractual considerations, customer support, staffing and organizational issues, performance metrics, social trends, and emerging technology.
Freshman Composition Instruction and practice in the basic principles of expository writing: the paragraph and the whole composition-the methods of development, the thesis, the outline and organization, the structure and style. Instruction in functional grammar, sentence structure, diction and spelling, punctuation and mechanics, in direct relation to the student's writing.
Pre-Calculus with Trigonometry  Topics will include a study of conic sections, general quadratic equations, systems of linear and general quadratic equations, exponential, logarithmic, and rational functions, properties and applications of trigonometric functions.
Pre-Calculus with Trigonometry  A combined course on function properties and graphs; inverse functions; linear, quadratic, polynomial, rational, exponential and logarithmic functions with applications; trigonometric functions and graphs; inverse trigonometric functions; fundamental identities and angle formulas; solving equations, and triangles with applications.
Critical Reading and Writing  Development of skills in reading critically, analyzing models of good writing, and writing in response to a variety of texts, including imaginative literature. Writing the argumentative essay, the critical essay, the research paper, and the essay examination.
Elementary Statistics An introduction to statistical reasoning. Topics include graphical display of data, measures of central tendency and variability, sampling theory, the normal curve, standard scores, Student's T, Chi Square, and correlation techniques.
WORLD LITERATURE A survey of major writings of the Western tradition from classical times to the present.
Algorithm Design & Implementation I Basic concepts of computer programming, problem solving, algorithm development, and program coding using a high-level, block-structured language.
Intro to Prof and Technical Writing An introduction to the genres of writing used in the technical and professional workplace, including memos, letters, instructions, directions, proposals, résumés, and short reports.
Discrete Structures  Introduction to discrete structures of computing. Topics include sets, relations, functions, digraphs, matrices, recursion, partially ordered sets, Boolean Algebra, artificial languages, and finite state machines.
GENERAL BIOLOGY I Principles of biology from the cellular level including biochemistry, cell biology, metabolism, photosynthesis, molecular biology, and genetics.
ALGORITHM DESIGN AND IMPLEMENTATION II An intensive capstone of the material covered in Computer Science 161 and an introduction to elementary data structures, searches, simple and complex sorts, and objects.
GENERAL BIOLOGY LAB I Laboratory exercises for studying the principles of biology from the cellular level including biochemistry, cell biology, molecular biology, and genetics.
SOFTWARE ENGINEERING Introduction to the methods used for specifying, designing, implementing, and testing medium and large-scale software systems; methods for organizing and managing software development projects, professionalism and ethical resposibilities in software development.
Computer Organization An introduction to the structure and function of computing machines. The primary components of the computer are examined from an organizational and logical standpoint. Topics include introduction to digital systems; machine level representation of data; assembly level machine organization; memory system organization and architectures; and introduction to language translation.
Internet Programming  This course concerns the art and science of programming for WWW Internet applications from a client-side perspective. Basic and advanced HTML will be covered, with emphasis on current scripting technologies.
System Administration  This course teaches skills and concepts that are essential to the administration of operation systems, networks, software, various computing support systems, and system documentation, policies, and procedures. This also includes education and support of the users of these systems.
Computer Networking and Security Topics include computer networking and protocols used in local and wide area networks, network administration, and the conceptual and technical aspects of computer security and information assurance, especially as it impacts networks and the Internet.
Database Administration  A hands-on comprehensive study of database administration and applications to include selecting, installing, configuring, tuning, maintaining, and reviewing modern database systems.
Computer Architecture Hardware organization and implementation of computer architecture. Instruction set considerations and addressing modes. System control concepts. CPU control, microprogramming, I/O interface and memory organization. Parallel and data flow architecture.
Information Systems  A study of file organization and management, analysis of the concept of information systems, approaches and techniques for evaluating information systems.
Data Structures Further study of trees, including: balanced trees, B-trees, 2-3 trees, and tries; external sorting, symbol tables, and file structures.
Capstone I This course must be taken in the academic year in which the student intends to graduate. Through participation in a major capstone project, this course presents a formal approach to the top-down design, development, and maintenance of software systems. Topics include organization and management of software projects, security, programmer teams, validation and verification.
Integrated Technologies for This course provides an introduction to several current technologies, and how they can be used to integrate software solutions into a functional large interconnected system. The course will focus on contemporary technologies used for enterprise software development.
Human Computer Interaction Designing, implementing, and evaluating computer systems. Task analysis, prototyping, usability evaluation, dialogue specification, interaction styles and techniques, human factors, virtual reality, multimedia, and hypermedia systems.
Operating Systems  Topics include process management, processor management, memory management, device management, file management, process synchronization and interprocess communication, and user interface. Other issues such as distributed computing and system performance may be discussed.
Current Trends in Computer Topics include computer and information ethics, social implications of technology, current trends in computer science and information technology applications and development, professional issues, and emerging trends and current topics in computer science research.
INTERNSHIP IN MATHEMATICS INTERNSHIP IN MATHEMATICS
CULTURAL ANTHROPOLOGY A study of the nature and components of culture and the diversity of human cultures.
INTRODUCTION TO CRIMINAL JUSTICE The criminal justice system. Study of the historical development of criminal justice. Overview of the functions and responsibilities of law enforcement, the judiciary and
SOCIAL SOFTWARE An application-based introduction to development of Social Software. Blogs, microblogs, podcasting, social networking and related issues will be examined. Emphasis will be on gaining hands-on experience in the use of content authoring tools.
SURVEY WORLD ART HISTORY I One semester chronological survey of world art and architecture from the Paleolithic to the Late Gothic eras. Emphasis varies with instructor.
INTRODUCTION TO PUBLIC SPEAKING Training in the organization of materials and the oral and physical aspects of delivery in various speaking situations. Intended to give the beginning student an understanding of and practice in communicative speaking.
FRESHMAN ACADEMIC SUCCESS AT SOUTHEASTERN A student success course providing the tools that address the rigors of academic life on the University level. Topics include the purpose and value of higher education; the expectations and responsibilities of a college student; the development of analytical and metacognitive learning strategies; choosing the appropriate major and developing degree/career goals; and personal management during the college years.
The ASU Experience Students will learn about ASU's mission as the New American University, the importance and benefits of an entrepreneurial approach to problem solving, solutions to sustainability challenges, and the importance of social embeddedness. Additionally, through various course discussions and assignments, students will examine the concept of academic integrity and its potential impact on their future, gain awareness of the value of engaging in research activities, and learn about taking an interdisciplinary perspective.
Introduction to Information Technology Project-based introduction to the key concepts, tools and devices underlying today's technologies. Introduces computer hardware, software and system architecture, the Internet, the World Wide Web and information technology ethics. Forms a foundation for future courses offered in the Information Technology major and the information technology discipline
First-Year Composition Critical reading and writing; emphasizes strategies of academic discourse. Research paper required.
Information Technology Programming Logic Introduces basic analysis and synthesis procedures for an understanding of information system logical structures. Topics include: identifying organizational domains for potential automation, informational descriptions (scenarios) of those domains, and program structure and logical designs for potential problem/opportunity resolution. Uses graphical and textual models to express the logic and uses Python to implement the logic.
Introduction to Human Systems Engineering Introduces basic principles, methods and theories of psychology and applications to engineering problems relevant to human systems. Gives particular attention to the intersection of psychology and engineering. Students learn brain anatomy and physiology, sensation and perception, cognition, social systems and research methods so that they are able to design systems consistent with human capabilities and limitations
Brief Calculus Differential and integral calculus of elementary functions with applications.
Introduction to Java Technologies Introduces Java as a platform for application development. Fundamental concepts of the Java language, including object-oriented programming and basics of the user interface programming.
Advanced First-Year Composition Concentrated composition course for students with superior writing skills; intensive reading; research papers; logical and rhetorical effectiveness.
Music as Political Discourse: Reggae, Calypso, and Hip Hop This is a reading and writing intensive course that employs critical thought that explores African Diaspora popular music as a medium of social and political expression. It examines the political content of Reggae, Calypso and Hip Hop and their role in triggering and influencing popular discourse in the Caribbean and the USA. Course material will analyze the interrelationships among the musical forms and their role in fostering Black and Pan African Cultural Identity, Political Consciousness and World Peace
Information Modeling, Storage and Retrieval Notations, tools and languages for modeling, representing and manipulating information; database creation, access and management in the context of a controlling application. Analyzes information storage needs and design of an appropriate representation. Project-based access to information through tools and languages such as structured query language.
Introduction to Environmental Science Introduces the interconnected nature of Earth's hydrosphere, lithosphere (soils and rocks), atmosphere, and biosphere.
Computer and Network Systems: Organization and Administration Fundamentals of computer networks, computer organization and computer operating systems. Components, tools and languages for configuring and administering computer systems.
Discrete Mathematical Structures Logic, sets, functions, elementary number theory and combinatorics, recursive algorithms, and mathematical reasoning, including induction. Emphasizes connections to computer science.
African American Literature: Beginnings through the Harlem Renaissance Focuses on the history of African American literature through the Harlem Renaissance, as exemplified in selected slave narratives, poems, and fiction.
Introduction to UNIX Utilities Technical overview (introduction) of the UNIX/Linux operating system. Emphasizes using the command line UNIX or Linux system. Covers fundamental UNIX commands and utilities including the use of a text editor and a mail handler, configuring a shell, the UNIX file system organization, pipes and filters, shell environment and simple shell scripts. Additional topics include UNIX GUIs and Windows Active Directory. Assumes no previous experience with the UNIX operating system.
Introduction to Environmental Science Introduces the interconnected nature of Earth's hydrosphere, lithosphere (soils and rocks), atmosphere, and biosphere.
Introduction to Internet Networking Introduces students to the networking field. Students learn network terminology, protocols and topologies. Students also learn network architectures of Local Area Networks (LAN), Wide Area Networks (WAN) and related media, connections and components. Covers other topics including the OSI model, router configuration/programming, wireless transmission, IP addressing, network management and network security.
Analyzing Big Data Data mining and statistical techniques that arise in data analytic applications. Students learn and practice working with big data using data analytic techniques presented in earlier coursework. Discusses one or more applications associated with data analytic techniques. Practices using advanced techniques that build on the knowledge provided in earlier coursework and knowledge gained from a statistical methods course. Familiarity with databases and statistics are essential.
Network Forensics Use and creation of advanced network forensics tools: intrusion detection and prevention, honeynets, traffic routing and management, and data reduction and graphing tools.
Introduction to Statistics Basic concepts in descriptive and inferential statistics, emphasizing applications to psychology.
Managing Configurations and Active Directory Technical overview/introduction of configuration management processes and techniques used in modern networks. Includes an introduction to managing software configurations and processes to support change control. Also delves into the use and structure of Windows Active Directory and how this network-based application helps manage the network configuration. Assumes no previous experience with configuration management or Active Directory
Risk Management and Insurance Provides an introduction to the different types of risks faced by individuals, businesses and society along with ways in which they make an assessment of, control and transfer of different types of risks including property risk, liability risk, personal risks and speculative risks such as financial risks. Covers risk management techniques including risk control and risk financing with a focus on insurance policies, and also presents other major topics in personal financial planning, social insurance, insurance operations and regulations, and reinsurance. Also gives attention to contemporary issues and challenges in risk management and insurance.
Foundations of Information and Computer System Security Introduces information technology (IT) security aspects and how technology can be vulnerable to unwanted intrusions. Project-based introduction to privacy, authentication and malware incursions for information technology. Principles of information security and assurance and their implications on access. Tools and methods to identify intrusion, best security practices. Includes securing communications and applications, including symmetric and asymmetric encryption and Hash functions.
Network Information Communication Technology Focuses on the physical layer, data-link layer and network layer of the TCP/IP model. Concentrates on data communications, including signals, transmission impairments and digital transmissions. Students gain an understanding of the data link layer and its services/protocols, with attention on the network switch. Incorporates network layer protocols with focus on IPv6. Explores subnetting (classful and classless) in detail and also covers Variable Length Subnet Mask (VLSM).
Shell and Script Programming with UNIX UNIX operating system programming of shells, environment and 4th-generation languages and tools, such as sed, awk, perl, grep, make.
Leading the Enterprise Comprehensive overview of leadership strategies and development as it applies to individuals, organizations and events. Applies leadership development to workplace dynamics such as technology management, entrepreneurship and globalization.
Plant Pathology Identification and control of biotic and abiotic factors that cause common disease problems to plants.
Wireless Networking Systems-level coverage of advanced information communication technology (ICT) topics including both digital and analog wireless communications systems used in today's ICT networks. Transmission systems covered include microwave, satellite, cellular radio, Bluetooth and wireless fidelity communications systems. Topics include: PCM, TDM, antennas, transmission lines, microwave radio, satellite radio, Bluetooth, cellular and wireless fidelity systems.
TCP/IP and Routing In-depth study of the TCP/IP protocol suite and router technology. Covers the underlying applications, components and sub-protocols that make up the TCP/IP suite. Emphasizes the fundamentals of routing, router configuration, understanding routing protocols and setting up access control lists.
Managing the Cloud Focuses on the cloud environment. Students learn the architecture characteristics of Software as a Service (SaaS), Platform as a Service (PaaS), and Infrastructure as a Service (IaaS), including how these architectures are created and maintained in a cloud environment. Also addresses networking associated with cloud interaction, SQL programming and cloud security issues.
Web Programming for Human Computer Interface Human-computer interaction design for rich media systems. Design processes, tools and principles for applications that are highly interactive with their users and which include multiple input/output modalities and multimedia. Project-driven course. Key topics include wireframes and persona structures associated with HCI.
Information Technology Capstone Project I First half of a comprehensive project experience based on cumulative knowledge and skills gained in earlier coursework.
Middleware Programming and Database Security Covers the main concepts of middleware technologies. Includes the various methodologies used to integrate applications, databases and Web services. Students develop multilevel applications using programming/scripting languages (such as PHP, Java, Python, Perl) which access data stored in a database. Middleware programs typically control database access and protect database SQL programs from security breaches. Students access the data from applications and other Web technologies such as XML, as well as protecting the data from unauthorized access.
Introduction to Big Data Architecture of Hadoop clusters at both the hardware and system software levels. Applies Hadoop and related Big Data technologies such as MapReduce, Pig, Hive and Impala in developing analytics and solving the types of problems faced by enterprises today. Expects programming experience in Java or Python and a general understanding of databases, networking and distributed systems.
Ecosystem Management and Planning Principles of ecosystem management, with emphasis on economic and policy constraints on the planning process. Risk assessment and management.
Middleware Programming and Database Security Covers the main concepts of middleware technologies. Includes the various methodologies used to integrate applications, databases and Web services. Students develop multilevel applications using programming/scripting languages (such as PHP, Java, Python, Perl) which access data stored in a database. Middleware programs typically control database access and protect database SQL programs from security breaches. Students access the data from applications and other Web technologies such as XML, as well as protecting the data from unauthorized access.
Developing Security Policy Focuses on development of security policy, risk solutions and incident response facilities. Using the information security framework, identifies strategies and processes used in governance, risk management, asset management, human resources and physical security to create, evaluate and audit security policies.
Information Technology Capstone Project II Information Technology Capstone Project II
History of Engineering The history of engineering from the earliest record to modern times, examining the social, cultural, and economic effects on society.
Introduction to Computer Science I Theory and practice of computer science. Algorithm development and analysis; data abstraction techniques; elementary data structures; dynamic memory manipulation; debugging; and program design issues. Computer systems and applications. Intended for CS majors.
Introduction to Computer Science II Theory and practice of computer science. Algorithm development and analysis; data abstraction techniques; elementary data structures; dynamic memory manipulation; debugging; and program design issues. Computer systems and applications. Intended for CS majors.
From Problems to Algorithms to Programs This course is an introduction to the design and implementation of computer programs. The basic software development process (modeling, algorithm design, programming, testing and debugging) is illustrated through problem examples. Programming techniques are introduced to allow students to implement and evaluate solutions as programs.
From Programs to Computer Science Covers basic algorithm analysis. Topics include basics of classes, inheritance, and data abstraction; linear data structures (vectors, lists, stacks and queues); trees and simple graphs; hash tables; sorting and searching; recursion; and basic graph traversal algorithms.
Introduction to Scientific Programming Introduces the concepts and techniques of computer programming. Particular emphasis on computer programming as a problem-solving technique in science and engineering applications. Either the C language or Python is taught and used for assignments. Good programming style is stressed. Significant out-of-class programming required.
From Programs to Computer Science Covers basic algorithm analysis. Topics include basics of classes, inheritance, and data abstraction; linear data structures (vectors, lists, stacks and queues); trees and simple graphs; hash tables; sorting and searching; recursion; and basic graph traversal algorithms. Numerous labs and programming assignments build skills in planning, problem solving, and debugging: this is a hands on course
Introduction to Computing Initial exploration of computing, including comparison of the various subfields. A wide range of issues, including fundamental concepts, selected current topics and the role of both computing and computing professionals in organizations and in society are also discussed.
Introduction to Internet Technologies Introductory course exploring the fundamentals of Internet communications with an emphasis on the World Wide Web. Students develop an understanding of the Internet's underlying technologies and learn how to utilize them as contributing members of the Web community. Students become proficient with creating and publishing Web pages using HTML and CSS.
Professional Ethics and Communication in Technology-related Fields A mixed lecture/seminar course intended to improve both reasoning and ability to communicate effectively in front of an audience. Students learn basic forms of ethical argument, they read about ethical situations in which technology and technology professions play a key role, and they participate in student-led discussions about the reading. Students also make oral presentations about both ethical and technical topics, and evaluate each other's presentations in order to improve their sense for what makes a good presentation.
Intermediate Web Design An intermediate level exploration of the theory and practice of Web design. Students learn the fundamentals of design theory applicable to the World Wide Web and examine tools and techniques for applying that knowledge to their projects. Additional topics include information architecture, usability, accessibility, optimization, typography, and market visibility. Working knowledge of XHTML and CSS required.
Database Programming Introduces database programming in the microcomputer environment. Students use a procedural programming language such as Visual Basic to manipulate data managed by a database management system. Emphasis is on the relational database model. Topics include connections, queries (including use of SQL), relations, constraints, transaction processing, concurrency issues, exception handling, and report generation.
Computer Architecture Fundamentals of computer organization, including binary systems, data representation (and compression), machine language, program execution, memory and process issues. Operating systems and networking basics.
Network/Systems Administration Introduces the central issues in administration of a networked computer system. Topics include the client-server model (including support of mail, FTP, Telnet, the Web), disk and file systems, backup and recovery, and security.
Computer Security Provides students with the skills required to recognize and diagnose potential security issues in computer and network systems. Through readings, case studies, exercises, research papers, exams and personal experience, students will discuss and debate security policies and legislation, system procedures, security tools and techniques and the patterns that attackers use to foil security systems. Other topics include types of attacks, viruses, intrusion detection and tracking, firewalls, trust relationships and authentication, secure connections, and cryptography. At the conclusion of the course, student will have a heightened sense of security in the actions they take when using and maintaining computer systems.
Internship Provides the opportunity to apply academic experience in settings associated with future professional employment. A written proposal for the internship must be approved by the instructor. The proposal must specify what the student will learn from the internship, why the student is properly prepared for the internship and what supervision is available during the internship. A mid-semester report and final report are required.
Project Management for Information Technology This course focuses on a core set of project management essentials that can affect the bottom line of project technical and business performance. These are termed "best practices," and those addressed are: formal risk management, agreement on interfaces, metrics based scheduling/tracking, frequent binary completion milestones, incremental development, people aware management style, and change management. The emphasis is on information technology projects; however, the basic principles are pertinent to a wider class of project domains.
Senior Project Senior Project
Database Technology Topics include database architecture, schema design and definition, entity-relationship diagrams, data retrieval and update, and indexing performance. Architectures for single-user, multi-user, client-server, and web access are introduced. The relational data model is emphasized but alternative database models, such as semi-structured and object models, are introduced. Database administration topics include examination of metadata information, data integrity, and management of users and privileges, performance tuning, transactions, isolation levels, and security. Ethics of data protection are introduced.
Server-side Web Development An intermediate-level examination of the theory and practice of developing server-side applications for the World Wide Web. Students will learn practical techniques for designing and implementing data-driven Web sites through the use of server-side processing. Working knowledge of HTML, CSS, and some programming language is required.
Client-side Web Development An intermediate-level examination of the theory and practice of developing client-side applications for the World Wide Web. Students will learn practical techniques for designing and implementing dynamic Web sites through the use of client-side processing. Working knowledge of HTML, CSS, and some programming language is required.
Scripting Languages This course is a study of the class of programming languages and tools known as scripting languages. Topics include: a general discussion of language design and its relationship to the intended computing environment, introduction to the command-line environment, the role of scripts in controlling and connecting other programs and components, basic functionality of at least two scripting languages, and the syntax use of regular expressions. Programming projects in multiple languages will be required.
Data Science and Analytics An introduction to various disciplines that contribute to what is commonly known as Data Science.
Advanced Web Development An advanced exploration of various topics in Web development. Topics covered each semester will be chosen to reflect the current state of stable and accepted Web technologies, with a decided emphasis on open-source solutions. Both client-side and server-side technologies are likely to be included, with particular attention given to concepts and techniques used to facilitate efficient Web development.
Network Technology Introduction to fundamental concepts of computer networks and exploration of widely-used networking technologies. Topics include principles of congestion and error control; network routing; local, wireless and access networks; application protocol design; and network programming. In-depth discussion of the Internet suite of protocols.
Topics in Information Technology Topics in Information Technology
Calculus I Calculus of one variable covering limits, derivatives of algebraic, trigonometric, exponential, and logarithmic functions; applications include curve sketching, max-min problems, related rates, and volume and area problems.
Introduction to Statistical Analysis A first course introducing concepts of probability and scientific methods for data analysis. Exploratory data analysis, survey sampling, probability, discrete and continuous distributions, confidence intervals, hypothesis testing, comparing samples, linear regression, analysis of variance. Statistical software is used.
Science Elective Science Elective / Science Elective 1 Science Elective 1
Humanities Elective Humanities Elective
Science Lab Elective Science Lab Elective
Science Lab Elective 1 Science Lab Elective 1
Social Science Elective Social Science Elective
US History/US Government Elective US History/US Government Elective
Academic and Career Success This course introduces effective academic strategies and resources integrating them with career planning methods that can be leveraged to pursue future academic and professional goals.
Introductory Sociology This introductory course brings perspectives of the social sciences to bear on understanding group behavior. The course examines society using theoretical and methodological principles and applications that distinguish sociology from other social sciences. Learners gain insight into unique aspects of cultural and social interaction across the globe, while examining negative aspects of social control, deviance and crime, and authority. Information presented explains how culture, values, roles, norms, social interaction, and social stratification influence everyday life through careers, community, and family.
Introduction to Ethics This course is designed to provide students a basic understanding of moral and ethical theories and concepts. The activities and discussions encourage students to explore and solve ethical dilemmas by identifying and applying moral and ethical theories. Students will also be encouraged to explain their reasoning from cultural, professional, and personal standpoints. A variety of ethical issues and methodologies will be explored, as students evaluate moral dilemmas in an assortment of work and life scenarios.
Applications of Discrete Mathematics and Statistics This course studies problems that involve finite or discrete data sets. Logic and set notation form a foundation for creating structure in data storage and information retrieval. Tools used include truth tables, methods of proof, Venn diagrams, Big-Oh functions, graphs, trees, paths, and matrices.
Analytic College Algebra The course is designed to provide students with a complete review of elementary algebra. Students are introduced to the processes of simplifying rational and radical expressions. Functions are defined and the general properties of zeroes, extreme values, symmetry, transformations, and graphs are studied. Special attention is given to linear, rational, radical, and quadratic equations. Additional topics include computation with complex numbers and solving systems of linear equations with matrices and determinants.
Introduction to Algebra This course is designed to provide students a review of arithmetic operations on signed numbers and fractions. Students are introduced to the idea of using symbols for numbers and to basic transformations of algebraic expressions. The skills of expanding, factoring, and simplifying algebraic expressions are applied to the solving of linear and simple quadratic equations. Linear relationships between real life quantities are studied, both from the graphical and the algebraic point of view. Elementary rules for exponents, simple roots and basic operations on rational expressions are used to simplify expressions.
Professional Written Communications Professional Written Communications
Introductory Written Communication The workshop style course focuses on building confidence in writing as students progress through the process of choosing essay topics, developing introductory paragraphs and thesis statements, creating effective body paragraphs and topic sentences, and drafting conclusion paragraphs.
Modern American History: 1950 to the 21st Century This course focuses on the key people, social experiments, and technologies that continue to impact our lives. Particular attention is paid to the latter half of the 20th Century and the dawn of a new millennium in America – a time that, through the lens of history, both gives us pause and inspires hope for the future.
Technical and Professional Writing This course covers technical and professional writing. Students review and will be required to prepare a wide variety of documents including abstracts and/or executive summaries, mechanism and process descriptions, instructions, proposals, and requirement specifications. Special attention is given to adapting writing style to a particular audience, adjusting document mechanics and semantics for a specific purpose, formatting design elements in a consistent manner, and integrating graphics into a document.
Unix Fundamentals In this course, students explore end user interaction with the UNIX operating system. This course examines the basic features of the UNIX operating system, UNIX commands, the UNIX file system, the UNIX shells, and shell programming. It also draws comparisons between UNIX and Linux.
Fundamentals of Database Systems This course introduces database design, and implementation and database management systems. Topics covered in this course include conceptual and logical database designs for several businesses, implementing these designs using a database management system and developing business applications that access these databases.
Structured Query Language for Data Management This course gives complete coverage of SQL, with an emphasis on storage, retrieval and manipulation of data.
Introduction to Computer Security This course provides the foundation for the study of computer system security. The course centers around the ten domains comprising the Information Security Common Body of Knowledge. Topics include access control systems, telecommunications and network security, cryptography, operations security and business continuity and disaster recovery planning.
Introduction to Website Development Web development is a broad field and this class provides a basic foundation for follow-on web related classes. The focus for this class is to produce and manipulate actual code creation with HTML5 and CSS3 (or updated industry web standards) for structuring/presenting content on the web.  W3C provides industry guidelines related to current web design practices and standards.  Students employ, interpret, manipulate and generate HTML5 and CSS3 code using Notepad++ or TextWrangler (Mac platform) or other industry standard text editor.
Introduction to Programming Logic This course is the study of programming logic and the application of this logic to problem solving. In the course we will discuss and apply many approaches to problem solving such as step algorithms, flow charts, truth tables, and pseudo-code. Students will learn techniques to translate real life problems into forms that will enable computer programs to solve them. Students will learn and apply programming language constructs (i.e. linear, branching, iteration, subroutines, etc.) using a visual tool.
Introduction to Operating Systems and Client/Server Environments This course is an introduction to the basic concepts of operating systems and specialized networking operating system models. The fundamentals of common operating systems, client/server environments, network infrastructure, theoretic models and system architecture are discussed, including legacy operating system platforms and security processes utilized in today's enterprises.
Introduction to IT Introduction to IT provides an overview of issues and opportunities presented by the fast-paced world of information technology. Students receive an overview of computer-based systems and learn about the development operation and management of these systems. The course includes basic hardware and software principles and current information systems. Topics include databases and networking and their critical organizational importance, IT systems development, the impact of the Internet on organizations, and emerging technologies and trends for the future.
Fundamentals of Networking This course serves as an introduction for students to acquire a foundation in current data communication and networking technologies. The course provides an introduction to the hardware, media, Ethernet, addressing, IP Configuration, components, and connections of a network. Network concepts such as network topologies, and major protocols, as well as the basic functions of network administration and operation are covered.
Spreadsheet Applications This course is designed to introduce the basic computer spreadsheet application skills, with an emphasis on essential design, format, functions, and formulas of spreadsheet operations in solving real-world problems. Electronic spreadsheets are used in a variety of business calculations to analyze, graph, and manage data.
Information Technology Architectures The major objective of this course is to introduce the concepts, methodology and terminology of Distributed Systems Architecture within the context of Enterprise Technical Architecture and integrate this knowledge with previous courses in operating systems, database management systems, networking, programming and program management.
Systems Analysis, Design and Integration Systems Analysis and Design provides instruction on the System Development Life Cycle (SDLC) phases. This course looks at the SDLC as a structured approach for developing requirements, performing analysis, producing the design, coding or installation of the solution, testing the application and installing the final product. The system as defined in this course could include a network, telecommunications, new software development or other information systems.
Introduction to Project Management This course is designed to provide an overview and introduction to the discipline of project management, coupled with an examination of the techniques that project managers use to complete their projects on schedule, within budgeted cost, and according to specified scope.
Information Technology Fundamentals This is the freshman experience course that also covers pervasive themes in IT, organization issues, and history of IT, IT and its related informing disciplines, application domains, computer math, and other IT topics.
Operating Systems Technologies This course covers operating systems concepts, applications, administrative activities, installation, customization, maintenance, security, and other topics.
Introduction To Computer Algorithms And Logic This course introduces basic concepts of computer programming through the development of algorithms and logic to different types of real-word problems. It emphases on developing problem-solving skills required for creating software solutions. The course covers computer system basics, software development process, basic programming structures, constructs and data structures, and methods for developing algorithms and logic.
English Composition I Emphasis on the organization of the expository theme. Directed writings of themes based on personal experience, on the relationship between experience and language, and on the relationship between experience and ideas.
Algebra And Trigonometry For Technology is a two semester sequence in algebra and trigonometry for students in technology. The emphasis is on technique and problem solving
Web Systems Technology This course covers web technologies, information architecture, digital media, web development, vulnerabilities, social software, and other topics.
Networking Technologies This course covers routing and switching, physical layer, foundations of networking, security, application considerations, network management, and other topics.
Programming Fundamentals This course covers fundamental programming techniques using a particular programming language while focusing on problem-solving skills. Topics include primitive and custom data types, control structures, simple data structures and an introduction to object-oriented programming.
Discrete Mathematics For Computer Technology The course covers topics in discrete mathematics which are essential to the discipline of computer technology. These include: logic, sequences, mathematical induction, basic set theory, functions, recursion, relations, graphs, and trees.
English Composition II The second half of the basic composition sequence. Extensive practice in writing clear and effective prose. Instruction in logic, structure, and style.
Integrative Programming This course covers in-depth discussions of object-oriented programming and application development through integration. Topics include object-oriented programming concepts and object-oriented design, classes, objects, interfaces, inheritance, association, polymorphism, software framework/library, file system processing, event-driven programming, GUI-based programming, data access, basic networking programming.
Applied Database Technologies This course covers database query languages, information management concepts and fundamentals, data organization, data modeling, managing the database environment, special-purpose databases, and other topics.
Internetworking Technologies This course covers requirements, acquisition/sourcing, integration, project management, testing and quality assurance, organizational context, architecture and other topics.
Fundamentals Of Speech Communication A study of communication theories as applied to speech; practical communicative experiences ranging from interpersonal communication and small group process through problem identification and solution in discussion to informative and persuasive speaking in standard speaker-audience situations.
Elementary Statistical Methods A basic introductory statistics course with applications in various fields and emphasis placed on assumptions, applicability, and interpretation of various statistical techniques. Subject matter includes frequency distributions, descriptive statistics, elementary probability, normal distribution applications, sampling distribution, estimation, hypothesis testing, linear regression
Fundamentals Of Information Assurance This course covers security mechanisms, fundamental aspects, operational issues, policy, attacks, security domains, forensics, information states, security services, threat analysis, vulnerabilities, and other topics.
Advanced Programming This course covers in-depth discussions of data structures and associated algorithms, memory management, and concurrent programming. Topics include memory structures, allocation and release, object reference counting, garbage collection, arrays, lists, stacks, queues, trees, graphs, heaps, hash tables, recursion, searching and sorting, multithread programming and synchronization, as well as the latest developments in advanced programming techniques
System Administration And Management This course covers system performance analysis, benchmarking, acceptance testing, security strategies, file systems analysis, auditing, server roles, and best practices.
Systems Assurance This course covers the implementation of systems assurance with computing systems. Topics include confidentiality, integrity, authentication, non-repudiation, intrusion detection, physical security, and encryption.
Disaster Recovery And Planning This course covers risk management and business continuity. Topics include disaster recovery strategies, mitigation strategies, risk analysis and development of contingency plans for unexpected outages and component failures.
Distributed Application Architecture And Design This course covers the topics of multi-tier application development, interface design and implementation, client side scripting, server side scripting, backend database integration, component based application development, and configuration of multi-tier applications, as well as the latest developments in distributed application development.
Technical Report Writing A study of application of the principles of good writing in industrial reporting with emphasis on the techniques of presenting information graphically as well as in a clear, concise written form.
Advanced Operating Systems This course covers the comparison and contrast of operating systems, the detailed examination of architecture, customization and implementation of the features of specific operating systems.
Distributed Application Development This course covers the topics of multi-tier application development, interface design and implementation, client side scripting, server side scripting, backend database integration, component based application development, and configuration of multi-tier applications, as well as the latest developments in distributed application development
Database Modeling And Implementation This is an advanced course that covers the design of distributed databases, data modeling, normalization rules, query languages, layout and design of forms, transaction management, and implementation of the database design. Extensive laboratory exercises are assigned.
Mobile Application Development This course focuses on developing mobile applications for multiple platforms. Topics include special considerations for devices (smartphones and tablets) with limited computational power and system resources, application development paradigms, sensor-based applications (touching, gesture, and movement), location-based applications, network programming, interactivity with data sources and application integration, testing with simulators, as well as consideration and preparation for application publishing
Software Assurance This course covers defensive programming techniques, bounds analysis, error handling, advanced testing techniques, detailed code auditing, and software specification in a trusted assured environment.
Computer Forensics This course covers the techniques used in the forensic analysis of computerized systems for gathering evidence to detail how a system has been exploited or used
Application Integration This course covers application integration methods using service oriented computing and various publicly available application programming interfaces (APIs), integration of disparate enterprise and Web applications, implementing interfaces between platforms and applications. Topics include data exchange formats, APIs for processing data of different formats, service creation and service consumption, as well as the latest developments in application integration.
Assured Systems Design And Implementation This course covers the design and implementation of assured systems in an enterprise environment. Topics include hardening of operating systems, choice of platforms, design criteria within the assured systems domain. Extensive laboratory exercises are assigned.
Network Design And Implementation This course covers the design and implementation of enterprise level networks. Topics include network topologies, protocols, technologies, services, design and architecture, and implementation of the network design.
Senior Project Undergraduate Research Senior Project Undergraduate Research
Orientation To Computer And Information Technology Orientation To Computer And Information Technology
Microcomputer Database Applications This course does not carry credit toward degree requirements in Computer Technology. A study of relational databases and their applications with special emphasis on the proper techniques of database construction. Instruction will center around learning how to design databases and operate a database management system in a Windows environment. Students will build projects and develop systems for the storage, manipulation, and retrieval of large amounts of data on the personal computer
Programming For The Internet This course introduces software development concepts common to modern object-oriented programming languages. Topics include: intermediate data types, decisions, repetitive structures; methods; arrays and collections; encapsulation; inheritance, and polymorphism; exception handling; data persistence; Database Management System (DBMS) connectivity; user interface construction; software testing and debugging; and working in teams.
CFRS 510: Digital Forensics Analysis. 3 credits. Explains computer forensics crime scene procedures, beginning with initial walk-through and evaluation; identification and collection of potential evidence; preparation of intrusion investigation; aspects of working with investigators and attorneys; reverse engineering with file identification and profiling; application of critical thinking in determination of significance of artifacts; and analysis and reporting of evidence. Offered by Electrical & Comp. Engineering. May not be repeated for credit.
IT 213: Multimedia and Web Design. 3 credits. Through lecture, class demonstration, class discussion, and hands-on lab experience, introduces multimedia and web computer graphics. Focuses on development of web-enabled multimedia applications from practical business perspective. Introduces and discusses technological, aesthetic, and human factors. Offered by Info Sciences & Technology. Limited to two attempts.
STAT 250: Introductory Statistics I. 3 credits. Elementary introduction to statistics. Topics include descriptive statistics, probability, and estimation and hypothesis testing for means and proportions. Statistical software used for assignments. Offered by Statistics. Limited to three attempts.
IT 214: Database Fundamentals. 3 credits. Covers fundamentals of relational database management systems and their use in business environments. Topics include: database classifications, data models with extensive coverage of the relational model, entity-relationship and extended entity-relationship models, normalization, advanced data modeling, and Structured Query Language (SQL) programming. Students design and implement a real-world relational database and create complex SQL queries to retrieve data from the database. Offered by Info Sciences & Technology. Limited to two attempts.
IT 353: Information Defense Technologies. 3 credits. This course will examine and assess the role of information technology as a tool of warfare and civil defense. Topics will be discussed from both defensive and offensive perspectives and will include asset tracking, asymmetric warfare, network centric warfare, physical attacks, cyberterrorism, espionage, psyops, reconnaissance and surveillance, space assets, and applications of GPS and cryptographic technology. Students will research and write about the social, ethical, and political effects of such technology. Notes: For INFT and AIT majors, minors and certificates, and BAS cybersecurity concentration only. Offered by Info Sciences & Technology. Limited to two attempts.
STAT 362: Introduction to Computer Statistical Packages. 3 credits. Use of computer packages in statistical analysis of data. Topics include data entry, checking, and manipulation, and use of computer statistical packages for graphical procedures, basic descriptive and inferential procedures, and regression. Offered by Statistics. Limited to two attempts.
IT 343: IT Project Management. 3 credits. Provides essential strategies and procedures for planning, organizing, staffing, monitoring, and controlling design, development, and production of system to meet stated IT-related need in effective and efficient manner. Fulfills writing-intensive requirement for BS in information technology. Offered by Info Sciences & Technology. Limited to two attempts.
COMM 100: Public Speaking. 3 credits. Presents principles to develop effective presentations for public and professional settings while integrating appropriate technologies. Emphasizes analyzing audience; composing meaningful, coherent messages; conducting responsible research; developing effective arguments; and improving delivery skills to strengthen confidence and credibility. Offered by Communication. Limited to three attempts.
IT 105: IT Architecture Fundamentals. 3 credits. Introduces students to fundamental hardware and software concepts of information technology (IT) to understand the basics of modern computing environments. Students acquire a comprehensive understanding of a computer system's essential components, component interdependence, and binary functions, factoring in performance, data communication models, telecommunication basics, and information security. Recent trends and advancements in mobile computing, telecommunications, and IT infrastructures are discussed. Offered by Info Sciences & Technology. Limited to two attempts.
IT 332: Web Server Administration. 3 credits. Covers the installation, configuration, and administration of Web servers, FTP servers, and DNS servers. Additional topics include security setups, administration, and associated performance issues. Offered by Info Sciences & Technology. Limited to two attempts.
HAP 360: Introduction to Health Information Systems. 3 credits. An introduction to basic information management in health care service organizations. Provides an overview of health information systems for selected administrative functions and clinical care services, including electronic data interchange for billing and claims management, institutional approaches to ensuring data security and privacy, and information management and decision support for managers and clinicians. Offered by Health Administration & Policy. Limited to three attempts.
IT 324: Health Information Technology Fundamentals. 3 credits. Explores challenges in the development and implementation of information systems and informatics tools in healthcare environment. Discusses the importance and benefits of electronic health records (EHRs). Students learn about EHRs' creation, management, and evolution, and their use for clinical decision support. In addition health information security, privacy, federal laws, regulations and standards, and their impact on healthcare delivery are discussed. Offered by Info Sciences & Technology. Limited to two attempts.
IT 194: Review of Database Fundamentals. 1 credit. Provides an extensive understanding of database fundamentals. Topics include: database classifications, data models with extensive coverage of the relational model, entity-relationship and extended entity relationship models, normalization, advanced data modeling, and Structured Query Language (SQL) programming. Open only to students with transfer credit comparable to IT 214 who have not attempted IT 194 or IT 214. Offered by Info Sciences & Technology. Limited to two attempts.
IT 293: Applied IT: Junior Transition. 1 credit. Focuses on transition issues for sophomores and transfer students in Information Sciences and Technology programs. Assists sophomore and transfer students with choice of concentration, course selection, and career readiness. Offered by Info Sciences & Technology. Limited to two attempts.
IT 223: Information Security Fundamentals. 3 credits. Introduces concept of information security. Discusses need for organizational policy to define required services such as confidentiality, authentication, integrity, nonrepudiation, access control, and availability, and mechanisms to implement those services. Covers different types of security including physical security, computer security, and network security; common threats to and attacks against information systems, including accidental damage, identity theft, malicious software, and "spam"; and defensive measures. Notes: Students cannot receive credit for both IT 221 and IT 223. Offered by Info Sciences & Technology. Limited to two attempts.
IT 455: Wireless Communications and Networking. 3 credits. Covers fundamental principles underlying wireless data communications. Topics include wireless transmission basics, radio propagation issues, antennas, digital modulation, spread spectrum techniques and their applications, and popular standards: WiFi, WiMAX and Bluetooth. Also presents practical knowledge to enable the design, testing, deployment, debugging and commissioning of WiFi, WiMAX networks and point-to-point microwave systems. Discussions on cellular network technologies are also included. Offered by Info Sciences & Technology. Limited to two attempts.
IT 429: Security Accreditation of Information Systems. 3 credits. This course explains basic principles of performing FISMA certification and accreditation (C&A) of an IT System.  The course covers methodology for completing C&A, explains the role of the Certifier and the Information System Security Officer (ISSO), and gives students real world experience with IT Systems in the Federal Government. Offered by Info Sciences & Technology. Limited to two attempts.
IT 462: Applied Cyber Threat Analysis. 3 credits. Studies security policies, models, and mechanisms for secrecy, integrity, availability, and usage controls. Topics include models and mechanisms for mandatory, discretionary, and role-based access controls; authentication technologies; control and prevention of viruses and other rogue programs; common system vulnerabilities and countermeasures; privacy and security policies and risk analysis; intellectual property protection; and legal and social issues. Notes: For INFT and AIT majors, minors and certificates, and BAS cybersecurity concentration only. Offered by Info Sciences & Technology. Limited to two attempts.
MATH 113: Analytic Geometry and Calculus I. 4 credits. Functions, limits, the derivative, maximum and minimum problems, the integral, and transcendental functions. Offered by Mathematics. Limited to three attempts. Equivalent to MATH 115, MATH 124.
IT 493: Senior Design Project II. 4 credits. Students, in teams, complete projects demonstrating preparedness as an IT professional. This work includes ethical challenges, status reports and engineering notebooks evaluated during class. Teams members develop detailed designs, build solutions up to Beta, present final written reports and final verbal presentations before review panels of business leaders. Students must register for the section that continues their IT 492 section. Offered by Info Sciences & Technology. Limited to two attempts.
IT 109: Introduction to Computer Programming. 3 credits. This foundation course is designed to teach students problem-solving skills using procedural programming that is required for the Information Technology degree program. The course accomplishes the goals through hands-on experience in the lecture class as well as through computer laboratory work. Topics to be discussed include, but are not limited to: variables, conditionals, functions, strings, iteration, testing, storage types and files. Offered by Info Sciences & Technology. Limited to two attempts.
IT 106: Introduction to IT Problem Solving Using Computer Programming. 3 credits. Introduces techniques for developing solutions to business problems using procedural programming as an IT resource/tool. Students apply problem solving concepts by analyzing problems and constructing, testing, and implementing algorithms using pseudocode, desk checking, and procedural programming. Topics include: program flow, control structures, programming fundamentals, and integrating program modules into a cohesive solution. Offered by Info Sciences & Technology. Limited to two attempts.
MBUS 300: Accounting in a Global Economy. 3 credits. Focuses on using basic concepts of accounting and financial management to make investment, credit, and operating decisions for an organization. Emphasizes financial reports to aid planning and control of organizational activities. Notes: May not be taken for credit by School of Business majors. Students who have received credit for both ACCT 203 and FNAN 303 cannot also receive credit for MSOM 300 or MBUS 300. Offered by School of Business. Limited to three attempts.
IT 441: Network Servers and Infrastructures. 3 credits. Covers IP networking concepts and practices for IPv6 addressing, DHCP and DNS in IPv6 networks, secure communication over VPNs, VoIP architecture, Virtual Computing, Cloud Computing, MPLS, traffic monitoring and network connectivity between operating systems. Students learn the latest technologies of IP networks and understand application-level services used in the Internet. Lab sessions focus on installation of applications on virtual servers. Notes: Term project. Offered by Info Sciences & Technology. Limited to two attempts.
SYST 469: Human Computer Interaction. 3 credits. Covers principles of human-computer interaction, including information processing design, cognitive models, ergonomics, and design metaphors. Students learn to evaluate interface design in terms of effectiveness, efficiency, and cost. Notes: Students who receive credit for SYST 470 may not receive credit for this course. Offered by Systems Engr & Operations Rsch. Limited to two attempts.
IT 465: Peer-to-Peer Systems and Overlay Networks. 3 credits. Peer-to-Peer (P2P) systems and overlay networks have become popular over the years because they are a cost-effective and scalable content sharing solution. Fundamentals of P2P systems and overlay networks are introduced to validate it as a better option than the traditional client server architecture. Students learn the classifications of P2P systems and architectures; overlay network categories, and their benefits and disadvantages. Offered by Info Sciences & Technology. Limited to two attempts.
ISA 562: Information Security Theory and Practice. 3 credits. A technical introduction to the theory and practice of information security, which serves as the first security course for the MS-ISA degree, is required as a prerequisite for all subsequent ISA courses (at the 600 and 700 levels) and subsumes most topics covered by the CISSP examination. Also serves as an entry-level course available to non-ISA students, including MS-CS, MS-IS, and MS-SWE students. Offered by Computer Science. May not be repeated for credit.
SWE 619: Object-Oriented Software Specification and Construction. 3 credits. In-depth study of software construction using modern, object-oriented language with support for graphical user interfaces and complex data structures. Specifications, design patterns, and abstraction techniques, including procedural, data, iteration, type, and polymorphic. Information hiding, classes, objects, and inheritance. Exception handling, event-based systems, and concurrency. Offered by Computer Science. May not be repeated for credit.
CFRS 500: Introduction to Forensic Technology and Analysis. 3 credits. Presents an overview of technologies related to the digital forensics process. It will introduce software, analysis, operating systems, networking, and other aspects required as the base for forensic examiners. Not intended to be taken for credit by students in the MS CFRS/DFCA program. Offered by Electrical & Comp. Engineering. May not be repeated for credit.
COMM 101: Fundamentals of Communication. 3 credits. Presents principles to develop appropriate and effective communication strategies in one-to-one and small group communication settings. Emphasizes analyzing and assessing communication skills to create and sustain effective communication in personal and professional relationships. Offered by Communication. Limited to three attempts.
IT 102: Discrete Structures. 3 credits. Introduces ideas of high-level program design and discrete structures. This course focuses on problem-solving and includes an introduction to programming, Boolean algebra, symbolic logic, digital circuits, set theory, combinatorics, discrete probability, mathematical induction, recursion and a basic introduction to trigonometry. Offered by Info Sciences & Technology. Limited to two attempts.
CFRS 660: Network Forensics. 3 credits. Deals with the collection, preservation, and analysis of network-generated digital evidence such that the evidence can be successfully presented in a court of law (both civil and criminal). The relevant federal laws will be examined as well as private sector applications. The capture/intercept of digital evidence, the analysis of audit trails, the recording of running processes, and the reporting of such information will be examined. Offered by Electrical & Comp. Engineering. May not be repeated for credit. Equivalent to TCOM 660.
IT 357: Computer Crime, Forensics, and Auditing. 3 credits. Covers computer crime, relevant laws, agencies, and standards. Presents auditing, logging, forensics, and related software. Explores legal principles such as chain of evidence, electronic document discovery, eavesdropping, and entrapment. Students get hands-on experience with forensics tools. Notes: For INFT and AIT majors, minors and certificates, and BAS cybersecurity concentration only. Offered by Info Sciences & Technology. Limited to two attempts. Equivalent to CRIM 304.
IT 314: Database Programming. 3 credits. The course introduces students to the Oracle Developer application development utilities and tools and describes how to create and manipulate databases in Oracle database management system. The course provides an extensive overview of SQL and introduction to PL/SQL. Topics include data definition and manipulation languages, stored procedures, triggers, indexing techniques, and elementary query optimization. Offered by Info Sciences & Technology. Limited to two attempts.
IT 390: Rapid Development of Scalable Cloud Applications. 3 credits. Presents software engineering, programming techniques, platforms and tools necessary for rapid development of scalable applications including: cloud platforms; scalable data storage solutions; web applications development environments. The course will provide a general overview of such techniques but will concentrate on selected ones in each term. The students will work in small teams and must develop scalable prototypes during the course. Offered by Info Sciences & Technology. Limited to two attempts.
IT 410: Web Programming. 3 credits. This course covers layers of the n-tier architecture. Students will build web applications using available frameworks at each tier, such as Java Server Faces and Servlets for the UI tier, Web Services for the business tier and Java Database Connectivity for the persistence tier. Offered by Info Sciences & Technology. Limited to two attempts.
IT 467: Network Defense. 3 credits. Practices and procedures for defending business-class, heterogeneous networks against threats (including system failure, environmental events, human error) and attacks (including intrusion, malicious software, denial of service). Through practical lab sessions, students receive real-world experience designing networks, installing and configuring system components, detecting and recovering from problems and attacks, and gathering data to support prosecution of offenders and refinement of countermeasures. Offered by Info Sciences & Technology. Limited to two attempts.
IT 207: Applied IT Programming. 3 credits. Building on fundamentals of problem solving, logic and algorithm development, and procedural programming, this course further develops these skills while covering server side scripting languages and relational database connectivity. Students will use open source software tools to develop database-enabled web applications. Offered by Info Sciences & Technology. Limited to two attempts.
TCOM 500: Modern Telecommunications. 3 credits. Comprehensive overview of telecommunications, including current status and future directions. Topics include review of evolution of telecommunications; voice and data services; basics of signals and noise, digital transmission, network architecture and protocols; local area, metropolitan and wide area networks and narrow band ISDN; asynchronous transfer mode and broadband ISDN; and satellite systems, optical communications, cellular radio, personal communication systems, and multimedia services. Examples of real-life networks illustrate basic concepts and offer further insight. Offered by Electrical & Comp. Engineering. May not be repeated for credit.
AIT 524: Database Management Systems. 3 credits. Relational database management systems. Covers logical and physical database design; query languages and database programming; and examines commercial systems. Computing lab.  Notes: This course does not count towards MS programs offered in the Computer Science Department and cannot be used to satisfy course requirements for PhD IT students. Offered by Info Sciences & Technology. May not be repeated for credit.
AIT 512: Algorithms and Data Structures Essentials. 3 credits. Introduces analysis of algorithms and basic data structures assuming basic programming knowledge. Topics include: collections, sorting, searching, graphs, strings, B-Trees, and analysis of algorithms. Offered by Info Sciences & Technology. May not be repeated for credit.
IT 369: Data and Application Security. 3 credits. Introduces concept of data and application security. Discuss challenges of database, and application and industrial control system security. Offered by Info Sciences & Technology. Limited to two attempts.
IT 104: Introduction to Computing. 3 credits. This course, using both lecture and laboratory practice, introduces students to basic computer concepts in hardware, software, networking, computer security, programming, database, e-commerce, decision support systems, and current developments in 3-D printing, virtualization, and Siri-like systems. Additional lectures examine social, legal, ethical issues including privacy, intellectual property, health concerns, green computing, and accessibility. Students learn techniques to search, evaluate, validate, and cite information found online. Hands-on lab includes spreadsheets, databases, presentation, HTML 5, CSS, cybersecurity, blogs, wiki, and mobile app development.  Offered by Info Sciences & Technology. Limited to two attempts.
TCOM 530: Data Communications Fundamentals. 3 credits. Covers the foundations of modern data communications. The lower layers of the OSI reference model are discussed with an emphasis on the data link and the network layers. Concepts are illustrated by drawing examples from important data networks ranging from local are networks to the Internet. Offered by Electrical & Comp. Engineering. May not be repeated for credit.
IT 304: IT in the Global Economy. 3 credits. Explores how IT changed nature of society and contributed to evolution of global economy. Examines changing nature of work, education, and communication, and ethical issues such as intellectual property rights, computer-related crime, privacy concerns, and public policy issues. Offered by Info Sciences & Technology. Limited to two attempts. Equivalent to CS 306.
IT 492: Senior Design Project I. 3 credits. Students use information technology as a tool to redesign business processes so the enterprise can achieve its objectives. Student teams analyze the business processes of real organizations, quantify the negative impact caused by current process challenges, then develop and present a compelling Business Case for Change. Students develop skills critical for preparing and delivering effective verbal briefings and presentations. Notes: Restricted to AIT/INFT majors. Offered by Info Sciences & Technology. Limited to two attempts.
IT 352: Security Administration of Linux Systems. 3 credits. Provides theoretical foundation and practical experience installing, configuring, and maintaining Linux systems with an emphasis on best practices for security. Students develop a heterogeneous suite of clients and servers with firewalls and other networking components. Offered by Info Sciences & Technology. Limited to two attempts.
IT 322: Health Data Challenges. 3 credits. Covers methodology and tools used to work with health data structures supporting organizations' needs for reliable data that are captured, stored, processed, integrated, and prepared for further querying, decision making, data mining and knowledge discovery for a variety of clinical and organizational purposes. Data security and privacy, data standards, data interoperability, health information exchange, and big data analytics are discussed. Offered by Info Sciences & Technology. Limited to two attempts. Equivalent to BENG 322.
IT 415: Information Visualization. 3 credits. Provides an overview of information visualization applications in intelligence analysis, decision support systems, and network monitoring. Covers human factors, human interface with information, and current and future trends in information visualization. Students also learn to develop a rudimentary visualization application. Offered by Info Sciences & Technology. Limited to two attempts.
INFS 612: Principles and Practices of Communication Networks. 3 credits. Introduces principles of computer networks and applications to Internet. Discusses details of layering, protocols, performance, resource allocation, management, security and other contemporary issues related to networks. Examples of course material are protocols such as HTTP(S), DNS, TCP/IP, RSVP, SNMP, algorithms such as Dijkstra's link state routing; and security measures such as firewalls and encryption, the principles behind them and analysis of performance. Notes: No substitutions can be made for this class. Offered by Computer Science. May not be repeated for credit.
IT 206: Object Oriented Techniques for IT Problem Solving. 3 credits. Introduces techniques for developing solutions to business problems using object-oriented programming as an IT resource/tool. Students apply problem solving concepts by analyzing problems and constructing, testing, and implementing object-oriented solutions using object-oriented analysis and design, data modeling, and object-oriented programming fundamentals. Topics include: Unified Modeling Language (UML), classes, inheritance, polymorphism, and exception handling. Notes: Students cannot receive credit for both IT 108 and IT 206. Offered by Info Sciences & Technology. Limited to two attempts.
ECE 301: Digital Electronics. 3 credits. Introduces digital systems, circuits, and computers. Topics include binary systems and codes, digital logic gates and circuits, microelectronics and integrated circuits, coding and multiplexing, multivibrators, shift registers, counters, A/D converters, and elementary computer architecture. Notes: Not intended for those majoring in electrical or computer engineering. Offered by Electrical & Comp. Engineering. Limited to two attempts. Equivalent to CYSE 301.
IT 431: Web II: Advanced Web Development. 3 credits. Focuses on database-driven web application development and web presentation using server-side coding and advanced techniques. Additional topics include AJAX, web server configuration and web services. Offered by Info Sciences & Technology. Limited to two attempts.
IT 445: Advanced Networking Principles. 3 credits. This course focuses on Layer 2 and 3 of the OSI model and WAN technologies. Frame Relay and ISDN, complex router configurations of Variable Length Subnet Masking (VLSM), Classless Inter-Domain Routing (CIDR), Network Address Translation (NAT), Dynamic Host Configuration Protocol (DHCP), and study of Network Management Systems available for Data Communications Networks. Layer 2 involves Ethernet-switching components, including detailed hands-on configuration covering all aspects of switches using the command-line interface method. Offered by Info Sciences & Technology. Limited to two attempts.
IT 342: Operating Systems Fundamentals. 3 credits. Practices and procedures for installing and configuring modern operating systems, including user accounts, file, print, and terminal servers, mobile computing, and disaster recovery. Through practical lab sessions, students receive real-world experiences with multiple operating systems. Offered by Info Sciences & Technology. Limited to two attempts.
IT 193: Review of Multimedia and Web Design. 1 credit. Provides an extensive understanding of concepts and techniques for designing and developing attractive and accessible websites with multimedia components. Introduces and discusses technological, aesthetic, and human factors. Open only to students with transfer credit comparable to IT 213 who have not attempted IT 193 or IT 213. Offered by Info Sciences & Technology. Limited to three attempts.
IT 488: Fundamentals of Satellite Communications. 3 credits. Provides a comprehensive overview of the principles of satellite communications systems. Major topics include satellite orbits and constellations, the space segment, antennas, modulation, coding, satellite access methods and link analysis. Also covers satellite applications, with emphasis on recent developments in the satellite communications field. Hands-on design experience is gained through the use of readily available vendor software systems. Offered by Info Sciences & Technology. Limited to two attempts.
IT 466: Foundations of Cryptography and Security. 3 credits. Detailed study of certain symmetric and asymmetric cryptographic schemes; analysis of network data (including "packet sniffing"); security at different network layers (including IPSec, SSL/TLS and Kerberos); and secure e-commerce. Teaches principles of designing and testing secure networks, including use of network partitioning, firewalls, intrusion detection systems, and vulnerability assessment tools. Offered by Info Sciences & Technology. Limited to two attempts.
IT 216: Systems Analysis and Design. 3 credits. Students survey and apply techniques in analyzing and modeling information systems. Requirements are derived in various domains and abstracted at conceptual, logical, and physical levels. Process, data, and state modeling are applied through a project that follows a systems development lifecycle. Object modeling is explored and contrasted with data and process modeling. Individual and group modeling assignments are required. Offered by Info Sciences & Technology. Limited to two attempts.
CS 550: Database Systems. 3 credits. An introduction to database management with focus on architecting databases and using them in applications. Topics to be covered include: data modeling with the Entity-Relationship model, the relational data model and its formal languages, SQL, the theory of database design, object databases, XML and Web data. Offered by Computer Science. May not be repeated for credit.
IT 300: Modern Telecommunications. 3 credits. Comprehensive overview of the fundamental principles of telecommunications, including current status and future directions of the public switched telephone network, cellular networks, satellite networks, and computer networks. Offered by Info Sciences & Technology. Limited to two attempts.
TCOM 535: The TCP/IP Suite of Internet Protocols. 3 credits. Provides an in-depth treatment of the protocols that define the Internet. Topics include: IPv4 addressing and subnetting; CIDR; Data Link Protocols: ARP, RARP; Network Protocols: IP, ICMP; IP Routing Protocols: RIP, OSPF, IS-IS, BGP; Transport Protocols: TCP, UDP; TCP Features: Windowing, Congestion Control, Advanced Protocols: MPLS; Internet Security: IPSec, SSL. Offered by Electrical & Comp. Engineering. May be repeated within the degree.
IT 484: Voice Communications Technologies. 3 credits. Examines current and emerging technologies for transmission of voice signals over telecommunications systems. Highlights significant differences between the requirements for voice and other forms of data. Topics provide a balance between traditional voice technologies and those that use data networks. Real-world implementations are analyzed to determine reliability, quality, and cost effectiveness. Includes lab experiments with analog and digital technologies. Offered by Info Sciences & Technology. Limited to two attempts.
IT 209: Introduction to Object Oriented Programming. 3 credits. Introduction to Object Oriented Programming (OOP) is intended for students who want to advance their basic programming skill to the next level by learning the OO programming paradigm. This course is designed to teach the benefits of OOP, including faster development, code reusability and less code maintenance. The course accomplishes the goals through hands-on experience with a number of coding assignments. Topics include, but are not limited to: OOP design, objects, class, methods, inheritance, testing, debugging, graphical user interfaces (GUIs). Offered by Info Sciences & Technology. Limited to two attempts.
IT 479: Digital Media and Web Design Capstone. 3 credits. Student team-based experience grounded in the work of the preceding courses in the digital media and web design minor. Each individual student will produce a portfolio of digital media and web-design related products and features that demonstrate core competencies in coding, design, content, and accessibility. Students will work in cross-disciplinary teams to carry out a client-based web design project, the process and outcomes of which will also be represented in the individual portfolio. Offered by Info Sciences & Technology. Limited to two attempts. Equivalent to ENGH 479.
MATH 125: Discrete Mathematics I. 3 credits. Introduces ideas of discrete mathematics and combinatorial proof techniques including mathematical induction, sets, graphs, trees, recursion, and enumeration. Offered by Mathematics. Limited to three attempts.
IT 331: Web I: Web Development. 3 credits. Introduces the principles and techniques necessary for successful client-side web development. Topics such as HTML5, Cascading Style Sheets, JavaScript, DOM, XML, AJAX, and jQuery are presented. Students will learn to develop attractive and interactive web pages and applications and use client-side web-scripting languages to solve problems both with a text editor and more powerful WYSIWYG HTML editors. Offered by Info Sciences & Technology. Limited to two attempts.
INFS 622: Information Systems Analysis and Design. 3 credits. Integration of computing technologies, systems analysis, system design practices, and management criteria in the design of large-scale information management and decision-support systems. Includes cases, computing lab. Offered by Computer Science. May not be repeated for credit.
IT 341: Data Communications and Network Principles. 3 credits. Focuses on primary aspects of data communications and networking. Open Systems Interconnection (OSI) and Internet models; Layer 1 interfaces and cabling configurations; IP network addressing, network design, router and port configurations; security protocols; static routing, RIPv2, and OSPF configurations; TCP, UDP, data reliability, and error correction methods; Telnet, FTP, TFTP, HTTP, SMTP, POP, and DNS protocols. Notes: This course is 50 percent lab work of configuration of routers and network design, implementation, and testing. Offered by Info Sciences & Technology. Limited to two attempts.
TCOM 631: Voice Over IP. 3 credits. Presents the protocols used for transporting voice over Packet Switched Network. Topics include: Signaling basics; Topics; VoIP Network Scenarios and Connection Strategies; Communication Protocols: RTP, RTCP; VoIP Decomposition; Performance and quality metrics for VoIP; VoIP Signaling Protocols: H.323, SIP, SS7; Softswitches: architecture, functionality, application; VOIP-PSTN integration and migration; VOIP Quality and QoS; VoIP Security: Vulnerabilities, remedies; NextGen VoIP: VoIP Mobility, Equipment, Voice XML, IMS; Future of VoIP. Offered by Electrical & Comp. Engineering. May not be repeated for credit.
MATH 108: Introductory Calculus with Business Applications. 3 credits. Functions, limits, derivative, and integral. Applications of differentiation and integration. Notes: Call Mathematical Sciences Department at 703-993-1460 for details. Students who have received credit for MATH 113 or 114 may not receive credit for this course. Offered by Mathematics. Limited to three attempts.
IT 335: Web Development using Content Management Systems. 3 credits. Through lectures and hands-on lab experience, presents web development techniques using content management systems (e.g. Joomla, Dot net nuke). Introduces characteristics of various types of websites (corporate portals, intranets and extranets; online magazines, newspapers, and publications; e-commerce and online reservations, government applications, small business websites). Presents methods, languages, tools related to web content management systems from an applied perspective. Offered by Info Sciences & Technology. Limited to two attempts.
IT 306: Data Structures and Algorithms in Java. 3 credits. Fundamentals of data structures and analysis of algorithms. Large programs written in a modern, high-level programming language. Stresses abstraction, modular design, code reuse, and correctness. Offered by Info Sciences & Technology. Limited to two attempts.
IT 315: Mobile Development. 3 credits. Studies business-oriented applications for popular mobile platforms including Blackberry, Android and Apple. Provides overview of mobile platforms and devices including evaluation, uses, design and development of applications. Offered by Info Sciences & Technology. Limited to two attempts.
IT 309: Data Structures and Algorithms in Python. 3 credits. Fundamentals of data structures and analysis of algorithms. Large programs written in a modern, high-level programming language. Stresses abstraction, modular design, code reuse, and correctness. Offered by Info Sciences & Technology. Limited to two attempts.
IT 409: Python Web Programming. 3 credits. This course covers layers of the n-tier architecture. It teaches students how to use Python and Django framework for building web sites. It starts with developing a web application with Python and adding additional features to that application. These features include, persisting data to an RDBMS systems such as Postgres SQL, securing the developed applications including user authentication, logging and debugging, and testing. Finally, we will explore developing RESTFul web services with Python/Django and integrating them with a Python web application. Offered by Info Sciences & Technology. Limited to two attempts.
IT 366: Network Security. 3 credits. Examines information security services and mechanisms in network context. Topics include symmetric and asymmetric cryptography; message authentication codes, hash functions and digital signatures; digital certificates and public key infrastructure; access control including hardware and biometrics; intrusion detection; and securing network-enabled applications including e-mail and web browsing. Offered by Info Sciences & Technology. Limited to two attempts.
AIT 542: Fundamentals of Computing Platforms. 3 credits. Contemporary information systems are platforms inextricably combining operating systems and networks. This graduate course provides an overview of OS and networking elements of information systems, and examines the particular issues relating to the range of platforms, from handheld mobile devices to cloud and supercomputer systems. Offered by Info Sciences & Technology. May not be repeated for credit.
IT 414: Database Administration. 3 credits. Explores advanced concepts of database administration using enterprise-level database management system. Topics include: backup, recovery, corruption, automatic management, resource management, job scheduling, space management, memory management, storage management, diagnosis and corresponding tools. Offered by Info Sciences & Technology. Limited to two attempts.
Composition I A review of grammar, introduction to research methods, and practice in writing exposition using reading to provide ideas and patterns.
Principles of Environmental Science This course is designed to bring the student to a basic but informed awareness of and responsible behavior toward our environment and the role of the human race therein. The content will include a study of the philosophical and scientific basis for the study of ecosystems and the environment, the nature of ecosystems, the techniques used to study the environment, the origin and development of current environmental problems, the interdisciplinary nature of environmental studies, the processes of critical thinking and problem solving, and the moral and ethical implications of environmentally-mandated decisions.
Calculus for Business and Economics An introduction to the concepts of differentiation and integration. Emphasis will be placed on applications of calculus in business, economics, accounting, social sciences, and life sciences.
Orientation to the University A course designed to provide information and enhance skills that will enable students to take responsibility for a successful transition to college. The course will expose students to college resources and requirements and promote the development of practical skills for college success.
Orientation to Computing, Information, and Technology An overview of hardware, software, technology, and information systems concepts and terms as well as ethics and opportunities within the three fields.
Computer and Information Science Lab An introduction to the computing resources of the department and the university.
Composition II Composition II
Survey of American History Survey of American History. An overview of American history from the pre-colonial period to the present.
Principles of Economics I Macroeconomic analysis of output, income, employment, price level, and business fluctuations, including the monetary system, fiscal and monetary policy, and international economics.
Web Publishing I This course focuses on how to develop web pages for display on the World Wide Web. Topics covered include standards-based coding, hyperlinks, images, tables, forms, design issues, and other topics as appropriate. Students will learn how to publish a web site to a server and maintain the site.
Foundations of Computer Programming I An introduction to the foundational concepts of programming using structured programming concepts of C++ as an implementation tool. Programming principles covered in lecture are practiced in lab. Major topics include sequential, selection, and iterative control structures, functions, parameter passing, and file processing. Arrays are introduced as a structured data type.
Technical Writing Practice in composing abstracts, instructions, visuals, proposals, questionnaires, letters, memos, and a variety of informal and formal reports.
Foundations of Computer Programming II Topics include multi-dimensional arrays, functions, string processing, classes, and records. Students are introduced to object oriented programming using C++.
Web Publishing II Students are introduced to multimedia design concepts and software. Multimedia applications and design tools are used to create and maintain multimedia products such as dynamic graphics, animation, interactive websites, and video.
Computer Architecture and Networks Laboratory Computer Architecture and Networks Laboratory
Computer Networks and Architecture This course covers how to install and administer a local area network and connect it to the Internet. Topics include network architecture, hardware, and software, along with popular protocols for establishing connectivity for sharing resources such as printers and files. Participation in a designated lab outside of the regularly scheduled meeting time is required.
Discrete Structures for Technical Majors Fundamental mathematical concepts related to computing, including logic and proof techniques; sets, sequences, relations, and functions; combinatorics; algebraic structures and Boolean algebra ; trees and graphs.
Business Statistics This course reviews basic descriptive statistics and probability distributions. The course introduces inferential statistics and their application to business problems. Topics covered include data collection, the t-tests for one sample, matched-pairs, and independent groups, the F-test for one and two-way analysis of variance, the z-test for one and two proportions, the chi-square tests for independence and goodness of fit, the t- and F- tests as they relate to simple and multiple regression, control charts, time-series analysis, the visual display of quantitative information, and the reporting of results. Problems are addressed using technology such as statistical calculators and advanced statistical software.
Data Structures This course involves a study of abstract data structures and the implementation of these abstract concepts as computer algorithms.
Survey of Operating Systems Several Operating Systems (such as Unix, Microsoft, IBM) will be examined with regard to the user's view of the system. This view includes the types of files supported, the kinds of operations that can be performed on files (from the shell and from programs), the mechanisms for starting and controlling processes (i.e. running programs), and some basic utility programs that a beginning or intermediate level administrator would need to use.
Introduction to Computer Forensics and Security An introduction to the fundamentals of computer forensic technology. The course emphasizes techniques for identifying and minimizing the threats to, and vulnerabilities of computer systems. These techniques include methods and tools for tracking suspicious activity, for recovering and preserving digital media, and for doing post-mortem analysis.
Microcomputer Applications This course provides hands-on experience with several software applications. Topics include intermediate and advanced word processing; spreadsheet design, formulas, and charts; database design principles and implementation; presentation design and techniques; and integration among these applications.
Experiencing Art This course is designed to provide a background in art and the related processes so that a student may develop powers of observation and thereby respond to a work of art.
Business and Professional Speaking An introduction to a variety of communication skills to help achieve effectiveness on the job including skill sets such as verbal and listening skills, oral presentation techniques, small group problem solving/leadership, interviewing, and organizational communication.
Database Design and Implementation This course focuses on the design and implementation of relational database systems. Fundamental principles of databases such as relational model, conceptual design and normalization are covered. Students will also gain experience in database and query implementation using a DBMS and SQL.
Systems Software and Architecture This course covers the implementation of production operating systems, the fundamentals of digital logic, and machine architecture.
Server Administration The tools and techniques needed to administer a server. Installation, configuration, and administration of a variety of servers on different platforms.
Microbiology for Health Sciences Microbiological concepts, including overviews of bacteria, viruses, fungi, protozoa, prions, and viroid and how they interact with humans. Designed to serve students in health-related majors other than biology.
Scripting Languages This course introduces the student to script writing in several languages. The primary categories of scripts will be UNIX shell, text processing, and Perl. CGI Scripts, using Perl, will be introduced.
Human Factors in Information Technology A study of the major factors involved in Human-Computer Interaction. A system- oriented, multi-disciplinary approach to understanding the human considerations in the design, testing, implementation, and administration of computer-based systems and information technology.
Data Communications and Networking Lab Data Communications and Networking Lab
Data Communications and Networks Basic elements and functional aspects of the hardware and software required to establish and control data communications in a stand-alone or network environment. Topics include communication protocols, media, network topologies, and system support software.
American Studies An exploration of American culture through study of significant ideas, social issues and literary texts.
Systems Analysis and Design I The application of concepts, tools, procedures, and techniques involved in the development of information systems. Emphasis is placed on the systems approach to problem solving, user involvement, the management of quality, project control, and teamwork.
Database Administration This course develops a comprehensive foundation in the planning, implementation and execution of database management policies and procedures. Topics include installation, storage and replication implementation, security management, indexing and performance tuning, and backup and recovery.
Heterogeneous Networks Lab Heterogeneous Networks Lab
Heterogeneous Networks The student will design, develop, implement and manage numerous heterogeneous networking operating system environments. Required policies and procedures are examined and developed. Networking tools required for the development of a seamless heterogeneous networking environment are studied and applied.
Data Mining Introduction to knowledge discovery from large databases: terminology, algorithms, methodologies, software, limitations, implications, and current trends.
Implications of Technology on Society This course explores ethical issues faced by members of a complex technological society and by professionals in a technology-related field. Topics covered include professional ethics, ethical decision making, privacy issues, intellectual property, and technology issues relating to software development, productivity, and computer crime. Extensive research on current issues is expected.
Systems Analysis and Design II Students will research, analyze, design, implement, test and document a complete system. Students, working as a team, will analyze, plan, implement, document, and present a complete system in a real world environment.
IT Project Administration This course provides a thorough introduction to the art and science of Project Management, as applied in the domain of information technology. Theories, best practices, and tools of project management are studied in relation to the completion of a successful project life cycle.
App Development Development of native and web applications for mobile devices with an emphasis on security.
English Composition English Composition
Research Writing Research Writing
Public Speaking Public Speaking
Introduction to the Humanities Introduction to the Humanities
Introduction to Logic Introduction to Logic
Human Biology Human Biology
College Algebra Learners in this course evaluate and perform linear, exponential, logarithmic, and other mathematical functions that include algebraic, graphic, and numeric properties. Learners then apply these concepts to the social and natural sciences, business, and everyday life.
Microeconomics Microeconomics
Discrete Mathematics This course presents an overview of mathematical analysis techniques. Learners apply number logic and set theory, functions and sequences, relations equivalence, partial order, digraphs, recurrence relations, counting techniques, logic and techniques of proof, graphs, and algorithms to the fields of business and information technology.
Information Technology Concepts and Practices Learners in this course use fundamental terminology, concept analysis, and practical knowledge of the components of computing systems to develop their understanding of the information technology field. Throughout the course, learners also build, demonstrate, and apply skills needed for professional communication.
Introduction to Database Systems This course is an introduction to the fundamental concepts of databases and database management systems (DBMS). Learners demonstrate vocabulary, component requirements, sorting and querying, and maintenance of simple databases using the fundamentals of database manipulation. Learners also apply Structured Query Language (SQL) and relational database management systems (RDBMS).
Introduction to Programming with Java This course introduces learners to the programming discipline and prepares them to serve as Java programmers. Learners study and apply the fundamentals of the Java programming language such as data types, variables, expressions, statements, and methods. Learners also examine and practice the Java-object-oriented features of classes and objects. The course offers numerous opportunities for analyzing, designing, coding, testing, debugging, and evaluating Java programs in an authentic Java development environment.
Introduction to Network Technology This course introduces learners to the key concepts underlying Local Area Network (LAN), Metropolitan Area Network (MAN), and Wide Area Network (WAN). Learners examine the layered architecture of the network protocol stack, including the OSI and the TCP/IP models, and apply the principles of designing networks and implementing network protocols. Learners also apply topics of network topologies, cloud computing, networking devices, cabling, and basic network security.
Ethics for the Information Technology Professional Learners in this course identify and apply their knowledge of inherent ethical concerns in the information technology profession to cultural and human interaction in global and domestic issues. Learners also show evidence of their understanding of ethical codes related to web technologies, intellectual property, and cybercrime.
Introduction to Web Development This course focuses on the development of fundamental web design and development skills. Learners create web pages using HTML5 markup language and apply contemporary design principles to create a W3C compliant website. Learners format the page layout, structure, and visual design elements using CSS3, with emphasis placed on effective coding, visual design, and user experience.
Introduction to JavaScript This course introduces JavaScript for interactive web pages. Learners in this course cover the JavaScript scripting language essentials, including flow control, form validation, animation, and Document Object Model (DOM) manipulation. Learners develop client-side, platform independent functionality using JavaScript to enhance user experience with HTML5 and CSS3. This course provides a foundation for other web technologies such as jQuery and AJAX.
Business Goals for the Information Technology Professional This course focuses on core enterprise organizations, business processes, and information technology infrastructures. Learners display their understanding of the value of information technology in achieving organizational maturity. Learners in this course apply their knowledge of the relationship that exists between an enterprise organizations business and information technology goals with operational models.
User Experience and Interaction Design In this course, learners explore the boundary between humans and technology with a focus on the human factors that influence the design of effective interfaces and engaging user experiences. Learners analyze designs for enterprise, mobile, and web interactive environments. Learners also define user characteristics, design for accessibility, and appraise usability.
Hardware and Operating Systems In this course, learners demonstrate their knowledge of hardware and operating systems, focusing on peripherals and file management. Learners use modern operating systems, including Windows, Linux and MacOS to demonstrate their skill with hardware and operating systems.
Systems Administration This course provides the opportunity for learners to acquire the foundational skills and knowledge required of a systems administrator. Learners employ tools and procedures to install, configure, administer, troubleshoot, and maintain modern computer systems.
Software Architecture In this course, learners demonstrate knowledge and skills related to the fundamentals of software engineering and architecture. During a course-long project, learners create a Software Development Plan (SDP) to use as a foundation for future software development projects within an organization. Other topics include software process models, project definition, project organization, validation plan and version control.
Intermediate Java Programming This course focuses on beyond basic features and techniques of the Java programming language. Learners study and practice advanced object-oriented programming concepts like inheritance, polymorphism, interfaces, and abstract classes. Learners also cover programming Graphical User Interface (GUI) applications with Java and the Java rich library of data structures like lists, stacks, and queues. Learners apply these features and techniques to develop applications of moderate complexity.
Network Architecture Learners in this course demonstrate their knowledge and skills with the fundamentals of network architecture. Learners apply knowledge of network characteristics and network topologies to develop a scope document for a proposed network architecture.
Information Security Concepts for the Information Technology Professional Learners in this course demonstrate their knowledge of information security fundamentals. Learners apply their understanding of the concepts of confidentiality, integrity, and availability to the basics of access control and network security measures.
Principles of Project Management In this course, learners are introduced to the fundamental basics of project management and gain a broad overview of project management standards and their applicability to both business and IT projects. This course emphasizes management theories, concepts, tools and techniques defined by the Project Management Institute (PMI) including the Process Groups and Knowledge Areas. This course also introduces other project management methodologies and frameworks, including Agile (Scrum, Lean, DSDM and XP), PRINCE2, Waterfall, and Six Sigma. Finally, learners study project politics and ethics, collaboration and team building, and leadership.
Process Groups and Knowledge Areas in Project Management This course covers the project life cycle and project management processes. This includes initiating, planning, executing, monitoring and control, and closing. Learners analyze the relationship of the process groups to the Project Management Institute (PMI) knowledge areas and develop the documents and deliverables required for each stage of the project life cycle
Integration and Scope Management In this course, learners cover integration management and scope management knowledge areas. Learners identify and examine the processes, tools, and techniques used to integrate activities from execution to project completion, and manage the interdependencies among the project management knowledge areas. Learners create the scope management plan component of the project management plan and emphasize a system solutions approach for gathering and defining business requirements and leveraging project change management for controlling project scope. / Scheduling, Cost, and Quality Management This course focuses on project scheduling and cost and quality management in a business or information technology (IT) project context. Learners study project scheduling, costs and quality management processes, including quality planning, quality assurance, and quality control. Learners also monitor project results to evaluate compliance with schedule, costs and quality standards and gain an understanding of the steps involved in planning, performing, and controlling a business or IT project. Learners are introduced to a variety of scheduling, cost and quality tools that can be used independently or conjunctively.
Human Resources and Motivation Management In this course, learners sample strategies for improving creativity, teamwork, and job satisfaction within a project team by creating and developing a project and recruiting team members. Learners study the theories on individual motivation and how it fits in the organizational structure. Learners examine the strengths and weaknesses of organizational development supporting project team member development to gain knowledge of how to effectively motivate project team members. Learners also gain understanding about virtual teams, how to effectively manage them, and evaluate the link between personality traits and resolving team conflicts and how to effectively communicate with your team to manage change.
Communication and Stakeholder Management Learners in this course focus on project communication and stakeholder management knowledge areas. Learners cover the processes, tools, and techniques used to manage project communications and stakeholders across project management process groups and emphasize executive project sponsorship as a strategic tool for project success. Learners also acquire skills in strategic business management and leadership: customer relationship and satisfaction, operational functions, conflict management, negotiation, listening, problem solving, and team building
Risk Management in Project Management Learners in this course focus on project risk management and examine the processes, tools and techniques used to identify, analyze, prioritize, respond, and control risk on a project. This course emphasizes building a risk management process that can be standardized. Learners also acquire and demonstrate business management and leadership skills such as planning, environmental awareness and conditions, benefits management, brainstorming, listening, negotiation, problem solving, and team building.
Procurement Management in Project Management In this course, learners examine procurement management and investigate the various types of contracts, their terms and conditions, and execution. Learners develop contract specifications, find potential sources, and evaluate bids. Finally, learners examine ethical standards and legal requirements in procurement within the global market.
Agile Project Management This course introduces the concepts of Agile Project Management (APM). Learners gain an understanding of APMs objectives, which are, in part, to deliver customer value earlier in repeated iterations, adapt to changes in a more flexible and timely manner to ultimately gain a result of higher customer satisfaction, and increased team morale, collaboration, and ownership. Learners apply their skills and knowledge to a scenario that requires the development of an APM-based project plan
Information Technology Capstone Project Information Technology Capstone Project

College Algebra Includes algebraic operations, equations and inequalities, functions and their graphs, solution of polynomial, exponential and logarithmic functions and linear systems of equations.
ENTERPRISE SYSTEMS ARCHITECTURE Presents design, management and administration of simple to complex network topologies. Introduces Internet connectivity and protocols supporting networked applications over a distributed network and their relationship with end-users. Examines the concepts of user content, applications, services, and infrastructure.
NETWORK INFRASTRUCTURE Introduces the foundations of network infrastructures and emerging network technologies. Covers OSI model in depth, including TCP/IP. Investigates the standards, design, architecture, and operation of LAN, WAN and telecommunications services. Introduces basic switching and routing concepts.
FOUNDATIONS OF CYBER SECURITY Introduces the principles and practices of information security including security models, internal and external security threats, and attacks. Topics include cryptography, network, mobile, host, applications, data, access control, and operational security.
FUNDAMENTALS OF SECURITY MANAGEMENT Examines security management, risk analysis, disaster recovery, business continuity planning, and information security legal issues. Topics include planning for security, security technologies, risk mitigation, vulnerability assessment, and security laws and regulations.
ETHICS FOR THE INFORMATION TECHNOLOGY PROFESSIONAL Focuses on ethical problems that arise in the Information Technology world. Explores the areas of INFORMATION TECHNOLOGY crime, privacy, intellectual property, software development, and employer/employee issues. Introduces the codes of ethics for various INFORMATION TECHNOLOGY professional associations and organizations.
SYSTEMS ANALYSIS AND DESIGN Studies the analysis and design of computer based information systems. Considers transformation processes and comprehensive design. Includes advanced technology, emphasizing expert and knowledge-based systems. Considers human resources, communications and computers in a systems framework.
Introduction to Statistics Presents standard topics in introductory statistics for students whose major is not mathematics. Topics include descriptive statistic, probability distributions, estimations, hypothesis testing, linear regression and correlation, and other topics.
INTRODUCTION TO PROGRAMMING Entrylevel course in which students practice software development using elementary selection, looping, method, string, array, and object constructs implemented in a modern programming language.
DATA STRUCTURES Studies structures for representing data and continued practice with software development. Uses algorithms to process these structures, including linked list, stack, queue, hash table, and tree data structures, along with various searching and sorting algorithms.
WEB AND DATABASE APPLICATIONS Introduces web-based multi-tiered distributed application development. Topics include using markup and scripting languages in the Presentation tier, services in the (web and business) Logic tier, and a relational database in the Data tier.
HUMAN COMPUTER INTERACTION Investigates and analyzes user-centered methodologies in the development, evaluation, and deployment of INFORMATION TECHNOLOGY applications and systems. Emphasizes HCI areas such as user and task analysis,  human factors, ergonomics, accessibility standards, and cognitive psychology
CYBER FORENSICS Introduces the principles and practices of digital forensics including digital investigations, data and file recovery methods, and digital forensics analysis and invalidation. Topics include data acquisition, digital forensics tools, virtual machines, network, mobile device, and cloud forensics
SYSTEMS ADMINISTRATION Introduces operating systems concepts and system administration tasks, including software installation, system configuration, and managing user accounts. Emphasizes server administration and management, user and group management, backup, security, resource, and automation management
INFORMATION TECHNOLOGY AUDIT AND RISK MANAGEMENT Investigates the principles of information systems audit, INFORMATION TECHNOLOGY audit tools, audit procedures to help in detection and prevention of security breaches and fraud. Examines the solutions that can be used to prevent information loss or costly business interruptions, the role of information technology governance in business organizations, reporting requirements, and industry standards for INFORMATION TECHNOLOGY Governance
MANAGEMENT OF ENTERPRISE NETWORKS Explores datacenter support and management requiring the integration of servers, applications and data storage with business operations and goals. Examines the impact of ethical, governance and legal concerns on business operations.
SENIOR CAPSTONE Provides the culminating experience of the major, focusing on integration and application of theory
DATABASE MANAGEMENT Introduces core concepts in data management. Students identify organizational information requirements, convert conceptual data models into relational data models, apply normalization techniques, and utilize an Oracle relational database management system in a virtual lab environment
PROJECT MANAGEMENT Provides a foundational and practical knowledge of project management principles. Identifies tools and processes for managing projects using both Waterfall and Agile methodologies
WIRELESS NETWORKS This course examines wireless technologies used in infrared, spread spectrum, microwave, and cellular systems. Discuss integration of WLANs, satellite communications and cellular systems in an organization. Includes protocols, security practices and applications used on wireless technologies
ETHICAL HACKING AND DEFENSE Explores security threats and vulnerabilities that face computer network engineers by using penetration testing techniques. Examines requirements for a formal hacking lab and discusses ethical boundaries between white and black hat hacking.
CYBER CRIME AND INFORMATION TECHNOLOGY COMPLIANCE Examines societal, ethical, and legal issues involved in information assurance as implemented through ethics and laws. Analysis of compliance themes that affect INFORMATION TECHNOLOGY environment for financial, publicly traded, and healthcare organizations as well as industry
MANAGEMENT INFORMATION SYSTEMS Explores organizational and technical theories of management information systems with an emphasis on the healthcare industry. Examines management information system technology and its components. Introduces data analytics and how it can be used within the healthcare area.
ENTERPRISE SYSTEMS Provides an understanding of the managerial/technical issues in planning, designing, and implementing enterprise systems. Demonstrates the integration of information and business processes across functional areas into a unified system. Hands-on experience with SAP ERP software
STRATEGY AND MANAGEMENT how INFORMATION TECHNOLOGY is changing and will continue to change organizations as we now know them by introducing the complex decisions facing real organizations through a number of mini cases and a cyber security simulator. These provide an opportunity to apply the models/theories/frameworks presented, giving students the confidence and ability to tackle the tough issues regarding INFORMATION TECHNOLOGY management and strategy, and a clear understanding of their importance in delivering business value
SPEECH COMMUNICATION Provides an overview of the process of communication and introduces communication theory. Provides practical training in the fundamentals of effective presentation for individuals in both public speaking and group communication settings. Emphasizes discussion of contemporary issues and the analysis of public discourse.
TECHNOLOGY-BASED PUBLIC SPEAKING Provides knowledge and skills to lead others more effectively through presentational communication utilizing online technology and delivery frameworks. Includes developing more meaningful voice based on ethical communication, audience engagement and thoughtful responses to contemporary issues
COMMUNICATION IN A TECHNOLOGICAL ENVIRONMENT Explores the impact of the computer culture on human communication. Identifies how the computer culture has changed communication, norms, expectations and language. Practices key competencies associated with communication interaction, including interpersonal, organizational and conflict communication
PERSUASION, INFLUENCE AND MOTIVATION Examines the general theories that explain persuasion and one’s ability to influence others. Discusses communication skills, attitudes and competencies associated with persuasion, influence and motivation. Enables students to learn and practice powerful persuasion communication skills that will enhance both personal and professional success.
CULTURAL INTELLIGENCE Develops culture competence skills required in today's global economy. Foundation to the theory and practice of cultural intelligence, which predicts adjustment and success in multicultural settings. Examines deep layers of culture, including core worldview assumptions.
INTERCULTURAL COMMUNICATION Using readings, film, field experience and/or dialogue, the course investigates cultural identity, meaning, patterns, relationships and conflicts that arise as contact increases between people of different cultures in our global society
CONTEMPORARY MATHEMATICS Presents topics in contemporary mathematics that are relevant to the Liberal Arts student. Develops the skills required to understand and interpret quantitative information that students encounter in the Liberal Arts curriculum
NATURAL SCIENCE Focuses on the basic elements of the natural sciences to provide students with a broad understanding of various themes including Geology, Astronomy and basic Physics
ADVANCED SCIENCE Explores various scientific disciplines and practices, as well as the application of science in everyday life
Philosophical Inquiry and Reflection Philosophical Inquiry and Reflection

Computer Science I Introduction to computer science and engineering, problem-solving techniques, algorithmic processes, software design and development.
Computer Science II Software design, structured programming, object-oriented design and programming.
Foundations of Computing Conceptual and formal models, efficiency and levels of abstraction as used in the field of computing, big-Oh notation, combinatorics and conditional probability, basic operations of sets, functions, relations, trees and graphs, regular expressions, deterministic finite automata and non-deterministic finite automata to describe patterns in strings.
Foundations of Data Structures Data structures and formalisms used in computing, such as asymptotic behavior of algorithms, graph, table, relational and set data structures, context-free grammars to describe patterns, assertions in propositional logic form, amortized analysis to evaluate efficiency of data structures such as splay trees and O(1) expansion of tables.
IT Project Management Provides students with the tools and techniques needed to manage a wide variety of IT systems projects, including software design and development, IT systems design and installation, network management and support, and others. Students develop and practice skills through the use of case studies and other project-based exercises.
Human Computer Interfaces Human-Computer Interaction (HCI). Methods for designing, prototyping, and evaluating user interfaces for computing applications. Human capabilities, interface technology, interface design methods, and interface evaluation tools and techniques.
Internet Programming Covers Internet programming in depth, including client-server peer-to-peer, and web applications. Primary goal is to help students understand the principles of how distributed applications are built, while also giving them practical experience in creating common Internet applications.
Introduction to Computer Networks Introduction to data communications; asynchronous, synchronous, networks and current technology.
Introduction to Computer Security Security goals, threats and vulnerabilities. Cryptography, program security and operating system security issues. Basic network security. Planning, policies and risk analysis.
Principles of Systems Programming Introduction to the design and operation of systems software. Analysis is made of current system software technology, including operating systems, language translation systems and file systems.
Enterprise Systems Architecture and Design Introduces upper division IT students to concepts of system architecture, design and software engineering that are needed for career opportunities as software, system and business analysts. Topics include enterprise architecture design, requirements analysis, software and systems lifecycle methodologies, Unified Modeling Language, analysis and design methodologies and other related topics. Project activities expose all students to the full design and specification of IT systems to meet a variety of business and technical problems, as well as prepare them for their capstone course experiences.
Social Issues in Computing The effect of computer science and engineering on the home and workplace, with emphasis on the role of computer professional in modern society.
Fundamentals of Database Systems Logical and physical database system organization; logical models; design issues; secondary storage considerations.
Information Technology Capstone I Information Technology Capstone I
Information Technology Capstone II Information Technology Capstone II
Systems Administration Prepares students with an understanding of virtual machines with universal principles that apply to all operating systems structure and operation including the concepts of processes, resource and file management and performance. Students also develop an understanding of the pervasive use of Unix-based operating systems in the design of various systems such as switches, routers, load balances, wireless controllers and network management platforms to provide various services to support interaction between computer-based systems.
Introduction to Network Administration Students explore topics in network administration in theoretical and practical ways, study different software platforms, control, shared resources, administration, security, anti-virus procedures and methodologies.
Database Administration Database administration skills covering installation, configuration and tuning a database; administering servers and server groups; managing and optimizing schemas, tables, indexes, and views; creating logins; configuring permissions; assigning roles, and performing other essential security tasks, backup and recovery strategies, automation and maintenance.
Probability Models Probability theory, discrete and continuous random variables, Markov chains, limit theorems, stochastic processes, models for phenomena with statistical regularity.
Calculus I Limits and continuity, derivatives and integrals; differentiation and integration of polynomial, rational, trigonometric, and algebraic functions; applications, including slope, velocity, extrema, area, volume and work.
General Chemistry for Science Majors Fundamental concepts, states of matter, periodic table, structure and bonding, stoichiometry, oxidation and reduction, solutions, and compounds of representative elements.'
Mechanics Laws of motion; inertia, acceleration, force, energy, momentum and angular momentum. Rotational and oscillatory motion. Gravitation.
Technical Writing Expository writing, especially for science, pre-engineering and business students.
General Chemistry for Engineering Majors Fundamental concepts, atomic structure, periodic table, stoichiometry, states of matter, chemical bonding, new materials, solutions, thermodynamics, reaction rates, equilibrium, electrochemistry, polymers and nuclear reactions.
Programming Fundamentals (Python) Cadets learn fundamental computing concepts that will allow them to design, build and test small to medium programs using a high-level programming language. Key concepts include applying appropriate aspects of a structured problem solving process, applying a standardized design notation such as the Unified Modeling Language (UML) to communicate their design, and iteratively testing their program.
Cyber Foundations – Computing Provides a more in-depth study of computing for cadets who have demonstrated ability beyond the level of CY305. The course covers material presented in CY305 at an accelerated pace to provide cadets additional opportunities for application and hands-on experience with cyber principles and concepts such as encryption and machine learning, with less emphasis on networking.
Network Engineering & Management  This course addresses the analysis, design, building, and testing of modern computer networks. Network implementation techniques and considerations are discussed and practiced extensively. Key concepts include analysis and design using standardized network models, protocols and practices such as the Open Systems Interconnect (OSI) network model, subnetting, static/dynamic routing, switching, and access control.
Network System Programming (Python) This course applies fundamental programming skills to automate interactions with a computer, a local operating system, or the Internet and so use and manage resources and services. Examples of the resources and services that the programming in this course will address include file systems, web servers, mail servers, database servers, image and audio files, compressed and encrypted files and files used in common office environments (documents, presentations, spreadsheets).
Network Services Management (Microsoft and Linux server operating systems) Cadets study network services in terms of design, implementation, maintenance and security of computer servers. The learning process in this course builds on earlier coursework and assumes a functional network with basic connectivity. This course first covers the design and selection of hardware and software to provide network services based on identified user requirements. Cadets then learn to support the Army Enterprise through the implementation and maintenance of network services, including naming, addressing, resource management, voice over IP, and web services. Security is a pervasive theme throughout the course. While this course focuses on the practical aspect of network services, it also gives cadets a foundational understanding of the theories behind those services.
Database Design and Implementation (MySQL, Hadoop, NoSQL) This course addresses the analysis, design and implementation of relational and non-relational databases. Structured query language (SQL) is covered in depth along with standard problem domain and data modeling techniques. Implementation techniques and considerations are discussed and practiced extensively. Key concepts include analysis and design using a standardized notation such as the unified modeling language (UML), data model to logical schema conversion techniques, normalization, data security, client-server architectures and web-based access to database systems (e.g. XML). Additional advanced topics covered include system security, transaction processing, web data extraction, Big Data, MapReduce framework and key-value stores.
Project Management This course develops skills required to lead an organization to the achievement of their objectives through the proper application of the management of planning, implementing and controlling the organization activities, personnel and resources. The course focuses on the Implementation phase of the Systems Decision Process (SDP). Topics include project selection, roles and responsibilities of the project manager, planning the project, budgeting the project, scheduling the project, allocating resources to the project, monitoring and controlling the project, evaluating and terminating the project, risk assessment and management, organizational structure and human resources. Case studies illustrate problems and how to solve them. Course assignments are designed to help students learn and apply project management techniques taught in the course. The class design project will provide students with the opportunity to integrate project management software, Microsoft Project, into the preparation of an Engineering Management Project Plan.
Distributed Application Development (Python Django) Building on the foundations of algorithm implementation, data representation, web development, and basic networking, this course focuses on the principles of constructing a modern distributed application. Cadets study the principles, construction, and interaction of user interface, network, web server, and database components to produce an effective distributed application. Cadets will learn new tools and skills working as a team to analyze, design, and implement a system that solves a given problem.
User Interface Development (Python) This course provides a practical introduction to user interface development and usability engineering of interactive applications. The disciplines of Human-Computer Interaction (HCI), Cybersecurity, and Software Engineering guide these endeavors. Major emphasis is on the principles and techniques for human-centered, secure design and implementation of graphical user interfaces (GUIs) within a software development lifecycle. Cadets will extend their knowledge of programming in a high-level language by learning how to use an interface builder to create a fully functional GUI. Cadets will learn and practice human-centered problem analysis techniques and testing methodologies to ensure that their interfaces are usable and secure. A hypothetico-deductive approach to design is emphasized throughout their development efforts. Fundamentals taught in this course will prepare cadets for more advanced software development, development of physical devices, or a deeper theoretical look at HCI topics.
Homeland Security The goal of this course is to provide future leaders with a thorough understanding of the homeland security policy area. This course explores how the evolving nature of the terorist threat, particularly catastrophic terrorism, poses unprecedented and complex challenges to how America provides for its security. The course examines how homeland security policy intersects with other domestic and foreign policy issues, how our federalist system of government affects homeland security, and how moral, ethical, and civil liberties concerns complicate the development of effective homeland security policies. By analyzing the threat and developing an understanding of the unique policy problems and tools of homeland security, the course enables students to critically assess national efforts in such areas as border security, domestic counterterrorism policy, critical infrastructure protection, and emergency preparedness and response.
Cyber Security Engineering The focus for this course is to design, build and test secure networked computer systems. Topics covered include operating system and network security, secure network architecture, and offensive and defensive information operations. Practical exercises that give students hands-on experience with current network security tools and techniques complement a series of laboratory exercises that have small groups of cadets secure their own small network.
Cyber Policy, Strategy & Operations This course addresses the entire spectrum of information warfare from the political, legal, and ethical aspects to the technology and techniques of cyber attack. The Political Science and Computer Science faculty jointly teach this course.
INTEGRATIVE SYSTEM DESIGN I It provides an integrative experience, presenting each cadet team with a professionally relevant, open-ended situation including professional, ethical, social, security, legal, economic, and political dimensions, where an engineering approach has strong potential to produce benefits. Under the guidance of a faculty advisor for each project team, cadets develop client-focused products, applying the principles of design and implementation to effect an optimal outcome for the circumstances presented to the team by creating a product or service that meets requirements and constraints negotiated with the client.
MILITARY INNOVATION This interdisciplinary course examines the subject of military innovation from a theoretical, strategic, historical, and policy oriented perspective.
Digital Computer Logic  This course covers the analysis, design, simulation, and construction of digital logic circuits and embedded systems. The material in this course provides the necessary tools to design digital hardware circuits based on design techniques such as Karnaugh maps and Finite State Machines. The course begins with the study of binary and hexadecimal number systems, Boolean algebra, and their application to the design of combinational logic circuits.
Information Technology Professional Considerations This course addresses the professional considerations of Information Technologists, primarily focusing on non-technical considerations and the development of communication skills. Coursework includes significant emphasis on written work that is based on relevant reading assignments, class discussions, individual research, distinguished guest speakers, and personal reflection. Content will address current, emerging, and relevant topics in the computing profession.
System Development II  This course is team-based capstone design experience in electrical engineering, computer science and information technology. It provides an integrative experience, presenting each cadet team with a professionally relevant, open-ended situation including professional, ethical, social, security, legal, economic, and political dimensions, where an engineering approach has strong potential to produce benefits.
Strategic Decision Making This course introduces Cadets to the interdisciplinary nature of strategic decision making. The course seeks to answer the question of how strategic leaders make decisions in situations of incomplete, conflicting, and incorrect information. Strategic studies is leveraged to explore Clausewitz?s conception of military genius, the role of military deception, and the value of adopting a red team approach. Psychology is incorporated to explore the role of cognitive biases in addressing situations of incomplete, conflicting, and incorrect information, specifically from an intelligence analysis perspective. Political science is utilized to explore the utility of game theory to model basic strategic interactions and decisions in incomplete information games.
Advanced Geographic Information Systems This course examines the analytical methods used in Geographic Information systems (GIS) and provides cadets with a clear understanding of the theoretical/conceptual aspects of algorithms found in GIS software. Lectures focus on the underlying mathematical basis for widely used spatial analytical techniques. Among the topics covered are neighborhood operations, map transformation, spatial interpolation, terrain analysis, network analysis, spatial overlay, fuzzy sets, neural networks, and expert systems. In-class practical exercises and laboratory assignments compliment the lectures by providing hands-on experience with a variety of advanced analytical techniques.
Basic Writing Developing writing skills including idea generation and invention, organizational strategies and conventional usage in expository prose. Emphasis on developing fluency and effective writing processes.
Foundations of Visual Literacy In this analytical overview of the forms and uses of visual imagery, students will learn to think critically about the formal methods and cultural impact of contemporary art media.
Foreign language and culture Foreign language and culture
Introduction to Asian Literature A survey of the four great Asian literary traditions: China, Japan, India and Middle East
Physical Sciences in Life, the World and Beyond Interdisciplinary physical science course for non-science majors to enhance their scientific literacy and experience the scientific approach to problem solving in active-learning classrooms and hands-on in computer laboratories. Modules on the science of everyday life, science of the microscopic world, and the earth and beyond.
Western civilization Western civilization
Composition I Emphasizes the rhetorical and stylistic demands of college writing through focus on experiential, analytical, and expressive writing. Students learn to generate, organize and develop their ideas and to make choices as writers that are appropriate to the rhetorical situation
Introduction to Ethics in Science and Engineering Survey of canonical works in the history of Western ethical theory providing students a critical understanding of a plurality of viable ideas, principles, and criteria by which to evaluate and judge contemporary issues of ethical concern in the practice of science and engineering.
Calculus I A detailed study of limits, continuity, derivatives of algebraic and transcendental functions, applications of derivatives, numerical techniques, integrals and the Fundamental Theorem of Calculus
Introduction to Statistical Methods Introduction to statistical thinking and applications to industrial and similar processes. Descriptive statistics, distributions, and probability models useful in process control and systems reliability; confidence intervals, hypothesis testing, regression, and basic experimental design. Statistical concepts to be reinforced with case studies promoting problem solving skills and statistical thinking
Mathematics for Information Technology Systems of linear equations, matrix algebra and linear transformations. Elementary combinatorics, recursion and induction, sets and relations
Introductory Physics I Classical mechanics and thermodynamics. For science, mathematics and engineering students.
Introduction to Computing and Programming using Excel An introduction to computers and programming. It introduces algorithms for applications that contain integrated development environments (IDE), such as Microsoft Excel’s IDE for Visual Basic for Applications (VBA). Algorithmic topics include repetitive and decision structures, functions, subroutines, and ActiveX controls. Programming topics include application automation and presenting information programmatically.
Computer Programming Algorithmic programming using a high level, event-driven, language such as VB.NET. Topics include data storage and manipulation, graphical user interfaces, control structures, functions and sub procedures
Object-Oriented Computing Introduction to object-oriented computer programming using a high-level programming language such as Java. Classes, member functions, inheritance, polymorphism and operator overloading. Design methodologies and introduction to software engineering principles and practices. Basic data structures, algorithms and event driven programming concepts are introduced.
Introduction to Computer Networks An introduction to fundamental concepts for design and analyses of computer networks. Topics covered include the physical layer, network protocols, Local Area Networks, Internet, wireless and mobile networks, network security, and socket programming.
Interactive Web Systems This course introduces the fundamentals of interactive multimedia in context of web technologies. Topics covered include use of modern web development tools, Markup Languages, server-side processing, and client-side processing using languages such as JavaScript. Students will use these tools to create interactive and dynamic web sites.
Sophomore Project A team-oriented project work consisting of a small project to build skills in needs assessment, group problem solving, and written and oral technical presentations.
Computer Systems Introduction to computer systems. Topics cover computer system components, including hardware components, storage devices, memory, graphics accelerators, device and communications interfaces, and CISC and RISC processors, operating systems, and system administration activities. Issues in cost, performance, security, and compatibility are also considered.
Software Engineering and Practice Introduction to software engineering and practice. Topics include software process models, project management, requirements analysis, software quality assurance, and testing.
Database Design and Implementation Introduction to the design and implementation of database systems. Include designing a practical database for an application using normal forms, understanding relational database schemas, planning and implementing a database using software such as Oracle and Microsoft SQL Server, advanced database topics in redundancy, replication, load balancing, compatibility, ODBC and JDBC, and database systems administration.
Human Computer Interaction Surveys various components, techniques of Human Computer Interaction (HCI). Topics include the basic perceptual, cognitive and performance capabilities of people and external factors that affect these capabilities, tools, techniques for understanding, predicting, evaluating the interactions of people with technology. Systematic processes for designing, evaluating and revising interactive systems are studied.
Systems Analysis Introduction to pervasive themes in information technology. Topics include history of information systems, information management, complexity management, methodologies for information centric requirements analysis, work flow analysis, and tools for system analysis.
System Administration This course teaches the skills necessary to analyze, deploy, manage and troubleshoot enterprise computing infrastructures. Topics include user authentication management, system configuration and management, periodic tasks automation, network file systems and data backup techniques, server deployments, and system performance analysis techniques. The course has a significant lab component.
Information Security Practice Survey of concepts and methods of security policies, models and mechanisms for secrecy, integrity, availability, and authentication. Topics covered include security policies; access control; introduction to cryptography; control and prevention of viruses and other rogue programs; common system vulnerabilities and countermeasures; and legal and social issues.
Senior Capstone Project Senior Capstone Project
Advanced System Administration Advanced concepts in enterprise computing infrastructure analysis, deployment, management and troubleshooting. Topics include enterprise computing resource requirements analysis and design, single sign-on management, application and server deployment, virtualization, security configurations, and performance analysis.
Script Programming This course provides an in-depth coverage of Python and Unix shell programming to quickly automate various repetitive and complex tasks including those that are used in system administration. The course builds on a good grasp of Unix systems and a solid foundation in high-level programming.
Genetics Fundamentals of classical and molecular genetics. Selected topics in human genetics, microbial genetics, biochemical genetics, molecular biology, cytogenetics and genomics
Bioinformatics This course covers the fundamental algorithms and computational methods for study of biological sequence data for comparative biology and evolution with the focus on discovery of genome content, function and organization. Specific methodologies covered include the algorithms for searching sequence databases, pair-wise and multiple sequence alignment, phylogenetic methods, and methods for pattern recognition and functional inference from sequence data.
Internship The student works on a specific project at a corporate site with the prior approval by the program director. Oral and written presentations about the project are required.
Industrial Project The student works on a specific project at a corporate site with the prior approval by the program director. Oral and written presentations about the project are required.
Undergraduate Research The student performs research under the supervision of a faculty member. Prior permission required. Oral and written presentations about the research are required.
Group Dynamics and Communication Group dynamics, discussion and problem solving; influences of group structure, norms, roles, leadership and climate on the processes of group communication and collaborative decision making.
Communication in Organizations Communication theory and practice within organizational systems.
CIT Project Management This course presents the theory and practice of IT project management. Topics include financial modeling, cost and effort estimation, project risk management, and project evaluation and selection as well as topics in IT project sponsorship, stewardship and leadership. IT entrepreneurship and marketing are emphasized throughout the course.

Critical Reading and Expository Writing Writing paragraphs and essays based on close readings of various texts, with an emphasis on clear, grammatically correct expository prose. Students must take this course during the first eligible semester at the university.
Critical Thinking and Argumentation Writing essays based on critical analyses of various literary texts. Emphasis on sound argumentative techniques. Requires documented research paper. Students must earn a grade of “C” or above to pass this course.
Fundamentals of Communication An introduction to the primary areas of study in the communication discipline. Emphasis is on developing communication competence and understanding communication processes. Topics covered include public speaking, interpersonal communication, and group communication.
Public Speaking The study and practice of preparing, delivering, and analyzing public speeches. Writing in ways that appeal to different audiences and presenting in ways that are confident and credible are emphasized.
Argumentation and Debate An introduction to oral argumentation and debate, including case construction techniques, and case analysis and criticism.
World Literature Various genres from such non-European cultures as early Middle East, Asian, African, and Latin American.
Arts and Ideas I An examination of the arts and ideas of ancient and medieval cultures.
Introduction to Philosophy An introduction to some central philosophical problems concerning free will, the self, science, and reality.
Principles of Microeconomics A study of economics which concentrates on micro-theoretical concepts such as pricing, consumer choice, business production, and profit decisions.
Social Problems Sociological study of major current problems confronted in American society and the beliefs that compound them.
General Physics I-Noncalculus A survey of the topics in classical physics intended primarily for students in preprofessional curricula and majors in various engineering technology concentrations
Technical Physics I-Calculus Based A survey of physics for students majoring in technical fields, such as physics, chemistry, engineering, etc.
Probability and Statistics - Noncalculus Descriptive statistics and its relevance, including probability, experimentation, measurement, sampling and surveys, informal statistical inference, and hypothesis testing are included.
Calculus I Functions, limits of functions, derivatives and applications, and introduction to the integral.
Analytic Geometry and Differential Calculus A course in differential calculus with technical applications. Analytic geometry, quadratic equations, and additional topics in trigonometry as foundation to the calculus, limits, the derivative, and applications.
Introduction to Computer Science I Introduction to all aspects of the programming and problem-solving process and the elements of good programming style. A high-level language will be used as a vehicle for introducing these concepts. Laboratory use of the computer in designing, coding, debugging, and executing programs is an integral part of the course.
Introduction to Computer Science II Programming in a high-level language, including programming concepts, good style, algorithms, documentation, and elementary data structures.
PC Set-up and Maintenance Introduces students to the concepts and skills necessary to install, upgrade, maintain, and troubleshoot computers. Includes the installation and replacement of devices interfacing with the motherboard, installation and upgrade of at least two operating systems, and the analysis of computer performance.
Student in University This course is meant to provide guidance to first-year university students as they begin their search for directions to take in self-definition, intellectual growth, career choices, and life skills. Only first semester students may enroll.
Math for Computer Science Students will gain a working knowledge of set theory, mathematical induction and recursion, relations and digraphs, functions, trees and languages, finite-state machines, and languages and see how these topics are applied to the practice of computer science.
Fundamentals of Database This course will introduce students to the essential skills of creating, maintaining, and querying a database system. Basic methodologies for transferring data between a database and a program or web page will be covered. Also considered will be methodologies for database design to ensure consistency and accuracy of the data.
Computer Organization A study of the physical implementation of the computer including mathematical and logical foundations, component-level design, and an introduction to machine architecture. Topics include Boolean algebra, data representation, logic gates, combinational and sequential circuit design, memory cells, memory subsystems, memory hierarchy, I/O subsystems, I/O handling, interrupts, instruction representation, error detection, and serial protocols.
Networking Fundamentals A study of concerns related to the operation of computer networks. Topics include incentives for computer networking, the OSI model of network operation, network media, theory and practice of local area networking, bridging, switching, and routing. Principles of TCP/IP network operation.
Information Security and Assurance Presents critical concepts and skills that are related to protecting information assets from harm. Topics include the history of information security, basic security-related terminology and concepts, major classes of threats to information security, model strategies for protecting against those threats, computer forensics, and best practices in information assurance.
Software Engineering I An introduction to software systems development as an engineering discipline. All phases of the software development life cycle are examined, with particular emphasis on requirements analysis, requirements specification, and preliminary design. Participation on realistic team projects, use of automated tools, written and oral communication skills, exposure to legal, professional, and ethical issues is stressed.
Software Engineering II Software development as an engineering discipline with emphasis on detailed design, implementation, testing, maintenance, project management, verification and validation, configuration management, and software quality assurance. Communications (written and oral), legal, professional, ethical issues, participation on team projects, and use of automated tools are integral.
Essentials of Web Development An introduction to the design and development of visually effective and functional web sites. Concepts include design principles regarding information architecture and page layout, the use of graphics in web pages, HTML, CSS, the use of web page and graphics editors, basic accessibility issues, the development process and maintenance issues. Laboratory use of software is an integral part of this course.
UNIX Fundamentals UNIX and UNIX-like command environments, including basic UNIX command-line commands and utilities; a representative UNIX interface; and a UNIX-based scripting language
Server-Side Web Programming This course covers strategies for developing maintainable and efficient server-side Web applications. Topics include object-oriented methodology, server-side scripting languages, sessions, database integration with web applications, and web site security.
Advanced Topics in Web Development This course will cover advanced Web coding concepts and teach students how to add an extra layer of usability to a Web page using a current scripting language or tool. Students will learn how to create accessible modern web applications that integrate current Web standards
XML An introduction to developing data models, datasets, and reports using XML family technologies. Topics include the modeling, querying, and transformation of content using XML family standards, including XML proper, XML namespaces, XML schemas, XPath, XSLT, and XQuery.
Database Advanced Topics A study of the use and underlying principles of database management systems, and approaches for database design with an emphasis on the relational approach. Students will learn how to use good design techniques and implement methods for both small and large databases. Laboratory use of database software for designing, implementing, debugging, and maintaining database systems will be an integral part of this course
Database Administration A continuation of the study of the use and underlying principles of database design. Students learn more of the internal working of database management systems, as well as exploring approaches other than relational. Laboratory use of database software for designing, implementing, debugging, and maintaining database systems is an integral part of this course.
Senior Project in Information Technology This course is designed for the last semester of study. It is a capstone course that will enable the student to tie many of his/her learning experiences together. Students will work in teams to identify software projects on campus and in the community that can be accomplished in 15 weeks. Lectures will focus on professional issues that include the short-term and long-term future of IT strategies for finding and securing employment, nontechnical elements of professional competence, and strategies for continuing career development after college.
Human Computer Interaction Students will learn how to assess and improve the user experience between humans and electronic devices, and to design systems that enable individuals to make more effective use of computers by creating better user interfaces.
Internet of Things Presents networking and security concepts related to Internet of Things (IoT), placing special emphasis on IoT hardware and data analytics.
Enterprise Programming Presents enterprise programming to those students who are experienced programmers through the use of contemporary enterprise system development language syntax, frameworks, and development environments. Development project management concepts are discussed.
Independent Study Independent Study

Information Technology Fundamentals This is the freshman experience course that also covers pervasive themes in IT, organization issues, and history of IT, IT and its related informing disciplines, application domains, computer math, and other IT topics.
Operating Systems Technologies This course covers operating systems concepts, applications, administrative activities, installation, customization, maintenance, security, and other topics
Introduction To Computer Algorithms And Logic This course introduces basic concepts of computer programming through the development of algorithms and logic to different types of real-word problems. It emphases on developing problem-solving skills required for creating software solutions. The course covers computer system basics, software development process, basic programming structures, constructs and data structures, and methods for developing algorithms and logic.
English Composition I Emphasis on the organization of the expository theme. Directed writings of themes based on personal experience, on the relationship between experience and language, and on the relationship between experience and ideas.
Algebra And Trigonometry For Technology The emphasis is on technique and problem solving. MA14700 concentrates on topics in algebra
Web Systems Technology This course covers web technologies, information architecture, digital media, web development, vulnerabilities, social software, and other topics.
Networking Technologies This course covers routing and switching, physical layer, foundations of networking, security, application considerations, network management, and other topics.
Programming Fundamentals This course covers fundamental programming techniques using a particular programming language while focusing on problem-solving skills. Topics include primitive and custom data types, control structures, simple data structures and an introduction to object-oriented programming
Discrete Mathematics For Computer Technology The course covers topics in discrete mathematics which are essential to the discipline of computer technology. These include: logic, sequences, mathematical induction, basic set theory, functions, recursion, relations, graphs, and trees.
English Composition II The second half of the basic composition sequence. Extensive practice in writing clear and effective prose. Instruction in logic, structure, and style
Integrative Programming This course covers in-depth discussions of object-oriented programming and application development through integration. Topics include object-oriented programming concepts and object-oriented design, classes, objects, interfaces, inheritance, association, polymorphism, software framework/library, file system processing, event-driven programming, GUI-based programming, data access, basic networking programming. Extensive laboratory assignments are assigned
Applied Database Technologies This course covers database query languages, information management concepts and fundamentals, data organization, data modeling, managing the database environment, special-purpose databases
Internetworking Technologies This course covers requirements, acquisition/sourcing, integration, project management, testing and quality assurance, organizational context, architecture and other topics
Fundamentals Of Speech Communication A study of communication theories as applied to speech; practical communicative experiences ranging from interpersonal communication and small group process through problem identification and solution in discussion to informative and persuasive speaking in standard speaker-audience situations.
Elementary Statistical Methods A basic introductory statistics course with applications in various fields and emphasis placed on assumptions, applicability, and interpretation of various statistical techniques. Subject matter includes frequency distributions, descriptive statistics, elementary probability, normal distribution applications, sampling distribution, estimation, hypothesis testing, linear regression.
Fundamentals Of Information Assurance This course covers security mechanisms, fundamental aspects, operational issues, policy, attacks, security domains, forensics, information states, security services, threat analysis, vulnerabilities, and other topics.
Advanced Programming This course covers in-depth discussions of data structures and associated algorithms, memory management, and concurrent programming. Topics include memory structures, allocation and release, object reference counting, garbage collection, arrays, lists, stacks, queues, trees, graphs, heaps, hash tables, recursion, searching and sorting, multithread programming and synchronization, as well as the latest developments in advanced programming techniques.
System Administration And Management This course covers system performance analysis, benchmarking, acceptance testing, security strategies, file systems analysis, auditing, server roles, and best practices
Social Science I Social Science I
Natural Science I Natural Science I
Systems Assurance This course covers the implementation of systems assurance with computing systems. Topics include confidentiality, integrity, authentication, non-repudiation, intrusion detection, physical security, and encryption
Disaster Recovery And Planning This course covers risk management and business continuity. Topics include disaster recovery strategies, mitigation strategies, risk analysis and development of contingency plans for unexpected outages and component failures. Extensive laboratory exercises are assigned
Distributed Application Architecture And Design This course covers the topics of multi-tier application development, interface design and implementation, client side scripting, server side scripting, backend database integration, component based application development, and configuration of multi-tier applications, as well as the latest developments in distributed application development.
Technical Report Writing A study of application of the principles of good writing in industrial reporting with emphasis on the techniques of presenting information graphically as well as in a clear, concise written form
Advanced Operating Systems This course covers the comparison and contrast of operating systems, the detailed examination of architecture, customization and implementation of the features of specific operating systems. Extensive laboratory exercises are assigned.
Humanities Humanities
Distributed Application Development This course covers the topics of multi-tier application development, interface design and implementation, client side scripting, server side scripting, backend database integration, component based application development, and configuration of multi-tier applications, as well as the latest developments in distributed application development. Extensive laboratory exercises are assigned
Database Modeling And Implementation This is an advanced course that covers the design of distributed databases, data modeling, normalization rules, query languages, layout and design of forms, transaction management, and implementation of the database design. Extensive laboratory exercises are assigned.
Mobile Application Development This course focuses on developing mobile applications for multiple platforms. Topics include special considerations for devices (smartphones and tablets) with limited computational power and system resources, application development paradigms, sensor-based applications (touching, gesture, and movement), location-based applications, network programming, interactivity with data sources and application integration, testing with simulators, as well as consideration and preparation for application publishing. Strong background and experience in web and software development are expected.
Software Assurance This course covers defensive programming techniques, bounds analysis, error handling, advanced testing techniques, detailed code auditing, and software specification in a trusted assured environment.
Computer Forensics This course covers the techniques used in the forensic analysis of computerized systems for gathering evidence to detail how a system has been exploited or used.
Application Integration This course covers application integration methods using service oriented computing and various publicly available application programming interfaces (APIs), integration of disparate enterprise and Web applications, implementing interfaces between platforms and applications. Topics include data exchange formats, APIs for processing data of different formats, service creation and service consumption, as well as the latest developments in application integration.
Assured Systems Design And Implementation This course covers the design and implementation of assured systems in an enterprise environment. Topics include hardening of operating systems, choice of platforms, design criteria within the assured systems domain. Extensive laboratory exercises are assigned.
Network Design And Implementation This course covers the design and implementation of enterprise level networks. Topics include network topologies, protocols, technologies, services, design and architecture, and implementation of the network design.
Senior Project Undergraduate Research This capstone course brings together the different domains of Information Technology. The course contains topics of distributed application development, networking, information assurance and security that integrate around an unconstrained problem of substantial complexity with an undefined solution and the implementation of the design solution.
Fundamental Human Communication: Presentations Study of human communication as a process. Overview of the principles and practices of interpersonal, small group and public communication. Emphasis on examining the role of self-concept, perception, culture, verbal and nonverbal dimensions in the communication process, using power and managing conflict, applying critical listening, practicing audience analysis within informative speech making.
Business Decision Making in a Modern Society This course introduces the concepts of basic technology literacy, information retrieval via electronic and hard copy; along with critical thinking skills. Basic business principles will be introduced to reinforce these concepts and their relationships. The course provides opportunity for applying the skills of oral and written communication to a variety of learning activities.
Critical Reading and Writing Fosters reflective, critical reading, writing, and research in public discourse, culture, humanities, technology, and science. Challenges students to consider cross disciplinary modes of inquiry through multiple genres with an attention to enlightened, global citizenship.
Introduction to American Studies This interdisciplinary course will highlight the student’s role in interrogating the cultural and political function of representations of America in literature, history, philosophy, religion, popular culture, music and art. Students will gain an understanding of why definitions of American identity matter and learn about the contemporary debates that inform the discipline of American Studies today.
Literature/Culture/Ideas This course will take a thematic approach to literature by examining multiple literary texts that engage with a common course theme concerned with the human experience. Themes address cultural, political, social, religious or philosophical aspect ideas through literature.
Art in General Culture An exploratory course that aims to develop a non-technical, general cultural understanding of the space arts, such as architecture, painting, sculpture and industrial design.
Topics in Applied Calculus in ISAT  This course introduces the concepts of differential and integral calculus and ordinary differential equations to model real-world applications in science, business, technology and economics. This course includes a computer laboratory component emphasizing modeling and numerical methods.
Concepts of Chemistry  A one-semester introduction to the fundamental principles, laws and applications of chemistry. Examples relating to the health sciences are emphasized.
Environment: Earth  A study of geological processes causing global change and their impact on human thought. The relationship between some geological processes and life on the Earth is also considered.
U.S. History A survey of U.S. history from the Colonial period to the present, emphasizing the development of American civic life, the involvement of the U.S. in world affairs and the cultural richness of the American people.
Cultural Anthropology An introduction to the nature of culture and its relationship to language, economics, politics, kinship and other institutions in diverse cultures. The course also provides an overview of the theories, methods and ethical responsibilities involved in the study of cultural systems and ethnographic writing.
Personal Wellness Emphasizes lifestyle behaviors contributing to health promotion and disease prevention. General areas affecting health status are identified. Suggestions are made as to how health-related behaviors, self-care and individual decisions contribute to health and influence dimensions of wellness.
General Psychology A study of the nervous system, sensation, perception, consciousness, learning, memory, language, intelligence, motivation, emotion, life span development, personality, psychopathology, psychotherapy, social psychology and the scientific method.
Business Analytics I The application of data analysis and statistical methods in business. Introduces data visualization, descriptive statistics, probability, sampling, estimation and hypothesis testing. Emphasis is on using spreadsheet tools and functions for statistical analysis to support analytical decision-­making in a business environment.
Interpersonal Skills An applied course consisting of experiential exercises followed by class discussion. Cases are used as learning activities where the instructor acts as a facilitator to learning. Essential theory emanates from class discussions with a student-based rather than instructor-based format.
Computer Information Systems An introduction to computer-­based information systems for students with a major in the COB or a CIS minor. Emphasis is placed on the role of computers in business and society, computer hardware and software, analysis, design and implementation of information systems, computer ethics, and collaboration using computers.
Financial Accounting The role of financial data in contemporary society; the problems of measuring and reporting income, assets, liabilities and equities; interpretation of financial statements.
Business Analytics II The application of quantitative modeling and analysis to managerial decision-­making. Introduces techniques from predictive and prescriptive analytics including linear optimization, decision analysis, queuing, regression, time­series forecasting, and simulation. Emphasis is on implementing, solving, and interpreting results from spreadsheet models for business applications.
Introduction to Macroeconomics [C4GE] Behavior of systems at the national and international levels. Topics include the methodology of economics as a social science, supply and demand, definition and measurement of important macroeconomic variables, and theoretical models of growth, inflation, interest rates, unemployment, business cycles, stabilization policy, exchange rates and the balance of payments.
Introduction to Microeconomics Topics covered include supply and demand, consumer choice, economics of the firm and industry, production costs, distribution theory, international trade, comparative economic systems and the philosophy of economics.
Introductory Calculus I [C3QR] Topics from differential and integral calculus with applications to the social, behavioral or life sciences and business or management.
Managerial Accounting The attention-directing and problem-solving functions of accounting in relation to current planning and control, evaluation of performance, special decisions and long-range planning.
Integrative Business: Management This is the management component of an integrated learning experience consisting of four courses, taken concurrently, which introduces the fundamental conceptual tools of management, finance, operation and marketing in such a way as to establish their mutual relevance and interdependence. Students work in small project teams on tasks designed to require the application in concert of conceptual tools from each of the function areas.
Integrative Business: Finance This is the finance component of an integrated learning experience consisting of four courses, taken concurrently, which introduces the fundamental conceptual tools of management, finance, operation and marketing in such a way as to establish their mutual relevance and interdependence.
Integrative Business: Operations This is the operations component of an integrated learning experience consisting of four courses, taken concurrently, which introduces the fundamental conceptual tools of management, finance, operation and marketing in such a way as to establish their mutual relevance and interdependence.
Integrative Business: Marketing This is the marketing component of an integrated learning experience consisting of four courses, taken concurrently, which introduces the fundamental conceptual tools of management, finance, operation and marketing in such a way as to establish their mutual relevance and interdependence.
Principles of Programming Students will be required to solve real-world business problems using a programming language. Projects will include the use of control structures (selection and iteration), collections/lists of data, functions and file processing logic.
Cloud Server Management This is a lab-based course that introduces the student to operating systems and server administration in a business environment. Students will learn the basic functions of managing cloud servers through the hands-on use of cloud resources. Additionally, students will acquire hands-on server administration skills in order to better understand the operational and security demands of business applications.
Enterprise Architecture This course explores the analysis, design, implementation, evaluation and management of enterprise IT solutions. Emphasis will be placed on planning and modeling the enterprise. Topics include functional modeling, physical architecture design, security planning and recovery issues, project management, emerging technologies, and ethical, financial and global considerations.
Computing and Telecommunications Networks This course focuses on the underlying principles of telecommunications and how these principles are deployed to provide efficient and secure networks for providing voice, data, and video services. Emphasis is placed on understanding basic routing, switching, and data aggregation techniques; information security strategies; and understanding how basic information systems applications utilize telecommunications services.
Database Design and Application A study of the tools and techniques of database analysis and design including the implementation of the design using common database management system models.
Intermediate Computer Programming Study of concepts and techniques used in object-oriented programming for business applications including program specification, design, development, testing, implementation and documentation. Topics include: basic programming structures; method, array and memory analysis; object-oriented principles (encapsulation, inheritance, polymorphism); graphical user interface (GUI) design and database connectivity.
Systems Analysis and Design An introduction to the techniques of systems analysis and design. Emphasizes concept of system life cycle and importance of users in system design.
Information Systems Development and Implementation Comprehensive development and implementation of enterprise-level systems using object-oriented methodologies, database driven architectures, systems analysis and design procedures, and project management skills. Topics covered will include advanced programming techniques, database processing, GUI design, object communication and a comprehensive group capstone project.
Advanced Visual Basic Programming Advanced course in Visual Basic programming. Emphasis will be placed on Object-Oriented programming, sequential and random data files and error trapping. Other topics covered will include data access objects, client server, printing in VB and Crystal Reports.
Introduction to Academic Writing The first of the required GE writing courses introduces students to academic composition. Students will engage in writing as a process, pre-drafting strategies, multiple drafts, peer review, and large and small-scale revisions.
Intermediate Writing The second of the GE writing courses emphasizes the development of an effective academic style in argumentative essays that makes use of traditional rhetorical patterns, culminating in a major research paper.
Contemporary Mathematics An exploration of contemporary mathematical applications with a focus on developing quantitative reasoning skills. Students will represent and analyze multiple concrete real-world problems using quantitative tools. Topics include voting theory, graph theory, financial mathematics, statistics, and probability
Statistical Reasoning An exploration of basic statistical concepts with a focus on developing critical reasoning skills. Students will represent data, calculate probabilities, draw conclusions using statistical tools, and critique statistical studies and data collection methods. Topics include descriptive statistics, basic probability, statistical graphs, experimental design, and an introduction to statistical inference. Appropriate for many non-quantitative majors, the course is designed to develop statistical literacy and involves limited algebraic manipulation.
Statistical Inference An introduction to the basic concepts and methods of statistical data analysis. Students will summarize and interpret data, evaluate important assumptions, and draw appropriate conclusions based on sample data sets from a variety of disciplines
College Algebra An exploration of the properties and applications of functions and their graphs. Students will construct and analyze mathematical models from a wide variety of fields using appropriate technology. Topics include polynomial, rational, inverse, logarithmic, and exponential functions as well as matrix methods for solving systems of equations
Trigonometry An exploration of the properties and applications of trigonometric functions. Students will represent physical situations and solve applied problems using trigonometric tools and appropriate technology. Topics include angle measure, solving triangles, and trigonometric functions, graphs, equations, and identities. Vectors, polar coordinates, and complex numbers will also be introduced.
Applied Calculus An introduction to basic computational techniques and applications of calculus. Topics include functions, limits, differentiation, and integration. Emphasizes the use of calculus in solving problems from areas including business, economics, social sciences, and life sciences.
Calculus I Functions, limits and continuity; the derivative, differentiation techniques, and applications; graphing applications including extrema and concavity; elementary antiderivative/integration skills; the definite integral and its applications. Coverage includes applying the ideas and techniques of calculus to algebraic, trigonometric, exponential, and logarithmic functions.
Algebraic Reasoning An exploration of fundamental concepts underlying algebra and algebraic thinking. Students will investigate, discuss, and apply foundational ideas such as variable, equation, solution, function, and graph in multiple algebraic settings. Topics include the integers modulo n, inverses and inverse functions, growth in dynamical systems, polynomial and exponential models. Recommended for prospective elementary school teachers but open to all majors. Graphing calculator required; this course does not serve as a prerequisite for Calculus I
US Economic History Satisfies American government requirement of General Education. History from colonial times to present. Coverage of U.S. Constitution; national economy; pluralism; ethnicity, race, gender; distribution of wealth and power; social conflict and reform; entrepreneurs, workers, workplace; cultural encounters; popular culture; and U.S. and global affairs
American Civilization The fundamentals of American history including political, economic, and social development of American institutions and ideas. Successful completion of this course meets the American Institutions requirement established by the state legislature
American National Government Source of democratic ideas and principles of the constitutional system. Cultural, group, party, and governmental influences on the process of public policymaking. The administration and impact of public policy.
Fundamentals of Programming An introduction to computer programming. Topics to be covered include program design, program implementation techniques, programming constructs, console output, class design, and basic familiarity with the API. Emphasis is placed on modifying and developing simple applications.
Object Oriented Programming featuring the use of APIs and problem-solving strategies to create, test, and debug interactive object oriented programs. Topics to be covered include recursion, exception handling, reusability, and program design
Database Design and Management Introduction to database management systems, database processing, data modeling, database, and database design, development, and implementation. Contrasts alternative modeling approaches. Includes implementation of current DBMS tools and SQL.
Introduction to Computer Applications and the Internet Designed to explore concepts of microcomputer systems. Concepts include Windows and general information, word processing, spreadsheets, database, presentations, and the Internet. Students will gain proficiency with the basic command structures of each application in an integrated office suite. Recommend typing speed of at least 25 wpm.
Web Development Designed to develop web pages using HTML and other web page authoring software programs. Students will create several web pages and publish them to a web server. Some advanced features will be introduced.
Data Communications and Networking Designed as a telecommunications and networking foundation in network connectivity, data communication concepts, and communication protocols. Students learn to analyze cost-benefits and to evaluate, select, and implement different communication options.
Defensive Security This course provides a fundamental understanding of defensive security principles, technologies, and countermeasures, such as firewalls, intrusion detection systems, physical security and more. A variety of projects are assigned to reinforce concepts.
Accounting Principles This course provides a thorough study of basic accounting principles. The accounting cycle is introduced using an appropriate mix of conceptual and procedural problems. A real-world problem using computer applications is also covered. This is a basic course, which aids in building a foundation for financial analysis and decision-making
Team Work, Decision Making, and Leadership A functional approach to effective performance with emphasis on how a person works in teams, develops decision-making skills, and learns the roles and values of becoming an effective leader.
PC Hardware This course is designed to provide the student with the knowledge necessary to pass the A+ certifications exams from CompTIA. A+ Certification is an internationally recognized level of non-vendor-based computer technical competence
System Administration I This course provides the student with skills required to administer Microsoft Windows Desktops and Servers. It includes server deployment and maintenance, advanced file services, server monitoring, remote access, Network Policy Server, Active Directory, and DNS
Fundamentals of Security Fundamental concepts in security including planning, risk management, cryptography, network security, system hardening, and policy
Information Systems Project Management This course is a study of the concepts and technology trends of Project Management and how it is used within Information Systems. Students will explore the principles, practices, features, and functions of the Microsoft Project application. The course will be taught with a mixture of analytical methods and practical exercises
Environments of Information Systems Introduces fundamental principles of information systems and their strategic use. Describes the role of information technology in organizations and business environments. Explains Web-based technologies, enterprise-level applications, managerial and decision support systems, and the implementation and management of IT.
Systems Analysis and Design Practical introduction to major phases, activities, tools, and techniques of systems analysis, design, and development, emphasizing the role of systems analysts in organizations and dynamic, business environments
IS Capstone Project IS Capstone Project
Applied Calculus An introduction to basic computational techniques and applications of calculus. Topics include functions, limits, differentiation, and integration. Emphasizes the use of calculus in solving problems from areas including business, economics, social sciences, and life sciences
Management and Organizations Management is a set of dynamic and complex activities that all organizations must master if they are to survive in the long run. MGMT 3180 is the introductory course to the study of managing people, resources, and processes, with an emphasis on understanding the behavioral and administrative theories and concepts needed to succeed in contemporary organizations.
Managerial Accounting A study of the accumulation and flow of managerial accounting information and its impact on decisions within a business entity. Emphasizes cost behavior, cost-volume profit analysis, and managements use of quantitative tools for planning and control
Computer Applications Students will learn the use of advanced features found in an integrated office productivity suite and will utilize word processing, spreadsheets, presentation, and database applications to solve a variety of business situations.
Introduction to MIS - ERP This course is designed to give the student a basic understanding of the importance of information systems (MIS-ERP) in modern companies, the components that make up information system and insight into the integration that good information systems foster in a business organization
International Business This course explores management from an international perspective. Unlike domestic corporations, multi-national businesses must consider cultural and legal differences, currency and economy fluctuations, unique staffing and workplace issues, and sometimes hostile government policies and philosophies. These factors add risk to running international operations and can have a dramatic effect on corporate results
Organizational Behavior and Leadership Practical approaches to helping students develop the skills necessary to manage people in organizations. The critical role of leadership will be emphasized throughout the course. Topics include motivation, empowerment, power and influence, conflict management, team building, and creative problem solving.
Web Design I An introduction to the design of web sites in both functionality and visual appeal. Training will be given in selected current software directed toward web-based, interactive design projects.
Web Design II Advanced problems in web design and interactivity. Training will be given in selected current software directed toward web-based, interactive design projects.
Mobile App Development for iOS This course provides an in-depth look at programming mobile iOS devices such as the iPhone and iPad. The course includes the Objective-C programming language and programming topics specifically related to mobile iOS devices. Students use current software development environments such as Xcode when creating applications
Human-Computer Interfaces This course is intended to introduce the students to the basic concepts, principles, and techniques used in designing interactive computer systems. It will cover the basic computer interface design theory and methods that exist in the field.
Server Administration Students will gain practical knowledge in regards to web server installation/configuration, backup/recovery solutions, hardware options/installation, and cloud server management


Composition As Critical Inquiry Rhetorical approach to writing, taught through extensive collaborative drafting, revising, and editing. Emphasis on critical reading and analysis.
Practical Cryptography and Trusted Systems Practical cryptography and its applications, authentication protocols, access controls and trusted systems.
Finite Mathematics Linear functions, matrices, systems of linear...probability, statistics, and mathematics of finance.
Composition As Critical Inquiry Rhetorical approach to writing, taught through extensive collaborative drafting, revising, and editing. Emphasis on critical reading and analysis.
Communication As Critical Inquiry Development of communication competence, critical thinking, information literacy, and ethical practices in public speaking, small group, and interpersonal contexts.
Computer Application Programming The design, development, and implementation of computer application systems, including files and GUI.
Communication As Critical Inquiry: Classroom Comm-Teacher Ed Development of communication competence, critical thinking, information literacy, and ethical practices in public speaking, small group, and interpersonal contexts.
English Literature And Its Contexts A historical study of the main movements in English literature. Readings of entire works representative of the movements.
Introduction To It Professional Practice Researching available positions, interpreting job descriptions, interview skills, preparing a resume, benefits of a Professional Practice experience.
Hardware And Software Concepts Overview of nature and interrelationships of computer architectures, hardware, operating systems, data types, microcontrollers, virtualization, storage technologies, and filesystems.
Principles Of Microeconomics Supply and demand in product and resource markets; behavior of consumers, and of producers under various market structures; international trade.
Elementary Discrete Mathematics Elementary introduction to discrete mathematics, comprising topics relevant to computer science. Logic, algorithms, recursion, enumeration, relations, graph theory (including trees).
Survey Of American Literature A historical study of the main movements in American literature. Readings of entire works representative of the movements.
Systems Development I Information systems development, development methodologies, analysis and design techniques and tools, relational database concepts.
Information Technology Project Management The processes, methods, techniques, and tools in managing information technology projects including scope, time, cost, quality, and risk management.
Statistical Reasoning Application of statistical concepts to decision problems confronting organizations and individuals. Includes descriptive tools, probability concepts, sampling processes, statistical inference, regression, and nonparametric procedures.
Principles Of Macroeconomics Gross domestic product; unemployment and inflation; the banking system; fiscal, monetary, and other macroeconomic policy; international finance and policy.
Introduction To Studies In Women's Writing Readings in a variety of genres and historical periods.
Social, Legal, And Ethical Issues In Information Technology Study of personal, societal, legal, and ethical issues raised by the effects of information technology.
Web Development Technologies Web concepts, infrastructure, development technologies, multi-tiered program design and implementation, and current issues and trends.
Financial Accounting Introduction to financial accounting. Examines the nature of accounting, basic accounting concepts, financial statements, accrual basis of accounting, the accounting cycle, monetary assets, inventories, fixed assets, current and noncurrent liabilities, and owner s equity.
Modern Western Civilization Western civilization from the Renaissance to the present, emphasizing cultural and political history.
Resources,Food & Society:A Global Perspective Food and fiber production and distribution problems, policies, and processes analyzed within social, economic, political, and cultural contexts of societies.
Fundamentals of Information Assurance and Security Fundamental concepts in information assurance and security including planning, risk management, cryptography, network security, hardening, people, and physical security.
Advanced Web Application Development Theory and practice of state-of-the-art technologies for application development for the Web including service-oriented and mobile systems.
Database Processing Database concepts, emphasis on relational databases, SQL, data modeling, database design, DBMS functions, database application programming, current trends, design project.
Business Organization And Management Organization theories and the role of managers as leaders. Planning and control systems, decision-making, and human considerations.
Small Group Processes The study of theory and basic concepts in small group communication. Practical experience in group deliberation, decision-making, and problem solving. Focus on developing group communication competence through participation in a group project, perhaps related to civic engagement.
Data Communications Hardware and software used in data communications and networking. Network types, architectures, protocols and standards.
Wireless Communication Systems The theory and practice of wireless telecommunications systems. Emphasis is on application, design, and analysis of wireless systems.
History Of Africa Interdisciplinary, thematic, and chronological examination of the histories of Africa.
Education Technology Skills and concepts related to keyboarding, web page design, desktop publishing, programming concepts, and current/new educational technologies.
Mobile and Cloud Computing Develop, deploy, and troubleshoot mobile and cloud computing applications.
Practical Cryptography and Trusted Systems Practical cryptography and its applications, authentication protocols, access controls and trusted systems.
Technical & Professional Writing I Introduction to technical and professional writing. Includes study of manuals, reports, proposals, audience analysis, formatting, and style.
Composition As Critical Inquiry Rhetorical approach to writing, taught through extensive collaborative drafting, revising, and editing. Emphasis on critical reading and analysis.
Structured Problem Solving Using The Computer Introduction to the development of algorithms for computer systems processing. Emphasis on structured problem solving and the design of problem solutions.
Finite Mathematics Linear functions, matrices, systems of linear equations, sets and counting, probability, statistics, and mathematics of finance.
Composition As Critical Inquiry Rhetorical approach to writing, taught through extensive collaborative drafting, revising, and editing. Emphasis on critical reading and analysis.
Computer Application Programming The design, development, and implementation of computer application systems, including files and GUI.
Introduction To It Professional Practice Researching available positions, interpreting job descriptions, interview skills, preparing a resume, benefits of a Professional Practice experience.
Hardware And Software Concepts Overview of nature and interrelationships of computer architectures, hardware, operating systems, data types, microcontrollers, virtualization, storage technologies, and filesystems.
Principles Of Microeconomics Supply and demand in product and resource markets; behavior of consumers, and of producers under various market structures; international trade.
Elementary Discrete Mathematics Elementary introduction to discrete mathematics, comprising topics relevant to computer science. Logic, algorithms, recursion, enumeration, relations, graph theory (including trees).
Systems Development I Information systems development, development methodologies, analysis and design techniques and tools, relational database concepts.
Information Technology Project Management The processes, methods, techniques, and tools in managing information technology projects including scope, time, cost, quality, and risk management.
Economic Reasoning Using Statistics Introduction to descriptive and inferential statistics with applications in economics. Includes the use of statistical software package on laboratory computers.
Principles Of Macroeconomics Gross domestic product; unemployment and inflation; the banking system; fiscal, monetary, and other macroeconomic policy; international finance and policy.
Cobol As A Second Language COBOL language for students with substantial programming experience in another language. Emphasizes structured problem-solving and programming.
Data Communications Hardware and software used in data communications and networking. Network types, architectures, protocols and standards. Local area and packet networks.
Fundamentals of Information Assurance and Security Fundamental concepts in information assurance and security including planning, risk management, cryptography, network security, hardening, people, and physical security.
Financial Accounting Introduction to financial accounting. Examines the nature of accounting, basic accounting concepts, financial statements, accrual basis of accounting, the accounting cycle, monetary assets, inventories, fixed assets, current and noncurrent liabilities, and owner s equity.
Social, Legal, And Ethical Issues In Information Technology Study of personal, societal, legal, and ethical issues raised by the effects of information technology.
External Data Structures External file design, VSAM, IBM utilities and sort/merge, basic concepts of IBM/MVS operating systems, and extensive study of JCL.
Database Processing Database concepts, emphasis on relational databases, SQL, data modeling, database design, DBMS functions, database application programming, current trends, design project.
Business Organization And Management Organization theories and the role of managers as leaders. Planning and control systems, decision-making, and human considerations.
Small Group Processes The study of theory and basic concepts in small group communication. Practical experience in group deliberation, decision-making, and problem solving. Focus on developing group communication competence through participation in a group project, perhaps related to civic engagement.
Organizational And Professional Speaking Learning experiences in analysis of communication events, group problem solving, interviewing, technical speaking, and persuasive speaking.
Systems Development II Emphasis on analysis and design techniques and tools, project communication, systems development methodologies, interface design. Systems development team project.
Professional Practice: In Information Technology Professional Practice: In Information Technology
Business Communication Business Communication covers principles that establish written and oral communication standards in preparation for the workplace.
English Composition This course emphasizes critical reading, writing, and textual analysis with particular focus on argument and research-based writing.
Applied Calculus I Topics covered include functions, graphs, limits, continuity, properties of exponential and logarithmic functions, differentiation, curve sketching, optimization and the definite integral.
Applied Calculus II Topics covered include antidifferentiation, the fundamental theorem of calculus, functions of two variables, partial derivatives, maxima and minima,Lagrange multipliers and applications to probability and other areas.
Business Pathways I Business Pathways I develops understandings and skills that support an integrated college experience. Focus is placed on Professionalism and Academics. Classes pertain to academic planning, university resources, Lindner College of Business degree offerings, and the themes that our faculty, staff, and employers believe are important to business students.
Business Pathways II
Career Success Strategies This course is targeted to the specific needs of Lindner freshmen, helping students explore possible careerpaths and leverage their varied options for gaining professional experience. To build a foundation for career sucess, the course develops skills vital for executing an effective job search. For example, students will learn how to identify opportunities fitting their career goals, articulate their strengths, skills and interests, effectively compile job applicationmaterials, and expand their professional network
Introduction to Microeconomics The course assists students to learn and comprehend economics as a social science that draws conclusions based on hypotheses, theories, and data in order to understand human behavior, basic microeconomics terms and concepts, including scarcity and choice, equilibrium, efficiency and equity, positive and normative economics, comparative advantage, and specialization, the fundamental economic question of allocating scarce resources, opportunity cost and the production possibility frontier, supply and demand, the function of prices in markets, how markets work and sometimes don't work, including market failure and externalities, the effects of government intervention in markets, how consumers make choices, production theory, the costs of production, firm behavior in competitive markets, firm behavior in imperfect markets, elasticity and its application, markets for resources, the determination of wage rates, interest, and rent, the determination of income distribution, including poverty and discrimination, the determinants of international trade flows, to apply economic.
Introduction to Macroeconomics The course assists students to learn and comprehend economics as a social science that draws conclusions based on hypotheses, theories, and data in order to understand human behavior, basic macroeconomic terminology and concepts, including the distinction between real and nominal magnitudes, the national income accounts, the nature of the business cycle, the determinates of important macroeconomic variables,including the level of income, the level of employment, the unemployment rate, the natural rate of unemployment, the price level, the inflation rate, productivity and the rate of interest, the supply and demand for money, the Federal Reserve System, aggregate demand and aggregate supply, the effects of fiscal and monetary policies, the basics of theories of macroeconomic instability, unemployment and inflation tradeoffs, the effects of the federal government's budget deficit, long run growth and policies to affect growth, comparative advantage, the determinants of foreign trade flows and exchange rates, and their effects on the domestic economy, to apply economic reasoning to better understand and critically evaluate real world circumstances and events.
Essentials of Business I This course is also interdependent with your Business Pathways course.Together, Business Fast Track and Business Pathways enable your integrative first-year experience. While Business Fast Track emphasizes the fundamental concepts of business, Business Pathways focuses on developing your professional skills through your own academic choices, strategic planning and personal development.
Essentials of Business II Essentials of Business II
Intermediate Composition  This course emphasizes critical reading and writing, advanced research and argument skills, and rhetorical understanding of language as it is used in different discourse communities.
Financial Accounting  This course develops foundational knowledge and skills needed to prepare and analyze basic financial statements. Topics include cash, inventory, fixed assets, current and long-term liabilities and equity.  Students will prepare multi-step income statements, classified balance sheets and statements of cash flows.  Students will utilize efficiency and effectiveness ratios, as well as vertical and horizontal analysis, to evaluate financial performance.
Managerial Accounting  This course develops foundational knowledge and skills needed to apply accounting data in planning and controlling business operations. Topics include costs, cost drivers and allocation, contribution margin and managerial budgeting.
Business Analytics I  This course develops fundamental knowledge and skills for applying statistics to business decision making. Topics include descriptive statistics, probability distributions, sampling, confidence intervals and hypothesis testing and the use of computer software for statistical applications.
Business Analytics II It further develops fundamental knowledge and skills for applying statistical and management science models to business decision making. Topics include simple and multiple linear regression, contingency tables, chi-square tests, ANOVA, decision analysis, simulation and risk models and optimization models, including the use of software for business applications.
Legal Environment of Business This course examines the legal environment in which business operates, and develops an understanding of the legal consequences attached to business decision making.  Topics include the study of torts, contracts, property, ethics and the legal system of the United States.
Digital Technologies for Business Information Systems (IS)-and the enabling digital technologies-constitute integral and critical resources for all aspects of a business, from operational efficiency and managerial decision making, to the implementation of transformative business strategies. Businesses spend over $1 trillion annually on technology and related information systems. This course is designed to help students develop a working knowledge of digital technologies, to understand business opportunities created by digital technologies, and to gain awareness of how organizations leverage digital technologies to improve organizational processes and enhance related business strategies.
Introduction to Marketing Marketing activities, analysis, strategies, and decision making in the context of other business functions. Topics include: integration of product,price, promotion, and distribution activities; research and analysis of markets, environments, competition, and customers; market segmentation and selection of target markets; and emphasis on behavior and perspectives of consumers and organizational customers.
Business Professionalism and Character Business Professionalism and Character
Business Finance This is the core finance course required of business majors. Business Finance acquaints students with the fundamental principles of finance. The two key concepts developed in the course will be 1) the time value of money; and, 2)the trade off between risk and return. This is a 'tools' course that will provide you with the skills to analyze a wide range of financial decisions. A major emphasis in the class will be on learning how to think systematically about financial valuation and how to apply these insights to a variety of business (e.g., capital budgeting decisions) and personal (e.g., retirement planning, automobile and mortgage loans) financial problems.
Global Environment of Business This is a foundation course in international business. The objective is to present a selected mix of information which exposes students to cultural, social, political, economic, legal, and financial environments in which American business executives manage their operations in today's complex business environment.
Management In this course, students will learn and apply the basic principles of organizational behavior and theory. We will examine a number of theories and concepts relevant to the problems and issues confronting managers today. Class sessions will consist of lecture, discussion, exercises, self-assessments, and other activities designed to help students learn relevant organizational behavior theories as well as develop vital managerial skills. The course is divided into three modules that examine the varied and interwoven levels of management: individuals, groups and teams, and organizations.
Operations Management Operations Management
Business Strategy Business Strategy
Systems Analysis and Design Prepares students to analyze business problems and to design and manage the creation of technology-based solutions using agile, iterative approaches. Students are introduced to project management and system development methodologies, with a particular emphasis on managing agile development methodologies. Skills developed include process modeling using the Unified Modeling Language (UML). With UML, students learn an object-oriented approach to modeling functional, structural, and behavioral views of an information system.
Database Design and Tools Database Design and Tools
Enterprise System Architecture Enterprise System Architecture
Web Development with .Net Introduces students to application development using HTML, CSS, Microsoft's Visual Studio, ASP.Net and the C# language to develop both stand alone and web-based applications. As part of the course, students will build a functional, data-driven web site and also learn the basics of programming for both traditional (structured programming) and event-driven applications (object-oriented programming).
Advanced Application Development This course introduces the student to the JAVA programming language with object-oriented programming principles. Emphasis is placed on event-driven programming methods, including creating and manipulating objects, classes, and using object-oriented tools such as the class debugger. This will be accomplished in this course through showing the student how to develop applications for mobile platforms, specifically for Google Android devices. Differences between mobile and desktop computing will be examined, sample mobile apps will be dissected, and tool suites for the development of new mobile apps will be covered, framework (Android Application Framework), libraries and integrated development environments (Eclipse).
Business Intelligence Business Intelligence
ENGLISH COMPOSITION I Prepares students for diverse types of college writing. Covers the writing process, general criteria used to evaluate writing, collaborative writing, and rhetoric, especially audience analysis.
ENGLISH COMPOSITION II Prepare students for college writing by focusing on argumentation, research, and the critical thinking required to argue effectively.
PUBLIC SPEAKING A beginning study of the principles of speech communication as they relate to speaker-audience communication. The student is provided an opportunity to develop the art of audience and subject analysis, research, critical thinking, organization, language, and delivery of speeches.
M LIT BEFORE 1865 This course traces the development of American literature from its beginning through 1865 by studying the works of representative writers.
HY OF WESTERN CIVILIZATION I History of humankind, emphasizing the development of the West to c. 1600 C.E. Topics may include Mesopotamia and Egypt, Ancient Greece and Rome, the origins of monotheistic religions, and medieval Europe.
ATMOSPHERIC PROCESSES Introduces students to the natural science branch of geography. Emphasizes Earth-Sun relationships, weather and climate.
CHEMISTRY-ITS ROLE IN SOCIETY Chemical principles to allow understanding of the technical aspects of air and water pollution, chemical solutions of the energy crisis, the polymer industry, drugs, nutrition, and genetic engineering.
COASTAL GEOMORPHOLOGY An introduction to coastal sediment processes and their applied coastal geomorphology with emphasis on waves, tides, sediments, and their interactions including the impacts of anthropogenic influences.
CALCULUS AND ITS APPLICATIONS Introduction to calculus with an emphasis on problem solving and applications. Key concepts are presented graphically, numerically and algebraically, although the stress is on a clear understanding of graphs and tabular data.
CALCULUS I The course provides an introduction to calculus with emphasis on differential calculus. Topics include limits of functions, derivatives of algebraic and transcendental functions, application of the derivative to curve sketching, optimization problems, and examples in the natural sciences, engineering, and economics.
PROF EXPERIENCE I An introduction to career success tools including: personality and career interest inventories, steps to succeed basic resume preparation, business ethics, personal branding, university and community involvement and other career preparation activities.
BUSINESS ANALYTICS II3 A second course in quantitative data analytics in business decision making utilizing methods of analysis including statistical inference, predictive, modeling, forecasting, correlation and regression analysis. It further develops fundamental knowledge and skills for making data driven business decisions including the use of computer applications for problem solving.
DISCRETE MATH STRUCTURES This course is an introduction to discrete mathematics for students majoring in computer-related areas. Students will be introduced to concepts and methods that are essential to theoretical computer science. A strong emphasis is placed on mathematical reasoning and proofs. Topics include sets, functions, induction, recursion, combinatorics and graphs. Students must have sufficient mathematics placement exam score.
PRIN OF MICROECONOMICS Functions of the price system in a market economy; role of households and business firms in mobilizing resources to meet human needs. The functional and personal distribution and use of income. Relevant problems are discussed.
PRIN OF MACROECONOMICS Economics as a science; its nature and functions. Analysis of the American economy from the macroeconomic viewpoint, stressing full employment, monetary and fiscal policy, national income accounting, and their application to current problems and issues.
MANAGEMENT THEORY AND PRACTICE Theories of organizational structures, practices, and behavior, and the effective management of organizations. Emphasis on developing patterns and strategies of organizational management in a dynamic environment as affected by the interaction of material and human resources using the technique of applied social and management sciences.
ADV APPLICATION DEVELOPMENT This course explores advanced topics in visual applications development. Emphasis is placed upon developing increased program functionality and connectivity with local and remote databases. Other topics: integrating programming components and libraries, object-oriented application development and testing methodologies, and using an object-oriented approach for multi-tiered applications. Programming projects are required.
HUMAN COMPUTER INTERFACE3 cr Students will study the concepts of human-computer interaction and interface design. Topics include: detailed human-computer interaction concepts, modern graphical user interface models, and interface usability testing. Students will use rapid-prototyping tools to develop and test a typical user interface.
SPECIAL TOPICS Advanced selected topics in information technology.
HEALTH INFO CLINICAL ENVIRONME This course provides an overview of concepts, terms, organization, and processes associated with patient care and clinical environments as they pertain to health informatics. The entire process of how a person accesses, moves within, and exits the system both as in inpatient and outpatient to obtain care.
HEALTH INFORMATICS This course provides an overview of the concepts, terms, tools, and architectures associated with health informatics as applied to healthcare delivery. Topics include: electronic record systems, computerized physician order entry, health system standards, terminologies, workflow modeling, security and privacy of clinical data, clinical reporting, and the impact of information technology use on the quality and efficiency of health care delivery and outcomes.
HEALTH DATA SECUR/COMPLIANCE This course involves a thorough examination of the security and privacy requirements of the Health Insurance Portability and Accountability Act (HIPAA) and the implementation of these requirements in the clinical environment. Students will learn how to address security issues from system development all the way through post-implementation, how to evaluate systems for vulnerabilities, and how to identify protected health information and covered entities.
HLTH DATA MGT & DECISION SUPP This course focuses on the design and management of electronic medical record systems and clinical decision support systems. Course content related to electronic medical record systems includes architectural components, technical design issues, and management; and, content related to clinical decision support systems includes decision support roles, extracting useful information from data, and legal and regulatory restrictions.
DECISION MAKING - SMALL GROUPS Theory and practice in leading and participating in small group decision making Special focus on group problem solving and the management of conflict in small group decision-making meetings.
TECHNICAL WRITING - W The purpose of this course is to train students in the kinds of written reports required of practicing professionals, aiming to improve mastery of the whole process of report writing from conceptual stage through editing stage.
BEGINNING PROGRAMMING A first course in programming using a visual, event-driven programming language. Coverage includes algorithmic problem solving, fundamentals of programming, procedures, decisions, repetition, and arrays.
INFORMATION TECH IN SOCIETY A discussion of personal, local, national, and global impact of information technology on ethical, legal, and social issues.
DATA COMM AND NETWORKING An introduction to data communications, computer networking and network operating systems. Topics include: basic concepts of data transmission, network architectures, communications devices, and communication protocols.
DATABASE DESIGN-DEV-MGT Analysis, design, and development of desktop database systems. Coverage of normalization concepts, DBMS models, E-R/Semantic modeling, and query processing.
ENIOR CAPSTONE EXPERIENCE-W A comprehensive team project will be completed and documented. Writing assignments will reinforce the importance of life-long learning, leadership skills, and the ethical issues of computing as well as appropriate resume and job application cover letter creation.
CIS SENIOR SEMINAR A series of mini-seminars designed to prepare graduating seniors for transition to professional careers in computing or graduate study and to assess student learning outcomes in the curriculum. Mini-seminars would include, but would not be limited to: resume development, interviewing tips and techniques, career planning, professionalism and ethics in the workplace, and advanced graduate study and professional development.
INFO SYSTEMS PROJ MANAGEMENT This course examines the principles and techniques of project management from an information systems perspective. Major topics covered include project context, project selection, and project planning.
IS STRATEGY AND POLICY This course provides the top management, strategic perspective for aligning competitive strategy with information systems. Issues include the development and implementation of policies and plans to achieve organizational goals, including security policy.
DATABASE FOR INFO SYSTEMS The course builds on relational database and programming concepts by exploring the analysis, design, and implementation of more complex database systems. Topics include advanced data modeling, advanced query design, and application development in a database programming environment.
INFO SYS ANALYSIS AND DESIGN-W A thorough examination of the analysis and design of computer information systems from the systems analysts view. The course will use an established software development methodology. At each step in the software development life cycle, both the methodologies used and the documentation required will be examined.
INTERMEDIATE PROGRAMMING A second course in visual, event-driven programming that builds on the CIS 115. Topics include arrays, sequential files, random access files, structured exception handling, use of LINQ, object-oriented programming, debugging, and additional controls and objects.
SYSTEMS ARCHITECTURE This course introduces students to Information Technology hardware and systems software concepts. Topics include: computer hardware, operating systems, system software, hardware and software integration, operating procedures, system performance, security/safety, and compatibility.
INFO SYSTEMS IN ORGANIZATIONS An overview of information systems topics from an organizational and managerial perspective. Topics include current information technology and systems, such as the Internet and its organizational impacts; the emergence of global economy and digital firms; and the ethical and social impacts of information systems, such as privacy, intellectual property rights, and liability. Issues and strategies regarding information systems planning, systems development, decision making, and using IT for competitive advantage are discussed. Throughout the course, students will investigate the strategic uses of information technology in current industry-specific situations.

Introduction to Accounting I Theoretical and technical facets of financial and managerial accounting for business. Accumulation, analysis, interpretation and uses of accounting information.
Introduction to Accounting II Theoretical and technical facets of financial and managerial accounting for business. Accumulation, analysis, interpretation and uses of accounting information. Course will focus on managerial accounting.
Foundations of Business Introduces students to basic business environments and business functions and practices. Builds awareness of corporate social responsibility and ethical business behavior. Helps students gain an integrated awareness of business and practice analytical skills needed for their advanced business courses and careers.
Differential Calculus and Optimization for Business Univariate and bivariate differential calculus and optimization of algebraic functions that model business phenomena.
Winning Presentations Enrollment is restricted to School of Business freshmen, sophomores and juniors in the foundation or advanced programs. Why are some presenters bad, some good and others great? Why do some people have more “presence” than others? What leadership skills work in a room full of people who are not on the same page?
Principles of Microeconomics A course designed to acquaint the student with a theoretical and practical understanding of the economic institutions and problems of the American economy with a focus on microeconomics.
Principles of Macroeconomics A course designed to acquaint the student with a theoretical and practical understanding of the economic institutions and problems of the American economy with a focus on macroeconomics.
Digital Literacy: Computer Concepts, Internet, Digital Devices Topics include but are not limited to computing devices -- hardware and software -- skills for using and evaluating Internet content and security with digital devices.
Digital Literacy: Word Processing Skills Topics include but are not limited to document preparation and modification, tables and graphic enhancements, collaboration, formatting for research papers, newsletters, forms, and linking to other applications. The course will help students prepare documents to support professional tasks and other VCU course work.
Digital Literacy: Spreadsheets Skills I Topics include but are not limited to the entering of text, numbers and formulas; formatting; moving; copying; recalculation; retrieving; charting; saving; and printing with introductory coverage of data manipulation.
Digital Literacy: Spreadsheet Skills II Topics include but are not limited to advanced formulas, statistical and financial functions, multiple worksheet/workbook management, macros and pivot tables.
Focused Inquiry I Utilizes contemporary themes to give students opportunities and practice in writing, critical thinking, oral presentation, collaborative learning, information retrieval and evaluation, and social and civic responsibilities.
Focused Inquiry II  Focuses on practice in writing in a variety of genres, framing writing according to both purpose and audience and identifying academically valid sources.
Inquiry and the Craft of Argument  A research and writing process course that emphasizes critical analysis, elements of argument, inquiry-based research skills, writing conventions of academic argument and the presentation of argument and research into new mediums.
Mathematical Structures An introduction to mathematical logic and set theory, including applications in Boolean algebras and graph theory.
Introduction to E-business Technologies Introduces students to the technologies used in e-business. Students will be introduced to current or emerging Web languages, e-business software development environments, Web application servers and other packages used in creating and running Web applications.
Organizational Communication This course includes dealing with written business messages, report writing, job-search techniques, nonverbal communication, oral presentations and intercultural communication. The focus will include both theoretical constructs and skill development.
Business Knowledge Exam This course consists of a capstone exam covering general business knowledge in the subjects of accounting, economics, finance, information systems, management, marketing and statistics. Students may be asked to complete follow-up activities in the areas in which they have weak knowledge in order to earn a passing grade.
Financial Management Principles of optimal financial policy in the procurement and management of wealth by profit-seeking enterprises; the application of theory to financial decisions involving cash flow, capital structure and capital budgeting.
Creativity and Ideation Course explores the individual, social and institutional contexts for creativity and ideation.
Managing People in Organizations Introduces students to the management of people in organizations, focusing on the managerial skills, knowledge and activities needed for a successful business operation. Topics include planning, organizing, staffing and leading; effectively utilizing human capital to achieve an organization’s objectives in today’s competitive environment.
Strategic Management (capstone) This course is restricted to business majors with senior standing. Integrative course to analyze policy issues at the overall management-level involving functional areas such as production, finance and marketing, in context with the economic, political and social environment.
Marketing Principles An introduction to the activities, set of institutions and processes for creating, communicating, delivering and exchanging offerings that have value for customers, clients, partners and society at large.
Business Statistics I Statistical thinking, concepts of variability, sampling, descriptive measures, contingency tables, probability and introduction to regression, correlation, confidence intervals and hypothesis testing, with implementation in spreadsheet software.
Business Intelligence and Data Mining Modeling business-related problems using information systems tools and quantitative techniques. Focus is on extraction, translation and loading of relevant business and external data, quantitative analysis and presentation of findings.
Legal Environment of Business Basic legal concepts applicable to business, including the legal aspects of operating a business, contracts, employment relationships, sales, and bailments and commercial paper. Also includes ethical considerations and social and political influences.
Systems Analysis and Design Examines the concepts, tools and techniques used to develop and support computer-based information systems. Systems planning, analysis, design and implementation are covered. Behavioral and model building aspects of systems development are emphasized throughout.
Information Systems Planning and Project Management Concentrated study of planning methods and techniques required for defining, planning, integrating and implementing information technology projects consistent with the organizational strategic plan and mission.
Business Statistics II Statistical methods employed in the collection and analysis of business and economic data. Continuation of statistical inference for means and variable relationships using t-tests, analysis of variance, contingency tables, regression and correlation analysis with emphasis on problem formulation and interpretation of computational results.
Information Technology Infrastructure Principles of computer hardware and software architecture, network communications technologies and security. Introduction to data structures.
Programming Object-oriented programming and algorithmic design are introduced using C# and the .NET Framework. Emphasizes building business applications using the .NET Framework Class Library and the components, events and message handling therein. Intermediate Web application development is also covered.
Database Systems Designed to prepare students for development of systems involving databases and database management.
Fundamentals of Data Communications Computer networks and data communications. Provides an understanding of the underlying concepts of computer networking. Emphasis is placed on terminology, techniques and issues in networking systems.
Projects in Information Systems Appropriate computer-assisted software engineering tools are used throughout the project, from requirement specification to implementation and testing.
Information Technology Auditing The course teaches the role and objectives of information technology audits and the processes that are necessary to properly conduct an IT audit. Case studies introduce students to the process of interpreting audit evidence.
Introduction to Enterprise Resource Planning Systems This course allows students to develop an appreciation of the impact of enterprise resource planning systems on businesses and to understand the issues involved in the design, implementation and maintenance of these systems. Students also develop practical skills in the use of a commercial enterprise resource planning system.
Topics in Information Systems An in-depth study of a selected business topic, to be announced in advance.
First-Year Seminar: Tech Think The First-Year Seminar is a discussion/experience-based course intended to assist in the transition from high school to university life, and to encourage development of academic, personal and spiritual aspects of the student’s life. Each seminar is unique, depending upon the instructor and/or program in which it is offered. This course explores how scientific and technical professionals approach significant issues such as faith and religion. Students will engage in service learning, as well as discuss and reflect upon aspects of philosophy and theology that relate the typical approaches taken by technically-oriented persons toward issues of belief and spiritual practice.
Problem Solving & Computer Programming The course focuses on problem solving and its relationship to computer programming. The student is introduced to the tools for developing the solution to a problem, and its subsequent implementation as an algorithm in a computer program.
Problem Solving & Computer Programming Lab The course focuses on problem solving and its relationship to computer programming. The student is introduced to the tools for developing the solution to a problem, and its subsequent implementation as an algorithm in a computer program.
Applied Mathematics for Business The course provides a mathematical foundation for students majoring in business. Topics include linear, quadratic, exponential, and logarithmic functions; mathematics of finance; limits; differentiation; and applications of differentiation.
Foundations of the Business Enterprise This is the gateway course to the business program and helps students to gain a solid understanding of the components of a business, its external environment, and the interactions between them.
Foundations of Theology and Christian Morality Rooted in the richness of the Catholic Intellectual Tradition, this course explores the religious experiences of the human person and their relationship to Christian moral living.
College Composition The principles of logic, rhetoric, and language and their use in written discourse. Application of these theories to numerous reading and writing assignments.
Principles of Systems An overview course introducing the concepts and value of data, information, and systems to the decision-making and strategic capabilities of an organization
Object-Oriented Programming The course is aimed at developing advanced object-oriented programming skills, and assumes a foundation in the basic syntax of Java. The student will explore the basis of software development using the major constructs of encapsulation, polymorphism, inheritance and dynamic binding. Topics include GUI objects, event-driven programming, threading, networking and exception handling
Object-Oriented Programming Lab The course is aimed at developing advanced object-oriented programming skills, and assumes a foundation in the basic syntax of Java. The student will explore the basis of software development using the major constructs of encapsulation, polymorphism, inheritance and dynamic binding. Topics include GUI objects, event-driven programming, threading, networking and exception handling.
Critical Analysis and Composition Development of the reading, research, and writing skills needed to use library resources to solve problems in a variety of disciplines, and relate these solutions to appropriate audiences.
Principles of Accounting I This course introduces the main aspects of the accounting structure. The fundamental accounting principle is presented in the form of the balance sheet equation and is followed by the logical development of the subject of debits and credits, journal entries, special journals, and specific account classifications.
Principles of Macroeconomics This course develops tools for an understanding of macroeconomic issues and theory, including the application to current social issues such as unemployment, economic growth, and inflation. The role of money and financial institutions are also examined. The use and effectiveness of economic policy to control the macroeconomy is explored.
Linux Programming This course introduces the students to the Linux boot and login processes, basic process management techniques, file system, user controlled software build process, and basic application software architecture using the operating system.
Introduction to Networks The theory and techniques of data communications design and analysis are studied. Topics include data communication concepts, terminology, and standards. Error correction and detection, LANs, ISO/OSI layers are also an integral part of this course.
Discrete Mathematics 1 Logic, sets, methods of mathematical proof, functions, mathematical induction, counting methods, recurrence relations, graphs
Project Economics This course develops the techniques necessary for understanding economic price theory, the time-value of money, and the basic issues surrounding organizational architecture. These include issues surrounding supply and demand, cost-production, decision making and market models.
The Bible: An Introduction Students will explore the structure, theological themes, literary forms, and historical context of the Judeo-Christian Bible using methods of Biblical interpretation.
Web Management and Design The course aims at providing an introduction to the tools and knowledge necessary to design and manage a web site on the Internet. Topics include servers and clients, HTML, CGI scripting, languages, business and ethical aspects of the web.
Database Management and Administration Develop skills in query statements usage for programming, database design, as well as implementing and managing SQL servers. The core concept of SQL database design, usage and server configuration will be first introduced.
Information Technology and Operations An in-depth, experiential course focusing on hardware and systems maintenance procedures. Topics include troubleshooting options, system configuration, system recovery, data and network maintenance, and general management capabilities to enable system operations.
Applied Statistics Introduction to statistics and probability designed for all majors. Topics include measures of central tendency and dispersion, combinations and permutations, discrete and continuous probability distributions, normal probability distributions, sampling distributions, testing hypotheses, Chi-Square applications, linear regression and correlation.
History Without Borders The most important ideas, issues, problems, and developments that mark the changing fortunes of the West’s interaction with the world from the Seventeenth Century to the present.
Introduction to Philosophy An introduction to the study of philosophy. Beginning with the dawn of philosophical awareness among the ancient Greek philosophers, the course surveys both traditional and modern approaches to the philosophical understanding of the human condition.
Technical Communication This course is an introduction to the exploration of the procedures of preparing a public speech with emphasis on personal credibility, audience analysis, and effective delivery techniques.
Systems Analysis and Design An introduction to the role and responsibilities of a systems analyst. Students examine systems by analysis, modeling, and design at the enterprise, process, logical, data, and technology levels. Optionally included topics are feasibility analysis, technology evaluation, project management, object-oriented analysis.
Web Programming and Implementation Focuses on the development of web applications with user interface conventions that facilitate viewing, searching, and changing of information stored in a relational database.
Requirements and Project Management Focusing on the management of software requirements and projects, particularly teams andstakeholders, the course includes coverage of requirements elicitation, analysis, documentation, and negotiation. It also includes the roles and methods of effective technical project management. Typical coverage includes the cost of quality, and its implications for requirements and project management.
Network Design & Management An advanced network design course covering contemporary network computing, including data, voice, multimedia, WAN and intranets. Detailed discussions along with hands-on laboratory experience with various hardware and software components that comprise these networks. Network analysis to monitor traffic flow and to optimize overall network design is included.
Network Design & Management Lab Network Design & Management Lab
CIS Leadership Seminar The Leadership Seminar introduces students to a three-dimensional model of leadership, including a repertoire of leadership skills and means of using those skills responsibly in the various communities to which they belong. In addition, the course helps students explore the relevance of leadership skills in the leadership process.
Managing IS in the Cloud A project and team-based course emphasizing the practical issues in implementing distributed and multi-tiered systems at the organizational, function, and user-support levels.
CIS Professional Seminar The course focuses on current issues facing engineering and software professionals. Included with the focus, is an introduction to technical speaking as well as a review of trends in the software, computing and other engineering fields, job prospects, political issues, team and workplace behavior.
Philosophy of God An introduction to the philosophical study of God, based largely on the tradition of Christian philosophy.
Essentials of UNIX Administration Essentials of UNIX administration such as account management, file structure, security features are presented.
Intro to Enterprise Architecture A project and team-based course emphasizing the practical issues in the design and implementation of information systems. The rational integration of technology options across an enterprise given organizational needs and constraints is emphasized.
Server Management This course focuses on the configuration of networks for internet services, and how to deploy and maintain internet servers on multiple platforms. The course includes extensive laboratory work to support the installation and configuration of hardware and software to support networking, servers, and security for internet services, particularly on Windows and UNIX platforms. The course also includes discussion of the ramifications of internet service technologies. The course also includes building Network Balanced and High Availability Clusters that are the building blocks of forming a cloud.
Mobile Application Development II A project-based course for developing mobile applications for integrated devices such as iOS, Android and other mobile computing platforms. Includes introduction to the coding and development platforms for one of the major mobile platforms (e.g., iOS or Android), unit testing, source code control, and deployment includes the development of useable applications.
Marketing in the Global Environment This course helps students to understand and apply the fundamentals of marketing from a global perspective. The major strategic decisions of marketing are covered including capturing marketing insights, connecting with customers, shaping market offerings, delivering and communicating value, and creating successful long term growth. These topics, along with the examination of buyer behavior, marketing research, marketing planning, and the societal, consumer and ethical issues of marketing are examined through readings, experiential exercises, class discussions, and a comprehensive marketing planning project.
Senior Design I The Liberal Studies senior capstone is the culminating experience of the Core curriculum and therefore requires students to integrate knowledge and skills from their major study areas, Liberal Studies courses, and co-curricular experiences.
Philosophy of Ethical Responsibility The subject matter of ethics is “the good life and how to live it.” Students will examine a variety of influential approaches to ethics, and will gain skill in applying ethical theory both to practical ethical issues in daily life, and to some of the urgent ethical issues in contemporary society
Management Theory and Practice This course will introduce students to the principles of management. From the organizational and behavioral aspects to process and management techniques of everyday business, this course is designed to give students a social, historical, legal, economic, and environmental knowledge and understanding of today’s complex business world. The crux of management can be summed up as the combination of interpersonal skills, work competence, specific tools and methods (e.g., Project Management, Quality Management), understanding of business processes, their measurement and interdependency as well as the ability to successfully cope within an ambiguous setting.
Introduction to Business Programming – COBOL A competency-building course focusing on the basic syntax and semantics of the COBOL language. Programming projects are used to introduce the student to system design, documentation, and coordination of programs.
Senior Design II Lab The completion of the capstone design sequence. Students develop and deliver a completed end product. Emphasis is on working effectively in cross-disciplinary teams. Course topics include organizational behavior, quality assurance, documentation, design process and process metrics, risk management, written and oral presentation skills, ethical issues in the digital world.
Advanced Multi-Media The course covers advanced multimedia concepts such as graphics, animation, video and sound; as well as the tools used to create multimedia applications. In addition, the course presents the design principles and management skills needed to develop dynamic, interactive multimedia products.
Principles of Accounting II This course continues the focus on the application of accounting principles inside the enterprise, i.e., the proprietorship, the partnership, and the corporation. An additional focus is the use of accounting information to better aid in the planning, controlling, and evaluation of company performance.
Art of Film The components of film art, primarily as seen in short films; analysis of techniques and meaning of experimental, documentary, animation, and other types of film.
Introduction to Literature This course helps students develop an appreciation, understanding and evaluation of literature as it reflects human experience in diverse cultural contexts. The course focuses on the essential elements of prose, drama, and poetry

Introduction to Computing (or test out) Basic principles of computing, including study of the major components of a computer system. Introduction to software packages such as word processors, spreadsheets, databases, and languages.
Computer Science I Introduction to programming and computer science through lab and lecture. Simple and structured data types and program control structures. Problem analysis, algorithm design, and computer implementation using a high-level language.
Hardware and Software Principles of computer hardware and software will be presented with the theoretical underpinnings, installation, and configuration. This course provides the hardware/software technology background to enable systems development personnel to understand tradeoffs in computer architecture for effective use in a business environment including system architecture for networked systems and operating systems.
Internet Media and Programming Study of the technology of Internet media, including graphics, video, audio, XML, and other emerging Internet technologies. Examines advanced features of the hardware and software requirements of those media. Also covers the implementation of those technologies through Web interface development.
COBOL Introduction to the COBOL language; file management techniques; mid-range computer processing; program design, testing and implementation methodology with emphasis on structured programming. Topics include validation, reporting, file updating; tables; character manipulation; SORT and COPY statements; the Report Writer feature.
APPLICATION DEVELOPMENT IN VISUAL BASIC Builds on a student's knowledge of programming to explore applications designed for PCs and networks. Emphasis is placed on GUI development and accessing data in a legacy environment. Numerous programming assignments give experience using Visual Basic in a programming environment, designing interactive forms, and using objects and controls to write applications.
PROFESSIONAL RESPONSIBILITIES AND PRACTICES History of the computing profession. Local and global impacts of computing technology on individuals, organizations and society. Professional ethics and responsibilities. Personal privacy, security and legal issues. Preparation for an internship in the computing field.
Systems Analysis and Design Examines the system development and modification process. Emphasizes factors for effective communication with users and interpersonal skill development. Structured and object-oriented analysis and design, use of modeling (CASE) tools, methodological life cycle, and project management standards.
Network Systems Management Provides information systems students with the knowledge and skills necessary to manage the sophisticated Local Area Networks available today. It approaches the subjects of network design, installation, and management from the corporate view of networking.
Database Management and Implementation Covers information systems design and implementation within a database management system environment. Students will design and construct a physical system using database management system software to implement the logical design. Examination of the system development and modification process. Emphasis on factors for effective communication with users and interpersonal skill development.
Information Systems Project Management This course covers factors necessary for successful management of information systems development or enhancement projects. Both technical and behavioral aspects of project management are applied within the context of an information systems development project.
Management of Information Systems This course integrates the information needs of the organization with the technology of information systems. Administration and policy are applied to specific areas of information systems management.
Information Systems Project  Formal evaluation of a software/hardware package or of a proposed or existing system, or the analysis, design, and implementation of an application system. Formal reports and presentations required.
Internship Internship in a computing situation with individual faculty supervision to allow students to apply academic knowledge to actual and professional experience.
WEB APPLICATION PROGRAMMING The tools and techniques for developing dynamic Web applications. Topics include scripting languages, markup languages, database connectivity, Web standards, and security issues.
Software Development Tool Advanced online programming, incorporating contemporary multiplatform computing technologies, application development environments, multi-and/or cross-platform database applications, and application data integration. The course may utilize one or more representative application development environments.
WIRELESS NETWORKS AND SECURITY A multidisciplinary, hands-on oriented wireless networks and security course that integrates topics at all layers of wireless networks and mobile systems, starting from wireless physical layer through application layer. The course presents security techniques employed in common wireless systems and emphasizes hands-on learning through experiments, case studies, and design projects.
System Security Security of computer systems, including operating system, database, and network security. Coverage includes common attacks and defensive techniques as well as system monitoring and methods to test system security. Theory and applications of various techniques will be explored.
Problem Solving Using Spreadsheets An introduction to Excel spreadsheets and its use as a tool in problem solving and applications.
Data Analysis Tools and Techniques This course will introduce the student to key technologies used for collecting, cleaning, manipulating, storing, analyzing, visualizing, and extracting useful information from large and diverse data sets. Upon completion of this course, students will be better prepared to assist organizations in facing the challenges of large scale data analytics.
Data Mining Data mining is the application of computational techniques to the discovery of useful information in large data sets. This course will provide a hands-on study of computational methods for such knowledge discovery. Topics include clustering, classification techniques, and selected data mining software.
Principles of Financial Accounting Introduction to financial accounting. Emphasizes the importance of accounting information, how accounting information is produced, and how this information is used in making decisions about organizations.
Principles of Managerial Accounting This course addresses accounting information in business. Topics include cost concepts and behavior, product and activity-based costing, cost-volume-profit relationships, variable costing, budgeting/performance analysis, standard costs/variance analysis, and relevant costs for decision-making.
Legal Environment for Business The legal, regulatory, and ethical environment in which business operates is explored, with emphasis on the regulation of business, international law, environmental law, ethics, the political and social factors influencing case and statutory law, contracts, employment law, and business organizations.
Speech Focuses on oral communication. The student will examine practical programs in speech preparation, delivery, informative and persuasive strategies, and listening and responding to messages of others. Most of what a student gains from this course will come not only from reading a text but also from in-class projects, simulation exercises, and skills training.
Introductory Microeconomics  Focuses on the interactions among households, producers, and governments in market economies. Applies fundamental methods of economic analysis to topics such as household spending and saving patterns; producer pricing, profits, and organization; wages and income distribution; investment decisions; health care and insurance; government taxes, spending, and regulation of markets.
Managerial Finance This course presents the financial policies and practices that lead to the maximization of the value of the firm. Major topics include financial statement analysis, time value of money, asset valuation, sources and costs of financing, capital budgeting analysis, and risk and return.
Business Processes and Management Information Systems This course is designed to give the student an understanding of the importance of common business processes and their relationship with information systems in modern companies. Gaining insight into the integration that good information systems, specifically Enterprise Resource Planning (ERP) systems, foster in an organization.
Concepts of Management The management process through an examination of its functions of planning, organizing, motivating, and controlling work and work performance in a business organization. Theoretical concepts and applications through the use of selected case materials.
Marketing Management An introduction to marketing. Provides a general understanding and appreciation of the forces operating, institutions employed, and methods followed in marketing products and services both domestically and internationally.
Survey of Calculus A study of the concepts of calculus for students majoring in business, economics, life sciences, and social sciences. Differentiation and integration of algebraic, exponential, and logarithmic functions. Emphasis on applications. Fulfills Foundations - Mathematical Sciences.
Introductory Applied Statistics  A technique-oriented approach to statistical problems with emphasis on applications. Descriptive statistics, probability distributions, estimation, testing hypotheses, t-test, regression and correlation, chi-square tests, and one-way analysis of variance. A statistical software package will provide computational assistance. Fulfills Foundations - Mathematical Sciences.
Intermediate Applied Statistics Project-oriented introduction to major statistical techniques using a statistical package such as SAS or SPSS. Hypothesis testing, t-test, multivariate regression, analysis of variance, analysis of covariance, chi-square tests, and nonparametric statistics.
Business Communication Training in communication skills for business and the professions. Assignments cover varieties of information management, including handling research, gathering data, writing reports, manuals, directions, and correspondence, and making oral presentations.
Introduction to Information Technology Fundamentals of Information Technology provides the student with an understanding of computers and the impact of information technology on organizations and society. The complexity of designing effective information systems is discussed, and the student learns to compare, analyze, and evaluate information. Students will examine social, legal, and ethical issues involving privacy, intellectual property, health concerns, and accessibility. The course involves both an overview of technological concepts and student practice in solving typical information-related problems. The course includes the use of Excel and various other software.
Reading & Writing Strategies This course introduces the integrated nature of the communications skills program and establishes the importance of communications for a successful life and career. Students are made conscious of the behaviors and communication patterns typical of the groups to which they and other students belong; they learn to see themselves as audiences for others as they explore how different audiences have different patterns of communication and different expectations; they are encouraged to value and respect differences in communication patterns exhibited by others; and they are encouraged to adapt to the patterns of behavior and communication expected in academic and professional life. Though all the communications skills are introduced and practiced, reading, interpreting, and writing are emphasized.
Survey of Economics Survey of Economics is an introductory survey of the major elements of economics. Students will learn to apply economic analysis to understand macroeconomic and microeconomic issues. Among the topics covered are the operation of markets, fiscal and monetary policies, and international economics. This one semester course fulfills the Economics component of the Robert Morris University Core.
General Psychology This course is a survey and examination of principles of human behavior and methods of scientific approach to understanding growth and development. The course deals with the complexities of behavior and helps the student to better understand himself and his environment.
Humanities: Art & music This class will serve as an introduction to the arts focusing primarily on the Western Cultural Tradition and will explore the characteristics, style, classification, form, and content of art through critical analysis and relationship to historical events. The student will be exposed to the arts, especially those which have established the foundation for the Western canon; however, it is the main objective of the course to aid in the development of the student's ability to think critically.
Introduction to Web Development Web Design is an intermediate level course that integrates Cascading Style Sheets (CSS), the JavaScript programming language, and Dynamic HTML into a deliverable web-based eCommerce or Transactional Processing System interface. CSS's display and print properties are presented in detail through various practical Web design projects. Student will be able to organize complicated web page designs, position HTML elements, control visibility and presentation of HTML layers similar in quality found in the desktop publishing environment. By using the Document Object Model, students will use JavaScript client-side programming language to transform static web pages into applications that will interact with the web user, enhance document navigation, process data before submitting to a server and store state information through the use of cookies.
Visual Basic Programming This course provides the student with experience in using the microcomputer as a problem-solving tool. The primary feature is the development of well-structured, user-friendly applications using the Visual Basic programming language. Concise problem analysis, logic development, and programming techniques are emphasized. Programming competency in Visual Basic is developed and applied to a wide range of potential business and other applications. Topics ranging from introductory programming concepts through various file creation/manipulation/update applications are presented and practiced.
Argument & Research This course reinforces the integrated nature of the communications skills program and the significance of communications for a successful life and career. By learning to analyze and understand their professors as audiences, students are made conscious of the communications and behavioral expectations of their professors and of the reasons for variations in those expectations. While acquiring strategies for researching, interviewing, interpreting, and speaking, students focus on principles of logic, critical thinking, argumentation, and audience analysis necessary to create their own arguments as well as critique the arguments of others.
Statistics This course is designed to give the student a general understanding of statistical tools as they are used in making decisions. The examples and exercises emphasize interpretation and are drawn from a wide range of actual situations. Excel computer software is used to simplify complex computations. The first section covers analysis decision-making through the use of summarized descriptive data, both ungrouped and grouped. This includes the study of frequency distributions, measures of central tendency and measures of dispersion.
Intro to Financial Accounting This course is designed to introduce the student to accounting terms and principles and familiarize the student with the preparation and use of financial statements and other financial information. The focus of this course is on accounting data generated for external users of financial information. The accounting environment is examined along with the basic concepts which govern the recording and reporting of economic events in the accounting records.
Visual Basic Programming II This course assumes prior programming experience in Microsoft Visual Basic and deals with designing and implementing Visual Basic applications in the context of actual information systems in organizations. Topics covered include the design and development of client-server applications, and writing programs that interface with external data structures, such as sequential and random data files, large scale databases, Internet Applications, and standard recurring business reports.
Microcomputing Technology This course focuses on installing, supporting, securing, and troubleshooting personal computers, laptops, mobile hardware, and Windows 7/8 operating systems. Hands-on virtual simulations will be an important instructional component of this course. Support and troubleshooting processors, RAM, device interfaces, storage devices, and storage architecture and I/O devices, such as, SATA, Solid State devices, SCSI, optical devices, RAID, NAS, SAN, barcode readers, digital cameras, webcams, graphic tablets, motion controllers, TV tuners and video systems will be covered. Installation, support and troubleshooting wired and wireless TCP/IP4/IP6 home networks, network devices and applications, Virtualization and cloud fundamentals, Linux, MAC OS X, .g., Android, iOS, and Windows Mobile operating systems and devices will be introduced.
Finite math & Applied Calculus Directed toward students in the bachelor of science in business administration and other disciplines outside of the School of Engineering Math and Science. Topics covered include systems of linear equations, matrices, linear programming, differential calculus, exponential functions and the mathematics of finance. The primary focus is the application of each of these topics.
World Civilization I This course will survey the political, social, and cultural development of world civilizations from prehistory to the dawn of European exploration and expansion. Topics will include the development of civilizations in Europe, Asia, Africa, and the Americas. Special attention will be given to the unique characteristics of individual regions and cultures, as well as to common characteristics found throughout the world's societies.
Public Speaking & Persuasion Public Speaking & Persuasion
Managerial Accounting This course deals with techniques of interpreting accounting data for decision making. Topics emphasized are the analysis and interpretation of reports; the establishment of operating financial standards; the measurement of managerial performance; the use of budgets in managerial control; the use of cost data and interpretation of cost reports; and the use of quantitative data in the formulation of managerial policies.
Network Technology & Mgt (N+) This practical "hands-on" course is aimed at those students that have passed A+ Certification or have equivalent knowledge. On course completion, students should be able to: install and configure a network card; define the concepts of network layers; understand principles of extending networks and interconnectivity; understand and implement the TCP/IP protocol; use test equipment to troubleshoot network connectivity. Part of the content is similar to Microsoft's "Networking Essentials" exam. The course has been developed to produce competent network support technicians that are capable of taking and passing the new Network+ certification exam.
Systems Analysis This course provides the student with theory and practice associated with the analysis and design of computer-based information systems. Fundamental topics include systems theory, the role of the information system in operating and managing the organization, and systems design concepts. The purpose, function, and expected outcomes of each phase and activity of the systems development life cycle (SDLC) are discussed from theoretical and practical perspectives. Specific design techniques, such as data flow diagrams and data dictionaries, are discussed and used. Other topics include the function of design tools such as CASE, planning techniques, and project management. Case studies are used to supplement lectures, with hands-on experiences in applying the SDLC to the analysis and design of information systems.
Professional Com in Workplace This course underscores the integrated nature of the communications skills program and the importance of communications skills for a successful life and career. While refining research and writing skills, students develop computer-assisted presentational materials to enhance the delivery of speeches. Among the communications topics explored are personal and professional relationships, ethical and legal issues, the impact of changing technology, audience analysis, and diversity in the workplace.
Principles of Management The course traces the development of management thought and practice from pre- Industrial Revolution to preparation for Century 2000. The course presents the shift in management paradigms and legal requirements; the changes in organizational structures; and the evolution of management theories. Goals of the course include helping students integrate theories into a coherent knowledge background for advanced management courses and building a framework for future management practice.
Honors United States History I This course is a survey of the development of the United States from the colonial era, through the establishment of the federal system, the growth of party politics, and the search for a national culture, to the emergence of a two-ocean republic. The course concludes with the study of the Civil War and the reconstruction of the Union.
Computer & Network Security Computer Network Security studies the fundamentals of computer and network security and defense. Students learn to describe and analyze security threats, vulnerabilities, attacks, and risks as well as to identify, apply, and evaluate controls and solutions to secure and defend computers and networks. Topics include: network vulnerabilities and attacks, IDS/IPS implementation, firewall and VPN implementations, defense in depth, honeypots and honeynets, network monitoring and traffic analysis, exposure minimization, network access control, DMZs and proxy servers, host and network hardening, mission assurance, and network policy development and enforcement and operational procedures.
Advanced Systems Analysis This course builds on the fundamental systems design concepts and skills presented in CI360 Systems Analysis and Design, enabling students to develop advanced analysis and design requirements related to information systems. Case studies focus on analysis and design concepts in situations that utilize transaction processing systems, management information systems, and decision support systems. Computer-Assisted Systems Engineering (CASE) tools are integrated into class projects. Other topics include prototyping and alternatives to the Systems Development Life Cycle (SDLC), cost/benefit analysis, planning and managing systems development projects, and applying system design techniques to end-user computing.
Cyberlaw This course is designed to enable students, including but not limited to organizational studies, and information technology students, to concentrate on the legal issues and challenges that the changes in technology have created such as on-line contracting, computer crime, fraud, privacy, defamation, hate speech, indecency, obscenity, cyber- squatting, intellectual property etc. The goal is not to teach students to be lawyers, but rather to provide students the tools to be able to identify problems in the world arising from the ever increasing activity on-line.
Principles of Marketing This course is an introductory study of the marketing discipline. The marketing environment, both domestic and international, are examined along with the variables that act upon them. The primary focus is on the marketing mix, promotional mix, and the characteristics and relevant strategies that are relevant to each stage of the product life cycle. Current issues and concepts such as international marketing, market-place diversity, added-value, customer service, and the role of total quality management are an integral part of course content and interactive learning activities.
Principles of Sociology This course is a basic introduction to the field of sociology, which enables students to see and understand the social world and their place in it in new ways. Students will become familiar with basic sociological concepts and social institutions, explore different explanations for social phenomena, and learn about the methods sociologists use to answer questions about society. /  Database Management System The course introduces the student to the theory and practice of database management, that is, the application of database technology to the solution to business and information-related problems. It covers an introduction to the relational model of data, and focuses on the use of Structured Query Language (SQL). Database concepts, terminologies and data structures of the relational database model will be discussed, and briefly compared with other models (such as hierarchical, network, and object). Database design in the practice of normalization is included, but the emphasis is on the use of Entity-Relationship modeling for a graphical approach to the analysis of requirements and the design of a conceptual schema. The student will have hands-on experience working with a database management system such as MS Access, Oracle, or SQL Server.
Mobile Forensics This course covers areas of mobile forensics, which include topics from the legal and technical aspects of this discipline. Forensics tools will be utilized to examine flash drives, cell phones, PDA's, GPS devices and digital cameras. Recovered data will include call logs, address books, text messages, videos, Internet history and service provider information Fundamental topics include the differences between private and criminal investigations, issues regarding privacy, incident response policy, and the Fourth Amendment. The course will cover mobile phone networks, the network authentication process, differences between GSM and CDMA devices and how to extract information from a Subscriber Identity Module (SIM) cards.
Quant Analysis for I/S This course provides the student with applications of discrete analytic methods in software design and development, programming, networks and data communication, operating systems and computer hardware, database design and implementation, and network security. Topics include sets, Boolean logic, logic statements and rules, functions, relations, foundations of relational databases, directed and undirected graphs, shortest path determination, programming language documentation, number systems, code sets (like ASCII, Unicode, ISO standards), and searching algorithms.
Legal Environment of Business This course introduces students to the legal system and the role it plays in the business world. Legal issues are addressed from a preventive rather than a curative point of view. Students learn to spot legal issues in various business situations and to make decisions with legal issues and legal consequences in mind. Specific areas studied include an introduction to the judicial system and judicial process, law and ethics in business, the law of contracts, torts, consumer protection, and legal and ethical issues in the workplace.
Glob, Econ, Soc., Eth Iss I/S This course provides the student with the tools necessary to make good ethical decisions in their role as a technology professional in a global context. The course will cover general issues related to various economic, ethical, and social frameworks and move to topics specifically related to computers. Emphasis is placed on the study of ethical questions that arise as a consequence of the development and deployment of computers and computing technologies. Moral and social ethical and economic issues will be identified and brought into focus, giving the student a means to understand them and make wise decisions. Case studies will be used to facilitate discussions in areas such as; economics of information systems, computer crime and hacking, computer software ownership, database privacy, risks of computing, professional liability, internet freedom in computing, and international laws and punishment. The Global impact of Information Technology on individuals and society will be highlighted.
Python Program Language This course provides the student with an introduction to the Python programming language which includes: working with large datasets, lists, looping, and file operation. Outcomes of this course will be Python programs including Data Visualization
Project Management Emphasis is on the roles that people, information, information systems quality, and technology play in the application of the nine Knowledge Areas and five Process Groups that comprise the Common Body of Knowledge for Information Systems Project Management. Particular emphasis is placed in the five Process Groups?initiating, planning, executing, controlling, and closing--- for information systems projects that are needed to provide the various types information systems which provide a competitive advantage in both inter-organizational and international environments and yet serve the needs of both the users and management. As an underlying tenet for the nine Functional Areas, the course emphasizes refining individual communications skills necessary to the field of information systems project planning and management.
Training/Development In Bus This course provides the student with application of theories of learning and instructional development to the education and training of employees in office information systems. Topics include instructional design, strategy, technology; and the implementation, evaluation, and management of training in an organizational environment.
Program Outcomes Assessment This pass/fail course requires the completion of quality assessment activities directly related to the student's program of study. Graduating seniros are required to complete two or more appropriate assessment mechanisms such as but not limited to the Senior Exit Exam and the Senior Exit Interview Survey. Dat form these instruments is used in the on-going quality assurance procedures implemented by the CIS department to shlp insure that the designed outcomes of the programs are being met by the students. This ocurs is to be scheduled the last semester prior to graduation.
Computer Information Systems This course is an introduction to concepts in computer information systems. Students learn how information technology is used in business. Topics covered include use of information systems in business, basics of hardware, software, networks and data management, use of productivity software, security and ethical use of information systems, business decision systems, and developing and managing information systems.
Introduction to Functions This course provides a study of mathematical functions, graphing techniques, and applications. The functions covered in the class are linear, quadratic, polynomial, rational, exponential and logarithmic.
Writing I Writing I provides the undergraduate student with the foundation necessary for critical thinking through academic and other professional writing.
Introduction to Financial Reporting This course provides an overview of financial accounting/reporting in its role as an information system within the socioeconomic environment of business. Financial reporting concepts and practices are presented from a decision perspective in which the content of financial statements and the analysis, interpretation and application of this information in making rational business decisions are examined.
Computer Science I This course introduces Computer Science by using a high-level programming language. Students will be taught to design programs and implement them using object-oriented programming techniques.
Principles of Economics: Microeconomics Students examine the theory of the consumer and the business firm in this course.
Business Statistics Topics covered in this course include descriptive methods, probability distributions, estimation, testing, analysis of variance and regression analysis.
Writing II Expanding upon the argumentative and analytical emphases of Writing I, Writing II will foster research-based composition.
Introduction to Programming This course provides an opportunity to learn a higher-level language, to gain experience in the design, coding and utilization of computer programs and to develop simple applications using a graphical user interface.
Discrete Mathematics This course introduces discrete mathematics as applied to computer science. Topics covered include Boolean logic, elementary set theory, functions, relations, enumeration, proof techniques number systems and trees.
Principles of Economics: Macroeconomics This course is a study of the theory of employment, income and growth. Stabilization policy and current problems in American capitalism are emphasized.
Introduction to Managerial Accounting This course stresses the usefulness of accounting data as it relates to the managerial decision making process relative to planning, control and analysis.
Introduction to Speech Communication The class focuses on theory and practice of interpersonal and public communication, including communication theory, self-concept, perception, language, listening, non-verbal communication and public speaking.
Calculus for Business This course surveys methods and applications of the calculus for functions of one variable, which are useful in business and economics. Topics include differentiation with applications to rates and maximum and minimum values, integration techniques with applications to areas, cost and rates.
Computer Science II This course builds on the concepts covered in Computer Science I. Topics covered include inheritance, polymorphism, recursion, advanced GUI programming, exception handling and input/output handling.
Principles of Management This is an introductory course in basic management concepts and practices. This course covers principles and techniques as they relate to planning, organizing, leading and controlling business enterprises.
Systems Programming This course provides the student with the fundamentals of structured programming at the systems level. UNIX is used as a base for this course.
Data Communications & Networking Data communications is a subset of telecommunications involving the transmission of data to and from computers and components of computer systems. It is concerned with the transmission of data through some medium, such as wire or fiber optic cable, and includes coverage of the telephone system, local area networks and wide area networks.
Compiler Construction The course studies the techniques involved in the analysis of source language code and the generation of efficient object code. The focus is more on the front end of the compiler (analyzer) than it is on the back end (generator).
Systems Programming This course provides the student with the fundamentals of structured programming at the systems level. UNIX is used as a base for this course.
Ethical Hacking This course introduces the students to working with hacking tools and strategies in order to detect and report the vulnerabilities in computer systems such as networks and operating systems.
Systems Analysis Methods As an overview of the system development life cycle, this course introduces the student to the fundamental concepts and techniques of systems analysis.
Computer Graphics Programming Students will write programs that create digital representations of geometric objects and render them on a computer screen.
Basic Finance This course studies the forms and sources of financing business firms, large and small, corporate and noncorporate.
Local Area Networks This course examines local area network (LAN) technology and architecture both through general concepts and practical hands-on experience. All networking fundamentals are presented based on the modular approach of the ISO standards.
Business Programming This course provides students with experience in the design and coding of programs using a business oriented language.
Data Modeling and Database Design In this course, students will learn how to create data models from business requirements and transform them into logical and physical database designs and study the evolution and advantages of various database models.
Game Design Workshop This course will engage students in the iterative design process: developing, prototyping, and play-testing games throughout the semester with the goal of creating well-balanced games that are challenging and rewarding to the player. Students will focus on designing casual games playable on a variety of platforms, while building proficiency in an industry-standard 2D game engine.
Systems Design & Implementation This capstone course will emphasize the design and implementation phases of the system development life cycle using case studies. A problem solving approach will be used for students to learn strategy and techniques for dealing with complexities in information systems development.
Ethical Issues in Computer Science This course covers various ethical issues that arise as a result of increasing use of computers in contemporary society. Topics include methodology, tools and frameworks for analysis of ethical issues in Computer Science, social and ethical context of computing, professional and ethical responsibilities, risks and liabilities of safety-critical systems, privacy and civil liberties, social implications of the internet and cyber-security.
Composing Arguments This a course in the process of writing and revising shorter college-level essays. Classes include lecture, discussion, workshop, and conference methods. By the close of the semester, students will demonstrate their ability to generate, organize, and present writing for the appropriate audience.
Freshman Composition: Analysis, Research & Documentation The course includes an introduction to library use, research techniques, and conventions of documentation as well as practice in critical reading, thinking, and writing across the disciplines. Students can expect to do a series of shorter writing assignments leading to the longer, documented paper.
Public Speaking This course acquaints students with the basic theory of the art of public speaking and provides experience in the preparation and delivery of short talks.
Finite Mathematics for the Management and Social Sciences This course stresses applications in business and the social sciences. The topics covered include evaluation and graphing of functions, the geometry of straight lines, operations on matrices, solving systems of equations, and an introduction to set theory and probability theory.
Ethics This course provides a survey of alternative ethical viewpoints with a focus on the principles of moral action. The implications of these ethical positions for moral living will be emphasized through discussion of selected contemporary moral issues. Critical thinking about issues of right conduct will be developed.
Drawing I This course introduces drawing as a conceptually based art-making medium. Students practice fundamental drawing skills using a variety of black and white media and techniques while learning to apply line, shape, value, and texture to creative visual problem solving and the expression of ideas.
American Civilization Minimum performance standard scores on reading and writing preassessment placement tests American Civilization is an entry-level American history course designed to trace the roots of contemporary America.
Principles of Macroeconomics An introduction to the principles of economics emphasizing the economy as a whole. Topics include: methods used in economics; gains from exchange and international trade, supply and demand-market outcomes and the impact of government interventions; measurement and determinants of macroeconomic performance–the national income and product, inflation, unemployment, and international balance of payments; business cycles (economic fluctuations) and economic growth; demand-side and supply-side fiscal policy; banking, central banking, and monetary policy; preliminary international financial markets; and open economy macro policy.
Principles of Microeconomics An introduction to the principles of economics with an emphasis on individual economic units. Topics include: supply and demand-market outcomes and the impact of government interventions; consumer choice; production theory and economic costs, the theory of the firm; competition and monopoly; resource markets and factor prices; and the role of government in a market economy–the legal framework and property rights, economic efficiency, and competition policy, externalities and environmental protection, provision of public goods, and distribution of income and wealth.1
Principles of Accounting I This course introduces students to the role of accounting in society and economic decision making. The course focuses on financial accounting and reporting as tools to aid external decision making, financial analysis, and interpretation. Topics covered include: conceptual foundations and principles underlying financial statements; accounting systems overview; analysis and interpretation of financing, investing, and operating activities; and attestation.
Principles of Accounting II The course focuses on managerial accounting and cost management as tools to aid internal decision making, planning and control. Topics covered include: accounting and management decisions; traditional and activity-based costing systems; planning and control systems; managerial accounting in a global environment; and current approaches including ABM, JIT, value chain, target costing, continuous improvement and quality management.
Foundations of Information Systems This course is an introduction to fundamental business information systems from a business perspective. It includes computer hardware and software, use of business productivity tools and the Internet, and an introduction to fundamental and functional business information systems.
Business Analytics I (Descriptive and Predictive) This is a course in the application of statistical inference and translation of quantitative data into information which can be used in business decision making. This course will cover the topics of index numbers, learning curves, confidence intervals, tests of hypothesis, quality control, and regression and correlation analysis, etc., in the context of production and operations management skills needed by American industry.
Business Analytics II (Prescriptive) This course is an introduction to business management science techniques. The course covers the topics of linear programming, project scheduling, inventory models, decision analysis, queuing theory, and simulation, in the context of management decision-making skills.
Managerial Finance This is a study of the dynamic environment of financial management using the following analytical skills: financial analysis and forecasting, time value of money, security valuation, capital budgeting, capital structure, the cost of capital, and working capital management.
Managerial Communications Multiple forms of communication within a business environment are studied. Emphasis is placed on writing, listening, speaking, nonverbal and interpersonal communication with internal and external business audiences. Students apply the principles learned to written exercises and oral presentations.
Principles of Marketing This course helps students understand marketing, the process through which organizations analyze, plan, implement, and control programs to develop and maintain beneficial exchanges with target buyers. Effective marketing is critical for the long-term success of any business organization because this function ensures that the firm attracts, retains, and grows customers by creating, delivering, and communicating superior customer value.
Legal Environment of Business I This course is designed to present the legal system as it applies to business. The course includes a discussion of fundamental concepts related to the nature and sources of law and to the resolution of disputes. The course requires analysis of statutes, cases, and regulations of related governmental agencies that address employment, securities, trade and workplace decisions. The law of agency, contracts, organizations and torts is analyzed. Ethical and international aspects of law are treated where appropriate.
Organizational Management Completion of General Studies Level I composition and communications requirements This course examines, analyzes, and assesses managerial functions and processes as related to business and other organizations. It is designed to prepare students to meet the challenges of a highly dynamic and ever-changing business environment by formulating individual competencies and skills, translating theory into practice, creating critical thinkers, and reflecting on the integration of new concepts and environmental changes into managerial practices.
Strategic Management This course presents concepts used by managers to develop companies that can prosper in a competitive, global environment. Students are provided the opportunity to apply the concepts and theories of strategic management along with knowledge gained from business courses, general studies, and work experience to the operating and strategic challenges faced by domestic and global organizations.
Structured Problem Solving in Information Systems This is a problem-solving course in which the tools of structured design are used to design computerized solutions to business problems. Procedural programming languages are used to implement these designs. Emphasis is placed on the implementation of the three logic constructs in procedural languages: sequence, selection, and iteration. Students will be required to develop, test, and debug programs in one or more procedural languages, using a variety of hardware and operating system platforms.
Fundamentals of System Analysis and Design This course covers the basic concepts of an information system and systems analysis tools and techniques necessary to develop requirements for a business information system. Students will concentrate on systems analysis using current methodologies, technologies, and available tools of analysis, as well as an examination of the effect on systems analysis by business drivers such as globalization, security, privacy, ethics, and collaboration. The course will focus on the analysis phase including requirements definition, modeling, feasibility, project planning and management, and documentation.
Database Management Systems This course provides an introduction to the design, development, implementation, and manipulation of databases as well as covering the essentials of file processing. The student will create information level database designs from a set of user requirements and implement those designs employing a 4GL database tool. Finally, the student will be introduced to current topics in the database field, which may include Data Warehousing, Distributed Systems, Object-Oriented Systems, Spatial Databases, and Database Driven Web Sites.
Business Application Development This course provides a visual development environment to develop object-oriented, event driven GUI business applications. Visual Basic is a graphical user interface RAD tool for development of Web and Windows applications. Students will complete an application project that requires the analysis of a problem, development of an appropriate program design, creation of a MSIL solution, and a plan for implementation with appropriate documentation.
Telecommunications Systems and Networking This course is a study of the transmission of data, voice, and video including: transmission systems and associated hardware and software; types of networks; introduction to the OSI model, LANs and WANs; and applications of networks.
Information Systems Security This course covers a broad range of topics in security for networked and inter networked computer systems. It examines security and integrity objectives in terms of high-level policy and presents security services used to address those requirements. Network security architectures are analyzed to insure that critical security functions are protected from unauthorized access and modification. Access control in networked systems is examined.
Systems Analysis and Design This course focuses on the development of business systems. The emphasis of this course is on the design and prototyping phases of systems development using as a basis the concepts of problem solving, requirements specification, analysis, and programming from the prerequisite courses. Current methodologies and technologies will be evaluated and implemented in the development process. Information-systems problems will be analyzed and alternative solutions will be proposed using design models, a solution will be selected, and a prototype will be constructed for that solution. Students will evaluate the system using tests they developed and then propose a plan for implementation, maintenance, and training for the system.
Web Site Administration This course presents the fundamentals of organizing and administering a business Web site with multiple clients. Students will learn how to design effective, business-oriented Web pages. They will be able to give advice to the users, describe how to put Web pages on a server, how to organize the published information, how to plan a business Web site, specify the hardware, choose the daemon, and install and configure a server. In addition, the course will cover the security issues of the internet access, the different protection techniques, how to maintain a site, content and interpretation of the log files, and tools and techniques required to run an effective business site.
Database Administration This course covers the functions and responsibilities of the Database Administrator (DBA) in an organization with an integrated, shared Relational Database Management System (RDBMS). The course will focus on the technical requirements of the DBA including enrolling new users, creating the database, backup and recovery of data, security measures, implementing data integrity, and tuning the database.
Network Installation and Administration This course presents the knowledge and skills necessary to install the network operating system and to perform competently in the role of a network administrator.
Introduction to Psychology This course presents basic concepts, principles, and methods involved in the scientific study and understanding of human behavior. Attention is given to organic bases of human and other animal behavior with emphasis on perception, learning, motivation, maturation, physical and social adaptation, experimental techniques, individuality and personality, conflict and stress, adjustment and mental health, social behavior, and developmental processes.This course is required course for all psychology majors and minors.
American National Government This course explores the American political process with emphasis on the federal government: how it is organized, formal and informal sources of power and influence, political attitudes and behavior of American citizens, civil rights, constitutional evolution, factors of change and stability.
Calculus for the Management and Social Sciences Graphing calculator experience is expected. This course is an introduction to calculus emphasizing applications in business and social sciences. Topics include differentiation, partial differentiation, indefinite and definite integration.
Foundations of Artificial Intelligence This course includes a study of the theoretical foundations of artificial intelligence, including the algorithms and techniques and programming languages used to design and implement intelligent systems. The topics covered include search strategies, resolution theorem proving, rule-based deduction, expert systems architecture, plan-generating systems, analysis of languages, and machine learning. LISP and PROLOG, the most commonly used AI programming languages, will be covered and used for programming assignments.
Software Product Engineering This course surveys fundamental topics necessary for successful software product engineering, including usability engineering, software configuration management (SCM), and an overview of legal issues for software engineers.
Best Practices in Software Development This course exposes the student to current best practices and emerging methodologies in software engineering and software product development. Topics are chosen to reflect the current state of the care and practice. (A typical set of such topics includes: software architecture as a discipline, design patterns, eXtreme Programming, recent technology in security, and aspect-oriented programming.)
Advanced Computing: Variable Topics This course will include further topics in computer science and its applications. Topics will be chosen from analysis of algorithms, compiler design, simulation, artificial intelligence, or other chosen by the instructor.
Academic Writing and Reading Introduces students to principles of effective written communication and critical reading. Stresses invention, drafting, revising, editing, and self-assessment, along with effective critiquing and collaborating.
Research Writing and Argumentation Adapts principles introduced in ENG 1100 to typical university writing tasks. Stresses communicating effectively within disciplinary contexts, reading critically, and using source materials effectively in argumentative and research writing.
Business Calculus Functions, rates of change, limits, derivatives of algebraic functions, applications including maxima and minima, exponential and logarithmic functions, and indefinite and definite integrals with applications.
Principles of Microeconomics Fundamental principles of microeconomics as an aid in understanding modern society.
Personal Financial Decision Making This course provides an overview of the theories, concepts, and principles of personal financial management, with an emphasis on daily financial decision-making. The course emphasizes 1) goal setting and everyday financial decision-making as they influence long-term goals, and 2) understanding macro-economics and financial systems as they influence individuals lives. Topics covered include personal financial statements, consumer debt management, insurance and retirement and estate planning.
Principles of Macroeconomics Fundamental principles of macroeconomics as an aid in understanding modern society.
Accounting Principles I Introduction to accounting for business enterprises. Includes analysis of the effect of transactions on financial position, preparation of financial statements, the recording process, and measurement issues and reporting requirements for assets.
Accounting Principles II Introduction to accounting for business enterprises. Includes analysis of the effect of transactions on financial position, preparation of financial statements, reports for managers, and financial statement analysis.
Introduction to Business Statistics Statistical methods used in analysis of business problems, including theory and application of frequency distributions, measures of central tendency and variability, probability distributions, expectation, sampling and estimation, and one-sample hypothesis testing.
Quantitative Business Modeling Development and interpretation of inferential statistical models applied to business. Estimation models, decision analysis and hypothesis testing models and regression models. Use of statistical software.
Principles of Marketing Studies processes and activities that direct the flow of goods and services from the producer to the consumer with consideration of the social, ethical, economic, legal, and international environments.
Financial Management I Introduces basic concepts, principles, and analytical techniques of financial management. Topics include financial planning and analysis, risk and return, time value of money, cost of capital, capital budgeting, and capital structure.
Business Writing Written business and organizational communication; rhetorical demands of writing in professional settings; attention to various forms including short reports and informal oral presentations.
Economics of Global Money Markets Analysis of behavior and significance of money, credit, debt, and the banking system.
Legal Environment of Business Survey of domestic and international business law with the focus on practical applications of basic legal principles to managerial effectiveness, analytical reasoning and operational skills.
Management and Organizational Behavior Understanding the behavior of people within a work setting and the development of management competencies.
Fundamentals of Information Systems Introduces contemporary information systems and how they add value throughout the global organization. Focuses on key components of information systems: people, software, hardware, data, and network technologies. Students will develop a small business application using database, spreadsheet and web development tools.
Operations and Supply Chain Management Examine the major management decision areas in the design and offering of goods and services. Major topics include: operations strategy, planning and control systems, quality management, and project management.
Business Ethics and Leadership Development Development of competencies in business ethics and leadership.
Strategy: Domestic & International Perspectives Issues in international business to build an interdisciplinary strategic perspective on management in a global environment.
Introduction to Business Programming Introduction to the Visual Basic Programming language for business majors.
IS Applications Development This course introduces the fundamental principles of conceiving, designing, developing, and testing information systems applications for business. The course incorporates the applications development lifecycle: determining requirements including business processes, activities, and stakeholders; designing an optimal solution using appropriate business objects, data structures, and algorithms; developing the solution using a high-level programming language; and testing the completed solution.
Data and Information Management Concepts, principles and data models of managing organizational data. Extensive experience in developing data models, applying relational database software, creating and using complex queries using Structured Query Language (SQL). Build custom multi-tier database applications using a web application language and a commercial database system.
Analysis and Design of Information Systems Overview of system analysis and design methodologies. Topics include planning, SDLC, project management overview, data, process and logic modeling techniques. Covers design, implementation, specifications, and testing plans.
Information Technology Infrastructures Introduces Information Technology infrastructures including background, types, proper applications, and components of telecommunications, network design, and distributed information systems. Emphasizes telecommunications technology and its impact on information systems and business operations.
Business Processes and Enterprise Systems Principles of business processes and enterprise information systems. Students identify, model, and reengineer business processes within and across organizations and integrate disparate information resources and business processes with an integrated enterprise system.
Information Systems Project Management and Development Introduces concept, practice, and the importance of project management. The course covers a systematic methodology for initiating, planning, executing, controlling, and closing IS projects. Student teams will be assigned to an information systems business problem of a firm or organization in the Dayton metropolitan area. Teams analyze, design, implement, evaluate, and develop an information system while applying project management practices.
Personal Financial Decision Making This course provides an overview of the theories, concepts, and principles of personal financial management, with an emphasis on daily financial decision-making. The course emphasizes 1) goal setting and everyday financial decision-making as they influence long-term goals, and 2) understanding macro-economics and financial systems as they influence individuals lives. Topics covered include personal financial statements, consumer debt management, insurance and retirement and estate planning.
Data Science for Business Applications Introduction to the process of extracting information and answers from multi-dimensional datasets to generate business insights. It will provide a broad overview of the entire data analytics pipeline, from data collection and preprocessing, to storing, exploring, visualizing, modeling, and interpretation. Modern computing tools (e.g. R, SAS) and essential data mining, machine learning, text, and network analytic methods will be discussed. Must be enrolled in CoBA.
Data Mining for Business This course will examine data mining tools and techniques that have been proven to be of value in recognizing patterns and making predictions from an applied perspective.
Introduction to Business Data An introduction to the fundamentals of identifying, gathering, managing, visualizing, and analyzing structured, semi-structured, and unstructured data for business decision-making and performance.
Introduction to Business Programming Introduction to the Visual Basic Programming language for business majors. Students will be able to create Windows applications by the end of the course.
Data and Information Management Concepts, principles and data models of managing organizational data. Extensive experience in developing data models, applying relational database software, creating and using complex queries using Structured Query Language (SQL). Build custom multi-tier database applications using a web application language and a commercial database system.
Information Technology Infrastructures Introduces Information Technology infrastructures including background, types, proper applications, and components of telecommunications, network design, and distributed information systems. Emphasizes telecommunications technology and its impact on information systems and business operations.
Business Ethics and Leadership Development Development of competencies in business ethics and leadership. Integrated Writing course.
Legal Environment of Business Survey of domestic and international business law with the focus on practical applications of basic legal principles to managerial effectiveness, analytical reasoning and operational skills.
Fundamentals of Information Systems Introduces contemporary information systems and how they add value throughout the global organization. Focuses on key components of information systems: people, software, hardware, data, and network technologies. Students will develop a small business application using database, spreadsheet and web development tools.
College Composition I This course introduces students to a variety of writing forms and emphasizes writing as a recursive process of exploring, researching, drafting and revising. Students produce purposeful, literate, well-developed, and informed writing that requires critical reading, thinking and writing activities. The course also emphasizes responsible evaluation and use of information. Course requirements include a portfolio comprised of works created during the semester. Students are placed in the course based on the Writing Arts placement criteria.
College Composition II The course emphasizes argumentation and information literacy. It introduces students to argumentative strategies, asks them to identify and analyze forms of argumentation, and requires them to write a variety of well-researched and ethically responsible arguments. Students will work to become independent researchers who can find relevant information from a variety of sources (both academic and non-academic, traditional text and digital) and evaluate and present that information to an academic audience. Course requirements include a portfolio comprised of works created during the semester.
Calculus I Calculus is a subject about functions. This course deals primarily with the two most fundamental concepts in Calculus: derivatives and definite integrals. It begins with a discussion of notions of the limit and continuity of a function. Then the definition of a derivative is introduced, and techniques of computing derivatives are studied. Through applications to analysis of functions, optimizations and problems in sciences, a student can appreciate the importance of the derivative. The concept of a definite integral as a limit of approximating sums emerges naturally in the context of problems of areas. Hidden links between the two concepts are formulated in the Fundamental Theorems of Calculus, which also provide a convenient shortcut for computing definite integrals. A graphing calculator is required for this course, and so is the use of computer software, such as Mathematica.
College Algebra This course is designed to help students who are weak in algebra prepare for Statistics I or Calculus Techniques & Applications. The contents include: a brief review of intermediate algebra, the structure of the real number system, elementary analytic geometry, and algebraic, exponential and logarithmic functions (including their inverses and related functions). Graphs of functions are also studied. A graphing calculator is required. Students are expected to have completed Basic Algebra II or its equivalent.
Enterprise Computing I This course will acquaint students with data representation, data organization and data storage utilizing basic data structures. Students will perform basic file manipulation by reading data from files, writing data to files and data file formatting. Students will also understand basic logic, basic object oriented design and programming and the concepts of software engineering
Lab Science Lab Science
An Introduction To Economics-A Macroeconomic Perspective This course analyzes the overall level of economic activity in the United States and examines its major determinants, public stabilization policies, economic growth and international trade
An Introduction To Economics-A Microeconomic Perspective This course analyzes resource allocation among alternative uses. It studies consumer demand, product and factor price determination, general equilibrium and optimal income distribution.
Principles Of Marketing This course provides an overview of the theory and practice of marketing within a corporate and societal context in a dynamic environment. The major functions of marketing are covered from the perspective of management strategy seeking competitive advantage.
Principles Of Accounting II This course includes accounting theory and practice applied to corporations and public agencies; budgeting and estimating; analysis and comparison of cost and financial data.
Principles Of Accounting II This course includes accounting theory and practice applied to corporations and public agencies; budgeting and estimating; analysis and comparison of cost and financial data.
Management Information Systems Information systems are an integral part of all business activities and careers. This course is designed to introduce students to contemporary information systems and demonstrate how these systems are used throughout organizations. This course focuses on the key components of information systems - organizations, people, software, hardware, data, and telecommunications - and how these components can be integrated and managed to create competitive advantage. Students will gain hands-on experience with business software tools commonly applied to business data analysis and database
Legal Environment Of Business Students in this course examine the legal process and the legal environment within which business must operate, as well as the interrelationship of government and business. Students develop an understanding of the methods by which legal decisions are formulated as they affect both individual rights and business transactions
Organizational Behavior This course examines human relations in management. The course studies the concern for both task and process in the light of structure, goals and human relationships found in organized efforts. It also covers the application of new management theories in the areas of motivation, leadership and group problem-solving by a variety of means, including simulation, case studies, and role playing
Principles Of Finance This course includes the following topics: financial goals; depreciation, taxation and cashflows; financing the firm via short-term, intermediate and long-term debt, and preferred and common stock; capital budgeting and leasing; dividend policy; business growth and contraction.
Operations Management This course provides a critical study of the operational functions of the business enterprise. Its topics include capital costs and investment criteria, plant location and layout, process planning and production design, job designs, work methods and cost controls
Business Policy This capstone course in business policy provides students with an opportunity to integrate what they have learned in separate business fields and use this knowledge in the analysis of complex business problems. There is an emphasis on the skills of identifying, analyzing and solving problems which are not pre-judged as being marketing problems, finance problems, etc. Students are encouraged to consider issues from the viewpoint of general management rather than as a functional specialist or researcher.
International Marketing Basic marketing concepts as they relate to foreign markets are analyzed in depth in this course. Two approaches are used: the environmental approach introduces the setting in which international marketing takes place; and the managerial approach incorporates marketing strategies of firms that choose to venture abroad.
Design Of Database Systems This course explores the fundamentals of designing a database for a business organization. It emphasizes the relational model; however, the course also explores the hierarchical and network models. Additionally, the course covers such topics as recovery, integrity, security, concurrency, distributed databases, data dictionaries and the role of the database administrator.
Business Systems This course introduces students to the different tiers of an information system, with specific emphasis placed on design concepts and tools used to develop the presentation tier for web-enabled business information systems.
Principles of System Design This course explores the methodology and techniques in analysis and design of computer information systems. The systems analyst, the architect of information systems, is a liaison between user and programmer. The roles and responsibilities of the systems analyst are emphasized at all stages of the systems development life cycle.
Advanced Database Management The course provides students with a hands-on experience of designing, creating, and querying a relational database using a reputable relational database management system. Students also learn to use advanced Structured Query Language (SQL) to access and manipulate data. A basic understanding of relational database concepts and the logical design process are expected.
Network Management This course introduces students concepts associated with managing a network within a business setting. Furthermore, to solve business problems, students will apply theoretical concepts to fully design, specify, and justify networking solutions.
Project Management In this course, students will learn the Project Management Body of Knowledge (PMBOK) as put forward by the professional association, the Project Management Institute (PMI). Students will not only study the various phases and documents of project management, they will also have experience creating each of the documents for a given project.
E- Business: IS Perspective E- Business: IS Perspective
Business Web Application Students will learn how to create web pages with various types of functionality as required in the business environment. Students will create web pages to display a business' catalog, allow customers to select and place items in a shopping cart, etc. Huban factors will be considered for all design aspects
MIS Capstone Experience MIS Capstone Experience
MKBI Emgagement Experiences MKBI Emgagement Experiences

Web Systems and Services I Web Systems and Services I  Introduces technologies used to build leading-edge application systems and services on the World Wide Web. Coverage includes a selection of Web components such as mark-up and scripting languages, and server components of Web applications. Introduces Web programming using pair or small team programming activities.
Computer Programming I Introduces fundamental concepts of computing including memory, instructions, function calls, and activation records. Covers fundamentals of structured computer programming in the language of instruction: variables, input and output, expressions, assignment statements, conditionals and branching, subprograms, parameter passing, repetition, arrays, top-down design, testing, and debugging.
Computer Programming II Covers object-oriented design, inheritance hierarchies, information hiding principles, string processing, recursion, good programming style, documentation, debugging, and testing.
Computing and Informatics Design I Introduces computing and informatics through a combination of lectures and hands-on laboratory exercises. Lectures emphasize an integrated view of topic areas and systems, spanning low-level software and implementation issues to high-level use and acceptance by individuals and communities. Lab exercises allow students to explore familiar systems in unique and novel ways to better understand how these systems are designed and used.
Computing and Informatics Design II Introduces computing and informatics through a combination of lectures and hands on laboratory exercises. Lectures emphasize an integrated view of topic areas and systems, spanning low level software and implementation issues to high level use and acceptance by individuals and communities. Lab exercises allow students to explore familiar systems in unique and novel ways to better understand how these systems are designed and used.
Computing and Informatics Design III Introduces computing and informatics through a combination of lectures and hands-on laboratory exercises. Lectures emphasize an integrated view of topic areas and systems, spanning low-level software and implementation issues to high-level use and acceptance by individuals and communities. Lab exercises allow students to explore familiar systems in unique and novel ways to better understand how these systems are designed and used.
Senior Project I This course is an independent project which small student teams determines and scopes an appropriate computing technology project that can be completed within the constraints of time and resources under faculty guidance. The objective of the course is to provide specifications and requirements for the team project.
Senior Project II This course is a continuation of Senior Project I. In this course, student-teams are required to implement theirs project specifications and requirements developed in the previous course.
Discrete Computational Structures Covers basic concepts of discrete mathematics that are important to computing, including elementary set theory, recurrence relations, and graph theory.
Introduction to Business Statistics This introductory first course in business statistics focuses on applications of data analysis and statistics in business and economics. Topics covered include descriptive statistics and graphical presentation, probability, statistical inference, and simple regression analysis.
Composition and Rhetoric I: Inquiry and Exploratory Research Develops students’ abilities to use writing as a tool for inquiry. Introduces genre theory, writing as a process, revision, and strategies of primary and secondary research. Reviews grammar, style, and documentation conventions. Engages students in reflection and promotes positive attitudes toward writing.
ENGL 102Composition and Rhetoric II: Advanced Research and Evidence-Based Writing Advances students’ development in the writing processes. Promotes a critical evaluation and integration of information into their own writing as they research complex and open-ended issues. Identifies the relationships between rhetorical situations, the status of claims, and the need for evidence and warrants. Continues review of grammar, style, and documentation conventions. Encourages collaboration and effective search strategies of the Internet and library resources.
Composition and Rhetoric III: Themes and Genres Advances students' development in the writing and research processes and their understanding of how genres of writing shape meaning. Some courses may focus on the student's academic and discipline-specific experiences; Others may be based on literary or social themes. Promotes a critical reading of texts, reflective analysis, and a positive attitude toward writing.
Techniques of Speaking A workshop course in improving public speaking skills. Provides experience in speeches of explanation, persuasion, and argument.
The Drexel Experience This course introduces first-year students to university life, his/her major, our community, and co-op.
Introduction to Civic Engagement This course is designed to help students develop skills as active participants in a pluralistic, democratic society through direct service, education and reflection opportunities.
Network Administration I Students gain an understanding of terminology, technology, and issues involved in implementing networks. Topic include: understanding the OSI 7 layer model; concepts of servers and clients; network hardware/software functions; basics of TCP/IP protocol, main types of network topologies (bus, ring, star and mesh); and share and access network resources (files, printers, etc.).
Server I Introduces administration and management of Windows operating system. Topics include operating systems installation, configuration, directory services, data storage subsystems, troubleshooting and problem determination of server. In addition the course will cover redundancy, upgrading, and disaster recovery.
Information Technology Security I Surveys information security topics; familiarizes students with the technologies and policies that support confidentiality, integrity and availability. Industry standards for security architecture, operational security, policy and governance are covered and provides the foundations for further study of information security.
Open Server I Introduces administration of open source operating systems and management of open servers. Topics covered include the boot process and fundamental server concepts related to processing, memory and storage. Addresses use of a command line interface to manage processes, modify file permissions, examine configuration settings, and run utilities for server administration.
Information Technology Security II Focuses on securing digital infrastructure by examining threats, vulnerabilities, and technologies used to prevent cyber attacks such as: encryption, security devices, software, authentication and identity protocols. Hands-on labs demonstrate the use of tools and techniques discussed in the course.
Open Server II Presents an in depth study of server administration utilizing the Linux Operating System. Topics covered include: shell environments, shell program structures, executions, variables, positional parameters, special shell variables, and shell programming statements. In addition the course will examine shell conditional statements, looping constructs, interrupt handling, and debugging tools.
Server II Presents an in depth study of Windows server operating system and active directory. Topics include installation, implementation, administration of resources, monitoring, troubleshooting techniques. In addition, the course will examine Windows based network management tools, high availability and disaster recovery.
Network Administration II Course covers both theoretical knowledge and hands-on exercises for networking using CISCO hardware. Topics include: Extending Switched Networks with VLANS; Determining IP Traffic with Access Lists; Establishing Point-to-Point Connections; and Establishing Frame Relay Connections.
Introduction to Computing and Security Technology Explores the infrastructure that makes current information and communication technology possible. Introduces foundational concepts of servers, networks, databases, and the Web. Addresses security and usability considerations that cut across all computing technology. Approaches computing technology from the perspective of system administrators who plan, manage, operate, and monitor large scale computing infrastructure. Covers emerging technologies including pervasive computing, continuous integration, virtualization, and the Internet of things. Explores professional opportunities in this high demand area.
Introduction to Information Systems Introduces students to major types of information systems and their development and their use in organizations. Emphasizes ways in which information systems can be used to help individuals and organizations meet their goals. Assumes basic knowledge of computing concepts.
Introduction to Data Science A first course in data science. Introduces data science as a field, describes the roles and services that various members of the community play and the life cycle of data science projects. Provides an overview of common types of data, where they come from, and the challenges that practitioners face in the modern world of “Big Data.” Provides an introduction to the interdisciplinary mixture of skills that the practice requires.
Systems Analysis I Study of the principles, practices and tools of information systems analysis and design. Emphasis on learning pragmatic aspects of working as a systems analyst and employing the tools of systems analysis and design.
Database Management Systems Focuses on how to design databases for given problems, and how to use database systems effectively. Topics include database design techniques using the entity-relationship approach, techniques of translating the entity-relationship diagram into a relational schema, relational algebra, commercial query languages, and normalization techniques.
Social Aspects of Information Systems Introduces social issues involved in information systems design and use, e.g., personal computing, telecommuting, computers in education, the privacy and security of stored and transmitted information, and information ownership. Explores the interaction of high technology, employment, and class structure.
Human-Centered Design Process & Methods Introduces the student to the process of human-centered design of interactive user interfaces. Teaches some of the basic approaches to design and evaluation of interactive user interfaces. Delivers practical advice on interaction design challenges. Applies human-centered design principles in the design of the user interface to an interactive computer system.
Team Process and Product Provides hands-on experience with working in small teams to apply processes and produce products typical of current best practices in computing and information technology organizations. Allows students to develop an integrated understanding of project life cycle phases. Examines issues of team organization and operation, problem solving, and communication.
Systems Analysis II A project-oriented course that discusses software engineering and advanced techniques of requirements modeling, prototyping and software design, particularly utilizing object-oriented techniques. The course builds upon Systems Analysis I, requiring students to apply their knowledge of systems analysis tools and techniques.
Database Administration I Database Administration is a continuation of Database Management Systems, and includes the following: advanced ERD techniques, database management system internals and advanced elements of the SQL language, as well as stored procedures and triggers, specifically as demonstrated in the Oracle implementation.
Software Project Management The objective of this course is to study project management in the context of software systems development. The course will cover the processes, contexts, metrics, planning and management concerns of managing projects for modern software systems.
SPEECH COMMUNICATION Provides an overview of the process of communication and introduces communication theory. Provides practical training in the fundamentals of effective presentation for individuals in both public speaking and group communication settings. Emphasizes discussion of contemporary issues and the analysis of public discourse.
TECHNOLOGY-BASED PUBLIC SPEAKING Provides knowledge and skills to lead others more effectively through presentational communication utilizing online technology and delivery frameworks. Includes developing more meaningful voice based on ethical communication, audience engagement and thoughtful responses to contemporary issues
COMMUNICATION IN A TECHNOLOGICAL ENVIRONMENT Explores the impact of the computer culture on human communication. Identifies how the computer culture has changed communication, norms, expectations and language. Practices key competencies associated with communication interaction, including interpersonal, organizational and conflict communication
PERSUASION, INFLUENCE AND MOTIVATION Examines the general theories that explain persuasion and one’s ability to influence others. Discusses communication skills, attitudes and competencies associated with persuasion, influence and motivation. Enables students to learn and practice powerful persuasion communication skills that will enhance both personal and professional success.
CULTURAL INTELLIGENCE Develops culture competence skills required in today's global economy. Foundation to the theory and practice of cultural intelligence, which predicts adjustment and success in multicultural settings. Examines deep layers of culture, including core worldview assumptions.
INTERCULTURAL COMMUNICATION Using readings, film, field experience and/or dialogue, the course investigates cultural identity, meaning, patterns, relationships and conflicts that arise as contact increases between people of different cultures in our global society
CONTEMPORARY MATHEMATICS Presents topics in contemporary mathematics that are relevant to the Liberal Arts student. Develops the skills required to understand and interpret quantitative information that students encounter in the Liberal Arts curriculum
NATURAL SCIENCE Focuses on the basic elements of the natural sciences to provide students with a broad understanding of various themes including Geology, Astronomy and basic Physics
ADVANCED SCIENCE Explores various scientific disciplines and practices, as well as the application of science in everyday life
Philosophical Inquiry and Reflection Philosophical Inquiry and Reflection
COLLEGE ALGEBRA Includes algebraic operations, equations and inequalities, functions and their graphs, solution of polynomial, exponential and logarithmic functions and linear systems of equations.
FUNDAMENTALS OF ANATOMY AND PHYSIOLOGY Designed to provide students with an understanding of the basic concepts of human anatomy and physiology. The student will learn basic terminology and the general organization of body systems including the tissue, organ, and organ system levels. The specific organ systems to be studied in this course include the integumentary (skin), skeletal, muscular, nervous, special senses, endocrine, cardiovascular, lymphatic, respiratory, digestive, urinary, and reproductive.
LEADING EFFECTIVE ORGANIZATIONS I Explores concepts and theories in leadership and management as they are applied in healthcare settings. Examines leadership versus management skills, team development, systems theory, strategic  planning, organizational culture and the role of leadership in the organization.
FOUNDATIONS OF PROGRAMMING Entrylevel course in which students use an object-oriented programming language called Xojo to learn basic programming concepts such as If-then-else, looping, strings, lists, arrays, in a visual programming environment. Students will also be introduced to the Java programming environment
JAVA PROGRAMMING Entry-level Java programming course in which students use the Java objectoriented programming language to solve real-world problems.
FOUNDATIONS OF INFORMATION SYSTEMS Introduces contemporary information systems concepts. Focuses on business processes, software, hardware, data, and communication technologies, and how these components can be integrated and managed to create business competitive advantage. Hands-on experience with SAP ERP software.
SYSTEMS ANALYSIS AND DESIGN Studies the analysis and design of computer based information systems. Considers transformation processes and comprehensive design. Includes advanced technology, emphasizing expert and knowledge-based systems. Considers human resources, communications and computers in a systems framework
ENTERPRISE SYSTEMS ARCHITECTURE Presents design, management and administration of simple to complex network topologies. Introduces Internet connectivity and protocols supporting networked applications over a distributed network and their relationship with end-users. Examines the concepts of user content, applications, services, and infrastructure.
FOUNDATIONS OF CYBER SECURITY Introduces the principles and practices of information security including security models, internal and external security threats, and attacks. Topics include cryptography, network, mobile, host, applications, data, access control, and operational security.
WEB AND DATABASE APPLICATIONS Introduces web-based multi-tiered distributed application development. Topics include using markup and scripting languages in the Presentation tier, services in the (web and business) Logic tier, and a relational database in the Data tier.
MOBILE ENTERPRISE COMPUTING Introduces platform-based software development for tablets, smart phones, and servers. Students learn to solve contemporary software engineering problems by creating Graphical User Interface apps that communicate over a network with an Enterprise Server and Database.
INTRODUCTION TO STATISTICS Presents standard topics in introductory statistics for students whose major is not mathematics. Topics include descriptive statistic, probability distributions, estimations, hypothesis testing, linear regression and correlation and other topics.
INTRODUCTION TO DISCRETE MATHEMATICS Introduces mathematical tools used by computer scientists with an emphasis on developing problem solving abilities. Topics include machine logic, set theory, Boolean algebra, mathematical induction, and data structures
ACCOUNTING FOR MANAGERS Introduces basic terminology and concepts embodied in accounting that are utilized by business organizations to facilitate sound decision making. The primary focus of this course is aimed at non accounting students who are interested in better understanding how managers assess overall economic performance of their companies when applying accounting tools and techniques that help measure that performance.
INTRODUCTION TO BUSINESS Explores the contemporary business environment by introducing fundamental business concepts and models through business simulation. Provides a solid foundation for future business courses in the functional areas of business and emphasizes how these functional areas interact to encourage profitable, sustainable and sociallyresponsible business practices
MEDICAL TERMINOLOGY Provides an intensive study in the language used in the health care field. Includes the use of prefix, suffix and root words to identify, analyze, define and interpret medical terms. Emphasizes the correct construction, pronunciation, spelling and use of medical terminology, especially as applied in the interpretation of medical reports
INTRODUCTION TO HEALTH INFORMATION MANAGEMENT Emphasizes form, content and regulations impacting the health care record in the acute care setting. Explores legal reimbursement and computerized aspects of the health record as well as the functions and responsibilities of Health Information Services. Examines various health care delivery systems and health care practitioners.
ETHICS IN HEALTH CARE SERVICES Examines the practical application of ethical principles, theories and methods to ethical dilemmas in health care with a particular emphasis on professional and organizational ethics. Formal ethical analysis of case studies and topics is used to explore clinical, organizational and health policy issues, enhance ethical reflection and dialogue, support decision-making, and encourage moral leadership.
DATABASE MANAGEMENT Introduces core concepts in data management. Students identify organizational information requirements, convert conceptual data models into relational data models, apply normalization techniques, and utilize an Oracle relational database management system in a virtual lab environment
PROJECT MANAGEMENT Provides a foundational and practical knowledge of project management principles. Identifies tools and processes for managing projects using both Waterfall and Agile methodologies.
INFORMATION SYSTEMS STRATEGY AND MANAGEMENT Explores how INFORMATION SYSTEMS is changing and will continue to change organizations as we now know them by introducing the complex decisions facing real organizations through a number of mini cases and a cyber security simulator. These provide an opportunity to apply the models/theories/frameworks presented, giving students the confidence and ability to tackle the tough issues regarding INFORMATION SYSTEMS management and strategy, and a clear understanding of their importance in delivering business value
Senior Capstone Senior Capstone
BUSINESS PROCESS MANAGEMENT Introduces key concepts and approaches to business process management and improvement. Examines how to identify, document, model, assess, and improve core business processes. Hands-on experience with SAP ERP software
BUSINESS ANALYTICS Introduces business intelligence techniques for transforming structured/unstructured data into meaningful information in order to gain competitive advantage. Explores the managerial, strategic and technical issues associated with developing/deploying business intelligence and analytics
ENTERPRISE SYSTEMS Provides an understanding of the managerial/technical issues in planning, designing, and implementing enterprise systems. Demonstrates the integration of information and business processes across functional areas into a unified system. Hands-on experience with SAP ERP software
HEALTH LAW FOR INFORMATICS AND INFORMATION MANAGEMENT Examines legal concepts in informatics and health information management settings for compliance with laws, standards and regulations protecting the use, privacy, security and confidentiality of health information across various enterprises. Managing access and disclosure of health information and protected health information as well as e-health information is also covered. Graduate level includes completion of a project focused on the role of Risk Management and Quality Improvement programs in health care organization in responding to and preventive adverse events.
HEALTH CARE DATA ANALYTICS Examines current and emerging practices in the application of data analytics. Topics include clinical, financial, operations, quality analytics, and trends in practices, customer expectations, and regulations that impact analytics. It will also address ethical issues in gathering, analyzing and reporting healthcare data. Including, roles and applications of descriptive, retrospective and prescriptive analytics in various settings through the use of case studies, practice tools and techniques to analyze given data sets for specific outcomes
MANAGEMENT OF E-HIM AND INFORMATION GOVERNANCE The focus of this course is on the advanced concepts of managing digital clinical information in health care facilities. Topics include: identity management, health information exchange and data sharing, current trends in e-HIM, eDiscovery, the personal health record and patient portals. The course will also cover components and strategies of Information Governance including; interoperability of data, compliance data dictionary standards, and factors that influence data integrity. Graduate level includes development of an eDiscovery response plan and Information Governance assessment tool
HEALTH CARE INFORMATICS & INFORMATION SYSTEMS Introduces foundational knowledge and skills to participate in the design, selection, implementation and use of clinical and administrative information systems. Provides an overview of information systems in all health care settings with  emphasis on electronic health record systems, data standards, and data exchanges. Familiarizes the student with new and emerging technologies in the health care field and includes concepts and principles of health care informatics in the health professions and health care delivery systems. The graduate component extends foundational knowledge through additional readings, case analysis, and/or applied project work.

Computer Science I - C++ This course provides an introduction to programming using the Standard C++ programming language. Students learn the basic concepts of assignment, iteration, and looping. The course includes extensive coverage of objects and the concepts of object-oriented programming.
Introduction to Web Design The course develops a student’s understanding and skills in web development and script programming to create dynamic websites. The course is an introductory course and builds a fundamental working knowledge of web technology and the ability to create a website. Students will apply knowledge of computer operation and basic symbolic logic to create a dynamic website. Students completing this course will have an understanding of the operation and construction of a dynamic website.
Fundamentals of Computing This course is designed to provide an overview of the fundamentals of computing. Emphasis is placed on the five basic areas of Information Technology (IT): applications, platforms, development, data, and communication. Students will develop their understanding of basic IT concepts, and delve into Information Technology planning and analysis through practical application of current techniques and tools for building a website.
Precalculus This course covers a review of algebra and geometry; linear, quadratic, and polynomial functions and their graphs; exponential and logarithmic functions; systems of equations and inequalities; linear programming; and sequences, sets, counting, permutations, combinations, and probability.
Foundational Statistics This course introduces students to the study of basic probability, descriptive and inferential statistics, and decisionmaking. Through various learning activities, students will explore concepts such as measures of central tendency and dispersion, correlation, regression, discrete and continuous probability distributions, and hypothesis testing.
Calculus MATH 151 (CM) or (NS) 5 Credits This course covers the basic concepts and theory of differential and integral calculus of one variable, with emphasis on applications to business and economics. Additional applications are drawn from the natural and social sciences.
Introduction To Functions Of Management Introduction to planning, organizing, coordinating, staffing, directing, budgeting, controlling, and evaluating functions of management; leadership roles and styles, and development of individual and group effectiveness; managing conflict and change; and the human aspects of management.
Introduction to Marketing Students are introduced to fundamental concepts involved in marketing an organization. They will learn the following strategies: target marketing, marketing mix, new product development, competition, pricing, positioning strategy, SWOT analysis and market research. Students practice applying marketing strategies that support and drive strong businesses.
Critical Thinking  Critical Thinking
Interpretation of Financial Statements Interpretation of Financial Statements focuses on the analysis of publicly issued financial statements for decision making, and is taught from a user perspective. Students will learn to read, understand, and analyze a set of financial statements in a broad, decision-making context.
Operations Management Operations Management explores operations management in the manufacturing and service environments.
Business Economics Applies micro and macro-economic theories to the real world. Topics include: supply and demand; market structure; policy issues such as income distribution, government regulation, and the environment; business cycles; money and monetary policy; and the international economy.
Information Systems This course will cover information systems taxonomies and general applications such as CRM, SCM, e-commerce, ERP, business intelligence, knowledge management, finance and accounting, personal productivity, computer supported cooperative work (groupware), and global systems.
Introduction to Project Management Utilizes a real team project to manage a project’s life cycle. Emphasis is placed on activity networks, managing resources, and creating control mechanisms that minimize risk.
Data Management Communications and Networking This course develops student understanding of a model of Information Systems composed of data acquisition, data transport, data manipulation, data storage and data display. The use of data to develop business intelligence, competitive advantage, and support business operations through lean supply chains, delivery, and oversight has become an increasingly critical component in business success.
Information Security Information security is an increasingly vital concern in today’s highly networked digital world. This course provides an overview of the field including the objectives of information security - Confidentiality, Integrity, and Availability (CIA) and the inherent conflicts in these objectives.
Systems Analysis and Design This course examines systems analysis and design using the Software Engineering Body of Knowledge (SWEBOK) as a foundation. The concepts include data, process, and network modeling along with frameworks such as the Zachman Framework and The Open Group Architectural Framework (TOGAF). Object technologies will be built into the program along with design patterns
C++ - Intermediate In this course students further their understanding of the C++ programming language, applying it to the managed code environment, databases and Windows programming.
IT Service Management This course focuses on Information Technology Service Management (ITSM) best practices as defined by Information Technology Infrastructure Library (ITIL), Capability Maturity Model Integration (CMMI), Six Sigma, and Total Quality Management (TQM).
IT Ethics introduces students to the social, ethical, and policy dimensions of technology in organizations, schools and society. This course examines access and equity issues, censorship, privacy, piracy, hacking, commercialization, literacy, online communication, Intellectual Property, crime, Civil Liberties, Social Media, and developing a “global community” through the Internet.
Internet Technologies This course covers Internet technology including: physical devices and networks, protocols and services, and common network operating systems. The course focuses on a broad understanding of how to use and implement networks, including an introduction to physical and logical network design.
Database Technologies This course covers data modeling, design, normalization, change control, backup
recovery, data dictionaries, client server architecture, SQL, Relational and Object Databases, MS SQL Server 2008, Oracle, and mySQL (open source). The emphasis is on understanding why information resources are of critical importance and how to manage them.
Web Programming The course brings together student skills in web development, programming and databases to create dynamic websites which incorporate the use of databases, web services, and mash-ups.
Quality Assurance This course covers software testing throughout the entire life cycle of systems development. In addition, peer reviews, AARs, lessons learned, and audits will be covered.
Software Process Management This course covers software process improvement concepts including CQI, CMMI, and PCMM. These concepts illustrate how to assess the current state of software development and provide practice in how to systematically improve and manage the software development process using national and international standards
Technology Capstone This cumulative capstone course provides students an opportunity to apply, integrate, and demonstrate knowledge and skills they have acquired throughout their undergraduate technology education. This course is designed to be taken at the completion, or near the completion, of a student’s undergraduate technology program.
Rhetoric and Writing This course will introduce students to common textual issues surrounding audience and purpose to prepare them for the different kinds of texts they will encounter in upper-level academic courses as well as professional settings. /  Calculus for Business   Topics in differential and integral calculus with applications.  /   Computer Applications for Busi   This course provides an introduction to the fundamentals of personal computing for business majors and other non-computer science majors. Topics include the Windows operating system, word processing, spreadsheets, database, presentation aids, internet, e-mail and related areas.  /  Beauty and Joy of Computing   The course focuses on teaching students some of the Big Ideas of Computing such as abstraction, design, recursion, concurrency, simulations, and the limits of computation. The course also provides a historic perspective of Computing and where it is heading. Throughout the course, we will emphasis the relevance of Computing to the students, their future studies, their careers, and society. In this course students will learn Python as the programming language to deliver the concepts. Given that data is pervasive and the need to analyze data is in almost every discipline, learning Python that early will enable students to conduct data analysis which will be helpful for their studies at UNF and in their careers.
Writing with Evidence and Style This course will introduce students to common textual issues surrounding evidence-based writing, genre conventions, and citation style considerations to prepare them for the different kinds of texts they will encounter in upper-level academic courses as well as professional settings.
Trigonometry This course will include the following topics: trigonometric functions and their inverses, graphing trigonometric functions, identities, complex numbers, solving triangles, and applications of trigonometric functions.
Computer Science I This course provides an introduction to problem solving techniques and the computer programming process. Topics in the course include data types, operations, expressions, flow control, I/O, functions, program structure, software design techniques, and memory allocation. Course concepts are reinforced with many programming projects throughout the course.
Computer Science II This course serves as a continuation to the Programming I course.Students are shown additional fundamental concepts of problem solving using the object-oriented paradigm and data structures. The topics in this course include classes, interfaces, objects, class types, events, exceptions, control structures, polymorphism, inheritance, linked lists, arrays, stacks, queues, and deques. Students are expected to apply these concepts through the construction of numerous small software systems using both integrated development environments and command-line- driven tools that support editing, testing, and debugging. /  Principles of Macroeconomics  Introduction to the theory of income determination and national income accounting. Analysis of the use of monetary and fiscal policy to accomplish the goals of full employment, economic growth and price stability.
Computational Structures This course will cover the mathematical and logical fundamentals required in computer science, information systems, information science, and information technology. The course develops concepts in discrete mathematical structures as applied to computing in general through the topics of sets; logic; proof techniques; Boolean algebra; algorithms and problem solving; number systems; number theory; counting and discrete probability; and relations and graphs.
Elem Statistics-Business This course is an introduction to descriptive data analysis, probability, statistical distributions, confidence intervals, testing of hypotheses, regression, and correlation. Topics selected to emphasize applications in a business environment.  /  Prin of Financial Accounting This course is a conceptual introduction to financial accounting. In this course, primary emphasis is placed on income measurement and the interpretation of conventional financial statements. /  Principles of Microeconomics Introduction to the market system, market structures, and the theory of production, demand theory and general equilibrium. Cannot be used to satisfy upper-level requirements for a degree in business administration and economics. Normally offered each term. /  Web Systems Development Students learn about the influence of local and global transaction processing, Internet, Web design and development, and Electronic Data Interchange on information systems. This course discusses the concepts and skills required to design and implement Web application systems using Model View controller (MVC) architecture. Students learn about how Web applications are developed using client-side and server-side scripting to implement internal and external business processes. After an introduction to the basic concepts of relational database systems and Object Relational Mapping (ORM) students will practice for storing and accessing data in the database. /  Public Speaking for Professionals  This course examines speaking as a workplace activity and provides students with experience in public speaking. The lectures will concentrate on communications theory, including but not limited to models of communication, interpersonal communication, group communication, persuasion, decision making and audience analysis and adaptation.  /   Prin Managerial Accounting  This course is the conceptual introduction to managerial accounting. The material covers accounting for cost reporting and control, reports, statements, and analytical tools used by management.
GW-Legal Ethical Iss in Computing This course provides an opportunity to discuss and analyze the legal and ethical issues facing today computing professionals, as well as the legal and ethical issues computing professionals may face in the future. Legal and ethical issues are considered from local, as well as global perspectives.
Data Structures Students in this course will study various data structures including binary trees, balanced trees, B-trees, hashing, and heaps. Additional topics include advanced data structures such as splay trees, tree representations, graphs, dynamic memory, and algorithms for sorting and searching. Students are expected to complete projects using object-oriented programming. . /  Human Factrs/Collabr Cmpt   This course introduces the fundamentals of effective interaction between humans and computers with an emphasis on software and physical elements. Good and bad interface designs are examined to reinforce proven interface design techniques. The phases and tools involved in the interaction design process are discussed, as well as how the interaction design process aligns with the Software Development Life Cycle (SDLC). /  Administrative Management This course covers fundamentals of management which permeate organizations; including introductory studies of administrative structure, the organizational environment, and managerial functions and processes. /   Intro Management Info Systems This course will cover the fundamentals of management information systems with an emphasis on the relationships of MIS and data processing to decision-making in modern organizations.
Computer Networks/Dist Process In this course, students will study architectures, protocols, and layers in computer networks and develop client-server applications. Topics include the OSI and TCP/IP models, transmission fundamentals, flow and error control, switching and routing, network and transport layer protocols, local and wide-area networks, wireless networks, client-server models, and network security. Students will extend course topics via programming assignments, library assignments and other requirements. /  Financial Management This course focuses on management techniques for and considerations in determining short-term, intermediate-term, and long-term financial needs. Sources of funds available to management and the relevant financial instruments will be examined.
Introduction to Databases First of a two-course senior project on systems development with a significant laboratory component. Students will learn system development life cycle methodologies and its phases including requirements specification, analysis, and design. Students will design and develop a prototype information system in the context of the project team environment. /   Principles of Marketing  This course is an introduction to the process of planning market programs for goods and services. Techniques of analyzing the market and its environment are introduced as background for making decisions in product planning, promotion, distribution and pricing. /  Information Syst Sr Project I  First of a two-course senior project on systems development with a significant laboratory component. Students will learn system development life cycle methodologies and its phases including requirements specification, analysis, and design. Students will design and develop a prototype information system in the context of the project team environment.
Internet Programming  In this course students will use current technologies to develop Internet and web-based applications. The topics to be covered include client and server-side components for the WWW to facilitate client-server communication, web services, and an introduction to source control tools.  /  Data Mining Students will study concepts and techniques of data mining, including Characterized and Comparison, Association Rules Mining, Classification and Prediction, Cluster Analysis, and mining complex types of data. Students will also examine applications and trends in data mining. /  The Legal Environment of Business  This course is an introduction to law as it relates to and impacts upon the operation of business. Consideration is given to the Uniform Commercial Code, antitrust, employment laws, business ethics, international law and the social and political environment in which a business operates.  /  Information Syst Sr Project II  Students will design, implement, and deploy a prototype information system in the context of a project team environment employing relevant systems development life cycle methodologies. /   Introduction to Data Analytics  This course gives a broad overview of the various aspects of data analytics and visualizations. Students will learn ways of accessing data from various sources such as web APIs and repositories, techniques of cleaning data and organizing data for analysis, using analytical methods to solve real-world problems and create visualizations to aid the interpretation of analysis results.
Data Warehousing This course provides an introduction to data warehousing concepts, requirements gathering, design, and implementation. Students learn about operational database integration, extraction, transformation, and loading of operational data to historical database systems such as operational data store and data warehouse. Students are provided with techniques for the analysis, design, denormalization, implementation, utilization, and documentation in the development of data warehouse systems. Structure query language for database and data warehouse will be studied and used to retrieve data and manipulate the information from the implemented databases. Students are required to complete and present a project to class in the data warehousing area.
Introduction to Computers  This course will introduce the students to microcomputer usage and will fulfill the core curriculum computerliteracy/technology requirements. Topics include; word processor, presentation, spreadsheet, anddatabase.
College Writing I This course focuses on effective writing, grammar review, and critical thinking. Students develop research and writing skills using classical rhetorical modes of argument and logic and by writing college-level essays and research papers with the use of information technology. This course will satisfy the Gordon Rule requirement in the Florida State UniversitySystem
Computer Programming I  This course builds on the basic concepts and syntax of the Java programming language. It is the first course in the series of programming study in computer science. Topics include programming, problem solving, design, construct, analysis of the programs and objectoriented programming.
University 101  This course is designed to help new college students develop study habits, attitudes and knowledge which will lead to academic success. The course content includes Florida Memorial University’s history and resources, student time management, study methods, memory techniques, career exploration, and cultural literacy.
College Writing II  This is an intensive writing, reading, and research course. Students compose research papers and college-level essays based on readings from poetry, short stories, drama, novels, periodicals, and other literature, incorporating the use of information technology. This course will satisfy the Gordon Rule.
Applied Calculus The applications of calculus using computer algebra systems. A brief review of functions and plane analytic geometry; intuitive and geometric definitions of limit, continuity and derivatives; derivatives of elementary functions; applications of derivatives including optimization problems taken from various disciplines; indefinite integral, Riemann sums and definite integral; elementary techniques of integration; and applications of integration in variousdisciplines.
African Amer His I  This is an intensive reading course. The course promotes the awareness and exploration of relevant books and materials concerning the lives, struggles, achievements, and contributions of African Americans.
Critical Think/Read This course develops and strengthens the critical thinking skills needed for reading college and professional materials, and will include bias and propaganda, fallacies, connotation/ denotation, inductive/deductive reasoning, problem-solving, and inferential thinking.
Critical Think Info Age  This course is designed to equip students with the ability to apply critical thinking in the field of Computing, Information Systems, Information Technology, and Mathematics. They will demonstrate critical thinking skills through the analysis and/or synthesis of information to draw conclusions or make decisions on matters pertaining to career planning, personal growth and goal-setting as potential careers of the future in the information age.
Introduction to Public Speaking An introduction to effective communication in speaker-audience situations. Students learn basic techniques of researching, organizing and presenting their own, original ideas to an audience. There is additional emphasis on developing effective listening skills and ethical communication strategies for use in a democratic society.
Principles of Mgmt  An introductory management course dealing with the fundamental principles of management: planning, organizing, staffing, leading and controlling. The systems concept of management and the role of the manager in each level of the organization are emphasized.
Computer Programming II  An intermediate level course in programming with a more advanced concepts and programs technique. The course offers deeper understanding of classes and object in Java. The course also provides more indepth skills in java programming such as polymorphism, inheritance, handling exceptions, file and string manipulation, and recursion.
Prob & Statistics  Probability concepts, discrete and continuous distributions, random variables, expectation and variance, frequency distribution, statistical inferences and sampling, hypotheses testing for the mean and variance of a population.
Syst Analysis/Design  Uses analysis and review of existing systems to explain the structured systems analysis and design process. Working with the system’s life cycles, topics include flow diagrams, cost/benefit analysis, interviewing and documentation. Students are required to solve case studies and develop a documentation portfolio.
Introduction to Religion  This is an intensive reading and writing course surveying the practices and associated customs of the major recognized religions of the world, such as Judaism, Christianity, Hinduism and Islam.
Micro-Economics  A study of the aggregate level of national income and output as it affects economic growth and stability, inflation, unemployment.
Computer Organization This course introduces computer hardware and system software concepts. The objective is to provide technical knowledge and skills on computer resource management, systems design, and systems implementation. Material on systems architecture, data storage technology, systems integration and performance, input/output technology, data and network communication, computer networks, application development, operating systems, file management, internet and distributed applications, and system administration are presented in this course.
Network/Data Com  This course covers the basic concepts of network and data communications. The course covers sections on network design essentials, media, interface cards, communications and protocols, architectures, administration and support, types of networks, troubleshooting network problems, and internetresources.
Web Technology  Students will learn how to plan and create a Web page from scratch, import and manage media from other sources, publishing and maintaining a web site, using hyperlinks to navigate throughout a website or link to other sites on the Internet, add navigation bars and user interactions on the Web.
Operating Systems  Introduces the students to operating systems and systems programming. Topics include design, implementation, and maintenance techniques, multi-level memory management and resource allocation, scheduling supervisors, loaders, I/O control systems, multiprogramming, file and systems protection.
Database Management Systems  The study focuses on the theoretical design and management of database systems conceptual data models, implementation models, data dictionary and policy formulation. The study will also uncover structures relating to databases, design methodology, normalization, integrity constraints, distributed databases, data warehouse, and relational algebra.
Spanish I This course and its sequel, constitute the basic sequence in Spanish. Emphasis is on the development of competence in the language.
Spanish II This course completes the sequence in the Spanish language core requirement. It prepares students for advanced course work in Spanish if desired.
Principles of Accounting I A study of basic accounting concepts essential to recording business transactions, preparing financial statements, and interpreting data for financial decisions
Principles of Accounting II  The study of basic accounting concepts essential to recording business transactions, preparing financial statements, and interpreting data for financial decisions.
Management Information Systems  Study of life cycle and prototyping methodologies used to develop, implement, and maintain computer- based information systems. Discusses transaction processing, management information and decision-support systems. Can include case studies and team presentation.
Senior Project  This is a capstone course for senior majors in the Computer and Information Sciences. Students will have an opportunity to undertake valuable research in areas of computer science, computer information systems, and management information systems to organize into teams and select a design project, complete the preliminary design project for approval and finally present detail and final design work or prototype to departmental faculty.
Principles of Microeconomics  A study of U.S. market systems emphasizing concepts of supply and demand, competition, pricing, resource allocation as applied to issues in business, labor, and public policy.
Computer Ethics  This course deals with the ethical and social issues arising from the development and deployment of computers in society. The course also provides fundamental information about computer and technology ethics, as well as the details the ramifications of continuing technological developments with regard to privacy, security, piracy, access to computing technology for person with disabilities and other important philosophical and ethical issues.
Applied Analytics  This course will expose students to animation techniques and web programming with ActionScript in Flash and Java Script. The course emphasizes on Web Multimedia Applications, such as the user interface, drawing tools, inverse kinematics and 3D tools, mathematics objects, and the Media Encoder.
Computer Security  This course deals with the essentials of computer security. It covers cryptography, computer system security, database, operating systems, network security, mobility, and writing secure programs. There is a special emphasis on: single key and public key, authentication, access control, malicious software, firewalls, VPNs, intrusion detection and prevention systems, Denial of Service attacks, and other security technologies.
Simulation & Management Applications I A study of program packages leading to solutions of management problems. Advanced techniques in solving problems will be discussed and preparing for IT Certification.
Student Success in Business Introduces students to resources that help them to succeed in the W. P. Carey School of Business
Computer Applications and Information Technology Introduces business information systems from a business intelligence perspective and the uses of application software with emphasis on database and spreadsheet packages for efficient and effective problem solving.
First-Year Composition Critical reading and writing; emphasizes strategies of academic discourse. Research paper required.
Brief Calculus Differential and integral calculus of elementary functions with applications.
Introduction to Psychology Major areas of theory and research in psychology. Requires participation in department-sponsored research or an educationally equivalent alternative activity.
Music as Political Discourse: Reggae, Calypso, and Hip Hop This is a reading and writing intensive course that employs critical thought that explores African Diaspora popular music as a medium of social and political expression. It examines the political content of Reggae, Calypso and Hip Hop and their role in triggering and influencing popular discourse in the Caribbean and the USA. Course material will analyze the interrelationships among the musical forms and their role in fostering Black and Pan African Cultural Identity, Political Consciousness and World Peace.
Introduction to Human Communication Topics-oriented introduction to basic theories, dimensions, and concepts of human communicative interaction and behavior.
Macroeconomic Principles Basic macroeconomic analysis. Economic institutions and factors determining income levels, price levels, and employment levels.
Advanced First-Year Composition Concentrated composition course for students with superior writing skills; intensive reading; research papers; logical and rhetorical effectiveness.
Mathematics for Business Analysis Topics in business analysis, including: Lagrange multipliers, linear programming, linear algebra, intermediate probability, random variables, discrete distributions, and continuous distributions.
Introduction to Psychology  Major areas of theory and research in psychology. Requires participation in department-sponsored research or an educationally equivalent alternative activity.
Relational Communication Explores communication issues in the development of personal relationships. Current topics concerning communication in friendship, romantic, and work relationships.
Uses of Accounting Information I Introduces the uses of accounting information focusing on the evolution of the business cycle and how accounting information is used for internal and external purposes.
Microeconomic Principles Basic microeconomic analysis. Theory of exchange and production, including the theory of the firm.
Business Statistics Introduces methods of statistical description, inference, probability, sampling, hypothesis testing and regression analysis with focus on business application.
Elementary Latin Basic Latin grammar with an emphasis on developing reading skills. For beginning students only.
Introduction to Environmental Science Introduces the interconnected nature of Earth's hydrosphere, lithosphere (soils and rocks), atmosphere, and biosphere.
Introduction to Information Systems Survey course introducing the competitive and strategic uses of information systems, how information systems are transforming organizations and their management, and the issues, difficulties, and opportunities facing the technology professional and business manager today.
Uses of Accounting Information II Introduces the uses of accounting information focusing on the evolution of the business cycle and how accounting information is used for internal and external purposes.
Introduction to Environmental Science Introduces the interconnected nature of Earth's hydrosphere, lithosphere (soils and rocks), atmosphere, and biosphere.
Advanced Linear Algebra Fundamentals of linear algebra, dual spaces, invariant subspaces, canonical forms, bilinear and quadratic forms, and multilinear algebra.
Business Information System Development I Systems Development Life Cycle (SDLC) tools, techniques, and methodologies used to plan and analyze the needs of modern business information system development.
Business Database Systems Development Focuses on business database and data warehousing systems, development and management. Topics include capturing business requirements using data modeling, SQL, data security, operational and analytical data stores and data integrity.
Marketing and Business Performance The dynamic role of marketing within society and organizations. Emphasizes frameworks and analytical tools that ensure customer focus and drive organizational performance.
Global Supply Operations Explores modern global integrated supply chain management. Covers traditional supply chain topics such as procurement, inventory management, operations, quality management, logistics and transportation. Also discusses issues related to sustainability, humanitarian logistics, ethical business practices and supply chain analytics in the context of evolving supply chains around the world. Students discover how business processes, performance metrics and modern supply chain IT tools aid in the management and growth of effective and efficient supply chains.
Theory of Numbers Prime numbers, unique factorization theorem, congruences, Diophantine equations, primitive roots, and quadratic reciprocity theorem.
Business Information System Development II Provides a clear understanding of the Systems Development Life Cycle (SDLC) tools, techniques, and methodologies used to design, implement, and support modern business information systems development.
Web Technologies for the Enterprise Modern Web application technologies for the enterprise. Covers development of Web applications for handling business transactions and strategies including the use of cloud-based applications.
Business Writing Advanced interdisciplinary writing course designed to improve the workplace writing competence of W. P. Carey School of Business professional and preprofessional students. Lecture, discussion, case studies, cooperative learning, interactive, Internet, student presentations
Problem Solving and Actionable Analytics Provides foundational skills for exploring unstructured business problems. Covers techniques to approach decision making in a systematic manner, enabling students to become more comfortable in handling tasks or projects that are not initially well defined. Methods include exercises in brainstorming and iterating as well as use of more traditional analytical tools (such as spreadsheets and visualization software).
Introduction to Combinatorics Enumerating permutations and combinations of sets and multisets, inclusion-exclusion, recurrence relations, generating functions, Plya theory and combinatorial structures.
Managing Cyber Risks in Enterprise Business Processes Covers the activities, decisions, risks and controls associated with enterprise business processes. Specific focus on the activities in the sales-to-cash (revenue cycle) and purchase-to-pay (expenditure cycle) processes. Students understand how IT enables performing those processes more efficiently and effectively. In addition to identifying internal controls necessary for accurate, complete performance of processes, also covers the fundamentals of cybersecurity.
Mobile Platforms for Business Mobile application development for the enterprise to address mobile transactions and consumer engagement. Covers business frameworks, app development; and management of devices, applications and services in today's multi-platform environment.
Fundamentals of Finance Theory and problems in financial management of business enterprises
Business Law and Ethics for Managers Legal theories, ethical issues, and regulatory climate affecting business policies and decisions.
Organization and Management Leadership Analyzes strategic, behavioral, and human resource management perspectives, including principles of strategic management and leadership of human resources.
Capstone in Information Systems Capstone in Information Systems
W. P. Carey Capstone Course Develops a general manager's or business owner's perspective on how organizations can create value. Creating long-run value by repeatedly producing goods and services that customers will buy at prices that cover the costs of producing them is the key to success for business organizations. Analyzing current and future environments to understand threats and opportunities in various institutional settings around the world is the starting point for thinking about how an organization might create value and gain sustainable competitive advantage. Evaluates the impact of institutional settings in different countries and ethical values on decision making. Students learn how to successfully manage relations with key stakeholders including customers, employees, suppliers of capital as well as other component goods and services, and stakeholders from various levels of government in different countries.
Internship Internship

Chemistry I This is a general chemistry course for students in engineering and nursing degree programs. Students will design and conduct experiments, analyze and interpret data and relate experimental results to theoretical understandings of chemical phenomena. Specifically, students will more thoroughly understand such subjects as atomic structure, periodic properties, basic chemical calculations, nomenclature, intra- and intermolecular forces, kinetic molecular theory, properties of gases, and solutions.
Software Development I This course provides an introduction to object-oriented software development using the Java programming language. Emphasis is placed on translating written problem descriptions into robust software solutions. Topics covered include Java program structure, algorithmic problem solving and modularization, I/O statements, control constructs, looping techniques, class libraries, user-defined classes and methods, arrays, and ArrayLists
Freshman Studies I This course emphasizes close reading of texts, including not only printed materials but also art, photographs, maps, film, music, and other documents. At the same time, this course requires students to shift focus from the micro level of a text to the macro level of its context in a way that allows them to understand a problem in terms of the larger system(s) of which it is part. Critical thinking skills are developed as students interpret and synthesize these micro and macro elements of text and context. Similarly, personal growth is encouraged as students make connections between course material and their own experiences, beliefs, and values. A primary course focus will be rhetorical strategies for communicating ideas clearly, concisely, and correctly. Students will engage in some form of civic activity in the form of experiential learning that involves the larger community and society outside of MSOE.
Calculus I This course begins with a short review of topics in algebra and trigonometry before introducing the student to differential calculus. Topics include algebra of functions, limits, continuity, differentiation of algebraic, trigonometric, exponential and logarithmic functions and application of the derivative to curve sketching and optimization problems.
Software Development II This course continues the study of objected-oriented software development using the Java programming language. Students design, document and implement software classes and incorporate these classes into larger applications. Topics covered include abstraction, encapsulation, declaring and implementing abstract data types, interfaces, inheritance, polymorphism, graphical user interfaces, simple event-driven programming, exception handling, and file I/O
Freshman Studies II This course introduces students to the principles of report structure and professional documentation.
Calculus II Topics include Newtons method, differentials, basic integrals involving algebraic, trigonometric, exponential, logarithmic, and inverse trig functions. Topics also include rectilinear motion, work, areas and volumes of revolution, integration techniques such as integration by parts and partial fractions, and numerical integration methods.
Physics I - Mechanics This course is a calculus-based introduction to mechanics. Topics include: linear and rotational kinematics and dynamics, work, energy, and momentum. The mathematical level of this course includes the use of vector algebra and elementary applications of differential and integral calculus. The laboratory part of the course emphasizes measurement precision, experimental technique,
Data Structures This course covers the organization of data and the algorithms that act upon them. The topics of arrays, linked lists, stacks, queues, trees, sets, and hash tables are introduced. Fundamentals of algorithm performance are also introduced, with an emphasis placed on time complexity analysis. Laboratory activities include implementation of data structures as well as the application of data structures from standard libraries.
Freshman Studies III Freshman Studies III
Calculus III Topics include LHopital rule, improper integrals, parametric equations, polar coordinates, vector algebra, infinite series with tests for convergence, power series, Taylor and Maclaurin series, and operations with series.
Network Protocols This course provides an introduction to the principles and practice of computer networking with emphasis on the Internet and related protocols, including HTTP, FTP, POP, IMAP, SMTP, DNS, UDP, and TCP/IP with a focus on the application, transport and network layers. The course also introduces the structure, components, and functionality of network architectures including packet switching, error control, flow control, and congestion control
Discrete Mathematics I This course provides an introduction to discrete mathematics as it applies to computer science. Topics include sets, logic, relations, functions, recursion, Boolean algebra, and graph theory.
Software Engineering Tools and Practices This course provides an introduction to the software engineering tools and practices - a look at typical approaches software engineers use to create applications in practice. Topics include requirements analysis, high-level design, detail-level design, UML modeling, code generation, basic unit testing, application building, continuous integration, and revision management. Laboratory assignments provide an opportunity for students to develop an understanding of these tools and how they are used in actual practice.
Computer Organization This course provides students with an introduction to the structure of computer hardware, including the components of a modern computer system as well as the tradeoffs necessary to construct such a system. Specific course topics include Boolean Algebra, basic combinatorial logic, basic sequential logic, numeric systems, the role of performance in designing computer systems, Amdahls Law, instruction formats, addressing modes, computer arithmetic with both fixed and floating point numbers, single cycle and multi-cycle data-path design, pipelining, the memory hierarchy, and caching. Students will develop small, assembly language programs on a simulator as a means of exploring instruction formats and data-path operation.
Software Component Design This course deals with the design and implementation of software subsystems. The concept of design patterns is introduced, and common patterns are applied to the development of software components. Laboratory projects provide an opportunity for students to implement components and to integrate them into complete systems. As a final assignment, small teams of students conduct research on software design patterns and present & demonstrate the results of their investigations to the class.
Web Application Development This course provides an introduction to web application development. Client- and server-side web technologies will be used to develop various web applications including simple web pages and forms, dynamic data-driven applications, web services applications, and highly interactive single-page applications. Topics covered include web application architecture, client- and server-side web development frameworks, HTTP, HTML, CSS, Bootstrap, JavaScript, AJAX, jQuery, Node.js, Angular, MongoDB, web services, single-page applications, and security
Organizational Behavior and Leadership Students will explore the challenges in organizations in terms of the interaction between human beings, groups, and the organizational contexts within which they work. This course combines the multidiscipline approaches of psychology, sociology, anthropology, and management to understand, predict, and manage behavior in organizations. The primary goal of this course is to understand the ways individuals, groups, organizational structures, and culture impact an organizations effectiveness and how an organization impacts all of those concepts in return. Specific attention will be given to organizational behaviors, individual differences, employee fit, foundations of group behavior,
Programming in C and C++ This course introduces students to additional scripted, procedural, and object-oriented programming languages including C and C++. Students are introduced to the concepts of compilation, memory management, linking, low-level types, efficient implementation of objects, and the Standard Template
Probability and Statistics This course provides a basic introduction to the laws of probability needed to perform statistical analyses. Both descriptive and inferential statistics are considered. Probability distributions, the Central Limit Theorem, confidence intervals, hypothesis testing, and analysis of variance are considered in depth.
Software Engineering Process I This course provides an introduction to the software engineering process and the management of software projects. Topics covered include the software life cycle, effort tracking, project planning, measurement and estimation, reviews and checklists, and software quality management
Introduction to Software Verification This course introduces students to the fundamental concepts of software verification. Topics covered include the activities within testing, coverage criteria, basic testing techniques and types, basic testability metrics, and the application of testing tools. Laboratory assignments provide extensive opportunities to apply software verification techniques and tools.
Database Systems This course introduces the theory and practice of database design and application, with an emphasis on relational models. Dimensional, non-relational, and other topical data models are introduced. Topics include SQL, database design using entity-relation modeling and normalization techniques, database application programming, object to relational mapping, authentication and access control, concurrency, and performance optimization.
Professional Guidance The objective of this course is to assist students in the transition from college life to professional life. The course provides students with techniques for and experiences in conducting a successful job search, preparing letters of application and resumes, and preparing for job interviews. It also examines the concepts of success, lifelong learning, and professional responsibilities.
Software Engineering Process II This course provides a more in-depth discussion of agile software development and quality assurance processes including behavior-driven development and continuous integration. It also discusses alternative development models and current software engineering topics. Course concepts are reinforced by classroom exercises and homework assignments.
Software Requirements and Specification This course covers activities that relate to the determination and documentation of software system requirements. Topics covered include requirements elicitation, object-oriented analysis techniques, prototyping, requirements tracking and re-engineering.
Operating Systems This course introduces students to the design and implementation of modern operating systems. Topics covered include the history of operating systems, process synchronization and scheduling, deadlock detection and avoidance, memory management, file systems, protection and security, and input/output systems. Students will be exposed to the POSIX interface through lecture and homework assignments. Students will see the construction of a simple operating system executing on a small microprocessor.
Discrete Mathematics II Emphasis is placed on concepts applied within the field of computer science. Topics include logic and proofs, number theory, counting, computational complexity, computability, and discrete probability.
Software Architecture This course provides an introduction to software architecture, the high-level design and structure of a software system, the discipline of creating such structures to satisfy quality requirements, and the documentation of these structures. Topics covered include quality attribute driven design; quality attribute design tactics; architectural styles and patterns; architecture tradeoff and cost-benefit analysis; skeletal system design, evaluation, and analysis; and coverage of contemporary topics in distributed, highly saleable software architectures
Algorithms This course extends the study of algorithms introduced in CS 2852. Topics covered include searching, sorting, selection, graph structures, traversal algorithms and P/NP complete problems. Applications such as data compression and optimization problems are also discussed.
Ethics for Professional Managers and Engineers This course examines and evaluates the meaning of ethics and professional conduct. A guiding theme is the human search or quest for values and ethical direction in terms of professional and/or personal conduct and our daily life relationships with others. We will articulate and evaluate our own ethical principles and values and their foundations.
Linear Algebra Topics include the use of elementary row operations to solve systems of linear equations, linear dependence, linear transformations, matrix operations, inverse of a matrix, determinants, subspaces, null spaces, column spaces, dimension and rank, eigenvalues and eigenvectors, diagonalization of matrices, and similarity
Software Development Laboratory III This is the third course in the software development laboratory sequence, in which students work on large-scale software projects. At this stage, students are expected to help define requirements for future project work and to contribute actively to laboratory process assessment and improvement.
Real-Time Systems This intense design course introduces students to software development for real-time systems, which often have stringent timing constraints that must be satisfied even under adverse circumstances. Real-time applications include flight control systems, vehicle control systems, industrial processes, life-support systems, robotic manipulators, and multimedia applications. Special attention is paid to scheduling, latency minimization, bandwidth constraints, and other design issues that impact the design of these systems. Laboratory assignments provide experience in the design and implementation of realistic applications using a real-time operating system and embedded
Senior Design Project I Senior Design Project I
Engineering Economy This subject is intended to provide the fundamental techniques for quantifying engineering and business decisions, especially those in which the time value of money is significant. It deals with cost, value, and work concepts and emphasizes the applications of funds invested in capital assets and facilities and the returns on such investments
Senior Design Project II Senior Design Project II
Senior Design Project III Senior Design Project III
Composition I Focuses on skills required for effective writing in a variety of contexts, with emphasis on exposition, analysis, and argumentation. Also includes introductory use of a variety of research skills.
Composition II Focuses on developing writing skills beyond the levels of proficiency required by ENGL 1101. Emphasizes interpretation and evaluation and advanced research methods. .
Precalculus This course is an intensive study of the basic functions needed for the study of calculus. Topics include algebraic, functional, and graphical techniques for solving problems with algebraic, exponential, logarithmic, and trigonometric functions and their inverses.
College Trigonometry This course is an in-depth study of the properties of trigonometric functions and their inverses. Emphasis is placed on the unit circle approach to the study of trigonometric functions and their graphs. Topics include circular functions, special angles, solutions of triangles, trigonometric identities and equations, graphs of trigonometric functions, inverse trigonometric functions and their graphs, Law of Sines, Law of Cosines, and vectors.
Contemporary Economic Issues This course provides students with the knowledge and tools necessary to critically examine social and policy issues from an economic perspective. Fundamental economic questions as they relate to individuals, firms, and society in the modern global world are addressed. Students learn about different economic systems, how markets function, the role of government in the economy, the basis for international trade, measurement of macroeconomic performance, and the impact of globalization on living standards and economic growth.
Human Communication This course is an overview of the communication discipline that identifies and explores the various components, situations, and channels involved in the communication process. The main objective is for students to critically assess and improve their personal and professional communication skills with others.
Literature  Literature
Art in Society This interactive course is an introduction to the role of visual art in global societies, from antiquity through the present day. It examines various media within their social, historical, and intellectual contexts; explores a variety of art-historical, art-critical, and theoretical issues; and facilitates critical and analytical thinking. It also teaches students how to analyze the basic elements of art and design and how to visit a museum.
Music in Society This course examines the role of music in society through a study of musical works within their cultural and historical contexts. Course assignments develop skills in critical analysis and global perspectives as well as an understanding of the creative process. Required attendance at live performances provides the experiential component so crucial to the understanding and enjoyment of music.
Dance in Society Through an examination of the role of arts in society, and an in-depth study of selected dance events, this interactive course provides an understanding of the creative process and develops skills in creativity and critical analysis. Heightened perceptual abilities will be developed through class experiences and field visits to a variety of arts events in dance, music, visual arts, and theater.
Theatre in Society This interactive course examines the role of theatre in society through the study of dramatic works and performance events within their cultural and historical contexts. Course assignments promote understanding of the creative process and develop skills in critical analysis, global perspectives, and collaboration. Attendance is required at live performances, including some events with paid admission.
Calculus I This course is the first in the calculus curriculum and introduces the central concepts of calculus. Topics include limits, continuity, derivatives of algebraic and transcendental functions of one variable, applications of these concepts and a brief introduction to the integral of a function.
Elementary Applied Calculus Uses techniques of college algebra and elementary calculus to analyze and model real world phenomena. The emphasis will be on applications using an intuitive approach to the mathematics rather than formal development. Topics include graphs, derivatives, and integrals of functions. The course incorporates collaborative learning, oral and written reports, and technology.
First-Year Seminar This course is a first-year seminar designed to help students develop college-level skills for academic success by focusing on life skills, strategies for academic success, connecting with campus and community, and foundations for global learning. This course guides student through the transition from high school to higher education.
Introduction to Computing Principles This course is an introductory computing principles course. Instruction centers on an overview of the history, scope, and impact of computing as well as critical, algorithmic and computational thinking on problem decomposition and fundamental programming concepts.
General Chemistry I This course is the first in a two-semester sequence covering the fundamental principles and applications of chemistry for science majors. Course content includes electronic structure of atoms and molecules, bonding fundamentals, fundamentals of chemical reactions, and gas laws.
General Chemistry II This course is the second in a two-semester sequence covering the fundamental principles and applications of chemistry for science majors. Course content includes chemical kinetics, chemical thermodynamics, liquids and solids, properties of solutions, chemical equilibrium, acids and bases, electrochemistry, and qualitative analysis.
Principles of Physics I This course is an introductory calculus-based course on classical mechanics, waves, and special relativity. The student will be able to apply Newton’s laws and conservation of energy and momentum to various problems in kinematics and dynamics, use the law of universal gravitation to analyze the behavior of falling objects and objects in orbital motion, describe simple harmonic motion, oscillations, and waves, and explain the basic ideas of special relativity.
Principles of Physics II This course is an introductory calculus-based course on electromagnetism, physical optics, and quantum physics. The student will be able to apply the concepts of electric field and electric potential to problems in electrostatics and with electric currents, describe the motion of charged particles in magnetic fields and induction, explain the origin of electromagnetic waves and properties of light, determine the behavior of light waves passing through single or multiple slits, and understand elementary principles of quantum physics.
American Government This course examines the institutions and processes of American government and Georgia State government. Global comparisons are made between the governments of the U.S. and other modern nation-states.
United States History to 1877 This course explores major themes in the social, cultural, political, and economic history of the peoples of North America to 1877. Topics include the intersections of cultures in colonial America, the origin and development of the American republic, the evolution of democratic ideas and institutions, western expansion, slavery, sectional conflict, and emancipation and its aftermath.
United States History Since 1877 This course examines the major themes in the social, cultural, political, and economic history of the United States since 1877, the multicultural nature of contemporary U.S. civilization, and the nation’s role in the global arena.
Introduction to World History An overview of world history that provides an introduction to the origin and development of the world’s societies and their political, cultural, and economic traditions.
Pre-Modern World History This course is a survey of world history to early modern times. The course examines the political, economic, social, and cultural history of the world with a focus on connections and interactions.
Modern World History This course is a survey of world history from early modern times to the present. The course examines themes, events, trends, institutions, and ideas with a focus on global connections and interactions.
Foundations of Criminal Justice This course provides an overview of the American criminal justice system including law enforcement, the court system, and the correctional system. Emphasis is placed on crime in the U.S., the criminal justice process from arrest through sentencing, and the roles and responsibilities of criminal justice actors. Current topics in the criminal justice system are addressed such as the death penalty, offender treatment, and criminal justice reform among others.
Introduction to Human Geography This course is a survey of global patterns of resources, population, culture, and economic systems. Emphasis is placed upon the factors contributing to these patterns and the distinctions between the technologically advanced and less advanced regions of the world.
Introduction to General Psychology This course is an introduction to the theoretical and scientific study of behavior that emphasizes historical and current theories, methods, and research findings related to the influences of biological, cognitive, and social factors on behavior.
Introduction to Sociology This course is an overview of sociology, which emphasizes the social nature of human behavior, including an introduction to culture, social structure, socialization, deviance, stratification, family, gender, religion, demography, and complex organization.
Science, Technology, and Society This course provides students with the knowledge and tools necessary to critically examine the development and integration of science, technology, and society. The course seeks to help students better understand the world in which they live, the broader implications of their major course of study, and the complex social, ethical, and moral choices presented by modern science and technology in human relationships.
Introduction to Anthropology This course is an introduction to anthropology’s four major subfields: biological anthropology, archeology, cultural anthropology, and linguistics.
Principles of Microeconomics Analysis of price and output determination under various market structures, income distribution, resource allocation, domestic problems and international trade. This course is required for Business majors and International Affairs majors
Programming and Problem Solving I This course provides an introduction to computing with a focus on programming. Instruction centers on an overview of programming, problem-solving, and algorithm development. Particular topics include object-oriented design/programming, primitive data types, arithmetic and logical operators, selection and repetition structures, interactive user input, exception handling, using and designing basic classes, single-dimensional data structures with searching and sorting, and arrays. Programming assignments focus on techniques of good programming style including proper documentation. The student is taught to efficiently design, code, and debug problem solutions and the relationship between correct code and security.
Programming and Problem Solving II The second course in computing provides coverage of more advanced topics of object-oriented programming. This includes the use of static variables and classes, non-linear data structures, inheritance and polymorphism, file input/output, exception handling, recursion, and parameterized types. Elementary data structures (linked lists, stacks, and queues) are introduced to solve application problems. Graphical user interfaces, parallel programming, database programming, and event-driven programming are also introduced. Students will use good programming style including proper documentation.
Discrete Structures for Computing Coverage of discrete structures is crucial to any program in computing. This course covers propositional and predicate logic, proofs, set theory, relations and functions, algorithms and complexity theory, matrices, graphs and trees, and combinatorics. Throughout the emphasis will be on applications of these concepts in computing.
Technical Writing The course is an introduction to organization, style, and mechanics of technical writing. It includes practice in writing such typical documents as technical descriptions, instructions, proposals, and recommendation reports. Emphasis is placed on incorporating rhetorical theory into planning, organizing, and writing reports; designing visual aids; and editing. Among other assignments, at least one complete technical report is required.
Probability and Data Analysis This course is a foundational, calculus-based introduction to statistics and probability. The following conceptual themes will be developed through the process of statistical investigation: exploratory data analysis (univariate and bivariate), fundamentals of experiment design and sampling, planning and conducting a study, exploring random phenomenon using probability and simulation, and the fundamentals of statistical inference. Technology is integrated into each theme, and the statistical software package used will be chosen by the instructor.
Principles of Physics I This course is an introductory calculus-based course on classical mechanics, waves, and special relativity. The student will be able to apply Newton’s laws and conservation of energy and momentum to various problems in kinematics and dynamics, use the law of universal gravitation to analyze the behavior of falling objects and objects in orbital motion, describe simple harmonic motion, oscillations, and waves, and explain the basic ideas of special relativity.
Database Systems The topics in this course span from a review of the traditional file processing systems to database management systems. Topics include files systems and file processing logic, planning, and major phases of database development: analysis, design and implementation. Labs use an SQL based database product such as Oracle.
Professional Practices and Ethics  This course covers the historical, social and economic consideration of the discipline. It includes studies of professional conduct, risks, and liabilities, and intellectual property relative to the software engineering and computing professions. Software engineering/computing case studies will be used.
Data Structures This course introduces data structures, specification, application, and implementation. The case studies will illustrate how data structures are used in computing applications. The emphasis of the course is on linear and some nonlinear data structures and object oriented principles. Topics include: abstract data types, stacks, queues, lists, binary search trees, priority queues, recursion, algorithm efficiency, trees, heaps, hash tables, and analysis of search and sort algorithms and their performance for implementation and manipulation. The programming language to be used in this course is any standard high-level object-oriented programming language such as C++, Java, and Ada.
Operating Systems This course introduces the fundamental concepts and principles of operating systems. Topics covered include system performance, processes and threads, multiprogramming, scheduling, memory management, synchronization, deadlocks, file systems, Input/output systems. Additional topics: security and protection, network and distributed OS.
Introduction to Software Engineering This course provides an overview of the software engineering discipline, introducing the student to the fundamental principles and processes of software engineering. This course highlights the need for an engineering approach (both personal and team) to software with understanding of the activities performed at each stage in the development cycle. In this course, students will perform requirements analysis, design, implementation and testing. The course presents software development processes at the various degrees of granularity. Students will become aware of libraries of standards (IEEE, ACM, SWEBOK, etc.).
Software Systems Requirements This course covers engineering activities related to the definition and representation of software system requirements. Topics include the elicitation, analysis, specification and validation of software system requirements. Emphasis is on the application of processes and techniques of requirements engineering. Projects focus on current analysis methods and supporting tools for specification, organization, change management, traceability, prototyping, and validating requirements.
Software Architecture and Design This course covers the fundamental design principles and strategy for software architecture and design. Architectural styles, quality attributes, design notations and documents, reference architecture, domain specific architecture in architecture process and pattern-oriented design, component-oriented design, and interface design in detailed design process are discussed.
Software Testing & Quality Assurance This course will show how software quality assurance and configuration management is performed and how software process improvement is maintained in order to assure the highest possible quality. Topics include software process metrics and their use in QA, testing approaches, methods and techniques. Development of QA plans, reviews, inspections and audits will be done. Configuration control boards and methods for software process improvement is discussed.
User-Centered Design A course that presents the fundamental knowledge, processes, skills, and practices leading to the user-centered design of computer systems and applications. The course addresses the effectiveness of human interactions with computers by examining issues of physical ergonomics, cognition and perception, human memory and information processing, and evaluation of prototype software. Usability engineering techniques are covered leading to improved system effectiveness in supporting use of computers, user learning, diversity in interaction styles, and individual versus group work
Software Project Management This course focuses on organizational and technical roles in software engineering. Models of software engineering life cycle, software maturity framework, strategies of implementing software, software process assessment, project planning principles and tools, software configuration management, managing software quality and usability, leadership principles and legal issues will be covered. A required team project combines technical and managerial techniques of software design and development.
SWE Application Domain Students work as part of a team to develop solutions to problems posed by either internal or external customers in a specific SWE Application Domain. The purpose of the course is for the student to gain an understanding of the selected application domain, and its use of software to support functions/operations within that domain. Application domain selection is done every term from a variety of industrial domains including Security, Gaming, Automotive, Aerospace, Military, Finance and Commerce. Problems may require considerable software development or evolution and maintenance of existing software products.
Software Engineering Project This is the capstone project course and constitutes a major design experience. The course focus is on a team project comprising the development of a realistic software system during all phases of the software development life cycle. Topics include software project management, design, verification and validation, development, evolution and quality assurance. Current methods, techniques, and software tools are utilized in the development of the project.
Mobile & Casual Game Development This course explores the segments of mobile (handheld, PDA and cell-phone) and casual gaming. Aspects of mobile hardware resources such as smaller memory, limited processor capabilities, and smaller displays are discussed; implications of such limitations to design and playability are also presented. Patterns of casual game development and emerging markets for casual games are also explored. A term project exploring mobile and/or casual game development is required.
Digital Media and Interaction This course explores how digital media is created and utilized within computer games and simulations. Topics include sound, video, text, images, character modeling, animation, game world and level generation (2D and 3D), and current and emerging interaction techniques. Students are required to work in teams to produce a multimedia term project.
Electronic Commerce This course will examine the aspects of electronic commerce. Topics include internet development, EDS, security, network connectivity and privacy. Basic business practices using electronic commerce will also be covered.
Information Security Administration & Privacy The student develops knowledge of the principles of information assurance at the policy, procedural, and technical levels to prepare the student for a role as a business decision-maker. Real-world examples from the text and current events will be used to demonstrate the applicability of the techniques of information assurance.
Wireless Security This course covers methods and techniques to secure wireless networks against threats and attacks. The topics include Security and Cryptography, Network Security Protocols, Security and Layered Architecture, Voice-Oriented Wireless Networks, Data-Oriented Wireless Networks, Security in Traditional Wireless Networks, Security in Wireless LAN, Security in Wireless Ad Hoc Network, Special Topic: Mobile Security.
Ethical Hacking for Effective Defense This course focuses on detection of network and system vulnerabilities by taking an attacker-like approach to system, network, and data access. Topics include network attacks and defenses, Operating System and application vulnerabilities, social engineering attacks, and malware. Ethical, legal implications of network attacks are also discussed.
Embedded Systems Analysis and Design The analysis and design course focuses on using modern methods, techniques, and tools for specification and design of embedded systems. Topics include analytical methods such as RMA, development methods such as HOOD, and notations like UML, Petri-nets, etc. are covered. Performance evaluation based on modeling and simulation techniques is also covered.
Embedded Systems Construction and Testing This course covers fundamental principles and techniques for embedded software engineering. It focuses on a component-based development approach to designing, implementing, and testing embedded programs. Topics include building standard-along and networked embedded systems, validation and verification of trustworthy embedded software, testing tools and environment, quality assurance and metrics for embedded systems, and hardware/software co-design and co-testing.
Component-Based Software Development This course covers the concepts and foundations of component-based software development (CBSD) and its related technologies. Component-oriented tools and languages, approaches for implementation of CBSD, including designing, building, assembling, and deploying reusable COTS components are discussed in depth. The current component technologies such as Microsoft .NET components, Sun JavaBeans and Enterprise JavaBeans components, and web services components will be explored.
Object-Oriented Development This course involves engineering activities related to the analysis, design, and implementation of object-oriented software systems. Topics include modeling foundations, requirements specification and documentation, design concepts and strategies, and OOAD methodologies with an emphasis on UML. The course includes a major project utilizing current analysis and design methods and tools implemented in a contemporary IDE.
User Interaction Engineering This course follows a complete software-engineering cycle to produce software objects (classes and/or components) that support users in effective, efficient, and enjoyable interactions with computers. Class exercises and a project incorporate concepts and methods including ethnographic and user analysis; cognitive ergonomics; usability metrics and criteria; software-engineering practices, conventions, standards, and documentation; device-user action mapping; person-system function allocation; quality management systems; conceptual proto-typing; embedded systems in support of ubiquitous computing; and function-behavior analysis.
Distributed Computing A course that introduces students to the fundamental principles common to the design and implementation of programs that run on two or more interconnected computer systems. The subtopics, which are based on these principles, include: distributed operating system and network protocols for process communication, synchronization, scheduling, and exception and deadlock resolution; understanding of client-server, web-based collaborative systems; parallel computing; concurrency issues; and API’s for distributed application development. Several distributed computing environments, like MPI, PVM, and Java RMI are discussed and used in developing experimental projects in a cluster of networked computers.
Systems Programming This course presents an introduction to systems programming in Linux/Unix. Topics include file I/O, process control and communication, threading, and network-aware systems programs.
Computer Networks This course covers computer networking and includes software application-related, protocol-related and security-related issues involved in the Internet. Topics include basic network structures, mechanisms for application-to-application communications, protocol layering, Internet addressing, unicast and multicast routing, connection establishment and termination, data flow and congestion control, and error handling. A specific protocol suite will be examined in detail. More advanced topics that build on the student’s understanding of network protocols are also introduced, such as network security, mobile networks and the future Internet.
Real-Time Systems This course covers the software-development life cycle as it applies to real-time systems. Alternatives: • Including labs that involve the use of a real-time operating system and an associated development environment, or • Modeling with UML, and object oriented simulation. Introduction to formal specification of real-time systems. A course project is required to be completed by the end of the semester.
Programming Massively Parallel Processors A study of practical parallel algorithms with an emphasis on implementation and performance issues on massively parallel processors. Design and implement high performance computing applications using CUDA running on Graphics Processing Unit (GPU). Topics include heterogeneous parallel programming, hardware threading models, synchronization, parallel blocking algorithms, register allocations, memory performance, and inter-thread communication.
Computer Graphics and MultimediaThe basic principles and practices of interactive computer graphics and multimedia systems are covered in this introductory course. The design and implementation of state-of-the-art computer graphic rendering and visual multimedia systems are the main part of the course. The sub-topics of the course deal with specific input/output hardware devices and their technology, software and hardware standards, programming methods for implementing 3-dimensional graphical applications and interactive multimedia applications, and a study and evaluation of the effectiveness of graphic/multimedia communications. A large component of the class is the building of a large-scale application.
Digital Image Processing Digital Image Processing

Cornerstone Engage first semester students in thinking about the ideas which shape our current and future views of ourselves, our communities, and the cosmos. Special attention is given to a Christian perspective on liberal education as a foundation for life-long integration of faith, ideas, and action.
Jesus: His Life and Teachings Students will study the canonical gospels (Matthew, Mark, Luke, John) and learn critical theories for analyzing them both as sources for understanding who Jesus was and for reflecting on what those stories mean for Christians today. May be used to satisfy Bible University Requirements.
Early Christians: Life, Literature and Community Students will study Acts through Revelation and learn critical theories for analyzing them both as sources for understanding how early Christian communities appropriated the stories of Jesus for their own contexts and for reflecting on how those stories inform Christian life today
Message of the Old Testament An overview of the Old Testament providing an outline of special themes and the overall purpose of the books. The basic message of the Old Testament as a whole, including content and theological themes, will be examined.
Composition and Rhetoric The theory and practice in reading and writing analytical and persuasive essays. Prerequisite: Meet one of the following - SAT Critical Reading score (old SAT) of 470 or above; SAT Reading + Writing score (new SAT) of 500 or above; ACT English score of 19 or above; or writing placement testing into ENGL 111. May be used to satisfy University Requirements.
Academic Composition Workshop Practice in reading and writing expressive and informative essays. Some persuasive writing will be included. A review of grammar and editing skills will also be included
Composition and Literature Expository, critical, and persuasive writing with research based on the reading of literary works.
Speech and Rhetoric Develops public speaking knowledge, skills, and attitudes through the interaction of rhetorical theory, practice, and analysis.
Environmental and Technological Science A study of environmental and technological sciences including natural resources and the impact of modern technology on the human environment. May be used to satisfy Science University
General Physics I  Principles of mechanics, heat, and sound. An algebra-based physics course, designed primarily for liberal arts and pre-medical and pre-dental students.
Introduction to Communication This course provides a survey of the terminology, methods, theories, and topics within the discipline of communication
Civilization I Survey of the social, economic, religious, political and aesthetic activities of western civilization from the earliest times to 1660.
Introduction to Anthropology An overview of archeology; physical, linguistic, and cultural anthropology. Challenges students to a serious look at todays global village with its diversity of cultures and a fuller understanding of tribal loyalties in the midst of growing international interdependence. An appropriate world view is suggested, in contrast to provincialism
Programming I Programming, debugging, and small program development in a statically typed procedural language. Topics include sequential, selective, and iterative control flow, modularity, simple data types, arrays, formatted input and output and text file processing
Programming II: Data Structures An introduction to programming emphasizing implementation details such as pointers, array and data structure physical memory layout, stack conventions for function calls, string manipulation, heaps, allocation, object construction including canonical object form for C++, and portability. The primary language is C++, with substantial reference to C, and assembly language.
Computer Organization An introduction to machine organization covering digital circuits, functional units, caches, virtual memory, devices, the interrupt mechanism, and bus arbitration in the context of a single-user system
Object-Oriented Programming Principles and concepts of programming under the object-oriented paradigm using a language such as C++ or Java. Topics include: data abstraction and problem decomposition, information hiding, encapsulation, inheritance, polymorphism, templates, exception/event handling, multi-threading, concurrency, debugging, graphical user interfaces, and documentation.
Design and Analysis of Algorithms Design and scientific and mathematical study of algorithms. Analytic and experimental performance determination. Includes searching and sorting, trees, graphs, asymptotic (e.g., big-O) performance bounds, and the halting problem
Software Engineering A study of the development of large-scale software systems. Includes an overview of the software development life cycle. Principles of software testing will be introduced. Projects will afford practical experience in the development of interpersonal communication skills needed for team software development.
Introduction to Databases and Database Management Systems A survey of the logical and physical organization of data and their importance in computer processing. Introduces data models, relational database design, and associated ideas. Compares modern DBMS software. Examines data as a strategic organizational resource. Students develop the basic SQL scripting skills necessary to create tables, queries, forms, and reports.
Fundamentals of Networking and Data Communications A first course in data communications and networking. Topics include: IP networks and services, comparative network configurations and communications protocols, function and purpose of physical network components, resource sharing, client-server systems, administrative issues and tools, and industry standards. Provides initial training towards professional network certification.
Introduction to Information, Technology, and Computing An introduction to the mindsets, concepts, and skills found in the disciplines of the School of Information, Technology, and Computing.
Reflections on Faith and Work Reflections on Faith and Work
Mobile Application Development Introduces the development of applications for mobile computing and technology. Students learn to develop applications for mobile computing devices such as the iPhone and iPod Touch. Includes theory, concepts, and hands-on programming
Human-Computer Interaction Introduction to both the programmatic and psychological considerations surrounding shaping the computer tool to the user. The course will cover the details of implementing a graphical user interface, and how to make the interface as user-friendly as possible
Software Engineering II A continuing study of the development of large-scale software systems. Includes an overview of currently used analysis and design methodologies, including both structured and object-oriented paradigms. UML and Design Patterns will be introduced. Students will be exposed to existing projects of moderate size
Web Application Development Continuation of Web Development I. Topics include: Rapid Application Development; client- and server-side scripting for user and database interaction; session/cookie management; and privacy and integrity issues. Students learn scripting languages such as JavaScript, Perl, and ASP and develop an understanding of the document object model. Emphasizes satisfying client specifications.
Introduction to Computer and Information Security A survey of the fundamental concepts of computer and information security, including policies and technologies used to achieve secure networks, systems, computing facilities, and information resources. Topics include common system vulnerabilities and threats; models and mechanisms for mandatory, discretionary, and role-based access controls; authentication technologies; ethical issues; and related ideas.
Information, Technology, and Computing Internship Information, Technology, and Computing Internship
Systems Analysis and Design Fundamental principles and methodologies of system analysis and design. Presents the systems development life cycle, with specific emphasis on planning, problem definition, specification of structured system requirements, information gathering, data and process modeling techniques, logical and physical design, feasibility assessment, and implementation and maintenance issues for businesses and organizations.'
Linear Programming Linear programming models, simplex algorithm, duality theory, and sensitivity analysis. Applications to graphical networks, scheduling problems, dynamic programming, and game theory.
Foundations of Entrepreneurship Introduces students to the entrepreneurial process. Students will examine entrepreneurship as a calling in their life and career and assess their own aspirations and skills as they relate to entrepreneurship. The course also includes a focus on opportunity recognition and evaluation.
Calculus I Limits, continuity, differential calculus of elementary functions. Applications to curve sketching, optimization, rates of change, and linear approximations. Introduction to antiderivatives and definite integrals.
Discrete Mathematics Elementary set theory, logic, combinatorics, relations, and applications
Statistical Methods I Measurement concepts and scales, populations versus samples, descriptive statistics, random variables and their properties, sampling processes and distributions, special probability distributions, confidence intervals on means and variances from samples, hypothesis tests, one-way analysis of variance, linear correlation and regression, estimation of proportions, and introduction to contingency tables.
Freshman Seminar Required introduction to the Computer Science and Software Engineering programs. Students will discuss what it means to be a professional in the fields of computer science and software engineering, meet professionals in these fields, and hear about the wide range of employment opportunities. Throughout the course students will meet the faculty of the Computer Science Department and learn of their diverse expertise. By the end of the course, each student will have developed a resume and a career plan and will have learned how a Tech education prepares them for rewarding employment
Fundmentals Of Computer Science I This course introduces the beginning programmer to the fundamentals of object-oriented programming while becoming acquainted with many of the core features of Java. The student will be exposed to the creation of a variety of games and applications. After the basics, the student will learn to develop his or her own systems of classes, eventually working with many of Java’s Graphical User Interface (GUI) features and will develop a desktop Windows application.
College Chemistry I Fundamental principles of chemistry such as stoichiometry, atomic structure, bonding, gas laws, oxidation-reduction reactions, and chemical equilibria are covered. The experimental nature of the science of chemistry and the mathematical treatment of data are emphasized.
Introduction To Technical Writing Introduces students to written technical communication. Coverage includes electronic communication, memo writing, report writing, formal research writing, document design (including the design of graphical elements), grammar, usage, and style. Course assumes working knowledge of Microsoft Word.
College Chemistry Laboratory I Experiments cover gravimetric analysis, chemical reactions, acid-base titrations, gas laws, oxidation-reduction titrations, water analysis, colligative properties and pH titrations.
Calculus I Includes the study of limits of functions, continuous functions, tangents and derivatives, implicit differentiation, extreme values, curve sketching, antiderivatives, integrals of continuous functions, and the Fundamental Theorem of Integral Calculus.
American Literature I Studies American literature from Colonial times to the Civil War with emphasis on the major philosophical & literary concepts of each period.
Fundamentals Of Computer Science II Explores the finer and more subtle elements of a programming language. Programming techniques and structures include arrays, records, and linked lists.
Presenting Technical Information Interactive, participatory course which requires use of multimedia to enhance the visual dimension of oral presentations.
Calculus II Includes the study of methods of integration including, u-substitution, integration by parts, integration by partial fractions. Studies the derivatives and integral of the inverse trigonometric functions, exponential functions, and hyperbolic functions. Also studied are applications of the integral, sequences, and infinite series.
General Physics-Mechanics First course in the calculus-based introductory physics sequence. Includes the study of kinematics, dynamics, and the conservation laws. Emphasizes the development of problem-solving skills fundamental to all branches of engineering.
American Literature II Examines American literature, especially prose, from the Civil War to the present.
Introduction to Sociology An introduction to sociology, covering its basic concepts, theories and methods.
Data Structures and Algorithms Commonly used structures found in computing and the algorithms which manipulate them are studied. Design and analysis of algorithms are emphasized. Topics include stacks, queues, general lists, trees, hashing, searching, and sorting.
Discrete Structures Course includes those mathematical topics which will help students in future courses. It refines problem solving skills by providing a vocabulary, structures and techniques for working with problems. Topics include logic, theorem  proving, properties of sets, functions, relations, and sequences, counting techniques, recursion, and graph theory.
Introduction to Embedded Systems Develops basic concepts of computer systems and computer architecture. Includes base-2 arithmetic, octal and hexadecimal number systems, computer addressing modes, I/O, and assemblers.
Multivariable Calculus Includes the study of vector-valued functions, parametric functions, curves in the plane, the polar coordinate system, partial derivatives, multiple integrals and calculus of vector fields.
General Physics-Heat, Sound & Optics Second course in the calculus-based physics sequence. Includes the study of heat, sound, and optics. Emphasizes problem-solving.
General Phy-Heat, Sound & Optics Lab Typical topics for this course include: Force, Torque, Motion in 2 dimensions, Friction, and Buoyancy. Laboratory exercises include measurements of forces, torques, energy, work, optics, thermal properties and resonance. Stresses good laboratory techniques and analysis of experimental errors. Laboratory reports are required.
Design & Analysis of Algorithms Covers several advanced data structures, including balanced search trees and graphs. Studies common algorithm design methods (Brute Force, Decrease and Conquer, Divide and Conquer, Greedy, and Dynamic Programming) to solve various classic problems. Ehmphasizes the space and time complexitites of various data structures and their associated algorithms.
Database Design Studies concepts and applications in database management including the relational model, relational algebra, Structural Query Language (SQL), normalization, transactions, and how to avoid SQL-injection.  XML, No SQL and Big Data are introduced.  Information stewardship is discussed.
Principles of Micro and Macro Covers the major aspects of macroeconomics (national income accounts, employment and infl ation, and monetary and fiscal policy) and microeconomics (firms and markets).
Introduction to Differential Equation A study of first order and linear second order differential equations, power series methods, numerical techniques, Laplace transform, with applications to mechanical vibrations and circuits.
General Physics-Electricity, Magnetism & Motion Third course in the calculus-based physics sequence. Covers electricity, magnetism, and electromagnetic waves.
General Physics-Electricity, Magnetism & Motion Lab General Physics-Electricity, Magnetism & Motion Lab
Concepts of Programming Languages Students will study concepts of high-level programming languages. Topics include regular expressions, context free grammars, programming language syntax, semantics, language translation and how language constructs are implemented. Projects include a lexical analyzer and/or a parser. Students will also program in a functional and a logic language.
Software Engineering Studies the process of engineering software applications and systems. Concentrates on the techniques and processes needed to engineer simple program assignments. Material on all aspects of software engineering, including professional ethics, is presented. In addition to individual homework assignments students will do in class assignments in pairs, triads, and quads on single and multiple module software products.
Statistics for Scientists and Engineers Studies probability, random variables, univariate discrete and continuous probability models, expected values, sampling distributions, data collection, point and interval estimation, and hypothesis testing.
Engineering Mechanics–Statics The study of the laws governing equilibrium. Uses equilibrium equations to compute the reactions and internal forces resulting from applied loads. Covers addition of forces, equilibrium of particles in two and three dimensions, equilibrium of structures, member forces for trusses and hinged frames, internal shear and moment forces plus shear and moment diagrams for beams, friction, centroids of areas and solids, moments of inertia of areas and solids.
Engineering Mech–Dynamics The study of the effects of forces upon the motion of material bodies. Covers kinematics of particles, kinetics of particles including force, mass, acceleration, work, energy, impulse and momentum, kinematics and kinetics of rigid bodies.
Mechanics of Materials Treats the elastic properties of materials plus the elastic and stability properties of members. Includes the special subjects of stress, strain, tension, compression, shear, torsion, bending and other force effects as they occur in beams, columns, other structural members, and joints.
Mechanics of Materials Laboratory Studies mechanical properties of common construction materials used by industry. Wood, mortar and concrete, as well as ferrous and nonferrous materials will be observed under compression, tension, bending, buckling and fatigue situations. Hardness and impact testing is also conducted. Familiarization with three generations of tension-compression testers is acquired by the students. Extensive report writing is required.
Computer Applications for Engineers The concepts of concurrent engineering and computer aided engineering analysis are introduced. The integration of computer aided design (CAD) and computer aided manufacturing (CAM) with engineering computer graphics will be used by the student to solve engineering design problems.
Usability Testing Usability Testing
Computer Architecture Studies the design and organization of computer systems, including the instruction set and interconnection of hardware components. Topics include computer performance, assembly language programming, microprocessor architecture, pipeline processing, memory and storage organization, and multiprocessor computers.
Software Maintenance Continues to study the process of developing software applications and systems. Software requirements, design and testing are addressed. Students gain experience in these areas by working on software maintenance projects that involve significant changes to a previously developed product and further development on a previously started project.
Requirements & Specifications Concentrates on the development of requirements for software applications and systems. Topics include elicitation, analysis, documentation, and modeling software requirements. The Z specification language is one of the techniques used for modeling requirements.
Advanced Technical Writing Emphasizes effective, clear and accurate scientific and technical communication. Focuses on writing theory and on the process approach to writing. Rewriting is stressed. Written work integrated with major fields.
Networks A study of the fundamental principles of computer based communication. Principles, design, and standards of networks will be discussed, including standard network protocols. Includes an introduction to telecommunications and basic data transfer processes.
Software Design & Architecture Builds on the student’s existing knowledge of and experience designing software. This course focuses on high level design of software systems so that those systems satisfy quality attributes such as security, availability, performance, and modifiability. Students will learn the importance of developing, documenting, communicating, and adhering to a software architecture that achieves not only the functional but also the non-functional requirements of a software system.
Software Engineering Design Project I Software Engineering Design Project I
Engineering Economic Analysis Covers the time value of money and financial calculations. Provides a basis for the economic evaluation of engineering projects. Problems assigned deal with the methods of determining returns on engineering investments, comparing alternatives, and determining the economic life of equipment.
Operating Systems I/O management, memory management, processor management, device management and performance measurement/evaluation are examined. Other operating systems, theoretical and current, are discussed.
Web Science This course is designed to give the student an understanding of the plumbing that makes the web work. It covers basic and some advanced technologies currently being used in web based systems and provides an overview of the technical issues surrounding the web. Students successfully completing this course will learn to employ web technologies to build high-value web applications.
Software Engineering Design Project II Software Engineering Design Project II
Software Verification and Validation Using industry standards, a text and other materials, this course will focus on understanding software verification and validation (V&V) concepts, processes, techniques and tool.  In addition students will practice several V&V techniques in class exercises and lab assignments.
Senior Seminar Senior Seminar

First-Year Seminar First, it introduces students to the concept of inquiry as a process that utilizes multiple approaches and perspectives to systematically investigate questions or problems.
Introduction to Academic Reading and Writing This course introduces students to the ways that writing is grounded in reading and that inquiry is essential to learning. Through attentive reading of academic texts, students are given authority as learners to undertake serious intellectual projects that emphasize critical and creative thinking.
Academic Writing and Research his course introduces students to the kind of critical and creative thinking necessary to understand the relationship between academic research and argumentation.
Introduction to Discrete Mathematics This course introduces students to basic concepts and structures of discrete mathematics. Topics can include propositional and predicate logic, sets and set operations, functions, proof techniques, counting problems, probability and basic number theory. Applications include computer science, biology, social sciences, law and the physical sciences.
General Biology I This course considers the basic concepts of life science with emphasis on the methods of science and the role of science in society, the chemistry of life, and molecular and cellular evolution. Selected topics include cellular biochemistry, the central dogma of biology, regulation of gene expression, cell structure and function, respiration and photosynthesis, and cell cycles.
General Biology for Majors This course covers the basic concepts of life science with an emphasis on animal anatomy and physiology, animal reproduction and development, the nervous system, evolutionary mechanisms and ecological principles. Selected topics include microevolution, speciation, macroevolution, animal behavior and application of comparative anatomy and physiology to illuminate evolutionary relationships and their ecological context.
University Physics This is a calculus-based physics course. Students examine classical Newtonian physics from kinematics, the study of motion, to dynamics, the study of why motion occurs. Topics include Newton's laws, conservation of energy and momentum, torque, equilibrium of static bodies and fluids, and thermal properties of matter. Through experimentation, computer modeling and group problem-solving, students apply these principles to predict the outcome of a number of reality-based and open-ended problems.
General Chemistry I Students study the atomic theory of matter, nomenclature, chemical formulas and reaction equations, stoichiometry, the gas laws and the kinetic molecular theory, thermochemistry, atomic structure, periodicity of the elements, chemical bonding and molecular structure.
Calculus of a Single Variable This course covers functions, graphs, limits, continuity, derivatives, applications of derivatives, antiderivatives and definite integrals, as well as the Fundamental Theorem of Calculus.
Engineering Economics and Project Management This course provides an introduction to the concepts of economics/finance/costing and explains how these affect the engineering functioning and contribute to decision making in engineering operations. A portion of the course covers the concepts of project management, team building and leading teams that are used throughout the program and in professional practice.
Professional Development Seminar This course provides students with a culminating and integrative learning experience grounded in their University Curriculum, their major classes, and co-curricular activities. Students explore and evaluate potential solutions to an aspect of one of the 14 Grand Challenges for Engineering, with a focus on the global dimension of the solution. The course may include a service learning or study abroad component
Applied Statistics This introductory statistics course is intended primarily for students majoring in engineering, mathematics or the sciences. Emphasis is on using statistics to answer questions in the physical and social sciences. Topics include descriptive statistics, probability, point and interval estimation, hypothesis testing, correlation and regression, analysis of variance, chi-square tests and nonparametric methods. Students are required to analyze real data sets using Excel, SAS, SPSS or similar computer programs.
Integral Calculus With Applications This course provides a bridge from MA 141 to MA 152. Students review basic integration rules, integration by substitution, Fundamental Theorem of Calculus, numerical integration and applications of integration, including area between curves, volumes, arc length and applications from physics
Calculus II: Part A Students in this course study techniques of integration and infinite sequences and series. Techniques studied include u-substitution, integrals involving logarithms and inverse trigonometric functions, trigonometric integrals, trigonometric substitution, integration by parts, and partial fractions. For infinite series, the course includes a study of convergence, tests of convergence, power series, and Taylor and Maclaurin series. Additional topics include indeterminate forms, L'Hopital's Rule, and improper integrals
Calculus II: Part B In this course students study differential equations, conic sections, parametric equations, polar coordinates, vectors, operations on vectors, lines and planes in space, three-dimensional coordinate systems (cylindrical and spherical coordinates) and quadric surfaces.
Linear Algebra This course covers the basic concepts of linear algebra, along with an introduction to the language and techniques of formal mathematics. Topics include systems of linear equations, vector spaces, linear transformations, matrices, determinants and eigenvalues.
Discrete Mathematics Discrete Mathematics
Numerical Analysis Numerical Analysis
Mathematical Modeling Mathematical Modeling
Programming and Problem Solving This course serves as an introduction to computer science and computer programming. Topics include fundamental programming constructs; problem-solving techniques; basic data and control structures; testing; debugging; arrays; and an introduction to object-oriented programming
Data Structures and Abstraction This course is a continuation of CSC 110. Topics include advanced data structures (linked lists, stacks, queues, trees, hash tables), recursion, abstract data types, introductory algorithms, and intermediate object-oriented programming. A lab is included
Object-Oriented Design and Programming This course serves as an introduction to the principles of design and development using object-oriented techniques such as inheritance, polymorphism and encapsulation. Students apply OO techniques to develop event-driven programs. Code craftsmanship is emphasized. Students also learn to apply and recognize design patterns for OO software and to use standard application development frameworks.
Software Engineering Design and Development This course serves as an introduction to software engineering using object-oriented analysis and design. The course emphasizes the development of robust and high-quality software systems based on object-oriented principles. Implementations are performed using state-of-the-art programming languages and application development frameworks
Software Design and Architecture Students explore software design methodologies, architectural styles, design principles and design techniques. The course examines the principles and methods of architectural design and detailed design of complex, large-scale software systems and covers a number of architectural styles including classical and emerging styles.
Software Quality Assurance This course acquaints students with various aspects of software quality assurance. Students learn about dynamic analysis approaches, such as testing and runtime assertions, static analysis approaches, such as reviews and finite-state verification, and processes for promoting software quality. Emphasis is placed on testing, including testing processes, such as unit, integration, system, acceptance and regression testing, and test case selection techniques, such as black-box and white-box testing.
Engineering Professional Experience Students gain practical experience in applying theory obtained in previous course experiences by employing engineering skills in a professional setting under the guidance of faculty and mentors. Students must obtain departmental approval and register prior to starting the experience. If approved, an internship could satisfy this requirement.
Networking and Distributed Processing This course introduces students to net-centric computing, the web as an example of client-server computing, building internet and web applications, communications and networking, distributed object systems, collaboration technology and groupware, distributed operating systems and distributed systems.
Computer Architecture and Organization Students are introduced to the organization and architecture of computers. Topics related to computer organization include digital logic, data representation, computer arithmetic, data path and control unit implementation, memory system organization, and I/O communications. Architecture topics include machine language programming, instruction set design, and factors affecting processor performance
Senior Capstone I Senior Capstone I
Senior Capstone II Senior Capstone II
Composition and Rhetoric Through the critical engagement of a variety of texts, including written, oral, and visual, this course prepares students to become careful readers, critical thinkers, and skilled writers. Drawing upon rhetorical theory, it emphasizes the practices of analytical reading, informed reasoning, effective writing, and sound argumentation
Inquiry An introduction to the value of research and to the role of research and scholarship in the life of an undergraduate student, including exposure to the opportunities available to participate in research and scholarship within the Liberty University undergraduate programs
Communications Communications
Information Literacy Information Literacy
Foundational Skills provides students with an introduction to Liberty University and to the academic core competencies that students attain by the point of graduation.
Quantitative Reasoning Applying mathematical tools and analysis to practical context, particularly focusing on using proportions and ratios. Basic statistical tools are developed and employed, including graphs, descriptive statistics, the normal curve, the basics of inferential reasoning and investigating correlation. Financial applications are particularly emphasized, as is the use of spreadsheets.
Introduction to Biblical Worldview An introduction to the biblical worldview and contemporary moral issues. This course will introduce critical thinking skills. Religious and philosophical worldviews will also be explored.
Research A survey of knowledge and skills required for the conduct of research in either the humanities, sciences, or creative arts.
Evangelism and the Christian Life  2 Special attention will be given to the theology of all aspects of evangelism including the follow-up. Various methods of approach and presentation will be considered
Natural Science Elective Natural Science Elective
Social Science Elective Social Science Elective
Old Testament Survey An introduction to the authorship and contents of the Old Testament books. Special attention will be given to important persons, places and events, as well as to key chapters in the Old Testament revelation.
New Testament Survey An introduction to the authorship and contents of the New Testament books. Special attention will be given to important persons, places, events, as well as to key chapters in the New Testament revelation.
Theology Survey I This is a general survey of Bible doctrine designed to synthesize and outline each of ten major areas of systematic theology, including prolegomena, bibliology, theology proper, Christology, angelology, and pneumatology.
Theology Survey II This is a continuation of general survey of Bible doctrine designed to synthesize and outline each of the ten major areas of systematic theology. Survey II includes anthropology, hamartiology, soteriology, ecclesiology and eschatology.
Organizational Behavior I This introductory course in organizational behavior integrates the management and behavioral principles, techniques, and concepts associated with the productivity of organizational resources. It focuses on human behavior in organizations and is primarily concerned with improving organizational efficiency and effectiveness through increased understanding of the behavior of people at work.
Introduction to Computing Sciences A breadth-first introduction to the computing disciplines, with an emphasis on computer ethics and how computing technology impacts the world. Topics include: computing history; discrete mathematics; computer architecture and organization; algorithm design; languages; compilers; operating systems; applications; networks; databases; intellectual property; privacy; free speech; social consequences; computer crime; and codes of conduct.
Introduction to Programming Introduction to structured programming and algorithms with an object-oriented language. Topics include input/ output, flow of control, functions, and an introduction to software engineering.
Technical Communication This course will teach students how to write documents representing the three main types of technical writing: operational (instructional), promotional (argumentative and analytical), and reportorial (expository, informational and analytical). Students will also evaluate and edit documents belonging to these categories by examining how well these documents serve their purpose for particular audiences in different cultural and social contexts. Students will study and practice communicating ideas competently in diverse public and private speaking venues.
Calculus and Analytic Geometry I Functions and graphs, exponential, logarithmic, inverse trigonometric, limits, the derivative, techniques of differentiation, continuity, applications of differentiation, L'Hopital's Rule, the integral.
General Physics I A study of mechanics, gravitation, waves, sound, heat, light, electricity and magnetism, optics and modern physics from a non-calculus perspective.
Introduction to Discrete Mathematics Logic and proofs, set theory, Boolean algebra, functions, sequences, matrices, algorithms, modular arithmetic, mathematical induction and combinatorics.
Introduction to Statistical Analysis An introduction to statistical analysis for students with a background in calculus. Includes probability theory, probability distributions, expectation, statistical inference, regression and correlation.
Elementary Functions and Coordinate Geometry A pre-calculus course that includes the study of elementary functions, their graphs and applications including polynomial, rational, algebraic functions, exponential, logarithmic and circular or trigonometric functions.
Integrative Programming and Technologies Examines the integration of systems and applications across global businesses; explores programming interfaces, data mapping and exchange, scripting, and programming languages to support the configuration, maintenance, integration, and security of systems.
CS Capstone II The activities in this course provide a hands-on experience that will allow the students to apply the various skills and knowledge they have gained throughout their Computer Science program. Teams of three to four persons will be formed at the beginning of the course. Software is nearly always developed by teams so this kind of experience is crucial for career preparation. A real-world project submitted by a ministry, some component of the university, or an associated business organization will be identified for each team.
CS Capstone I A hands-on experience that requires students to apply the skills and knowledge gained throughout the Computer Science program. A team solution of a real-world project is required.
Software Engineering Study of the software development process. Topics include: phases of a software project; life-cycle models; metrics; tools; and ethical and professional issues. Participation on team projects is integral
Technical Aspects of Computer Security This course introduces the following issues and principles of information system security: security policies and their mechanisms of implementation, methods used by attackers attempting to circumvent these protections, and specific defenses against these attackers.
Operating Systems Resource management for processes, files, devices, and memory. Deadlock and recovery procedures. Security issues.
Theory of Programming Languages A theoretical study of programming languages. Introduction to grammars and parsers. Language design issues and practical applications.
Network Architecture and Protocols A study of how computer networks and internets operate. Investigates networking from the level of data transmission and wiring through the level of application software that provides networking functionality.
System Administration Principles of system administration activities, applications, operating systems, and domains; analysis of computing applications, infrastructures, architectures, firmware, hardware, disaster recovery, security, and enterprise deployment.
Introduction to Linux This course introduces students to the usage and administration of the UNIX Operating System. The course will emphasize end-user tools and commands for basic file manipulation, editing, compilation and debugging, as well as special features of the UNIX shell environment. Basic system administration will also be covered. Students will learn through a combination of traditional lectures, hands-on laboratory sessions, and individual assignments
Computer Architecture and Organization Introduction to architecture and organization of computer systems. Data and instruction representations. Arithmetic and logical operations. Processor and memory implementations.
Database System Concepts The study of database management systems, database architecture, design, queries, applications, administration and implementation. The course will focus on data normalization, SQL (queries), and the use of relational technology for building database applications. Projects will be assigned to provide hands-on experience with the SQL language and relational database management software packages.
Algorithms and Data Structures Study of data structures such as linked lists, stacks, queues, trees, and graphs. Algorithms for manipulating such structures will be introduced and analyzed. Static and dynamic memory allocation. Access methods for sorting/searching, such as hashing and tree searching.
Advanced Programming Further development of discipline in program design, especially for larger programs. Introduction of pointers, simple data structures, recursion, internal sort/search methods
Introduction to Information Sciences and Systems This course examines the design, selection, implementation and management of enterprise Business solutions. The focus is on identifying critical business processes and envisioning how technology can be developed to provide solutions which generate competitive advantage.
General Physics I A study of mechanics, gravitation, waves, sound, heat, light, electricity and magnetism, optics and modern physics from a non-calculus perspective.
Calculus and Analytic Geometry I Functions and graphs, exponential, logarithmic, inverse trigonometric, limits, the derivative, techniques of differentiation, continuity, applications of differentiation, L'Hopital's Rule, the integral.
Technical Communication Technical Communication
Introduction to Programming Introduction to structured programming and algorithms with an object-oriented language. Topics include input/ output, flow of control, functions, and an introduction to software engineering.
Introduction to Computing Sciences A breadth-first introduction to the computing disciplines, with an emphasis on computer ethics and how computing technology impacts the world. Topics include: computing history; discrete mathematics; computer architecture and organization; algorithm design; languages; compilers; operating systems; applications; networks; databases; intellectual property; privacy; free speech; social consequences; computer crime; and codes of conduct.
Organizational Behavior I This introductory course in organizational behavior integrates the management and behavioral principles, techniques, and concepts associated with the productivity of organizational resources. It focuses on human behavior in organizations and is primarily concerned with improving organizational efficiency and effectiveness through increased understanding of the behavior of people at work.

MATH 1426.  CALCULUS I.  4 Hours. (TCCN  = MATH 2413) Concepts of limit, continuity, differentiation and integration; applications of these concepts. Prerequisite: A qualifying score on the Math Placement Test (MPT) is required to register for this course, or student group.
COMS 2302.  PROFESSIONAL AND TECHNICAL COMMUNICATION FOR SCIENCE AND ENGINEERING.  3 Hours. Theory and practice in written and oral presentations with an emphasis on professional and technical communication for science and engineering. Prerequisites: 30 or more hours earned; ENGL 1301 and either ENGR 1300 or ENGL 1302.
POLS 2311.  GOVERNMENT OF THE UNITED STATES.  3 Hours. (TCCN  = GOVT 2305) (GOVT 2305). The constitution and government of the United States. The organization, procedures, and duties of the branches of the government, together with their accomplishments and defects.
CSE 3310.  FUNDAMENTALS OF SOFTWARE ENGINEERING.  3 Hours. Software engineering principles, processes, and techniques; software development approaches focusing on functional analysis and functional design methods. Configuration management, implementation strategies, and testing. Team project. Prerequisite: C or better in each of the following: CSE 1325 and CSE 2315.
CSE 4321.  SOFTWARE TESTING & MAINTENANCE.  3 Hours. Study of software quality assurance, software testing, and software maintenance processes, methods and techniques including formal review techniques, software verification, validation, and testing, types of software maintenance, maintenance activities, and regression testing. Prerequisite: Admitted into an Engineering Professional Program. C or better in CSE 3310.
HIST 1302.  HISTORY OF THE UNITED STATES, 1865 TO PRESENT.  3 Hours. An introduction to the political, social, economic, and cultural history of the United States since 1865. This course is designed to help students understand and evaluate their society, comprehend the historical experience, and further develop reading and writing competencies and critical skills. Prerequisite: completion of or concurrent enrollment in ENGL 1301.
CSE 3380.  LINEAR ALGEBRA FOR CSE.  3 Hours. Solving systems of equations, matrix algebra, determinants, vector spaces, orthogonality and least squares, with applications to computer science. Prerequisite: C or better in CSE 2315.
CSE 3302.  PROGRAMMING LANGUAGES.  3 Hours. Introduction, analysis, and evaluation of the important concepts found in a variety of programming languages. Formalisms useful in specifying language syntax and semantics; programming language paradigms such as algorithmic, functional, logic, and object-oriented. Prerequisite: C or better in each of the following: CSE 1325, CSE 2312 and CSE 2320.
ENGL 1301.  RHETORIC AND COMPOSITION I.  3 Hours. (TCCN  = ENGL 1301) Introduction to college reading and writing. Emphasizes recursive writing processes, rhetorical analysis, synthesis of sources, and argument.
ENTRANCE TO ENGINEERING FOR TRANSFER STUDENTS Entrance to Engineering for Transfer Students welcomes transfer students to the College of Engineering.  Topics include engineering student life, fields of study, ethics, design, and preparing for a successful career.
CSE 1325.  OBJECT-ORIENTED PROGRAMMING.  3 Hours. Object-oriented concepts, class diagrams, collection classes, generics, polymorphism, and reusability.  Projects involve extensive programming and include graphical user interfaces and multithreading. Prerequisite: CSE 1320.
MATH 2425.  CALCULUS II.  4 Hours. (TCCN  = MATH 2414) Applications of integration, techniques of integration, parametric equations, polar coordinates, sequences, and series. Prerequisite: C or better in MATH 1426 or HONR-SC 1426, or student group.
IE 3301.  ENGINEERING PROBABILITY.  3 Hours. Topics in engineering that involve random processes. Applications and backgrounds for topics in reliability, inventory systems, and queuing problems, including absolute and conditional probabilities, discrete and continuous random variables, parameter estimation, hypothesis testing, and an introduction to linear regression, experimental design, and analysis of variance. Prerequisite: MATH 2425.
MATH 3330.  INTRODUCTION TO MATRICES AND LINEAR ALGEBRA.  3 Hours. Solving systems of linear equations, matrix operations, determinants, vector spaces, linear transformation, orthogonality, Gram-Schmidt process, projections, and eigenvalues and eigenvectors. Prerequisite: C or better in MATH 1426 or HONR-SC 1426. MATH 2425 is strongly encouraged, or student group.
ENGR 1250.  PROBLEM SOLVING IN ENGINEERING.  2 Hours. Broad introduction to engineering through the process of applying the principles of mathematics to solve real-life engineering problems. Math topics are presented within the context of engineering applications and reinforced through examples from engineering courses. Also introduces algorithm development through the use of the engineering analysis software MATLAB. Prerequisite: C or better in MATH 1421 (or concurrent enrollment), or C or better in (or concurrent enrollment in) a subsequent mathematics course (MATH 1426, MATH 2425, MATH 2326, MATH 3319, HONR-SC 1426, HONR-SC 2425), or a qualifying score on the Math Placement Test (MPT).
CSE 4380.  INFORMATION SECURITY.  3 Hours. Hands-on introduction to the basics of security. Includes system security, buffer overflows, a high-level overview of cryptography, firewalls and intrusion detection/prevention, malware, penetration testing, forensics, and system administration. Prerequisite: Admitted into an Engineering Professional Program. C or better in CSE 3320.
CSE 2100.  PRACTICAL COMPUTER HARDWARE/SOFTWARE SYSTEMS.  1 Hour. A practical approach to hands-on computer hardware and software systems in a laboratory environment. Students will be exposed to basic design concepts using off-the-shelf hardware components and to tools that enable the design of complex software systems. Prerequisite: CSE 1320.
PHYS 1443.  GENERAL TECHNICAL PHYSICS I.  4 Hours. (TCCN  = PHYS 2425) The first half of a one-year technical course. Required for many science and engineering majors, exceeds premedical requirement. The study of physical phenomena in the fields of mechanics, heat, and waves.  Concurrent enrollment in MATH 1426 (per prerequisite) is not recommended if no prior background in calculus. Prerequisite: MATH 1426 or consent of instructor.
CSE 3311.  OBJECT-ORIENTED SOFTWARE ENGINEERING.  3 Hours. Study of an agile unified methodology and its application to object-oriented software development. Topics include requirements acquisition, use case derivation, modeling and design of interaction behavior and state behavior, introduction to design patterns, derivation of design class diagrams, implementation considerations and deployment. Team project. Prerequisite: C or better in each of the following: CSE 2320 and CSE 3310.
CSE 1105.  INTRODUCTION TO COMPUTER SCIENCE AND ENGINEERING.  1 Hour. Introduction to engineering concepts, the computer science and engineering disciplines, skills for written communication, and departmental orientation.
HIST 1301.  HISTORY OF THE UNITED STATES TO 1865.  3 Hours. An introduction to the political, social, economic, and cultural history of the United States prior to 1865. This course is designed to help students understand and evaluate their society, comprehend the historical experience, and further develop reading and writing competencies and critical skills. Prerequisite: completion of or concurrent enrollment in ENGL 1301.
CSE 4317.  COMPUTER SYSTEM DESIGN PROJECT II.  3 Hours. Implementation, integration, quality assurance through peer review and testing, and deployment of the project designed in CSE 4316; oral presentation, documentation and project demonstration. Prerequisite: Admitted into an Engineering Professional Program. C or better in CSE 4316 and continuation with the same team.
CSE 2312.  COMPUTER ORGANIZATION & ASSEMBLY LANGUAGE PROGRAMMING.  3 Hours. Computer organization from the viewpoint of software, including: the memory hierarchy, instruction set architectures, memory addressing, input-output, integer and floating-point representation and arithmetic. The relationship of higher-level programming languages to the operating system and to instruction set architecture are explored. Some programming in an assembly language. Prerequisite: CSE 1320.
CSE 2315.  DISCRETE STRUCTURES.  3 Hours. Propositional and predicate logic, mathematical proof techniques, sets, combinatorics, functions and relations, graphs, and graph algorithms. Prerequisites: C or better in CSE 1310 and MATH 1426 (or C or better in or concurrent enrollment in MATH 2425) and C or better in ENGR 1250 (or concurrent enrollment).
PHYS 1444.  GENERAL TECHNICAL PHYSICS II.  4 Hours. (TCCN  = PHYS 2426) The second half of a one-year technical course. The study of physical phenomena including electricity, magnetism, circuit theory, light, and optics. Prerequisites: PHYS 1443 or equivalent and MATH 2425 or concurrent enrollment.
CSE 3320.  OPERATING SYSTEMS.  3 Hours. Functions and components of an operating system, including process synchronization, job scheduling, memory management, file systems protection, and deadlocks. Related system software, such as loaders, linkers, assemblers, and windowing systems. Prerequisite: C or better in CSE 2312.
CSE 4322.  SOFTWARE PROJECT MANAGEMENT.  3 Hours. Introduction to software project management. Issues include effort estimation and costing, project planning and scheduling, option analysis, software quality assurance, and formal technical reviews. Prerequisite: Admitted into an Engineering Professional Program. C or better in CSE 3310.
CSE 3315.  THEORETICAL CONCEPTS IN COMPUTER SCIENCE AND ENGINEERING.  3 Hours. Selected theoretical concepts including regular and context free languages, finite state and pushdown automata, Turing machines, computability, and NP-completeness. Prerequisite: C or better in CSE 2315.
CSE 4361.  SOFTWARE DESIGN PATTERNS.  3 Hours. In-depth study of software design patterns including description of patterns, design principles and techniques used by patterns as well as application of patterns to solving practical design problems. Team project. Prerequisites:  Admitted into an Engineering Professional Program. C or better in CSE 3311.
INTERMEDIATE PROGRAMMING Programming concepts beyond basic control and data structures. Emphasis is given to data structures including linked-lists and trees as well as modular design consistent with software engineering principles. Prerequisite: C or better in CSE 1310 or C or better in CSE 1312, and C or better in (or concurrent enrollment in) (MATH 1421, MATH 1426,  MATH 2425, MATH 2326, MATH 3330, HONR-SC 1426, or HONR-SC 2425) and C or better in CSE 1105 (or concurrent enrollment), and C or better in UNIV 1131 (or concurrent enrollment) or ENGR 1101 (or concurrent enrollment.
CSE 3330.  DATABASE SYSTEMS AND FILE STRUCTURES.  3 Hours. Database system architecture; file structures for databases, including indexing hashing, and B+-trees; the relational model and algebra; the SQL database language; Entity-Relationship data modeling; functional dependencies and basic normalization. Prerequisite: C or better in each of the following: CSE 1325 and CSE 2320.
CSE 4314.  PROFESSIONAL PRACTICES.  3 Hours. Ethics. Contemporary social aspects and responsibilities of computing in a global, societal context. Lifelong learning goals and resources. Entrepreneurship and intellectual property. Project involving written and oral communication. Prerequisite: Admitted into an Engineering Professional Program. C or better in COMS 2302.
CSE 4316.  COMPUTER SYSTEM DESIGN PROJECT I.  3 Hours. Analysis and design of an industry-type project that involves hardware and software components to meet desired needs within realistic constraints and standards. The project is to be completed in CSE 4317 the following semester. Multidisciplinary teams of CSE 4316 students are required to develop, review, and present problem definition, project planning, requirements formulation, and design specification. Prerequisites: Admitted into a CSE Professional Program. For academic plan CS__CS or SE__SE, C or better in CSE 3310 and CSE 3320, and C or better in CSE 4314 (or concurrently). For academic plan CSE_CP, C or better in CSE 3320 and CSE 3442, and C or better in CSE 4314 (or concurrently).
CSE 2320.  ALGORITHMS & DATA STRUCTURES.  3 Hours. Design and analysis of algorithms with an emphasis on data structures. Approaches to analyzing lower bounds on problems and upper bounds on algorithms. Classical algorithm design techniques including algorithms for sorting, searching, and other operations on data structures such as hash tables, trees, graphs, strings, and advanced data structures, dynamic programming and greedy approaches. Prerequisite: CSE 1320 and CSE 2315.
POLS 2312.  STATE AND LOCAL GOVERNMENT.  3 Hours. (TCCN  = GOVT 2306) (GOVT 2306). The principles and organization of American state, county, and municipal government, together with current problems and the constitution and government of Texas.
Rhetoric This course presents an integrated approach to writing, reading, and critical thinking by developing the grammatical, logical, and rhetorical skills necessary for university writing
Professional and Technical Communication Expands students' professional and team communication skills and strategies in technical contexts. Integrates writing, speaking and group communication by developing and presenting technical information to different audiences. Written assignments focus on creating professional technical documents, such as proposals, memos, abstracts, reports and letters. Presentation assignments emphasize planning, preparing and delivering dynamic, informative and persuasive presentations.
Differential Calculus Course covers topics in differential calculus of functions of one variable; topics include limits, continuity, derivative, chain rule, implicit differentiation, mean value theorem, maxima and minima, curve sketching, derivatives of inverse trigonometric functions, antiderivative, substitution method, and applications
Mechanics Calculus based. Basic physics including a study of space and time, kinematics, forces, energy and momentum, conservation laws, rotational motion, torques, and harmonic oscillation
Electromagnetism and Waves Topics include electrostatics and electromagnetics, electric field and potential, electric currents, magnetic fields, laws of Coulomb, Ampere, and Faraday, Maxwell's theory of wave propagation.
American National Government Survey of American national government, politics, and constitutional development
State and Local Government Survey of state and local government and politics with special reference to the constitution and politics of Texas.
Social Issues and Ethics in Science and Technology This course exposes students to major theoretical approaches and professional codes of ethics and how they may be applied to explore a range of important social issues in the information age. Issues of professional ethics, computer crime and privacy, intellectual property, the balance between the acceptability of risk and constraints such as cost, scheduling, safety and quality, the role of globalization and various important constitutional issues are explored by drawing upon case studies.
Calculus I Functions, limits, continuity, differentiation; integration of function of one variable; logarithmic, exponential, and inverse trigonometric functions; techniques of integration, and applications
Calculus II Improper integrals, sequences, infinite series, power series, parametric equations and polar coordinates, vectors, vector valued functions, functions of several variables, partial derivatives and applications, and multiple integration.
Linear Algebra Introduces and provides models for application of the concepts of vector algebra. Topics include finite dimensional vector spaces and their geometric significance; representing and solving systems of linear equations using multiple methods, including Gaussian elimination and matrix inversion; matrices; determinants; linear transformations; quadratic forms; eigenvalues and eigenvectors; and applications in science and engineering.
Computer Science I Review of control structures and data types with emphasis on structured data types. Applies the object-oriented programming paradigm, focusing on the definition and use of classes along with the fundamentals of object-oriented design. Includes basic analysis of algorithms, searching and sorting techniques, and an introduction to software engineering.
Discrete Mathematics for Computing I Principles of counting. Boolean operations. Logic and proof methods. Recurrence relations. Sets, relations, functions. Elementary graph theory. Elementary number theory
Introduction to Computer Science and Software Engineering Introduction to quantitative methods; team projects designed to replicate decision processes and problem solving in real-world situations
Software Engineering ntroduction to software life cycle models. Software requirements engineering, formal specification and validation. Techniques for software design and testing.
Computer Architecture This course introduces the concepts of computer architecture by going through multiple levels of abstraction, and the numbering systems and their basic computations. It focuses on the instruction-set architecture of the MIPS machine, including MIPS assembly programming, translation between MIPS and C, and between MIPS and machine code. General topics include performance calculation, processor datapath, pipelining, and memory hierarchy
Mathematical Foundations of Software Engineering Boolean logic, first-order logic, models of first-order logic. Introduction to program verification, applications in software engineering. Completeness Theorem. Regular expressions, regular sets, finite-state machines, and applications in software engineering
Database Systems This course emphasizes the concepts and structures necessary for the design and implementation of database management systems. Topics include data models, data normalization, data description languages, query facilities, file organization, index organization, file security, data integrity, and reliability.
Software Architecture and Design Introduction to software design with emphasis on architectural design. Models of software architecture. Architecture styles and patterns, including explicit, event-driven, client-server, and middleware architectures. Decomposition and composition of architectural components and interactions.
Software Project Planning and Management SEI's Capability Maturity Model, continuous process improvement. Planning, scheduling, tracking, cost estimation, risk management, configuration management.
Software Engineering Project Software Engineering Project
Software Architecture and Design Introduction to software design with emphasis on architectural design. Models of software architecture. Architecture styles and patterns, including explicit, event-driven, client-server, and middleware architectures. Decomposition and composition of architectural components and interactions.
Object-Oriented Design n-depth study of the features/advantages of object-oriented approach to problem solving. Special emphasis on issues of object-oriented analysis, design, implementation, and testing. Review of basic concepts of object-oriented technology (abstraction, inheritance, and polymorphism). Object-oriented programming languages, databases, and productivity tools.
Introduction to VLSI Design Introduction to CMOS digital IC design using semi-custom and full-custom design techniques with an emphasis on techniques for rapid prototyping and use of various VLSI design tools. FPGA's, standard cell and full-custom design styles.
Senior Honors in Software Engineering Senior Honors in Software Engineering
Computer Networks The design and analysis of computer networks. Topics include the ISO reference model, transmission media, medium-access protocols, LANs, data link protocols, routing, congestion control, internetworking, and connection management.
Rhetoric and Writing This course will introduce students to common textual issues surrounding audience and purpose to prepare them for the different kinds of texts they will encounter in upper-level academic courses as well as professional settings. /  Calculus for Business   Topics in differential and integral calculus with applications.  /   Computer Applications for Busi   This course provides an introduction to the fundamentals of personal computing for business majors and other non-computer science majors. Topics include the Windows operating system, word processing, spreadsheets, database, presentation aids, internet, e-mail and related areas.  /  Beauty and Joy of Computing   The course focuses on teaching students some of the Big Ideas of Computing such as abstraction, design, recursion, concurrency, simulations, and the limits of computation. The course also provides a historic perspective of Computing and where it is heading. Throughout the course, we will emphasis the relevance of Computing to the students, their future studies, their careers, and society. In this course students will learn Python as the programming language to deliver the concepts. Given that data is pervasive and the need to analyze data is in almost every discipline, learning Python that early will enable students to conduct data analysis which will be helpful for their studies at UNF and in their careers.
Writing with Evidence and Style This course will introduce students to common textual issues surrounding evidence-based writing, genre conventions, and citation style considerations to prepare them for the different kinds of texts they will encounter in upper-level academic courses as well as professional settings.
Trigonometry This course will include the following topics: trigonometric functions and their inverses, graphing trigonometric functions, identities, complex numbers, solving triangles, and applications of trigonometric functions.
Computer Science I This course provides an introduction to problem solving techniques and the computer programming process. Topics in the course include data types, operations, expressions, flow control, I/O, functions, program structure, software design techniques, and memory allocation. Course concepts are reinforced with many programming projects throughout the course.
Computer Science II This course serves as a continuation to the Programming I course.Students are shown additional fundamental concepts of problem solving using the object-oriented paradigm and data structures. The topics in this course include classes, interfaces, objects, class types, events, exceptions, control structures, polymorphism, inheritance, linked lists, arrays, stacks, queues, and deques. Students are expected to apply these concepts through the construction of numerous small software systems using both integrated development environments and command-line- driven tools that support editing, testing, and debugging. /  Principles of Macroeconomics  Introduction to the theory of income determination and national income accounting. Analysis of the use of monetary and fiscal policy to accomplish the goals of full employment, economic growth and price stability.
Computational Structures This course will cover the mathematical and logical fundamentals required in computer science, information systems, information science, and information technology. The course develops concepts in discrete mathematical structures as applied to computing in general through the topics of sets; logic; proof techniques; Boolean algebra; algorithms and problem solving; number systems; number theory; counting and discrete probability; and relations and graphs.
Elem Statistics-Business This course is an introduction to descriptive data analysis, probability, statistical distributions, confidence intervals, testing of hypotheses, regression, and correlation. Topics selected to emphasize applications in a business environment.  /  Prin of Financial Accounting This course is a conceptual introduction to financial accounting. In this course, primary emphasis is placed on income measurement and the interpretation of conventional financial statements. /  Principles of Microeconomics Introduction to the market system, market structures, and the theory of production, demand theory and general equilibrium. Cannot be used to satisfy upper-level requirements for a degree in business administration and economics. Normally offered each term. /  Web Systems Development Students learn about the influence of local and global transaction processing, Internet, Web design and development, and Electronic Data Interchange on information systems. This course discusses the concepts and skills required to design and implement Web application systems using Model View controller (MVC) architecture. Students learn about how Web applications are developed using client-side and server-side scripting to implement internal and external business processes. After an introduction to the basic concepts of relational database systems and Object Relational Mapping (ORM) students will practice for storing and accessing data in the database. /  Public Speaking for Professionals  This course examines speaking as a workplace activity and provides students with experience in public speaking. The lectures will concentrate on communications theory, including but not limited to models of communication, interpersonal communication, group communication, persuasion, decision making and audience analysis and adaptation.  /   Prin Managerial Accounting  This course is the conceptual introduction to managerial accounting. The material covers accounting for cost reporting and control, reports, statements, and analytical tools used by management.
GW-Legal Ethical Iss in Computing This course provides an opportunity to discuss and analyze the legal and ethical issues facing today computing professionals, as well as the legal and ethical issues computing professionals may face in the future. Legal and ethical issues are considered from local, as well as global perspectives.
Data Structures Students in this course will study various data structures including binary trees, balanced trees, B-trees, hashing, and heaps. Additional topics include advanced data structures such as splay trees, tree representations, graphs, dynamic memory, and algorithms for sorting and searching. Students are expected to complete projects using object-oriented programming. . /  Human Factrs/Collabr Cmpt   This course introduces the fundamentals of effective interaction between humans and computers with an emphasis on software and physical elements. Good and bad interface designs are examined to reinforce proven interface design techniques. The phases and tools involved in the interaction design process are discussed, as well as how the interaction design process aligns with the Software Development Life Cycle (SDLC). /  Administrative Management This course covers fundamentals of management which permeate organizations; including introductory studies of administrative structure, the organizational environment, and managerial functions and processes. /   Intro Management Info Systems This course will cover the fundamentals of management information systems with an emphasis on the relationships of MIS and data processing to decision-making in modern organizations.
Computer Networks/Dist Process In this course, students will study architectures, protocols, and layers in computer networks and develop client-server applications. Topics include the OSI and TCP/IP models, transmission fundamentals, flow and error control, switching and routing, network and transport layer protocols, local and wide-area networks, wireless networks, client-server models, and network security. Students will extend course topics via programming assignments, library assignments and other requirements. /  Financial Management This course focuses on management techniques for and considerations in determining short-term, intermediate-term, and long-term financial needs. Sources of funds available to management and the relevant financial instruments will be examined.
Introduction to Databases First of a two-course senior project on systems development with a significant laboratory component. Students will learn system development life cycle methodologies and its phases including requirements specification, analysis, and design. Students will design and develop a prototype information system in the context of the project team environment. /   Principles of Marketing  This course is an introduction to the process of planning market programs for goods and services. Techniques of analyzing the market and its environment are introduced as background for making decisions in product planning, promotion, distribution and pricing. /  Information Syst Sr Project I  First of a two-course senior project on systems development with a significant laboratory component. Students will learn system development life cycle methodologies and its phases including requirements specification, analysis, and design. Students will design and develop a prototype information system in the context of the project team environment.
Internet Programming  In this course students will use current technologies to develop Internet and web-based applications. The topics to be covered include client and server-side components for the WWW to facilitate client-server communication, web services, and an introduction to source control tools.  /  Data Mining Students will study concepts and techniques of data mining, including Characterized and Comparison, Association Rules Mining, Classification and Prediction, Cluster Analysis, and mining complex types of data. Students will also examine applications and trends in data mining. /  The Legal Environment of Business  This course is an introduction to law as it relates to and impacts upon the operation of business. Consideration is given to the Uniform Commercial Code, antitrust, employment laws, business ethics, international law and the social and political environment in which a business operates.  /  Information Syst Sr Project II  Students will design, implement, and deploy a prototype information system in the context of a project team environment employing relevant systems development life cycle methodologies. /   Introduction to Data Analytics  This course gives a broad overview of the various aspects of data analytics and visualizations. Students will learn ways of accessing data from various sources such as web APIs and repositories, techniques of cleaning data and organizing data for analysis, using analytical methods to solve real-world problems and create visualizations to aid the interpretation of analysis results.
Data Warehousing This course provides an introduction to data warehousing concepts, requirements gathering, design, and implementation. Students learn about operational database integration, extraction, transformation, and loading of operational data to historical database systems such as operational data store and data warehouse. Students are provided with techniques for the analysis, design, denormalization, implementation, utilization, and documentation in the development of data warehouse systems. Structure query language for database and data warehouse will be studied and used to retrieve data and manipulate the information from the implemented databases. Students are required to complete and present a project to class in the data warehousing area.
English Composition I Intensive study of and practice in effective expository and argumentative writing.
Calculus I Mathematics Core. Limits, the derivative of algebraic, trigonometric, exponential, logarithmic functions. Applications of the derivative, antiderivatives, the definite integral and applications to area problems, the fundamental theorem of calculus.
Engineering Physics I Introduction to Newton's Laws, gravitation, cosmology, conservation of energy, momentum and angular momentum, special relativity, and fluids using introductory calculus
Introduction to Engineering Introduction to engineering design, engineering teams, graphical presentation, technical writing, oral presentation.
Engineering Orientation Introduction to the College of Engineering and its resources, exploration of engineering careers, orientation to campus resources and facilities, and assistance with academics and transition to college.
English Composition II Emphasis on research.
Calculus II Techniques of integration, applications of the integral, parametric equations, polar coordinates. Vectors, lines and planes in space. Infinite sequences and series.
Engineering Physics II Thermodynamics, electricity and magnetism, simple AC circuits, waves, and geometric optics.
Fundamentals of Computing I Introduction to the fundamental concepts of programming from an object-oriented perspective. Emphasis on good software engineering principles and development of the fundamental programming skills in the context of a language that supports the object-oriented paradigm
Social Science Social Science
Literature Literature
Fine Arts Fine Arts
Calculus III Multivariate calculus: vector-valued functions, partial derivatives, multiple integration, vector calculus
Fundamentals of Computing II Software development in the context of collections (e.g., lists, trees, graphs, hashtables)
Topics in Linear Algebra Matrices, row-reduction, systems of linear equations, (finite-dimensional) vector spaces, subspaces, bases, dimension, change of basis, linear transformations, kernels, orthogonality, Gram-Schmidt.
Digital Logic Circuits Electronic devices and digital circuits; binary numbers; Boolean algebra and switching functions; gates and flip-flops; combinational and sequential logic circuits; hierarchical design of digital systems; computer-aided design tools for digital design, simulation, and testing.
Software Construction Intensive experience in software construction, to include topics such as testing, debugging, and associated tools; configuration management; low-level file and device I/O; systems and event-driven programming.
Discrete Structures Characterization of computer science data structures and algorithms in terms of sets and relations, functions, recurrence relations. Use of propositional and predicate calculus to describe algorithms. Proving correctness and running time bounds for algorithms by induction and structural induction.
Fundamentals of Engineering Mechanics Basic principles of two-dimensional force systems, free body diagrams, concepts of stress and strain, centroids of composite areas, kinematics and kinetics of particles and rigid bodies.
Linear Differential Equations Introduction to ordinary differential equations, specifically linear equations of first and second order, and applications.
Principles of Programming Languages Study of programming language principles supporting procedural abstraction, data abstraction, storage allocation, and parallel execution; language types and examples; language translations.
Introduction to Algorithms Algorithms for standard computational problems and techniques for analyzing their efficiency; designing efficient algorithms and experimentally evaluating their performance.
Computer Organization and Assembly Language Programming Stored Program Computers, hardware and software components; data representation, instruction sets, addressing modes; assembly language programming; linkers, loader, and operating systems.
Introduction to Ethics  Major ethical theories from the history of philosophy, their foundations in epistemology and metaphysics, and their extension into social thought.
Probability and Statistics I Calculus-based introduction to probability and st
Social Science Social Science
Introduction to Operating Systems Structure and functions of operating systems; processes and process scheduling; synchronization and mutual exclusion; memory management; auxiliary storage management; resource allocation and deadlock; security, privacy, and ethical concerns; design tradeoffs.
Software Modeling and Design Current processes, methods, and tools related to modeling and designing software systems. Communication, teamwork, and a design experience are integral course experiences.
Computer Architecture Comparison of computer architectures, emphasizing the relationships between system software and hardware. Includes processor control and datapath organization, memory subsystem design, instruction set design, processor simulation, and quantitative analysis of computer performance.
Introduction to Computer Networks Fundamentals of computer networks, OSI model, LAN, WAN, packet transmission, interworking, Internet Protocol, WWW and Java technology.
Software Process Departmental approval. Process models of the software life cycle as well as methods and tools for software development.
Senior Design Project Senior Design Project
Computer Ethics Application of ethical principles to computing-related topics, including privacy, property rights, autonomy, access, and diversity. Communication and teamwork are integral course experiences.
Software Quality Assurance Departmental approval. Processes, methods, and tools associated with the production of robust, high-quality software.
Critical Thinking and Communication Application of critical reading and thinking abilities to topics of civic and cultural importance. Introduction of basic oral, visual, and electronic communication principles to support writing development. Initiation of communication portfolio.
Written, Oral, Visual, and Electronic Composition  Written, Oral, Visual, and Electronic Composition
Information Literacy rovides a solid understanding of information literacy and the research process with emphases on finding, evaluating, and using scholarly information; the ethical and legal framework related to information use; and utilization of library discovery tools.
Proposal and Report Writing Rhetorical concepts and processes to individually and collaboratively develop proposals for business, governmental, nonprofit, or other organizations and to report on the work completed both orally and in writing. Emphasizes the structure and classification of proposal and report types, qualitative and quantitative research methods, audience analysis, document design, and data visualization.
Technical Communication Rhetorical concepts and processes to successfully communicate technical information individually and collaboratively via written, oral, visual, and electronic modes. Emphasizes the major strategies for analyzing expert and lay audiences and adapting information to those audiences. Covers developing and designing usable technical documentation, visualizing data, and presenting technical information orally.
Principles of Microeconomics Resource allocation, opportunity cost, comparative and absolute advantage. Supply and demand. Marginal analysis. Theories of production and consumption, pricing, and the market system. Perfect and imperfect competition and strategic behavior. Factor markets. Present discounted value.
Principles of Macroeconomics Measurement of macro variables and general macro identities. Classical models of full employment. Production and growth. Savings and investment. Employment and unemployment. Money, inflation, and price levels. Operation of the U.S. banking system. Fiscal and monetary policy. Elements of international finance.
Engineering Economic Analysis Economic analysis of engineering decisions under uncertainty. Financial engineering basics including time value of money, cash flow estimation, and asset evaluation. Make versus buy decisions. Comparison of project alternatives accounting for taxation, depreciation, inflation, and risk.
General Chemistry for Engineering Students Principles of chemistry and properties of matter explained in terms of modern chemical theory with emphasis on topics of general interest to the engineer.
Software Engineering Orientation Introduction to the procedures, policies, and resources of Iowa State University and the Software Engineering Program. Offered on a satisfactory-fail basis only.
Problem Solving in Software Engineering Introduction to software engineering and computer programming. Systematic thinking process for problem solving in the context of software engineering. Group problem solving. Solving software engineering problems and presenting solutions through computer programs, written documents and oral presentations. Introduction to principles of programming, software design, and extensive practice in design, writing, running, debugging, and reasoning
Calculus I Differential calculus, applications of the derivative, introduction to integral calculus
Calculus II Integral calculus, applications of the integral, infinite series, parametric curves and polar coordinates
Introduction to Classical Physics I For engineering and science majors. 3 hours of lecture each week plus 3 recitations and 1 laboratory every 2 weeks. Elementary mechanics including kinematics and dynamics of particles, work and energy, linear and angular momentum, conservation laws, rotational motion, oscillations, gravitation. Heat, thermodynamics, kinetic theory of gases; waves and sound.
Object-oriented Programming Computer programming using objects as the mechanism for modularity, abstraction, and code reuse. Instance variables, methods, and encapsulation. Review of control structures for conditionals and iteration. Developing algorithms on strings, arrays, and lists. Recursion, searching, and sorting. Text parsing and file I/O. Interfaces, inheritance, polymorphism, and abstract classes. Exception handling. Tools for unit testing and debugging. Emphasis on a disciplined approach to specification, code development, and testing.
Introduction to Data Structures An object-oriented approach to data structures and algorithms. Object-oriented analysis, design, and programming, with emphasis on data abstraction, inheritance and subtype polymorphism, and generics. Abstract data type specification and correctness. Collections including lists, stacks, queues, trees, heaps, maps, hash tables, and graphs. Big-O notation and algorithm analysis. Searching and sorting. Graph search and shortest path algorithms.
Elementary Differential Equations and Laplace Transforms but also including Laplace transforms and power series solutions to ordinary differential equations.
Digital Logic Number systems and representation. Boolean algebra and logic minimization. Combinational and sequential logic design. Arithmetic circuits and finite state machines. Use of programmable logic devices. Introduction to computer-aided schematic capture systems, simulation tools, and hardware description languages. Design of simple digital systems.
Advanced Programming Techniques Object-oriented programming experience using a language suitable for exploring advanced topics in programming. Topics include memory management, parameter passing, inheritance, compiling, debugging, and maintaining programs. Significant programming projects.
Embedded Systems I: Introduction Embedded C programming. Interrupt handling. Memory mapped I/O in the context of an application. Elementary embedded design flow/methodology. Timers, scheduling, resource allocation, optimization, state machine based controllers, real time constraints within the context of an application. Applications laboratory exercises with embedded devices.
Introduction to Computer Architecture and Machine-Level Programming Introduction to computer architecture and organization. Emphasis on evaluation of performance, instruction set architecture, datapath and control, memory-hierarchy design, and pipelining. Assembly language programming.
Computer Organization and Assembly Level Programming Introduction to computer organization, evaluating performance of computer systems, instruction set design. Assembly level programming: arithmetic operations, control flow instructions, procedure calls, stack management. Processor design. Datapath and control, scalar pipelines, introduction to memory and I/O systems.
Introduction to Operating Systems Survey of operating system, networking and parallel programming issues. Introduction of processes, threads, process synchronization, deadlocks, memory, file systems, networking, security threats and encryption. Programming projects.
Operating Systems: Principles and Practice Operating system concepts, processes, threads, synchronization between threads, process and thread scheduling, deadlocks, memory management, file systems, I/O systems,security, Linux-based lab experiments.
Discrete Computational Structures Concepts in discrete mathematics as applied to computer science. Logic, set theory, functions, relations, combinatorics, discrete probability, graph theory and number theory. Proof techniques, induction and recursion.
Theoretical Foundations of Computer Engineering Propositional logic and methods of proof; set theory and its applications; mathematical induction and recurrence relations; functions and relations; and counting; trees and graphs; applications in computer engineering.
Introduction to the Design and Analysis of Algorithms Basic techniques for design and analysis of algorithms. Sorting, searching, graph algorithms, string matching, and NP-completeness. Design techniques such as dynamic programming, divide and conquer, greedy method, and approximation. Asymptotic, worst-case, average-case and amortized analyses. Topics from advanced data structures such as balanced trees and hashing.
Introduction to Database Management Systems Relational, object-oriented, semistructured and query languages. SQL, XML, and NO-SQL. Database design using entity-relationship model, data dependencies, and relational database design. Application development in SQL-like languages and general purpose host languages with application program interfaces and a commonly used Object Relational Mapping framework.
Software Development Practices A practical introduction to methods for managing software development. Process models, requirements analysis, structured and object-oriented design, coding, testing, maintenance, cost and schedule estimation, metrics. Programming projects.
Construction of User Interfaces Overview of user interface design. Evaluation and testing of user interfaces. Review of principles of object orientation, object oriented design and analysis using UML in the context of user interface design. Design of windows, menus and commands. Developing Web and Windows-based user-interfaces. Event-driven programming. Introduction to Frameworks and APIs for the construction of user interfaces.
Software Project Management Process-based software development. Capability Maturity Model (CMM). Project planning, cost estimation, and scheduling. Project management tools. Factors influencing productivity and success. Productivity metrics. Analysis of options and risks. Version control and configuration management. Inspections and reviews. Managing the testing process. Software quality metrics. Modern software engineering techniques and practices.
Software Architecture and Design Modeling and design of software at the architectural level. Architectural styles. Basics of model-driven architecture. Object-oriented design and analysis. Iterative development and unified process. Design patterns. Design by contract. Component based design. Product families. Measurement theory and appropriate use of metrics in design. Designing for qualities such as performance, safety, security, reliability, reusability, etc. Analysis and evaluation of software architectures. Introduction to architecture definition languages. Basics of software evolution, reengineering, and reverse engineering. Case studies. Introduction to distributed system software.
Software Analysis and Verification for Safety and Security Significance of software safety and security; various facets of security in cyber-physical and computer systems; threat modeling for software safety and security; and categorization of software vulnerabilities. Software analysis and verification: mathematical foundations, data structures and algorithms, program comprehension, analysis, and verification tools; automated vs. human-on-the-loop approach to analysis and verification; and practical considerations of efficiency, accuracy, robustness, and scalability of analysis and verification. Cases studies with application and systems software; evolving landscape of software security threats and mitigation techniques. Understanding large software, implementing software analysis and verification algorithms.
Senior Design Project I and Professionalism Senior Design Project I and Professionalism
Senior Design Project II Senior Design Project II
Fundamentals of Public Speaking Theory and practice of basic speech communication principles applied to public speaking. Practice in the preparation and delivery of extemporaneous speeches.
Probability and Statistics for Computer Science Topics from probability and statistics applicable to computer science. Basic probability; Random variables and their distributions; Stochastic processes including Markov chains; Queuing models; Basic statistical inference; Introduction to regression.
Proposal and Report Writing Rhetorical concepts and processes to individually and collaboratively develop proposals for business, governmental, nonprofit, or other organizations and to report on the work completed both orally and in writing. Emphasizes the structure and classification of proposal and report types, qualitative and quantitative research methods, audience analysis, document design, and data visualization.
Technical Communication Rhetorical concepts and processes to successfully communicate technical information individually and collaboratively via written, oral, visual, and electronic modes. Emphasizes the major strategies for analyzing expert and lay audiences and adapting information to those audiences. Covers developing and designing usable technical documentation, visualizing data, and presenting technical information orally.
Matrices and Linear Algebra Systems of linear equations, determinants, vector spaces, linear transformations, orthogonality, least-squares methods, eigenvalues and eigenvectors. Emphasis on applications and techniques.
Calculus III Analytic geometry and vectors, differential calculus of functions of several variables, multiple integrals, vector calculus.
Combinatorics Enumeration strategies involving permutations, combinations, partitions, binomial coefficients, inclusion-exclusion principle, recurrence relations, generating functions. Additional topics selected from probability, algebraic combinatorics, and applications.
Graph Theory Structure and extremal properties of graphs. Topics are selected from: trees, networks, colorings, paths and cycles, connectivity, planarity, directed graphs, matchings, Ramsey theory, forbidden structures, enumeration, applications.
Theory of Linear Algebra Systems of linear equations, determinants, vector spaces, inner product spaces, linear transformations, eigenvalues and eigenvectors. Emphasis on writing proofs and results
Careers in Software Engineering Careers in Software Engineering
Software Engineering Portfolio Development Software Engineering Portfolio Development
Principles of Programming Languages Study of concepts in programming languages, especially functional programming concepts. Overview of major programming paradigms, their relationship, and tradeoffs among paradigms enabling sound choices of programming language for application-specific development. Programming projects.
Object-Oriented Analysis and Design Object-oriented requirements analysis and systems design. Design notations such as the Unified Modeling Language. Design Patterns. Group design and programming with large programming projects.
Software Requirements Engineering The requirements engineering process including elicitation, requirements analysis fundamentals, requirements specification and communication, and requirements evaluation. Modeling of functional and nonfunctional requirements, traceability, and requirements change management. Case studies and software projects.
Formal Methods in Software Engineering A study of formal techniques for model-based specification and verification of software systems. Topics include logics, formalisms, graph theory, numerical computations, algorithms and tools for automatic analysis of systems. Graduate credit requires in-depth study of concepts.
Software Evolution and Maintenance Practical importance of software evolution and maintenance, systematic defect analysis and debugging techniques, tracing and understanding large software, impact analysis, program migration and transformation, refactoring, tools for software evolution and maintenance, experimental studies and quantitative measurements of software evolution. Written reports and oral presentation.
Software Testing An introduction to software testing principles and techniques. Test models, test design, test adequacy criteria; regression, integration, and system testing; and software testing tools.
Software Tools for Large Scale Data Analysis Software tools for managing and manipulating large volumes of data, external memory processing, large scale parallelism, and stream processing, data interchange formats. Weekly programming labs that involve the use of a parallel computing cluster.

English Composition This course focuses on the principles of using writing for thinking, as well as a tool for expressing ideas. It addresses the composing process, research and documentation, and rhetorical strategies for various audiences and purposes.
Speech  Individual sections may focus on public speaking, group discussion, oral interpretation, or interpersonal communication.
Technical Report Writing  This course introduces students to the preparation of formal and informal technical reports, abstracts, proposals, instructions, professional correspondence and other forms of technical communication.
Western Humanities I: Antiquity and the Middle Ages Traces the evolution of the Western humanistic tradition from antiquity to the Middle Ages using examples from art, architecture, music, philosophy, and literature. Emphasizes writing, reading, and appreciation skills.
An Economic Survey An introduction to macro and microeconomic principles, problems, and policies with a view to current economic problems.
Microeconomics An introduction to the economic principles of free enterprise supply and demand, private and social implications of profit maximization, market structure, and resource markets. Current microeconomic issues in aviation (such as liability reform, evolution of airline competition, etc.) are discussed.
Scientific Programming in C  This is a course in C programming for scientists and engineers. Using a problem-solving approach for developing algorithms, the algorithms are implemented in C and include the following topics: data types and related operations, input/output, control structures, functions, arrays, files, and strings.
Calculus and Analytical Geometry I  Limits and continuity; differentiation and integration of algebraic and elementary transcendental functions; applications of first and second derivatives.
Calculus and Analytical Geometry II  Differentiation and integration of transcendental functions; special integration techniques; applications of the definite integral; numerical methods; infinite series.
Foundations of Biology I  A biological science course introducing the fundamentals of biology and essential structures, components, and processes of life. Emphasis placed on biochemistry; cell structure, function, organization, and division; sources and uses of biological energy; as well as genetics and inheritance.
Foundations of Biology II  An introduction to organismal diversity, using the phylogenetic tree of life as an organizing theme. Emphasizes methods of phylogenetic reconstruction, current knowledge of the tree of life, and the evolution of life's most important and interesting innovations
Foundations of Biology I Laboratory  To present a study of the general characteristics and basic concepts of living organisms, which includes: the hierarchical organization of life, basic chemistry of life (inorganic and organic), cell types and structures, membrane structure and function, thermodynamics/energy flow, metabolic processes (photosynthesis & cellular respiration), the cell cycle, meiosis, and an introduction to genetics.
General Chemistry I   Fundamental principles of chemistry. Nomenclature, stoichiometry, atomic structure, periodic relationships, chemical bonding, geometry of molecules, properties of gases, chemical thermodynamics, and solutions.
General Chemistry I Laboratory  Topics include chemical stoichiometry; states of matter; solutions; thermodynamics.
Introduction to Engineering This course is an introduction to the interdisciplinary aspects of the engineering of aerospace systems. It is a project-based course, demonstrating how the engineering profession is a multi-disciplinary field. Students are involved in an array of conceptual exercises, simple design activities, and projects dealing with engineering in aerospace-related areas.
Physics for Engineers I  This course explores vectors and scalar quantities; kinematics; Newton's Law of Motion; work; work-energy; conversion of energy; conversion of momentum; center of mass and its motion, torque, equilibrium; and orbital motion.
College Success  A course in which students assess and develop the personal, interpersonal, intellectual, and social skills necessary to succeed in college. Time management, study skills, goal clarification, career information, and college resources are included. This course is available to freshmen only.
Digital Circuit Design   This course provides a knowledge and facility in logic design, interfacing digital circuits, Boolean algebra, combinatorial logic circuits, circuit minimization techniques, flip-flop storage elements, shift registers, counting devices, sequential logic circuits, state machines and computer structure.
Digital Circuit Design Laboratory Laboratory experiments in the measurement and verification of digital circuits. Discrete and integrated logic circuit design analysis and measurements.
Microprocessor Systems   Study of digital computer organizations. Introduction to microcomputer systems using a current microprocessor. Assembly language programming techniques for microcomputers will be used to study digital computer operation. Input and output techniques, memory devices, RS 232, and other interfacing techniques will be studied. Hardware and software relationships will also be discussed.
Microprocessor Systems Laboratory  Hands-on experience with a microprocessor is provided through weekly experiments involving hardware and software techniques.
Technical Report Writing   This course introduces students to the preparation of formal and informal technical reports, abstracts, proposals, instructions, professional correspondence and other forms of technical communication. Major emphasis is placed on the long technical report and the acquisition of advanced writing skills.
Introduction to Discrete Structures   An introduction to the fundamental algebraic, logical, and combinatorial concepts of mathematics that provide a foundation for the study of computer science.Pre-requisite: Experience in programming in a high-level language, pre-Calculus mathematics.
Computer Science II   This course emphasizes program design, style, data abstraction, information hiding, and testing; advanced programming features; and introduction to object-oriented concepts, basics of algorithm analysis, exception handling, string processing, recursion, pointers, and simple data structures. The course has a closed laboratory that includes activities dealing with the computing environment, the software development process, and programming exercises.
Data Structures and Analysis of Algorithms   This course emphasizes the design, implementation, and analysis of algorithms dealing with searching, sorting, graphs, trees, and disk files.
Physics for Engineers III   This course is a calculus-based study of the fundamental principles of classical mechanics. It is the third course of a three-semester sequence, intended for students of science and engineering and is designed to provide the student with an appropriate background for more advanced physics and engineering course work. Topics of discussion include electric forces; electric field; Gauss's law; Ohm's law; Ampere's law; Faraday's law; Lenz's law; Kirchhoff's law and Maxwell's equations; electric potential and electrostatic potential energy; capacitance; simple DC circuit theory; magnetic force, magnetic field; inductance; electromagnetic oscillations and wave propagation; linear accelerators; and cyclotrons.
Physics Laboratory for Engineers One three-hour laboratory session per week, with experiments complementing the material of PS 250. Primarily lab report writing workshop, error analysis, damped harmonic oscillations, spectrometers, optics, atomic physics, thermodynamics and circuit theory.
Software Engineering Practices   This variable credit course introduces students to the fundamental principles and methodologies of large-scale software development. Students learn about the theory and practice of software engineering and work as part of a team on a full life-cycle software project that includes planning, software specification, software design, coding, inspections, and testing. A closed laboratory is required, and includes activities that guide project teams through a software development process and support team project activities such as team building, planning, requirements analysis and specification, design, testing, and the use of tools.
Real-Time Systems   The course introduces the concepts of real-time systems from the user and designer viewpoint. The requirements, design, implementation, and basic properties of real-time application software are described with an overview of system software. Related topics such as interrupts, concurrent task synchronization, sharing resources, and software reliability are discussed. A team project on a real-time prototype application may be incorporated in the course.
Computer Architecture  This course describes in detail the Von Neuman computer architecture, which includes processors, memory, input/ output, and transfer of information; examples of machine language, assembly language, microprogramming, and operating systems will be discussed. Additional topics in advanced computer architecture and computer systems will be covered.
Files and Database Systems  Introduction to file and database systems. The course will cover the theory of database systems, various database models, and the design of a database system. Course homework will reflect real-life problems requiring cooperation, problem formulation, and problem-solving skills. A team/group term project may be assigned.
Organization of Programming Languages  A comparative study of different programming paradigms. Students program in several languages chosen to illustrate the essential features of the paradigms studied. Formal language concepts are also introduced.
Operating Systems   Development, structure, and functions of operating systems; demand service models; development of concurrent models.
Engineering Economics   An introduction to microeconomic principles, problems, and policies as well as basic financial principles such as time value of money, capital budgeting, and cost of capital. The course will provide the engineering graduate with the tools needed for success in the workplace.
Probability and Statistics   Finite sample spaces; conditional probability and Bayes Theorem, discrete and continuous random variables and their functions; expected value, variance, and standard deviation; systematic study of the major discrete and continuous distributions; moment generating functions; hypothesis testing and estimation.
Analysis and Design of Software Systems   This course focuses on the fundamental methods employed in the analysis and design of software systems. Analysis is the process of determining a complete and consistent set of system requirements. Design is the process of producing a system architecture, both logical and physical, and determining an appropriate way to construct the software. The result of these processes is a documented model of the desired system. The student will learn and practice methods appropriate for both object-oriented and procedural systems.
Software Construction   This course provides the student with advanced instruction in programming with an object-oriented programming language. The course objective is proficiency in use of a language widely used for general purpose software development. In addition, the student will be introduced to tools and processes appropriate for employing this language in a significant software development environment. Students attending this course must already be proficient in the use of one major programming language and have knowledge of basic software engineering practices.
Genetics  A study of the fundamental principles of inheritance and their application to plants, animals, fungi, and microorganisms.
College Algebra   This course focuses on fundamentals of exponents, radicals, linear and quadratic equations, inequalities, functions, graphing techniques, and complex numbers. It includes an introduction to function; curve sketching; elementary theory of equations; sequences and series; matrix algebra and systems of equations; linear; polynomial; logarithmic; exponential; inverse and composite functions; variation; and systems of equations.
Information and Computer Security  The course will start with an overview of the larger context of information security, including the "softer" aspects of personnel and operational security, and then delve into the technical basis and practical difficulties of COMPUSEC itself. This course is intended to be a required course in an Cyber Security Engineering minor or a technical elective for students majoring in Computer Science or Computer Engineering.
Software Modeling  This course focuses on the study of formal concepts and techniques used to model and analyze software artifacts (requirements, design, and code). The course includes a survey of mathematical modeling techniques used in software engineering. Course activities include reading, discussion, and exercises concerned with the use of formal mathematical models in software engineering. Examples include work on a formal specification project, study of concepts and technology of formal model checking, use of a formal modeling tool, and presentations on articles about recent work in application and research in formal methods.
Software Quality Assurance   This course exposes the student to the key concepts and practices in software testing and quality assurance. The objective of this course is to introduce students to the concepts of software quality through testing, inspection, and walkthrough. The process of software testing and different testing techniques and methodologies will be covered. This course also covers topics related to the management of a testing project. Finally, different software-testing tools and their advantages and disadvantages will be discussed.
Software Team Project I  Software Team Project I
Software Team Project II Software Team Project II
Artificial Intelligence Introduces introductory topics of artificial intelligence and its application to real-world problems. Addresses tools and techniques including agent-based systems, problem solving algorithms, expert systems, fuzzy logic, feed forward back propagating artificial neural networks, and ethical issues of intelligent systems.
World Literature   Major works and literary trends in world literature. Course content varies by instructor and is listed in the Schedule of Courses.
Digital Forensics   Locating evidence and recovering data using low-level techniques and tools. Preservation, identification extraction, documentation, and interpretation of computer data following clear, well-defined methodologies and procedures; details of various PC and server-based partitions as well as file systems such as FAT, NTFS, HFS, Ext*, and UFS*. File system and partition data structures.
Current Topics in Cybersecurity  Examination of the most recent, often still developing issues, in the field of cybersecurity; the course content depends on current trends at the time of offering.
Database Systems and Data Mining   Introduction to database systems and data mining. The course will cover the relevant theory of database systems, the usefulness of data mining, and the examination of current data mining efforts. Assignments, papers, and projects will reflect real-life use of data mining and provide perspective for managing data mining activities.
Requirements Engineering and Specifications Elicitation, analysis, specification, validation, and management of user requirements; conflict resolution; process, notations, methods and tools, requirements standards, operational concepts documents (OCD) and system requirements specifications (SRS).
Software Design and Architecture Design process notations, methods, paradigms, and tools. System architecture tradeoff analysis; component and subcomponent specification. Generic (domain) design; architectural styles, frameworks, and patterns. Test and integration plan documents. Architecture standards; design tools.
Formal Methods in Software Engineering Covers a variety of formal methods and applies them to software-specification development. Assumes a firm grounding in mathematical logic, knowledge of proof techniques, and skill in the translation of problems expressed in English into predicate logic.
Software Verification, Validation, and Maintenance Covers inspections of requirements, design and code, as well as testing, the handling of change requests, software evolution, code comprehension, and change management.
Microprocessor Laboratory Introduces the student to microprocessor-based, hardware-interface design. Provides practice in developing software that drives the interfaces between a microprocessor and the outside world. Topics include: logic circuit analysis and synthesis, digital hardware components, microprocessor system architecture, and assembly and C/C++ language programming of input/output device drivers.
Engineering Web-based Systems A practical introduction to the principles, methods, and tools required to create high-quality software applications for the distributed, client-server context of the Web. Emphasis is on architectural designs, and language and data access methods that are common in Web-based systems.
Human Computer Interaction Covers basic human psychology, computer technology, and the interface between them. The key topics of HCI are examined, grounded in the context of usability and the design lifecycle.
Software Process Improvement Students will be introduced to the various aspects related to software processes. It will focus on the definition and modeling of a software process, as well as on methods for process assessment and improvement. The concepts will be illustrated through process-improvement case studies, followed by hands-on experience with the improvement of the personal software-development process.
Software Project Management Project management and its application to software-development projects. Emphasis will be on planning, organizing, monitoring, and controlling. Students will learn how to develop work breakdown structures, estimate task durations, assign resources, specify network precedence, and determine a project's critical path. Methods for scheduling in the face of resource constraints will be included, as well as function point counting, algorithmic models for estimating total project cost, and software tools for project planning and monitoring.
Software Practicum Team work on substantial software projects submitted by corporate sponsors. Interim progress reports required, with a final formal defense and presentation to corporate staff, faculty, and other students in the course
Special Topics in Software Engineering Special Topics in Software Engineering
Program Development Under Unix Introduction to the use of the UNIX operating system and its utilities for incremental and distributed program development, maintenance, and debugging. The course covers the UNIX shell, utilities, and program development tools that are used for large projects involving multiple developers on multiple machines.
Introduction to Game Development An introduction to the creation of computer/video games and the different elements of games, including computer graphics, animation, artificial intelligence, algorithms, data structures, networking, software development cycles and human-computer interaction.
Internet Technologies for Software Engineers Provides an intensive look at the leading-edge technologies that are used to build Internet applications, what they do, and how they do it. Topics covered will include: hyper-text markup language, cascading style sheets, scripting languages, active server pages, Pert/CGI, and the extensible markup language.
Comparative Languages Begins with a history of the development of programming languages that provides the background necessary to understand programming-language design and evaluation. This is followed by an introduction to the basic programming language constructs and then critically comparing their implementation in some of the most common languages. Included is a discussion of the advantages and disadvantages of modern programming languages for a variety of applications. Some of the languages discussed are LISP, C, Small Talk, C++, Java, Ada, PL/1, and Prolog.
Embedded and Real-Time Software Familiarizes students with the fundamental issues related to embedded and real-time software systems and gives them an opportunity to become familiar with a commercially available system for developing and testing embedded and real-time software. Topics include: definition of embedded systems, process concurrency, interprocess communications, synchronization, and process scheduling.
Principles of Management and Organizational Behavior Management functions, including planning, organizing, staffing, directing, and controlling; the theory and practice as they are contingent on the behavior of people in organizations and on the organizational environment. Students must be have Sophomore or higher standing to take this course.
Microeconomics Introduction to the operation of the price mechanism; examination of the individual economic units, laws of supply and demand, market structure, and cost analysis; contemporary problems examined.
Introduction to Problem Solving and Software Development Introduces a broad overview of problem solving, computing topics, and fundamental concepts and methodologies of software development designed to provide students with awareness of the computing field's many aspects. Topics include fundamentals of computer architecture, operating systems, applications, problem-solving. It emphasizes the main phases of the software development lifecycle, such as requirements, design, implementation, testing, project planning. Also, it stresses the difference between the software product and process. Introduces social and ethical issues related to computing and explores the local and global impact of computing on individuals, organizations and society. It also gives students their initial exposure to group project work.
Introduction to Computers I  Introductions to the basic concepts of program development in a modern object-oriented language; problem-solving methods and algorithm development; basic primitive and object data types; language syntax; style and documentation; and coding and testing of programs
Data Structures and Algorithms Introduction to the design, implementation, and use of fundamental data structures (lists, stacks, queues, trees); extensions of these structures and associated algorithms; informal complexity analysis.
Data Structures and Algorithms Lab Introductions to the basic concepts of programming and program development in a modern Software Development Environment with debugger and source code control.
Computer Architecture I Number representations and operations. Processor data path. Pipelining. Memory hierarchy. Input/Output. Assembly language programming.
Operating Systems Analysis Management of memory, processes, files, and devices. OS design principles and performance measures. Multiprogramming, multiprocessing, concur-ency, deadlock, virtual machines. Competitive and cooperating processes. Programs will be written in C or in Java. Three hours per week.
Applied Discrete Mathematics Introduction to reasoning, proof, and exposition in mathematics. Topics include: Boolean logic, set theory, counting techniques, functions, mathematical induction, permutations, and the proofs of various elementary theorems.
Calculus with Analytic Geometry I Functions, limits, continuity, and the differential and integral calculus of algebraic, trigonometric, and exponential functions.
Calculus with Analytic Geometry II Functions, limits, continuity, and the differential and integral calculus of algebraic, trigonometric, exponential functions.
Probability and Statistics I To provide an axiomatic, calculus-based approach to probability and introductory statistics. The course is built around the process of performing a statistical analysis; posing the question, collecting the data, describing the data, analyzing and modeling the data, and drawing inferences from the data regarding the original question. Specific topics covered include sampling, descriptive analysis of data, probability, random variables, discrete and continuous distributions, expectation, confidence intervals, one sample hypothesis testing, chi-square analyses, correlation and regression.
General Physics with Calculus I The first of a two-semester sequence of courses that, taken together, provide a thorough introduction to classical physics using calculus. Topics covered include: one- and two-dimensional motion, Newton's laws and their applications, energy, momentum and impulse, rotational motion, gravitation, and thermodynamics.
General Physics with Calculus Laboratory I General Physics with Calculus Laboratory I
General Physics with Calculus II The second of a two-semester sequence of courses that, taken together, provide a thorough introduction to classical physics using calculus. Topics covered include: sound and wave mechanics, electrostatics, circuits, magnetic forces and fields, Faraday's Law, reflection and refraction, and optics.
General Physics with Calculus Laboratory II General Physics with Calculus Laboratory II
Information Systems Project ManagementCredits The tools and skills of the systems analyst needed in information systems project management are introduced through the case study and experiential approach. Project management software will be used within an integrated-software environment-systems framework; students will complete two information technology projects in Web and database design for external clients.
Modern Physics Topics from physics of the twentieth century, including special relativity, the origins of quantum theory, quantum mechanics, atomic structure, nuclear physics, and elementary particles.
Theoretical PhysicsCredits Presents physics topics aimed at the advanced undergraduate level. The subjects range over classical mechanics, electromagnetism, and statistical mechanics
Introduction to Biodiversity and Evolution An introductory course for biology majors. Focus is on evolution, phylogeny, taxonomy, origin and diversity of life, physiology of plant and animal systems, and ecological principles. Three hours of lecture and two hours of laboratory per week. Limited to students who are majors in Biology, Chemistry, Mathematics, Computer Science and Software Engineering.
Introduction to Cell and Molecular Biology For biology majors and other students needing an introduction to the cellular and molecular levels of biology. Includes an introduction to cell structure and function, biochemistry and metabolism, bioenergetics, genetics and cell division, and molecular biology. Three hours of lecture and two hours of laboratory per week. Limited to majors in Biology, Chemistry, Clinical Science, Medical Laboratory Science, Mathematics, Computer Science, Software Engineering, Criminal Justice, Health Studies, and Health and Physical Education.
General Chemistry I The first of two lecture courses which, taken together, provide a preparation for subsequent courses in chemistry. Principles and theories of chemical problem solving, stoichiometry and chemical reactions, states of matter, periodic properties of the elements, atomic and molecular structure, introductory quantum mechanics, thermochemistry, and the properties of gases are covered.
General Chemistry II The second of two lecture courses which, taken together, provide preparation for subsequent courses in chemistry. Properties of liquids and solutions, chemical kinetics and equilibrium, thermodynamics, electrochemistry and nuclear chemistry.
Linear Algebra Systems of equations, matrix algebra, linear transformations, Eigenvectors, linear programming, and computational methods.
Calculus with Analytic Geometry III Infinite series, partial differentiation, multiple integration, and associated solid analytic geometry.
Differential Equations Designed to provide students with the fundamentals of differential equations. The topics include elementary methods of solution, nth order linear equations, systems of linear equations, Laplace transform methods, numerical solutions, and initial and boundary value problems.
Combinatorics and Graph Theory Combinatorics is the study of countable discrete mathematical structures. Graph theory is the study of mathematical structures involving a collection of objects, known as the vertex set, along with a collection of pairs of vertices, known as the edge set. These two inseparable areas of mathematics are ripe with beautiful theory and endless applications. Students will learn the techniques required to answer questions in these fields, as well as appropriate applications.
Probability and Statistics II Including sample distributions, exploratory data analysis, estimation methods, regression and correlation, as well as applications to quality control.
College Composition I A college-level writing course designed to prepare students to make the transition from high school to college by familiarizing them with the standards for academic writing they will encounter throughout their educational and professional careers. Students will gain intense experience in writing academic prose that demonstrates knowledge, understanding, analysis, and application of ideas from a variety of progressively sophisticated and interrelated texts.
College Composition II Reinforces and expands the reading and writing activities taught in English 101 (academic writing demonstrating knowledge, understanding, analysis, and application of ideas). In addition to sustaining what has already been learned in other writing courses
American Cultures to 1877 American culture examined through political, literary, artistic, economic and social development. American values, ideas and institutions from popular culture as well as traditional sources
American Cultures 1877 to present American culture examined through political, literary, artistic, economic and social development. American values, ideas and institutions from popular culture as well as traditional sources.
Engineering Reports Regular technical writing assignments and company-focused oral presentations while integrating effects of environmental factors as they relate to products, systems and engineering processes.
The Living World Provides students with an understanding of the most fundamental concepts of modern biology including ecology (the interaction between organisms and their environment), human inheritance, the structure and function of living organisms, evolution, strategies for survival and reproduction, and biotechnology.
Argument and Analysis English 1B is a writing course that focuses on argumentation and analysis. Through the study of literary, rhetorical, and professional texts, students will develop the habits of mind required to write argumentative and critical essays. Particular emphasis is placed on writing and reading processes. Students will have repeated practice in prewriting, drafting, revising, and editing, and repeated practice in reading closely in a variety of forms, styles, structures, and modes.
Calculus I Introduction to calculus including limits, continuity, differentiation, applications and introduction to integration. Graphical, algebraic and numerical methods of solving problems.
Calculus II Definite and indefinite integration with applications. Sequences and series. Graphical, algebraic and numerical methods of solving problems.
Calculus III Functions of more than one variable, partial derivatives, multiple integrals and vector calculus. Graphical, algebraic and numerical methods of solving problems
Discrete Mathematics Sets, logic, methods of proof including mathematical induction, functions, relations, elementary combinatorics, probability, Boolean algebras.
General Physics/Mechanics A calculus-based treatment of particle kinematics and dynamics, work, energy, momentum, rotational motion, equilibrium, and simple harmonic motion
General Physics/Electricity and Magnetism A calculus-based introduction to electricity and magnetism, covering electric charges, electric and magnetic fields, dc and ac circuits, and electromagnetic waves.
Differential Equations and Linear Algebra Matrices, determinants, systems of linear equations, vector geometry, linear transformations, eigenvalues and eigenvectors, diagonalization, first order differential equations, linear systems of differential equations, higher order differential equations, Laplace transforms.
Introduction to Combinatorics Sets, permutations, combinations, probability, mathematical induction, counting techniques, generating functions, partitions, recurrence relations, inclusion-exclusion. Polya's theorem and applications to computer science, mathematics, engineering and physical sciences.
Engineering Probability and Statistics Probability theory, graphical displays of data, graphical methods of comparisons of samples and hypotheses testing. Statistical estimation and inference. Uses graphical statistical packages.
Applied Probability and Statistics I Descriptive and inferential statistics. Collection and analysis of data, discrete and continuous probability models, random variables, Central Limit Theorem, confidence intervals, hypothesis testing.
Introduction to Programming Basic skills and concepts of computer programming in an object-oriented approach using Java. Classes, methods and argument passing, control structures, iteration. Basic graphical user interface programming. Problem solving, class discovery and stepwise refinement. Programming and documentation style. Weekly hands-on activity.
Introduction to Data Structures Stacks and queues, recursion, lists, dynamic arrays, binary search trees. Iteration over collections. Hashing. Searching, elementary sorting. Big-O notation. Standard collection classes
Introduction to Engineering Introduction to engineering through hands-on design projects, case studies, and problem-solving using computers. Students also acquire non-technical skills, such as team skills and the ability to deal with ethical dilemmas.
Assembly Language Programming Assembly programming; assembly-C interface; CPU and memory organization; addressing modes; arithmetic, logic and branch instructions; arrays, pointers, subroutines, stack and procedure calls; software interrupts; multiplication, division and floating point arithmetic.
Computer Organization and Architecture Introduction to computer organization and architecture, system buses, internal memory and external memory, input/output, central processing unit CPU, instruction sets, CPU structure and function, RISC, control unit.
Software Engineering I Why software engineering? What is software engineering? Software development lifecycle activities: project planning and management requirements analysis, requirement specification. Software design, software testing, verification, validation, and documentation. Software quality assurance and review techniques, software maintenance, team-based projects
Software Engineering II Software Architecture, Software Technical Metrics, evaluating products, processes, and resources, improving predictions, products, processes, and resources. Advanced topics such as: Formal Methods, Software Reuse, Reengineering, Client/Server Software Engineering, Computer-Aided Software Engineering, Team-Based Projects.
Computer Networks I Comparative evaluation of network architecture, layering model, standards, protocol examples for ISO and TCP/IP layers. Network applications, transport layer protocols, Internet routing, data link and physical transmissions. Applications in world wide web, file transfer, electronic mail, peer-to-peer and other areas.
Software Engineering Process Management Integrated approach to managing development within small teams; including mission statement, synthesis of design concepts, tradeoff studies, risk assessment and the interactions encountered in the optimal design, development, manufacture and test of systems
Enterprise Software Platforms Introduction to enterprise software systems. Covers network operating systems, DBMS, transaction monitors, groupware, distributed objects, system management and the Web.
Software Quality Engineering Software testing and quality assurance engineering concepts, processes, models, criteria, and methods. Software unit testing, integration, function validation, system performance and reliability evaluation; Software security testing methods and tools; software quality management, control systems, standards, and evaluation metrics.
Senior Design Project I Senior Design Project I
Senior Design Project II Senior Design Project II
Global and Social Issues in Engineering Interdisciplinary seminar treating social and global impacts of technology and engineering
Data Structures and Algorithms Implementations of advanced tree structures, priority queues, heaps, directed and undirected graphs. Advanced searching and sorting (radix sort, heapsort, mergesort, and quicksort). Design and analysis of data structures and algorithms. Divide-and-conquer, greedy, and dynamic programming algorithm design techniques.
Operating Systems Fundamentals: Contiguous and non-contiguous memory management; processor scheduling and interrupts; concurrent, mutually exclusive, synchronized and deadlocked processes; files. Substantial programming project required
Object-Oriented Design Design of classes and interfaces. Object-oriented design methodologies and notations. Design patterns. Generics and reflection. Exception handling. Concurrent programming. Graphical user interface programming. Software engineering concepts and tools. Required team-based programming assignment.
Introduction to Database Management Systems Current, classical database systems. Entity-relationship and enhanced entity models. Relational model, algebra, calculus. Current, emerging SQL standard. Embedded, Dynamic SQL. Application perspective on transactions and security. Interactive and programmatic interfaces to database systems. Application programming project using commercial database system.
Information Security Fundamental security topics including cryptography, protocols, passwords, access control, software security, and network security. Additional topics selected from multilevel security, biometrics, tamper-resistant hardware, information warfare, e-commerce, system evaluation and assurance, and intrusion detection.
Computer and Human Interaction Introduction to human/computer interaction, paradigms for interaction, human performance capabilities, computer input/output device analysis and design, pattern recognition 3D audio, 3D visualization, application to virtual reality and multimedia.
Computer Science I This course serves as an introduction to computational thinking using a problem-centered approach. Specific topics covered include: expression of algorithms in pseudo code and a programming language; functional and imperative programming techniques; control structures; problem solving using recursion; basic searching and sorting; elementary data structures such as lists, trees, and graphs; and correctness, testing and debugging. Assignments (both in class and for homework) requiring a pseudo code solution and an implementation are an integral part of the course.
Computer Science II This course delves further into problem solving by continuing the discussion of data structure use and design, but now from an object-oriented perspective. Key topics include more information on tree and graph structures, nested data structures, objects, classes, inheritance, interfaces, object-oriented collection class libraries for abstract data types (e.g. stacks, queues, maps, and trees), and static vs. dynamic data types. Concepts of object-oriented design are a large part of the course. Software qualities related to object orientation, namely cohesion, minimal coupling, modifiability, and extensibility, are all introduced in this course, as well as a few elementary object-oriented design patterns. Input and output streams, graphical user interfaces, and exception handling are covered. Students will also be introduced to a modern integrated software development environment
LAS Perspective 7A: Project-based Calculus I This is the first in a two-course sequence intended for students majoring in mathematics, science, or engineering. It emphasizes the understanding of concepts, and using them to solve physical problems. The course covers functions, limits, continuity, the derivative, rules of differentiation, applications of the derivative, Riemann sums, definite integrals, and indefinite integrals.
LAS Perspective 7B: Project-based Calculus II This is the second in a two-course sequence intended for students majoring in mathematics, science, or engineering. It emphasizes the understanding of concepts, and using them to solve physical problems. The course covers techniques of integration including integration by parts, partial fractions, improper integrals, applications of integration, representing functions by infinite series, convergence and divergence of series, parametric curves, and polar coordinates.
Discrete Mathematics for Computing3 This course introduces students to ideas and techniques from discrete mathematics that are widely used in Computer Science. Students will learn about the fundamentals of propositional and predicate calculus, set theory, relations, recursive structures and counting. This course will help increase students’ mathematical sophistication and their ability to handle abstract problems.
Software Engineering Freshman Seminar Provides first-year students with the skills necessary to succeed at RIT and in the software engineering program. Small group sessions are used to help new students make friends, create a stronger bond with RIT and their program and become acquainted with the campus and its facilities. In addition, students are introduced to the profession of software engineering and to ethical issues they will face at RIT and throughout their careers.
Personal Software Engineering This is a project-based course to enhance individual, technical engineering knowledge and skills as preparation for upper-division team-based coursework. Topics include adapting to new languages, tools and technologies; developing and analyzing models as a prelude to implementation; software construction concepts (proper documentation, implementing to standards etc.); unit and integration testing; component-level estimation; and software engineering professionalism.
First Year Writing First Year Writing
RIT 365: RIT Connections RIT 365: RIT Connections
Wellness Education  Wellness Education
Communication (WI) An introduction to communication contexts and processes emphasizing both conceptual and practical dimensions. Participants engage in public speaking, small group problem solving and leadership, and writing exercises while acquiring theoretical background appropriate to understanding these skills.
University Physics I This is a course in calculus-based physics for science and engineering majors. Topics include kinematics, planar motion, Newton's Laws, gravitation, work and energy, momentum and impulse, conservation laws, systems of particles, rotational motion, static equilibrium, mechanical oscillations and waves, and data presentation/analysis
University Physics II This course is a continuation of PHYS-211, University Physics I. Topics include electrostatics, Gauss' law, electric field and potential, capacitance, resistance, DC circuits, magnetic field, Ampere's law, inductance, and geometrical and physical optics.
Applied Statistics This course covers basic statistical concepts and techniques including descriptive statistics, probability, inference, and quality control. The statistical package Minitab will be used to reinforce these techniques. The focus of this course is on statistical applications and quality improvement in engineering. This course is intended for engineering programs and has a calculus prerequisite.
Undergraduate Cooperative Education Seminar Undergraduate Cooperative Education Seminar
Mathematical Models of Software An introduction to the use of mathematics to model software as part of the software process. Included will be models of software structure and functionality, concurrent and distributed computation, and structured data.
Software Process and Project Management An introductory course to software process and related software project management issues. Emphasis is on the study, use, evaluation, and improvement of the software development process and related project management. Topics include software development methodologies, software project planning and tracking, change control, software quality assurance, risk management, and software process assessment and improvement.
Introduction to Software Engineering An introductory course in software engineering, emphasizing the organizational aspects of software development and software design and implementation by individuals and small teams within a process/product framework. Topics include the software lifecycle, software design, user interface issues, specification and implementation of components, assessing design quality, design reviews and code inspections, software testing, basic support tools, technical communications and system documentation, team-based development. A term-long, team-based project done in a studio format is used to reinforce concepts presented in class.
Engineering of Software Subsystems An introduction to the principles of the foundations of contemporary software design. Topics include software subsystem modeling, design patterns, design tradeoffs, and component-based software development, with a focus on application of these concepts to concrete design problems. The relationship between design and related process issues such as testing, estimation, and maintenance are also discussed.
Analysis of Algorithms This course provides an introduction to the design and analysis of algorithms. It covers a variety of classical algorithms and data structures and their complexity and will equip students with the intellectual tools to design, analyze, implement, and evaluate their own algorithms.
Human-Centered Requirements and Design This course introduces quantitative models and techniques of human-computer interface analysis, design and evaluation, which are relevant to the software engineering approach of software development. User-focused requirements engineering topics are also covered. Contemporary human computer interaction (HCI) techniques are surveyed, with a focus on when and where they are applicable in the software development process. Students will deliver usable software systems derived from an engineering approach to the application of scientific theory and modeling. Other topics may include usability evaluation design, methods of evaluation, data analysis, social and ethical impacts of usability, prototyping and tools.
Honors Human-Centered Requirements and Design This course introduces quantitative models and techniques of human-computer interface analysis, design and evaluation, which are relevant to the software engineering approach of software development. User-focused requirements engineering topics are also covered. Contemporary human computer interaction (HCI) techniques are surveyed, with a focus on when and where they are applicable in the software development process. Students will deliver usable software systems derived from an engineering approach to the application of scientific theory and modeling. Other topics may include: usability evaluation design, methods of evaluation, data analysis, social and ethical impacts of usability, prototyping and tools.
Engineering Secure Software Principles and practices forming the foundation for developing secure software systems. Coverage ranges across the entire development lifecycle: requirements, design, implementation and testing. Emphasis is on practices and patterns that reduce or eliminate security breaches in software intensive systems, and on testing systems to expose security weaknesses.
Software Design for Computing Systems To design and develop high quality products software engineers need to understand the physical components and systems that are an integral part of these products. This understanding is critical in the fulfillment of non-functional requirements such as performance, reliability and security. This course will provide software engineering students with hardware, computer architecture, and networking domain specific knowledge. Course programming assignments will provide practical experience developing software that interfaces with hardware components and systems.
Software System Requirements and Architecture (WI) Principles and practices related to identifying software system stakeholders, eliciting functional and quality requirements, translating requirements into architectural structures, and analyzing candidate architectures with respect to the requirements.
Software Engineering Project I The first course in a two-course, senior-level, capstone project experience. Students work as part of a team to develop solutions to problems posed by either internal or external customers. Problems may require considerable software development or evolution and maintenance of existing software products. Culminates with the completion and presentation of the first major increment of the project solution. Students must have co-op completed to enroll.
Software Engineering Project II This is the second course in a two-course, senior-level capstone project experience. Students submit one or more additional increments that build upon the solution submitted at the end of the first course. Students make major presentations for both customers as well as technical-oriented audiences, turn over a complete portfolio of project-related artifacts and offer an evaluation of the project and team experience.
Concepts of Parallel and Distributed Systems This course is an introduction to the organization and programming of systems comprising multiple computers. Topics include the organization of multi-core computers, parallel computer clusters, computing grids, client-server systems, and peer-to-peer systems; computer networks and network protocols; network security; multi-threaded programming; and network programming
Principles of Data Management This course provides a broad introduction to the principles and practice of modern data management, with an emphasis on the relational database model. Topics in relational database systems include data modeling; the relational model; relational algebra; Structured Query Language (SQL); and data quality, transactions, integrity and security. Students will also learn approaches to building relational database application programs. Additional topics include object-oriented and object-relational databases; semi-structured databases (such as XML); and information retrieval. A database project is required.
Introduction to Artificial Intelligence An introduction to the theories and algorithms used to create artificial intelligence (AI) systems. Topics include search algorithms, logic, planning, machine learning, and applications from areas such as computer vision, robotics, and natural language processing. Programming assignments are an integral part of the course.
Programming Language Concepts This course is a study of the syntax and semantics of a diverse set of high-level programming languages. The languages chosen are compared and contrasted in order to demonstrate general principles of programming language design and implementation. The course emphasizes the concepts underpinning modern languages rather than the mastery of particular language details. Programming projects will be required.
Data Communications and Networks This course is an in-depth study of data communications and networks. The course covers design of, and algorithms and protocols used in, the physical, data link, network, transport, and application layers in the Internet; methods for modeling and analyzing networks, including graphs, graph algorithms, and discrete event simulation; and an introduction to network science. Programming projects will be required.
Operating Systems An in-depth study of operating system concepts. Topics include process synchronization, interprocess communication, deadlock, multiprogramming and multiprocessing, processor scheduling and resource management, memory management, static and dynamic relocation, virtual memory, file systems, logical and physical I/O, device allocation, I/O processor scheduling, process and resource protection. Programming projects involving the development of or modification to operating system kernel features will be required.
Principles of Data Mining This course provides an introduction to the major concepts and techniques used in data mining of large databases. Topics include the knowledge discovery process; data exploration and cleaning; data mining algorithms; and ethical issues underlying data preparation and mining. Data mining projects, presentations, and a term paper are required.
Introduction to Computer Vision An introduction to the underlying concepts of computer vision. The course will consider fundamental topics, including image formation, edge detection, texture analysis, color, segmentation, shape analysis, detection of objects in images and high level image representation. Depending on the interest of the class, more advanced topics will be covered, such as image database retrieval or robotic vision.
Systems Programming Application of operating system concepts to the design of hardware interfaces for a multiprogramming environment. Laboratory work includes the development of a multiprogramming (optionally, multiprocessing) kernel with system call and interrupt handling facilities, and the building of device drivers for a variety of peripheral devices
Computer Architecture Computer Architecture is a study of the design of both modern and classic computer hardware. Topics include: a review of classical computer architectures; the design of operation codes and addressing modes, data formats, and their implementation; internal and external bus structures; architectural features to support virtual storage and page-replacement policies, high-level language features, and operating systems.
Principles of Computer Security This course provides a broad introduction to the basic principles and practice of computer security and emphasizes policies and mechanisms for building secure and trusted computer systems. Topics include but are not limited to the following: security principles, policies and mechanisms; cryptographic tools; user authentication and access control; secure systems and networking; secure application development; secure data management; impact of mobile, web and cloud computing; intrusion detection and prevention; auditing and forensics; privacy; security management and risk assessment; and legal and ethical aspects.
Introduction to Cryptography This course provides an introduction to cryptography, its mathematical foundations, and its relation to security. It covers classical cryptosystems, private-key cryptosystems (including DES and AES), hashing and public-key cryptosystems (including RSA). The course also provides an introduction to data integrity and authentication.
Xtreme Theory A fast paced, informal look at current trends in the theory of computing. Each week is dedicated to a different topic and will explore some of the underlying theory as well as the practical applications of the theory. Sample topics may include: quantum cryptography, networks and complex systems, social welfare and game theory, zero knowledge protocols.
Introduction to Computer Graphics Introduction to Computer Graphics is a study of the hardware and software principles of interactive raster graphics. Topics include an introduction to the basic concepts, 2-D and 3-D modeling and transformations, viewing transformations, projections, rendering techniques, graphical software packages and graphics systems. The course will focus on rasterization techniques and emphasize the hardware rasterization pipeline including the use of hardware shaders. Students will use a standard computer graphics API to reinforce concepts and study fundamental computer graphics algorithms.
Engineering of Concurrent and Distributed Software Systems The principles, practices and patterns applicable to the design and construction of concurrent and distributed software systems. Topics include synchronization, coordination and communication; deadlock, safety and liveness; concurrent and distributed design patterns; analysis of performance; distributed state management.
Engineering of Enterprise Software Systems This course addresses architecture-level design of large, enterprise-critical software systems. The course focuses on enterprise-level design patterns and on design approaches for object-oriented and aspect-oriented application containers: encapsulating database access, application distribution, concurrent session management, security, scalability, reliability, web-based user interaction, and the programming models and tools to support system development, integration, testing, and deployment. Hands-on exercises and a team project will reinforce the course concepts and expose students to the complexity of these systems.
Engineering of Web-based Software Systems  course in web engineering, emphasizing organizational aspects of web development, design and implementation by individuals and small teams. Students will be instructed in the proper application of software engineering principles to the creation of web applications. Course topics will include, but not be limited to web usability, accessibility, testing, web services, databases, requirements elicitation and negotiation
Software Engineering Design Seminar Software Engineering Design Seminar / Real-Time and Embedded Systems This course provides a general introduction to real-time and embedded systems. It will introduce a representative family of microcontrollers and require students to program on these devices. Fundamental material on real-time operating systems, such as requirements specification, scheduling algorithms and priority inversion avoidance will be presented.
Modeling of Real-Time Systems This course introduces the modeling of real-time software systems.? It takes an engineering approach to the design of these systems by analyzing system models before beginning implementation.? UML will be the primary modeling methodology. Non-UML methodologies will also be discussed.
Performance Engineering of Real-Time and Embedded Systems This course discusses issues of performance in real-time and embedded systems. Techniques for profiling the resource usage of a system and for measuring the effect of increasing system requirements will be covered. The control of physical systems will motivate the need for performance tuning of a real-time system. Students will write programs running under a real-time operating system that can maintain control of a physical system
Hardware/Software Co-Design for Cryptographic Applications The objective of this course is to establish knowledge and skills necessary for efficient implementations of cryptographic primitives on reconfigurable hardware. Implementation platform will be a field programmable gate array (FPGAs) containing general purpose processor and additional reconfigurable fabric for implementations of custom hardware accelerators. In the studio format students work on team projects that require them to design, and then compare and contrast software, custom FPGA hardware, and hybrid hardware-software co-design implementations of selected cryptographic primitives.
Engineering Self-Adaptive Software Systems This course introduces beginning graduate students to key concepts and techniques underlying the engineering of self-adaptive and autonomic software systems. Such software systems are capable of self-management, self-healing, self-tuning, self-configuration and self-protection. The course content includes an introduction of self-adaptive software systems and defines their characteristics. This will be followed by foundational engineering principles and methodology for achieving self-adaptive systems – feedback control, modeling, machine learning, and systems concepts.
Engineering Accessible Software This course introduces software accessibility principles, which are relevant to the Software Engineering approach of software development. The course will survey assistive technologies, accessibility standards and their applications to new and existing software, and how to incorporate accessibility principles at the various phases of the software development life cycle. Students will deliver software based on software engineering approach to users with different abilities e.g. people with visual impairments, and older users. Other topics include mobile accessibility, accessibility testing, validation technologies, and tools.
Software Modeling Modeling plays a pivotal role during the software lifecycle during the pre-construction and post-construction activities of the software lifecycle. During the pre-construction stage, models help software engineers understand, specify, and analyze software requirements and designs. During the post-construction stage, models can be used to analyze software systems while in operation. This kind of analysis includes reliability and safety issues as well as timing constraint analysis
Model-Driven Development Software models help the software engineer to understand, specify, and analyze software requirements, designs, and implementations (code components, databases, support files, etc.). Model-driven development is a software engineering practice that uses tool-enabled transformation of requirements models to design models and then to code and associated implementation artifacts. Students will use the Unified Modeling Language (UML) and other modeling techniques to capture software requirements, designs, and implementations. Students will also use formal modeling methods to semi-automatically transform among the various models and to study the quality attributes of the modeled software, such as performance, reliability, security, and other qualities.
Software Architecture A system’s software architecture is the first technical artifact that illustrates a proposed solution to a stated problem. For all but the simplest system, the achievement of qualities such as flexibility, modifiability, security, and reliability is critically dependent on the components and interactions defined by the architecture. The course focuses on the definition of architectural structures, the analysis of architectures in terms of trade-offs among conflicting constraints, the documentation of architecture for use over a product’s life cycle, and the role of architecture during coding activities.
Graduate Special Topics (Design Focused) Graduate Special Topics (Design Focused)
Software Process and Product Quality This course covers advanced topics in software engineering relating to software quality, with processes and metrics being viewed as a means to achieving quality. Quality is interpreted broadly to include product functionality and performance, project schedule and budget, and business objectives. Software metrics help a software organization on two main fronts: quality assessment of its products and processes, and process improvement towards its main goal: the production of successful software artifacts within schedule and budget constraints.
Software Testing Concepts and techniques for testing soft ware and assuring its quality. Topics cover software testing at the unit and system levels; static vs. dynamic analysis; functional testing; inspections; and reliability assessment.
Trends in Software Development Processes A course in the exploration of current approaches in planning, executing and managing the project activities performed during the development of a professional software product. Topics include the characteristics of state of the practice development methods, selecting practices best suited based on project context and techniques for refining practices to achieve process improvement.
Process Engineering In this course, students will study various lifecycle models for developing software systems. They will study the Software Process Engineering Metamodel (SPEM) standard as a tool for modeling and analyzing engineering processes. Students will use SPEM to characterize various process and organization models and patterns, and they will align these process characteristics to categories of needs for various organizations and projects. The students will study process engineering frameworks and the configuration and assembly of reusable process components into processes. Students will also study how tools and methods support the process. Students will also study software process assessment models, including the Capability Maturity Models, and learn how to identify specific recommendations for an organization to improve their processes. Students will apply their learning to engineer software engineering processes, tools, and methods appropriate for their graduate projects, course projects, and projects for organizations they have worked for.
Collaborative Software Development This course covers processes, tools, and techniques for software development, in general, and collaborative, distributed software development, in particular. Students will learn how to design a process specific to their organization and development project needs. This includes how to select a software development life-cycle model, how to select and sequence the development and management activities of a collaborative, distributed software development team structure and dynamics, and how to define the work products, tools, and methods used to perform those activities. The Software Process Engineering Metamodel (SPEM, an Object Management Group standard) will serve to graphically describe, analyze, discuss, and improve software development processes. Special attention will be given to collaboration needs and approaches for small and large teams that may be globally distributed.
Software Quality Engineering This course begins with an exploration of the concepts underlying quality systems and the use of metrics. Students are encouraged to discuss the advantages as well as the limitations of systems and quantitative approaches, with a view to understanding the 40 importance of interpretation in metrics usage and of matching quality systems choices to organizational objectives and culture. They learn the use of modern metrics such as DRE, PCE, COQ/COPQ, reliability objectives and SUMI scores through exercises in analyzing and interpreting charts. This is complemented with a project where they work in teams to design an appropriate quality system for a specific project/organizational situation, and discuss the application and analysis of its evaluation experimentation as a means of improving the quality aspects of subject project/organizational situation.
Business Law I An introduction to legal principles and their relationship to business organizations. Explores the U.S. legal system, the U.S. court system, civil and criminal procedure, the role of government agencies, legal research, and the substantive areas of law most relevant to business, including constitutional law, tort law, criminal law, contract law, intellectual property, debtor-creditor relations, bankruptcy, business entities, securities regulation, and antitrust law
Financial Management Basic course in financial management. Covers business organization, time value of money, valuation of securities, capital budgeting decision rules, risk-return relation, Capital Asset Pricing Model, financial ratios, global finance, and working capital management.
Managerial Economics Managerial Economics involves the application of economic theory to business decision-making. Most of the emphasis is microeconomic in nature, the theory of the firm and consumer theory, but there is some macroeconomic influence, particularly in the forecasting area. Since this is an applied economics course, it has a strong quantitative flavor.
Entrepreneurship This course studies the process of creating new ventures with an emphasis on understanding the role of the entrepreneur in identifying opportunities, seeking capital and other resources, and managing the formation and growth of a new venture. It addresses the role of entrepreneurship in the economy and how entrepreneurial ventures are managed for growth.
General Biology I This course serves as an introduction to cellular, molecular, and evolutionary biology. Topics will include: a study of the basic principles of modern cellular biology, including cell structure and function; the chemical basis and functions of life, including enzyme systems and gene expression; and the origin of life and evolutionary patterns of organism development on Earth.
General Biology II This course serves as an introduction to animal and plant anatomy and physiology, in addition to the fundamentals of ecology. Topics will include: animal development; animal body systems; plant development; unique plant systems; Earth's terrestrial and aquatic environments; population and community ecology; animal behavior; and conservation biology.
Graph Theory This course covers the theory of graphs and networks for both directed and undirected graphs. Topics include graph isomorphism, Eulerian and Hamiltonian graphs, matching, covers, connectivity, coloring, and planarity. There is an emphasis on applications to real world problems and on graph algorithms such as those for spanning trees, shortest paths, and network flows.
Human Biology I This course is one of a two-course set of courses that explores the biology of the human body. This course focuses on: cells, their structure, and organization; the human reproductive cycle; principle of genetic inheritance; transmission of disease and the body’s defense against disease.

English Composition English Composition
Oral Communication Oral Communication
Technical Writing Technical Writing
Discrete Math Discrete Math
Calculus  Calculus
Calculus IV Calculus IV
Differential Equations Differential Equations
Probability and Statistics Probability and Statistics
Introduction to CSE Introduction to CSE
Introduction to Computer Programming Introduction to Computer Programming
Intermediate Computer Programming Intermediate Computer Programming
Data Structures and Analysis of Algorithms Data Structures and Analysis of Algorithms
Distributed Client Server Programming Distributed Client Server Programming
Digital Devices Digital Devices
Microprocessors I Microprocessors I
Data Communications Data Communications
Database Management Systems Database Management Systems
Operating Systems Operating Systems
Introduction to Analysis of Algorithms Introduction to Analysis of Algorithms
Software Engineering Software Engineering
Social and Ethical Issues Social and Ethical Issues
Introduction to Software Engineering Introduction to Software Engineering
Software Architecture and Design Paradigms Software Architecture and Design Paradigms
Security Elective Security Elective
Software Testing & Quality Assurance Software Testing & Quality Assurance
Project Management Project Management
Software Engineering Senior Project I & II Software Engineering Senior Project I & II

